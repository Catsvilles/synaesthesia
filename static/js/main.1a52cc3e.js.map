{"version":3,"sources":["../static/js/main.1a52cc3e.js","../webpack/bootstrap bdf1309afdedf995622c","../node_modules/react/index.js","../node_modules/prop-types/index.js","../node_modules/warning/browser.js","../node_modules/invariant/browser.js","../node_modules/tone/build/Tone.js","../node_modules/history/PathUtils.js","../node_modules/history/es/PathUtils.js","synth/instruments/instrument.js","../node_modules/webpack/buildin/global.js","../node_modules/history/es/LocationUtils.js","utils.js","../node_modules/object-assign/index.js","../node_modules/fbjs/lib/invariant.js","../node_modules/fbjs/lib/emptyFunction.js","../node_modules/history/LocationUtils.js","../node_modules/history/createTransitionManager.js","../node_modules/react-router-dom/es/Router.js","../node_modules/react-router/es/Router.js","../node_modules/react-router/es/matchPath.js","../node_modules/history/es/createTransitionManager.js","synth/synth.js","../node_modules/react-redux/es/utils/warning.js","../node_modules/lodash-es/isPlainObject.js","../node_modules/react-scripts/node_modules/promise/lib/core.js","../node_modules/fbjs/lib/emptyObject.js","../node_modules/resolve-pathname/index.js","../node_modules/value-equal/index.js","../node_modules/history/DOMUtils.js","../node_modules/react-router-dom/es/Link.js","../node_modules/react-router-dom/es/Route.js","../node_modules/react-router/es/Route.js","../node_modules/history/es/DOMUtils.js","../node_modules/hoist-non-react-statics/index.js","modules/App/index.js","modules/App/actionTypes.js","../node_modules/lodash/isObject.js","../node_modules/lodash/_root.js","../node_modules/lodash/_Symbol.js","synth/scales.js","synth/instruments/index.js","synth/instruments/bass.js","modules/App/actions.js","modules/App/components/index.js","../node_modules/react-redux/es/utils/PropTypes.js","../node_modules/react-redux/es/components/connectAdvanced.js","../node_modules/redux/es/createStore.js","../node_modules/lodash-es/_Symbol.js","../node_modules/redux/es/compose.js","../node_modules/react-redux/es/connect/wrapMapToProps.js","../node_modules/react-scripts/config/polyfills.js","../node_modules/react-scripts/node_modules/promise/lib/rejection-tracking.js","../node_modules/asap/browser-raw.js","../node_modules/react-scripts/node_modules/promise/lib/es6-extensions.js","../node_modules/react-scripts/node_modules/whatwg-fetch/fetch.js","index.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react-dom/index.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/fbjs/lib/ExecutionEnvironment.js","../node_modules/fbjs/lib/getActiveElement.js","../node_modules/fbjs/lib/shallowEqual.js","../node_modules/fbjs/lib/containsNode.js","../node_modules/fbjs/lib/isTextNode.js","../node_modules/fbjs/lib/isNode.js","../node_modules/react-router-dom/es/BrowserRouter.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/history/createBrowserHistory.js","../node_modules/react-router-dom/es/HashRouter.js","../node_modules/history/createHashHistory.js","../node_modules/react-router-dom/es/MemoryRouter.js","../node_modules/react-router/es/MemoryRouter.js","../node_modules/history/createMemoryHistory.js","../node_modules/react-router-dom/es/NavLink.js","../node_modules/path-to-regexp/index.js","../node_modules/path-to-regexp/node_modules/isarray/index.js","../node_modules/react-router-dom/es/Prompt.js","../node_modules/react-router/es/Prompt.js","../node_modules/react-router-dom/es/Redirect.js","../node_modules/react-router/es/Redirect.js","../node_modules/history/es/createBrowserHistory.js","../node_modules/history/es/createHashHistory.js","../node_modules/history/es/createMemoryHistory.js","../node_modules/react-router-dom/es/StaticRouter.js","../node_modules/react-router/es/StaticRouter.js","../node_modules/react-router-dom/es/Switch.js","../node_modules/react-router/es/Switch.js","../node_modules/react-router-dom/es/matchPath.js","../node_modules/react-router-dom/es/withRouter.js","../node_modules/react-router/es/withRouter.js","modules/App/reducer.js","constants.js","modules/App/constants.js","../node_modules/lodash/debounce.js","../node_modules/lodash/now.js","../node_modules/lodash/_freeGlobal.js","../node_modules/lodash/toNumber.js","../node_modules/lodash/isSymbol.js","../node_modules/lodash/_baseGetTag.js","../node_modules/lodash/_getRawTag.js","../node_modules/lodash/_objectToString.js","../node_modules/lodash/isObjectLike.js","synth/songs/index.js","synth/songs/funkyDownTempo.js","synth/parts.js","synth/instruments/pads.js","synth/instruments/drums.js","synth/instruments/lead.js","synth/instruments/presets.js","synth/rythyms.js","synth/songs/drone.js","modules/App/components/App.js","../package.json","modules/App/components/Songs.js","modules/App/components/Info.js","modules/App/components/Song.js","modules/App/components/SongInfo.js","modules/App/components/GenerationOptions.js","modules/App/containers/AppContainer.js","../node_modules/react-redux/es/components/Provider.js","../node_modules/react-redux/es/utils/Subscription.js","../node_modules/react-redux/es/connect/connect.js","../node_modules/react-redux/es/utils/shallowEqual.js","../node_modules/react-redux/es/connect/mapDispatchToProps.js","../node_modules/lodash-es/_baseGetTag.js","../node_modules/lodash-es/_root.js","../node_modules/lodash-es/_freeGlobal.js","../node_modules/lodash-es/_getRawTag.js","../node_modules/lodash-es/_objectToString.js","../node_modules/lodash-es/_getPrototype.js","../node_modules/lodash-es/_overArg.js","../node_modules/lodash-es/isObjectLike.js","../node_modules/symbol-observable/es/index.js","../node_modules/webpack/buildin/harmony-module.js","../node_modules/symbol-observable/es/ponyfill.js","../node_modules/redux/es/combineReducers.js","../node_modules/redux/es/bindActionCreators.js","../node_modules/redux/es/applyMiddleware.js","../node_modules/react-redux/es/connect/mapStateToProps.js","../node_modules/react-redux/es/connect/mergeProps.js","../node_modules/react-redux/es/connect/selectorFactory.js","registerServiceWorker.js","store.js","../node_modules/redux-thunk/lib/index.js","modules/root.js","modules/App/components/Drone.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","warning","invariant","condition","format","a","b","e","f","error","undefined","Error","args","argIndex","replace","framesToPop","__WEBPACK_AMD_DEFINE_RESULT__","root","factory","this","Module","func","Tone","toString","className","isLetter","match","sameConstructor","constructor","isFunction","dispose","set","params","value","rampTime","isObject","isString","tmpObj","paramLoop","attr","parent","indexOf","attrSplit","split","length","splice","innerParam","join","param","isUndef","Signal","Param","rampTo","AudioParam","_collectDefaults","ret","subRet","j","subAttr","constr","defaults","keys","_super","superDefs","push","values","options","defaultArg","given","fallback","givenProp","fallbackProp","connectSeries","currentUnit","arguments","toUnit","connect","val","isNumber","arg","isBoolean","isArray","Array","isNote","test","noOp","_readOnly","writable","_writable","State","Started","Stopped","Paused","equalPowerScale","percent","piFactor","Math","PI","sin","dbToGain","db","pow","gainToDb","gain","log","LN10","intervalToFrequencyRatio","interval","now","context","isPast","time","currentTime","console","warn","extend","child","TempConstructor","audioContext","Context","emit","setContext","ctx","sampleRate","hasAudioContext","window","hasPromises","hasWorkers","getContext","resolve","initialized","resCallback","off","on","version","TONE_SILENCE_VERSION_LOGGING","Emitter","_events","event","callback","events","eventName","ev","eventList","apply","slice","len","mixin","functions","emitterFunc","Timeline","_timeline","_toRemove","_toAdd","_iterating","memory","Infinity","add","index","_search","diff","remove","comparator","peek","shift","getAfter","getBefore","cancel","after","cancelBefore","previousEvent","beginning","end","midPoint","floor","nextEvent","_iterate","lowerBound","upperBound","forEach","bind","forEachBefore","forEachAfter","forEachFrom","forEachAtTime","AudioContext","webkitAudioContext","_context","prop","_defineProperty","_latencyHint","latencyHint","_constants","lookAhead","_computedUpdateInterval","_ticker","Ticker","clockSource","updateInterval","_timeouts","_timeoutIds","_timeoutLoop","getConstant","buffer","createBuffer","arr","getChannelData","constant","createBufferSource","channelCount","channelCountMode","loop","start","setTimeout","fn","timeout","id","clearTimeout","type","hint","con","disconnect","close","_type","_updateInterval","_callback","_createClock","Type","Worker","Timeout","Offline","_createWorker","URL","webkitURL","blob","Blob","toFixed","blobUrl","createObjectURL","worker","onmessage","_worker","_createTimeout","_timeout","max","postMessage","_disposeClock","terminate","toneConnect","B","outNum","inNum","input","AudioNode","nativeConnect","toneDisconnect","nativeDisconnect","supported","createInsOuts","inputs","outputs","createGain","output","unit","outputNum","inputNum","destination","chain","fan","SignalBase","node","outputNumber","inputNumber","TimelineSignal","_param","cancelScheduledValues","overridden","WaveShaper","mapping","bufferLen","_shaper","createWaveShaper","_curve","curve","isFinite","Float32Array","setMap","normalized","oversample","oversampling","RangeError","TimeBase","units","_expr","_noOp","copy","_defaultUnits","method","_primaryExpressions","_defaultExpr","exprString","_parseExprString","clone","instance","regexp","parseInt","_beatsToUnits","_timeSignature","t","_ticksToUnits","hz","_frequencyToUnits","parseFloat","tr","q","total","_secondsToUnits","samples","default","_binaryExpressions","+","precedence","lh","rh","-","*","/","_unaryExpressions","neg","_syntaxGlue","(",")","_tokenize","expr","position","tokens","trim","token","expressions","group","opName","op","reg","SyntaxError","substr","next","_matchGroup","prec","_parseBinary","lexer","_parseUnary","_parsePrimary","matching","freq","beats","Transport","bpm","seconds","ticks","PPQ","timeSignature","_pushExpr","sub","mult","div","valueOf","Time","_plusNow","create","quantize","nextSubdivision","subdiv","subdivision","toSeconds","round","addNow","toNotation","testNotations","retNotation","_toNotationHelper","testTripletNotations","retTripletNotation","threshold","_notationToUnits","notationTime","multiple","notation","primaryExprs","notationExprs","toBarsBeatsSixteenths","quarterTime","quarters","measures","sixteenths","toTicks","toSamples","toFrequency","toMilliseconds","Frequency","midi","midiToFrequency","note","pitch","octave","noteToScaleIndex","toLowerCase","noteNumber","transpose","harmonize","intervals","toMidi","frequencyToMidi","toNote","A4","LN2","scaleIndexToNote","cbb","cb","c#","cx","dbb","d#","dx","ebb","eb","e#","ex","fbb","fb","f#","fx","gbb","gb","g","g#","gx","abb","ab","a#","ax","bbb","bb","b#","bx","frequency","TransportTime","_secondsToTicks","ceil","Default","Ticks","NormalRange","AudioRange","Decibels","Interval","BPM","Positive","Gain","Cents","Degrees","MIDI","BarsBeatsSixteenths","Samples","Hertz","Note","Milliseconds","Seconds","Notation","convert","_toUnits","convertedVal","_fromUnits","min","_minOutput","setValueAtTime","setRampPoint","cancelAndHoldAtTime","currentVal","linearRampToValueAtTime","endTime","exponentialRampToValueAtTime","exponentialRampTo","startTime","linearRampTo","getTimeConstant","targetRampTo","setTargetAtTime","timeConstant","setValueCurveAtTime","duration","segTime","cancelTime","sampleTime","GainNode","createGainNode","_gainNode","gainNode","_initial","Linear","Exponential","Target","Set","getValueAtTime","beforeEvent","_searchBefore","setValue","scaling","before","_searchAfter","linearRampToValueBetween","finish","exponentialRampToValueBetween","previousVal","previous","_exponentialApproach","_linearInterpolate","_exponentialInterpolate","t0","v0","v1","exp","t1","Pow","_exp","_expScaler","_expFunc","abs","Envelope","attack","decay","sustain","release","_attackCurve","_releaseCurve","_sig","attackCurve","releaseCurve","In","curveDef","Out","triggerAttack","velocity","originalAttack","currentValue","percentComplete","sliceIndex","triggerRelease","triggerAttackRelease","invertCurve","out","k","cosineCurve","rippleCurve","curveLen","sineWave","stairsCurve","sineCurve","cos","bounceCurve","linear","exponential","bounce","cosine","reverse","step","ripple","sine","AmplitudeEnvelope","AnalyserNode","getFloatTimeDomainData","array","uint8","Uint8Array","getByteTimeDomainData","Analyser","_analyser","createAnalyser","_buffer","size","smoothing","Waveform","FFT","getValue","getFloatFrequencyData","frequencyBinCount","fftSize","TypeError","smoothingTimeConstant","Compressor","_compressor","createDynamicsCompressor","knee","ratio","Add","_sum","Multiply","_mult","Negate","_multiply","Subtract","_neg","GreaterThanZero","_thresh","_scale","GreaterThan","_gtz","Abs","_abs","Modulo","modulus","_subtract","_modSignal","_setWaveShaper","mod","AudioToGain","_norm","x","applyBinary","Constructor","self","_eval","applyUnary","getNumber","literalNumber","Expr","_replacements","inputCount","_parseInputs","_nodes","result","tree","_parseTree","_disposeNodes","_Expressions","signal","glue",",","a2g","binary","unary","!","NOT","inputArray","inputMax","matchSyntax","syn","matchGroup","groupName","parseExpression","parseUnary","operator","parsePrimary","parseFunctionCall","parseArgumentList","EqualPowerGain","_eqPower","CrossFade","initialFade","fade","_equalPowerA","_equalPowerB","_invert","Filter","_filters","detune","Q","_rolloff","rolloff","possibilities","cascadingCount","count","filter","createBiquadFilter","connectionChain","concat","MultibandSplit","low","_lowMidFilter","mid","high","lowFrequency","highFrequency","EQ3","_multibandSplit","_lowGain","_midGain","_highGain","Scale","outputMin","outputMax","_outputMin","_outputMax","_add","_setRange","ScaleExp","exponent","DelayNode","createDelay","createDelayNode","Delay","_delayNode","maxDelay","delayTime","FeedbackCombFilter","_delay","_feedback","resonance","Follower","_filter","_frequencyValues","_sub","blockTime","_attack","_release","_setAttackRelease","minTime","ScaledEnvelope","FrequencyEnvelope","_octaves","octaves","baseFrequency","Gate","_follower","_gt","thresh","attackTime","releaseTime","_wrapScheduleMethods","ticksUntilTime","_getTickUntilEvent","TickSignal","prevEvent","rampVal","segmentDur","val0","val1","getTickAtTime","getDurationOfTicks","currentTick","getTimeOfTick","tick","delta","sqrt","sol1","sol2","TimelineState","initial","state","setStateAtTime","Clock","_nextTick","_lastState","_state","_boundLoop","_loop","offset","stop","pause","tickTime","getStateAtTime","IntervalTimeline","_root","_length","IntervalNode","insert","updateHeight","updateMax","_rebalance","results","search","_removeNode","_setRoot","_replaceNodeInParent","replacement","isLeftChild","left","right","temp","balance","getBalance","_rotateLeft","pivotNode","_rotateRight","allNodes","traverse","searchAfter","_left","_right","height","point","TransportEvent","_eventId","_once","once","invoke","clear","TransportRepeatEvent","_interval","_currentId","_nextId","_boundRestart","_restart","_createEvents","scheduleOnce","_boundCreateEvents","_loopStart","_loopEnd","_ppq","TransportConstructor","_clock","_processTick","_bindClockEvents","_scheduledEvents","_repeatedEvents","_syncedSignals","_swingTicks","_swingAmount","swing","swingSubdivision","loopStart","loopEnd","progress","amount","schedule","_addEvent","scheduleRepeat","eventId","item","timeline","toggle","timeSig","startPosition","endPosition","setLoopPoints","ppq","transportPos","remainingTime","syncSignal","ratioSignal","unsyncSignal","syncedSignal","Volume","volume","_unmutedVolume","mute","Master","_volume","toMaster","MasterConstructor","Source","_synced","_scheduled","_start","_stop","retrigger","sched","sync","_syncedStart","stateEvent","startOffset","_syncedStop","unsync","OscillatorNode","noteOn","noteOff","setPeriodicWave","setWaveTable","createPeriodicWave","createWaveTable","Oscillator","_oscillator","_wave","_partials","partials","_phase","phase","Sine","Triangle","Sawtooth","Square","Custom","createOscillator","syncFrequency","unsyncFrequency","coefs","_getRealImaginary","periodicWave","periodicWaveSize","real","imag","partialCount","partial","exec","_inverseFFT","sum","_getInitialValue","maxValue","twoPi","Zero","_gain","LFO","amplitude","_stoppedSignal","_zeros","_stoppedValue","_a2g","_scaler","_units","currentMin","currentMax","Limiter","LowpassCombFilter","_lowpass","dampening","Merge","_merger","createChannelMerger","Meter","getLevel","Split","_splitter","createChannelSplitter","MidSideSplit","_split","side","SQRT1_2","MidSideMerge","_merge","MidSideCompressor","_midSideSplit","_midSideMerge","Mono","MultibandCompressor","Panner","initialPan","hasStereoPanner","_panner","createStereoPanner","pan","_crossFade","_zero","Panner3D","createPanner","panningModel","maxDistance","distanceModel","coneOuterGain","coneOuterAngle","coneInnerAngle","refDistance","rolloffFactor","_orientation","orientationX","orientationY","orientationZ","_position","positionX","positionY","positionZ","_rampTimeConstant","setPosition","y","z","setOrientation","pos","_aliasProperty","PanVol","Solo","_soloBind","_soloed","solo","_isSoloed","_addSolo","_removeSolo","_currentSolo","_noSolos","CtrlInterpolate","lowerPosition","lower","upper","_interpolate","retArray","retObj","_toNumber","CtrlMarkov","distribution","_getProbDistribution","rand","random","dist","chosen","needsNormalizing","option","probability","CtrlPattern","_shuffled","_direction","Up","Down","UpDown","DownUp","AlternateUp","AlternateDown","Random","RandomWalk","RandomOnce","_shuffleValues","randVal","CtrlRandom","integer","AudioBuffer","copyToChannel","src","chanNum","channel","copyFromChannel","dest","Buffer","_reversed","_xhr","url","onload","load","onerror","Promise","buff","err","_removeFromDownloadQueue","abort","numberOfChannels","fromArray","isMultidimensional","channels","toMono","toArray","outputArray","numChannels","channelArray","map","sample","startSamples","endSamples","_reverse","loaded","rev","_downloadQueue","baseUrl","request","onError","onProgress","totalProgress","matches","extensions","extension","supportsType","XMLHttpRequest","open","responseType","addEventListener","status","decodeAudioData","response","lengthComputable","send","cancelDownloads","document","createElement","canPlayType","removeEvents","success","fail","then","catch","Buffers","urls","_buffers","_loadingCount","key","_bufferLoaded","has","isLoaded","buffName","Buses","channelName","sendKnob","receive","Draw","expiration","anticipation","_boundDrawLoop","_drawLoop","requestAnimationFrame","Listener","ListenerConstructor","forwardX","forwardY","forwardZ","upX","upY","upZ","listener","OfflineAudioContext","webkitOfflineAudioContext","OfflineContext","offlineContext","_duration","_currentTime","render","done","oncomplete","renderedBuffer","startRendering","originalContext","rendered","Effect","_dryWet","wet","effectSend","effectReturn","connectEffect","effect","AutoFilter","_lfo","depth","delay","oct","AutoPanner","AutoWah","follower","_sweepRange","_baseFrequency","_inputBoost","_bandpass","_peaking","_setSweepRange","sensitivity","baseFreq","sensitivy","BitCrusher","invStepSize","bits","_modulo","_bits","Chebyshev","_order","order","_getCoefficient","degree","memo","StereoEffect","effectSendL","effectSendR","effectReturnL","effectReturnR","FeedbackEffect","_feedbackGain","feedback","StereoXFeedbackEffect","_feedbackLR","_feedbackRL","Chorus","_depth","_delayTime","_lfoL","_lfoR","_delayNodeL","_delayNodeR","spread","deviation","Convolver","_convolver","createConvolver","Distortion","_distortion","distortion","deg","FeedbackDelay","combFilterTunings","allpassFilterFrequencies","Freeverb","roomSize","_combFilters","_allpassFiltersL","_allpassFiltersR","allpassL","r","allpassR","lfpf","al","ar","cf","combFilterDelayTimes","combFilterResonances","allpassFilterFreqs","JCReverb","_scaleRoomSize","_allpassFilters","_feedbackCombFilters","af","allpass","fbcf","apf","MidSideEffect","midSend","sideSend","midReturn","sideReturn","Phaser","_filtersL","_makeFilters","stages","_filtersR","connectToFreq","filters","PingPongDelay","_leftDelay","maxDelayTime","_rightDelay","_rightPreDelay","PitchShift","_frequency","_delayA","_lfoA","_delayB","_lfoB","_crossFadeLFO","_feedbackDelay","_pitch","_windowSize","windowSize","factor","StereoFeedbackEffect","_feedbackL","_feedbackR","StereoWidener","width","_midMult","_sideMult","_two","Tremolo","_amplitudeL","_amplitudeR","Vibrato","Event","_playbackRate","_startOffset","_probability","_humanize","humanize","playbackRate","_rescheduleEvents","startTick","_getLoopDuration","_tick","prob","variation","reschedulTime","rate","lastEvent","loopDuration","Loop","_event","iterations","iters","Part","_forEach","_startNote","at","_restartEvent","removeAll","_setAll","_testLoopBoundries","Pattern","_pattern","pattern","vals","Sequence","_subdivision","_indexTime","subSubdivision","PulseOscillator","_widthGate","_sawtooth","PWMOscillator","_pulse","modulationFrequency","_modulator","FMOscillator","_carrier","modulationIndex","modulationType","harmonicity","_modulationNode","AMOscillator","_modulationScale","FatOscillator","_oscillators","_spread","osc","iterator","OmniOscillator","_sourceType","OmniOscType","Pulse","PWM","Osc","FM","AM","Fat","prefix","_createNewOscillator","oscType","OscillatorConstructor","oldOsc","mType","Instrument","Monophonic","portamento","_triggerEnvelopeAttack","setNote","_triggerEnvelopeRelease","currentNote","portTime","Synth","oscillator","envelope","AMSynth","modulation","modulationEnvelope","MonoSynth","filterEnvelope","DuoSynth","voice0","voice1","_vibrato","vibratoRate","_vibratoGain","vibratoAmount","FMSynth","carrier","modulator","MembraneSynth","pitchDecay","maxNote","inharmRatios","MetalSynth","_freqMultipliers","_amplitue","_highpass","_filterFreqScaler","vel","octs","AudioBufferSourceNode","noteGrainOn","BufferSource","onended","_startTime","_stopTime","_source","fadeIn","fadeOut","_onendedTimeout","fadeInTime","computedDur","fadeOutTime","heldDuration","startFade","_onended","createBuffers","_noiseArrays","_noiseBuffers","Noise","pink","channelNum","b0","b1","b2","b3","b4","b5","b6","white","brown","lastOut","NoiseSynth","noise","PluckSynth","_noise","attackNoise","_lfcf","delayAmount","PolySynth","polyphony","MAX_POLYPHONY","voices","_triggers","v","voice","notes","oldest","JSON","stringify","stringified","desc","releaseAll","Sampler","urlMap","isNaN","_activeSources","_findClosest","difference","closestNote","source","GainToAudio","Normalize","inputMin","_inputMin","_inputMax","_div","TransportTimelineSignal","_outputSig","_lastVal","_onTick","_bindAnchorValue","_anchorValue","_syncedCallback","GrainPlayer","grainSize","_grainSize","_overlap","overlap","_onstop","_offset","seek","Player","autostart","_onload","Players","_players","_fadeIn","_fadeOut","player","playing","playerName","stopAll","UserMedia","_mediaStream","_stream","_device","labelOrId","enumerateDevices","devices","device","find","label","deviceId","constraints","audio","echoCancellation","navigator","mediaDevices","getUserMedia","stream","createMediaStreamSource","getAudioTracks","track","kind","active","groupId","hasBasename","addLeadingSlash","path","charAt","stripLeadingSlash","RegExp","stripBasename","stripTrailingSlash","parsePath","pathname","hash","hashIndex","searchIndex","createPath","location","__webpack_exports__","_classCallCheck","_createClass","defineProperties","target","props","descriptor","protoProps","staticProps","synth","Function","eval","createLocation","locationsAreEqual","__WEBPACK_IMPORTED_MODULE_0_resolve_pathname__","__WEBPACK_IMPORTED_MODULE_1_value_equal__","__WEBPACK_IMPORTED_MODULE_2__PathUtils__","_extends","assign","currentLocation","decodeURI","URIError","randomIntBetween","isNumeric","randomFromArray","shuffleArray","counter","__WEBPACK_IMPORTED_MODULE_0__createStore__","__WEBPACK_IMPORTED_MODULE_1__combineReducers__","__WEBPACK_IMPORTED_MODULE_2__bindActionCreators__","__WEBPACK_IMPORTED_MODULE_3__applyMiddleware__","__WEBPACK_IMPORTED_MODULE_4__compose__","toObject","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","test1","String","getOwnPropertyNames","test2","fromCharCode","test3","letter","from","symbols","to","validateFormat","makeEmptyFunction","emptyFunction","thatReturns","thatReturnsFalse","thatReturnsTrue","thatReturnsNull","thatReturnsThis","thatReturnsArgument","_interopRequireDefault","obj","_resolvePathname","_resolvePathname2","_valueEqual","_valueEqual2","_PathUtils","_warning","_warning2","createTransitionManager","prompt","setPrompt","nextPrompt","confirmTransitionTo","action","getUserConfirmation","listeners","appendListener","isActive","notifyListeners","_len","_key","__WEBPACK_IMPORTED_MODULE_0_react_router_es_Router__","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","setPrototypeOf","__proto__","__WEBPACK_IMPORTED_MODULE_0_warning__","__WEBPACK_IMPORTED_MODULE_0_warning___default","__WEBPACK_IMPORTED_MODULE_1_invariant__","__WEBPACK_IMPORTED_MODULE_1_invariant___default","__WEBPACK_IMPORTED_MODULE_2_react__","__WEBPACK_IMPORTED_MODULE_2_react___default","__WEBPACK_IMPORTED_MODULE_3_prop_types__","__WEBPACK_IMPORTED_MODULE_3_prop_types___default","Router","_React$Component","_temp","_this","_ret","computeMatch","history","getChildContext","router","route","isExact","componentWillMount","_this2","_props","children","Children","unlisten","listen","setState","componentWillReceiveProps","nextProps","componentWillUnmount","only","Component","propTypes","isRequired","contextTypes","childContextTypes","__WEBPACK_IMPORTED_MODULE_0_path_to_regexp__","__WEBPACK_IMPORTED_MODULE_0_path_to_regexp___default","patternCache","cacheCount","compilePath","cacheKey","strict","sensitive","cache","re","compiledPattern","matchPath","_options","_options$path","_options$exact","exact","_options$strict","_options$sensitive","_compilePath","reduce","play","playDebounced","__WEBPACK_IMPORTED_MODULE_0_lodash_debounce__","__WEBPACK_IMPORTED_MODULE_0_lodash_debounce___default","__WEBPACK_IMPORTED_MODULE_1_tone__","__WEBPACK_IMPORTED_MODULE_1_tone___default","__WEBPACK_IMPORTED_MODULE_2__songs__","song","seed","visCallback","seedrandom","generatedSettings","message","isPlainObject","__WEBPACK_IMPORTED_MODULE_2__isObjectLike_js__","__WEBPACK_IMPORTED_MODULE_0__baseGetTag_js__","objectTag","proto","__WEBPACK_IMPORTED_MODULE_1__getPrototype_js__","Ctor","funcToString","objectCtorString","funcProto","objectProto","noop","getThen","LAST_ERROR","IS_ERROR","tryCallOne","tryCallTwo","_75","_83","_18","_38","doResolve","safeThen","onFulfilled","onRejected","reject","res","handle","Handler","deferred","_47","handleResolved","asap","promise","newValue","finale","_71","reason","_44","emptyObject","isAbsolute","spliceOne","list","pop","resolvePathname","toParts","fromParts","isToAbs","isFromAbs","mustEndAbs","hasTrailingSlash","last","up","part","unshift","valueEqual","every","aType","_typeof","aValue","bValue","aKeys","bKeys","Symbol","canUseDOM","attachEvent","removeEventListener","detachEvent","getConfirmation","confirm","supportsHistory","ua","userAgent","supportsPopStateOnHashChange","supportsGoWithoutReloadUsingHash","isExtraneousPopstateEvent","_objectWithoutProperties","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_0_react___default","__WEBPACK_IMPORTED_MODULE_1_prop_types__","__WEBPACK_IMPORTED_MODULE_1_prop_types___default","__WEBPACK_IMPORTED_MODULE_2_invariant__","__WEBPACK_IMPORTED_MODULE_2_invariant___default","isModifiedEvent","metaKey","altKey","ctrlKey","shiftKey","Link","handleClick","onClick","defaultPrevented","button","preventDefault","_this$props","innerRef","href","createHref","ref","string","bool","oneOfType","defaultProps","shape","__WEBPACK_IMPORTED_MODULE_0_react_router_es_Route__","__WEBPACK_IMPORTED_MODULE_4__matchPath__","isEmptyChildren","Route","_ref","computedMatch","component","nextContext","_context$router","staticContext","global","REACT_STATICS","displayName","getDefaultProps","getDerivedStateFromProps","mixins","KNOWN_STATICS","caller","callee","arity","getOwnPropertyDescriptor","getPrototypeOf","objectPrototype","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","__WEBPACK_IMPORTED_MODULE_0__reducer__","__WEBPACK_IMPORTED_MODULE_3__containers__","SYNTH_PLAY","SYNTH_STOP","UPDATE_SEED","UPDATE_GENERATED_SETTINGS","SET_SONG","__WEBPACK_IMPORTED_MODULE_0__constants__","__WEBPACK_IMPORTED_MODULE_1__constants__","freeGlobal","freeSelf","_toConsumableArray","arr2","chordProgressions","getRandomRootNote","actualNotesFromScale","getRandomScaleType","getChordProgressionForKey","getRandomChordTypesForProgression","rootNotesFromChordProgression","smoothBassLineForChordProgression","motifForChordProgression","__WEBPACK_IMPORTED_MODULE_0_tone__","__WEBPACK_IMPORTED_MODULE_0_tone___default","__WEBPACK_IMPORTED_MODULE_1__utils__","roots","scales","Major","Minor","HarmonicMinor","MelodicMinor","PentatonicMajor","PentatonicMinor","PentatonicBlues","PentatonicNeutral","Ionian","Aeolian","Dorian","Mixolydian","Phrygian","Lydian","Locrian","Dominant7th","Blues","chords","tonic","scale","lowOctave","highOctave","octaveScale","scaleFromTonic","randomType","progression","chordTypesToUse","progressionRootNotes","chordFromScale","chordOctave","progressionNotes","progressionIndex","chord","chordTypes","chordToneIndexes","mainOctave","indexOffset","fullScale","filteredScale","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","chordProgression","notesPerChord","transposeSemiTones","noteCountForChord","chordRoot","scaleForCurrentChord","notesForChord","previousNoteIndex","newNote","__WEBPACK_IMPORTED_MODULE_0__bass__","__WEBPACK_IMPORTED_MODULE_1__pads__","__WEBPACK_IMPORTED_MODULE_2__drums__","__WEBPACK_IMPORTED_MODULE_3__lead__","__WEBPACK_IMPORTED_MODULE_4__presets__","bass","pads","drums","lead","presets","subBass","softSquareBass","FastAttackSquare","SawTooth","squareBass","__WEBPACK_IMPORTED_MODULE_1__instrument__","_Instrument","comp","_Instrument2","harmonics","bassSynth","Play","Stop","PlayButtonClick","SetInitialSeed","SetSeed","RandomiseSeed","SetSong","__WEBPACK_IMPORTED_MODULE_0__actionTypes__","__WEBPACK_IMPORTED_MODULE_1__synth_synth__","dispatch","getState","app","payload","isPlaying","newSeed","randomSeed","Date","getTime","__WEBPACK_IMPORTED_MODULE_0__App__","App","__WEBPACK_IMPORTED_MODULE_0__components_Provider__","__WEBPACK_IMPORTED_MODULE_2__connect_connect__","subscriptionShape","storeShape","__WEBPACK_IMPORTED_MODULE_0_prop_types__","__WEBPACK_IMPORTED_MODULE_0_prop_types___default","trySubscribe","tryUnsubscribe","notifyNestedSubs","isSubscribed","subscribe","makeSelectorStateful","sourceSelector","store","selector","run","shouldComponentUpdate","connectAdvanced","selectorFactory","_contextTypes","_childContextTypes","_ref$getDisplayName","getDisplayName","_ref$methodName","methodName","_ref$renderCountProp","renderCountProp","_ref$shouldHandleStat","shouldHandleStateChanges","_ref$storeKey","storeKey","_ref$withRef","withRef","connectOptions","subscriptionKey","hotReloadingVersion","__WEBPACK_IMPORTED_MODULE_4__utils_PropTypes__","WrappedComponent","wrappedComponentName","selectorFactoryOptions","Connect","_Component","renderCount","propsMode","Boolean","setWrappedInstance","initSelector","initSubscription","_ref2","subscription","componentDidMount","forceUpdate","getWrappedInstance","wrappedInstance","parentSub","__WEBPACK_IMPORTED_MODULE_3__utils_Subscription__","onStateChange","componentDidUpdate","notifyNestedSubsOnComponentDidUpdate","dummyState","addExtraProps","withExtras","__WEBPACK_IMPORTED_MODULE_0_hoist_non_react_statics___default","__WEBPACK_IMPORTED_MODULE_0_hoist_non_react_statics__","createStore","reducer","preloadedState","enhancer","ensureCanMutateNextListeners","nextListeners","currentListeners","currentState","__WEBPACK_IMPORTED_MODULE_0_lodash_es_isPlainObject__","isDispatching","currentReducer","replaceReducer","nextReducer","ActionTypes","INIT","observable","outerSubscribe","observer","observeState","unsubscribe","__WEBPACK_IMPORTED_MODULE_1_symbol_observable__","__WEBPACK_IMPORTED_MODULE_0__root_js__","compose","funcs","wrapMapToPropsConstant","constantSelector","dependsOnOwnProps","getDependsOnOwnProps","mapToProps","wrapMapToPropsFunc","proxy","stateOrDispatch","ownProps","enable","disable","enabled","onUnhandled","allRejections","matchWhitelist","rejections","whitelist","DEFAULT_WHITELIST","displayId","logged","logError","onHandled","_56","stack","line","some","cls","rawAsap","task","queue","requestFlush","flushing","flush","currentIndex","capacity","scan","newLength","makeRequestCallFromTimer","handleTimer","timeoutHandle","clearInterval","intervalHandle","setInterval","scope","BrowserMutationObserver","MutationObserver","WebKitMutationObserver","createTextNode","observe","characterData","data","valuePromise","TRUE","FALSE","NULL","UNDEFINED","ZERO","EMPTYSTRING","all","remaining","race","normalizeName","normalizeValue","iteratorFor","items","support","iterable","Headers","headers","append","header","consumed","body","bodyUsed","fileReaderReady","reader","readBlobAsArrayBuffer","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","view","chars","bufferClone","byteLength","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","arrayBuffer","isDataView","_bodyArrayBuffer","ArrayBuffer","isArrayBufferView","rejected","text","decode","json","parse","normalizeMethod","upcased","toUpperCase","methods","Request","credentials","mode","referrer","form","bytes","decodeURIComponent","parseHeaders","rawHeaders","parts","Response","bodyInit","ok","statusText","fetch","viewClasses","DataView","isView","oldValue","thisArg","entries","redirectStatuses","redirect","init","xhr","getAllResponseHeaders","responseURL","responseText","ontimeout","withCredentials","setRequestHeader","polyfill","__WEBPACK_IMPORTED_MODULE_1_react_dom__","__WEBPACK_IMPORTED_MODULE_1_react_dom___default","__WEBPACK_IMPORTED_MODULE_2_react_router_dom__","__WEBPACK_IMPORTED_MODULE_3__index_css__","__WEBPACK_IMPORTED_MODULE_4__modules_App__","__WEBPACK_IMPORTED_MODULE_5__registerServiceWorker__","__WEBPACK_IMPORTED_MODULE_6_react_redux__","__WEBPACK_IMPORTED_MODULE_7__store__","__WEBPACK_IMPORTED_MODULE_8__modules_App_components_Drone__","basename","AppContainer","getElementById","C","encodeURIComponent","E","refs","updater","D","F","G","L","h","J","K","$$typeof","_owner","I","current","M","escape","=",":","P","O","keyPrefix","R","u","S","T","U","V","N","w","A","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","isReactComponent","H","isPureReactComponent","__self","__source","W","createRef","PureComponent","createContext","_calculateChangedBits","_defaultValue","_currentValue","_changedBits","Provider","Consumer","forwardRef","Fragment","StrictMode","unstable_AsyncMode","cloneElement","createFactory","isValidElement","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","X","freeze","Y","checkDCE","__REACT_DEVTOOLS_GLOBAL_HOOK__","ba","ma","_hasCaughtError","_caughtError","na","_hasRethrowError","_rethrowError","qa","oa","pa","ra","extractEvents","eventTypes","sa","phasedRegistrationNames","ta","registrationName","va","dependencies","wa","xa","Ga","currentTarget","Fa","invokeGuardedCallbackAndCatchFirstError","Ha","Ia","Ka","_dispatchListeners","_dispatchInstances","isPropagationStopped","isPersistent","La","Ma","Oa","stateNode","Da","disabled","Pa","Ja","rethrowCaughtError","Qa","Ua","parentNode","tag","Va","Xa","Ta","dispatchConfig","_targetInst","hb","ib","jb","alternate","mb","lb","documentElement","nb","_fallbackText","_startText","ob","nativeEvent","Interface","isDefaultPrevented","returnValue","sb","eventPool","tb","destructor","rb","getPooled","Mb","wb","keyCode","Nb","detail","Pb","which","Lb","Bb","Qb","Ob","xb","char","Ab","Wb","Ea","Sb","restoreControlledState","Xb","Ub","Vb","Yb","Zb","ac","bc","cc","ec","dc","gc","nodeName","fc","hc","correspondingUseElement","nodeType","ic","setAttribute","jc","kc","stopTracking","_valueTracker","lc","mc","checked","zc","yc","Ac","sc","rc","pc","qc","xc","Bc","_debugOwner","_debugSource","fileName","lineNumber","Fc","Ec","Dc","Cc","Gc","acceptsBooleans","Hc","attributeName","attributeNamespace","mustUseProperty","propertyName","Tc","Uc","removeAttribute","setAttributeNS","Vc","defaultChecked","defaultValue","_wrapperState","initialChecked","Wc","Xc","initialValue","controlled","Yc","Zc","$c","ad","ownerDocument","activeElement","cd","bd","change","fd","gd","hd","jd","dd","kd","ed","ld","md","nd","od","sd","getModifierState","rd","td","xd","effectTag","yd","_reactInternalFiber","zd","Ad","sibling","Bd","Cd","Gd","charCode","Qd","bubbled","captured","isInteractive","Od","Pd","Ud","targetInst","ancestors","containerInfo","topLevelType","Wd","Vd","Sd","Xd","Yd","Zd","Td","ae","ee","ce","be","de","ke","je","ie","he","le","firstChild","me","textContent","nextSibling","ne","contentEditable","ue","te","qe","fa","selectionStart","selectionEnd","getSelection","anchorNode","anchorOffset","focusNode","focusOffset","se","ha","pe","select","xe","pendingProps","memoizedState","updateQueue","memoizedProps","lastEffect","firstEffect","nextEffect","expirationTime","ze","Ae","Be","wc","tc","uc","vc","Ce","De","pendingChildren","implementation","Ge","He","isDisabled","supportsFiber","inject","Ee","onCommitFiberRoot","Fe","onCommitFiberUnmount","Ie","Je","Ke","baseState","first","callbackList","hasForceUpdate","isInitialized","capturedValues","Le","Oe","Me","Ne","Pe","Qe","partialState","Re","isReplace","isForced","capturedValue","Se","Te","UNSAFE_componentWillReceiveProps","cacheContext","getMaskedContext","getUnmaskedContext","isContextConsumer","hasContextChanged","adoptClassInstance","callGetDerivedStateFromProps","constructClassInstance","ka","mountClassInstance","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","resumeMountClassInstance","updateClassInstance","UNSAFE_componentWillUpdate","componentWillUpdate","Ve","_stringRef","We","Xe","Map","oc","Ue","$e","Ze","Ye","nc","pendingContext","shouldSetTextContent","shouldDeprioritizeSubtree","pushHostContext","pushHostContainer","pushProvider","pushContextProvider","pushTopLevelContextObject","invalidateContextProvider","enterHydrationState","Wa","resetHydrationState","Cb","tryToClaimNextHydratableInstance","Jc","Kc","Lc","Db","Mc","Eb","beginWork","element","hydrate","unstable_observedBits","createInstance","createTextInstance","appendInitialChild","finalizeInitialChildren","prepareUpdate","persistence","getRootHostContainer","popHostContext","getHostContext","popHostContainer","popContextProvider","popTopLevelContextObject","popProvider","prepareToHydrateHostInstance","prepareToHydrateHostTextInstance","popHydrationState","mutation","completeWork","componentDidCatch","handler","bf","throwException","unwindWork","unwindInterruptedWork","suppressReactErrorLogging","df","getPublicInstance","commitMount","commitUpdate","resetTextContent","commitTextUpdate","appendChild","appendChildToContainer","insertBefore","insertInContainerBefore","removeChild","removeChildFromContainer","commitBeforeMutationLifeCycles","__reactInternalSnapshotBeforeUpdate","commitResetTextContent","commitPlacement","commitDeletion","commitWork","commitLifeCycles","commitErrorLogging","getDerivedStateFromCatch","componentStack","commitAttachRef","commitDetachRef","ff","ef","getChildHostContext","getRootHostContext","createCursor","gf","hydration","canHydrateInstance","canHydrateTextInstance","getNextHydratableSibling","getFirstHydratableChild","hydrateInstance","hydrateTextInstance","hf","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","isContextProvider","cursor","processChildContext","__reactInternalMemoizedMergedChildContext","findCurrentUnmaskedContext","jf","kf","isEmpty","checkThatStackIsEmpty","resetStackAfterFatalErrorInDev","lf","Ya","Z","Nc","ya","ca","pendingCommitExpirationTime","Oc","Za","ia","za","da","Fb","xg","ye","Ic","Pc","yg","Gb","mg","Qc","lg","nextScheduledRoot","remainingExpirationTime","la","Hb","aa","$a","Ib","Aa","_onComplete","wg","Ba","Jb","finishedWork","firstBatch","_expirationTime","_defer","zg","kg","we","gg","Ag","hg","ig","jg","timeRemaining","Bg","scheduleDeferredCallback","cancelDeferredCallback","prepareForCommit","resetAfterCommit","Rc","recalculateCurrentTime","computeExpirationForFiber","scheduleWork","requestWork","flushRoot","batchedUpdates","unbatchedUpdates","flushSync","flushControlled","deferredUpdates","syncUpdates","interactiveUpdates","flushInteractiveUpdates","computeUniqueAsyncExpiration","legacyContext","mf","createContainer","updateContainer","updateContainerAtExpirationTime","getPublicRootInstance","findHostInstance","findHostInstanceWithNoPortals","injectIntoDevTools","findFiberByHostInstance","findHostInstanceByFiber","qf","Ff","ea","Gf","Hf","selected","defaultSelected","If","wasMultiple","Jf","dangerouslySetInnerHTML","Kf","Lf","Mf","Of","Pf","Sf","lastChild","nodeValue","Vf","style","Tf","setProperty","Xf","Wf","Yf","is","$f","topBlur","topFocus","topCancel","topClose","fe","ag","Nf","html","innerHTML","createElementNS","bg","cg","ge","Zf","__html","Rf","onclick","dg","eg","fg","ng","rg","_callbacks","_next","_hasChildren","_didComplete","_children","sg","_didCommit","_onCommit","tg","_internalRoot","ug","vg","autoFocus","Dg","hasAttribute","Eg","_reactRootContainer","legacy_renderSubtreeIntoContainer","Fg","ja","invokeGuardedCallback","hasCaughtError","clearCaughtError","Ca","plugins","eventNameDispatchConfigs","registrationNameModules","registrationNameDependencies","possibleRegistrationNames","injectEventPluginOrder","injectEventPluginsByName","Na","Ra","injection","getListener","runEventsInBatch","runExtractedEventsInBatch","Sa","precacheFiberNode","getClosestInstanceFromNode","getInstanceFromNode","getNodeFromInstance","getFiberCurrentPropsFromNode","updateFiberProps","kb","accumulateTwoPhaseDispatches","accumulateTwoPhaseDispatchesSkipTarget","accumulateEnterLeaveDispatches","accumulateDirectDispatches","pb","qb","eventPhase","bubbles","cancelable","timeStamp","isTrusted","stopPropagation","cancelBubble","persist","ub","vb","yb","documentMode","zb","Kb","beforeInput","compositionEnd","compositionStart","compositionUpdate","Rb","Tb","injectFiberControlledHostComponent","$b","enqueueStateRestore","needsStateRestore","restoreStateIfNeeded","color","date","datetime","datetime-local","email","month","number","password","range","tel","week","Sc","tabIndex","pd","_isInputEventSupported","qd","Alt","Control","Meta","Shift","ud","screenX","screenY","clientX","clientY","pageX","pageY","buttons","relatedTarget","fromElement","srcElement","toElement","vd","mouseEnter","mouseLeave","wd","defaultView","parentWindow","Dd","animationName","elapsedTime","pseudoElement","Ed","clipboardData","Fd","Hd","Esc","Spacebar","Left","Right","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Id","8","9","12","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","112","113","114","115","116","117","118","119","120","121","122","123","144","145","224","Jd","repeat","locale","Kd","dataTransfer","Ld","touches","targetTouches","changedTouches","Md","Nd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","Rd","isInteractiveTopLevelEventType","$d","_enabled","setEnabled","isEnabled","trapBubbledEvent","trapCapturedEvent","dispatchEvent","animationend","animationiteration","animationstart","transitionend","animation","transition","topAnimationEnd","topAnimationIteration","topAnimationStart","topChange","topClick","topCompositionEnd","topCompositionStart","topCompositionUpdate","topContextMenu","topCopy","topCut","topDoubleClick","topDrag","topDragEnd","topDragEnter","topDragExit","topDragLeave","topDragOver","topDragStart","topDrop","topInput","topKeyDown","topKeyPress","topKeyUp","topLoad","topLoadStart","topMouseDown","topMouseMove","topMouseOut","topMouseOver","topMouseUp","topPaste","topScroll","topSelectionChange","topTextInput","topToggle","topTouchCancel","topTouchEnd","topTouchMove","topTouchStart","topTransitionEnd","topWheel","topAbort","topCanPlay","topCanPlayThrough","topDurationChange","topEmptied","topEncrypted","topEnded","topError","topLoadedData","topLoadedMetadata","topPause","topPlay","topPlaying","topProgress","topRateChange","topSeeked","topSeeking","topStalled","topSuspend","topTimeUpdate","topVolumeChange","topWaiting","oe","ve","onSelect","SimpleEventPlugin","EnterLeaveEventPlugin","ChangeEventPlugin","SelectEventPlugin","BeforeInputEventPlugin","nf","of","pf","rf","performance","sf","tf","uf","requestIdleCallback","cancelIdleCallback","vf","wf","xf","yf","zf","Af","Bf","Cf","didTimeout","Df","Ef","mathml","svg","Qf","MSApp","execUnsafeLocalFunction","namespaceURI","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","Uf","substring","menuitem","area","base","br","col","embed","hr","img","keygen","link","meta","wbr","og","setInitialProperties","diffProperties","updateProperties","diffHydratedProperties","diffHydratedText","warnForUnmatchedText","warnForDeletedHydratableElement","warnForDeletedHydratableText","warnForInsertedHydratedElement","warnForInsertedHydratedText","querySelectorAll","pg","qg","commit","unmount","createBatch","tagName","rangeCount","focusedElem","selectionRange","createRange","setStart","removeAllRanges","addRange","setEnd","scrollLeft","top","scrollTop","focus","hidden","didNotMatchHydratedContainerTextInstance","didNotMatchHydratedTextInstance","didNotHydrateContainerInstance","didNotHydrateInstance","didNotFindHydratableContainerInstance","didNotFindHydratableContainerTextInstance","didNotFindHydratableInstance","didNotFindHydratableTextInstance","Cg","Gg","createPortal","findDOMNode","unstable_renderSubtreeIntoContainer","unmountComponentAtNode","unstable_createPortal","unstable_batchedUpdates","unstable_deferredUpdates","unstable_flushControlled","EventPluginHub","EventPluginRegistry","EventPropagators","ReactControlledComponent","ReactDOMComponentTree","ReactDOMEventListener","unstable_createRoot","bundleType","rendererPackageName","Hg","Ig","ExecutionEnvironment","canUseWorkers","canUseEventListeners","canUseViewport","screen","isInWorker","getActiveElement","doc","shallowEqual","objA","objB","keysA","keysB","containsNode","outerNode","innerNode","isTextNode","contains","compareDocumentPosition","isNode","Node","__WEBPACK_IMPORTED_MODULE_0__BrowserRouter__","__WEBPACK_IMPORTED_MODULE_7__Route__","__WEBPACK_IMPORTED_MODULE_10__Switch__","__WEBPACK_IMPORTED_MODULE_1_react__","__WEBPACK_IMPORTED_MODULE_1_react___default","__WEBPACK_IMPORTED_MODULE_2_prop_types__","__WEBPACK_IMPORTED_MODULE_2_prop_types___default","__WEBPACK_IMPORTED_MODULE_3_history_createBrowserHistory__","__WEBPACK_IMPORTED_MODULE_3_history_createBrowserHistory___default","__WEBPACK_IMPORTED_MODULE_4__Router__","BrowserRouter","forceRefresh","keyLength","ReactPropTypesSecret","shim","propName","componentName","propFullName","secret","getShim","ReactPropTypes","symbol","any","arrayOf","instanceOf","objectOf","oneOf","checkPropTypes","PropTypes","_invariant","_invariant2","_LocationUtils","_createTransitionManager","_createTransitionManager2","_DOMUtils","getHistoryState","createBrowserHistory","globalHistory","canUseHistory","needsHashChangeListener","_props$forceRefresh","_props$getUserConfirm","_props$keyLength","getDOMLocation","historyState","_window$location","createKey","transitionManager","nextState","handlePopState","handlePop","handleHashChange","forceNextPop","revertPop","fromLocation","toLocation","toIndex","allKeys","fromIndex","go","initialLocation","pushState","prevIndex","nextKeys","replaceState","goBack","goForward","listenerCount","checkDOMListeners","isBlocked","block","unblock","__WEBPACK_IMPORTED_MODULE_3_history_createHashHistory__","__WEBPACK_IMPORTED_MODULE_3_history_createHashHistory___default","HashRouter","hashType","HashPathCoders","hashbang","encodePath","decodePath","noslash","slash","getHashPath","pushHashPath","replaceHashPath","createHashHistory","canGoWithoutReload","_props$hashType","_HashPathCoders$hashT","ignorePath","encodedPath","prevLocation","allPaths","lastIndexOf","nextPaths","__WEBPACK_IMPORTED_MODULE_0_react_router_es_MemoryRouter__","__WEBPACK_IMPORTED_MODULE_3_history_createMemoryHistory__","__WEBPACK_IMPORTED_MODULE_3_history_createMemoryHistory___default","MemoryRouter","initialEntries","initialIndex","clamp","createMemoryHistory","_props$initialEntries","_props$initialIndex","entry","nextIndex","nextEntries","canGo","__WEBPACK_IMPORTED_MODULE_2__Route__","__WEBPACK_IMPORTED_MODULE_3__Link__","NavLink","activeClassName","activeStyle","getIsActive","ariaCurrent","rest","aria-current","str","defaultDelimiter","delimiter","PATH_REGEXP","escaped","capture","modifier","asterisk","optional","escapeGroup","escapeString","compile","tokensToFunction","encodeURIComponentPretty","encodeURI","charCodeAt","encodeAsterisk","opts","encode","pretty","segment","isarray","attachKeys","flags","regexpToRegexp","groups","arrayToRegexp","pathToRegexp","stringToRegexp","tokensToRegExp","endsWithDelimiter","__WEBPACK_IMPORTED_MODULE_0_react_router_es_Prompt__","Prompt","when","__WEBPACK_IMPORTED_MODULE_0_react_router_es_Redirect__","__WEBPACK_IMPORTED_MODULE_2_warning__","__WEBPACK_IMPORTED_MODULE_2_warning___default","__WEBPACK_IMPORTED_MODULE_3_invariant__","__WEBPACK_IMPORTED_MODULE_3_invariant___default","__WEBPACK_IMPORTED_MODULE_4_history__","Redirect","isStatic","perform","prevProps","prevTo","nextTo","__WEBPACK_IMPORTED_MODULE_3__LocationUtils__","__WEBPACK_IMPORTED_MODULE_3__PathUtils__","__WEBPACK_IMPORTED_MODULE_0_react_router_es_StaticRouter__","__WEBPACK_IMPORTED_MODULE_4_history_PathUtils__","__WEBPACK_IMPORTED_MODULE_5__Router__","normalizeLocation","_object$pathname","_object$search","_object$hash","addBasename","createURL","staticHandler","StaticRouter","handlePush","handleReplace","_this$props2","handleListen","handleBlock","__WEBPACK_IMPORTED_MODULE_0_react_router_es_Switch__","Switch","_element$props","pathProp","__WEBPACK_IMPORTED_MODULE_0_react_router_es_matchPath__","__WEBPACK_IMPORTED_MODULE_0_react_router_es_withRouter__","__WEBPACK_IMPORTED_MODULE_2_hoist_non_react_statics__","__WEBPACK_IMPORTED_MODULE_2_hoist_non_react_statics___default","__WEBPACK_IMPORTED_MODULE_3__Route__","withRouter","wrappedComponentRef","remainingProps","routeComponentProps","initialState","playButtonText","newSong","APP_NAME","MODULE_NAME","debounce","wait","invokeFunc","lastArgs","lastThis","lastInvokeTime","leadingEdge","timerId","timerExpired","leading","remainingWait","timeSinceLastCall","lastCallTime","timeSinceLastInvoke","timeWaiting","maxing","nativeMin","maxWait","shouldInvoke","trailingEdge","trailing","debounced","isInvoking","FUNC_ERROR_TEXT","toNumber","nativeMax","isSymbol","NAN","other","reTrim","isBinary","reIsBinary","reIsOctal","freeParseInt","reIsBadHex","isObjectLike","baseGetTag","symbolTag","undefinedTag","nullTag","symToStringTag","getRawTag","objectToString","toStringTag","isOwn","unmasked","nativeObjectToString","__WEBPACK_IMPORTED_MODULE_0__funkyDownTempo__","__WEBPACK_IMPORTED_MODULE_1__drone__","1","2","__WEBPACK_IMPORTED_MODULE_1__scales__","__WEBPACK_IMPORTED_MODULE_2__parts__","__WEBPACK_IMPORTED_MODULE_3__instruments__","__WEBPACK_IMPORTED_MODULE_4__rythyms__","__WEBPACK_IMPORTED_MODULE_5__utils__","keyType","songKey","typeName","progressionIntervals","chordTypesToUseInProgression","possibleChordSectionLengths","chordProgressionBars","possibleChordPads","SimpleSine","SwirlySawtoothChorusWithSubBass","SoftSquareFm","possibleBassInstruments","Bassy","possibleMotifInstruments","AM_Tiny","Kalimba","kickRythym","hihatRythym","shakerRythym","openHatRythym","snareRythym","bassLinePatterns","motifPatterns","chordInstrument","bassInstrument","motifInstrument","openHatFrequency","chordProgressionNotes","changeRythym","sequencer","newRythym","originalLength","numberToRemove","KickDrum","Slap","HiHat","Shaker","OpenHat","bassLinePattern","hit","bassOctave","motifOctave","mutationPayload","mutationFunction","mutate","addChordProgression","addDrums","addRepeatingSoloPart","instrument","noteLength","shouldLoop","currentChord","patterns","repeatTimes","expandedSequence","section","ri","ni","expandedPattern","rythym","__WEBPACK_IMPORTED_MODULE_1__bass__","__WEBPACK_IMPORTED_MODULE_2__instrument__","chordSynth","lfo","chorus","reverb","lfoReverbDampening","lowRootNote","DampenedOpenHat","Test","addReverb","_Instrument3","_this3","_Instrument4","_Instrument5","_Instrument6","_Instrument7","Tiny","Harmonics","FM_ElectricCello","BassGuitar","Coolguy","Bah","AlienChorus","Gravel","_this4","_Instrument8","_this8","_Instrument9","_this9","_Instrument10","_this10","_Instrument11","_this11","randomMotifRythym","randomHiHatRythym","randomSnareRythym","randomKickRythym","randomBassRythym","randomShakerRythym","randomOpenHatRythym","__WEBPACK_IMPORTED_MODULE_0__utils__","kicks","snares","hiHats","shakers","openHats","motifs","__WEBPACK_IMPORTED_MODULE_2__scales__","fmOscillator","semitones","config","lowestOscVolume","changeFrequencyInterval","changeVolumeInterval","bassInterval","harmonyInterval","harmonyFadeOutTime","harmonyOscVolume","extraOscillatorInterval","extraOscillatorFadeOutTime","changeRootInterval","masterScale","rootFreq","oscScale","harmonyNotes","harmonyOscillator","oscillatorsWithEffects","oscillatorsWithFrequencyChange","oscillatorsWithVolumeChange","extraOscillators","changeRootAndTransposeAllToMatch","bassPattern","oscRoot","oscRootO2","oscRootO3","osc3","osc5","osc7","osc9","osc11","osc13","newRoot","newScale","phaser","autoWah","frequencyChangeActive","volumeChangeActive","frequencyChangeOscillator","transposeAmount","noiseAutoFilter","noiseVolumeLfo","reverbRoomSizeLfo","reverbDampeningLfo","oscs","extraOscillator","changeRootPattern","__WEBPACK_IMPORTED_MODULE_2__App_css__","__WEBPACK_IMPORTED_MODULE_3__package_json__","__WEBPACK_IMPORTED_MODULE_4__Songs__","__WEBPACK_IMPORTED_MODULE_5__Info__","__WEBPACK_IMPORTED_MODULE_6__Song__","handleSeedChange","handleSongSelection","getAttribute","actions","randomiseSeed","onSongSelection","onRandomise","onSeedChange","marginTop","private","homepage","axios","lodash","react","react-dom","react-redux","react-router","react-router-dom","react-scripts","redux","redux-thunk","tone","scripts","build","eject","predeploy","deploy","devDependencies","eslint-config-prettier","eslint-plugin-prettier","eslint-plugin-react","gh-pages","prettier","Songs","role","aria-label","data-song","Info","__WEBPACK_IMPORTED_MODULE_2__SongInfo__","__WEBPACK_IMPORTED_MODULE_3__GenerationOptions__","Song","currentImage","SongInfo","marginLeft","marginRight","borderTopLeftRadius","borderTopRightRadius","marginBottom","GenerationOptions","borderBottomLeftRadius","borderBottomRightRadius","paddingTop","htmlFor","onChange","placeholder","__WEBPACK_IMPORTED_MODULE_0__AppContainer__","__WEBPACK_IMPORTED_MODULE_0_react_redux__","__WEBPACK_IMPORTED_MODULE_1_redux__","__WEBPACK_IMPORTED_MODULE_2__actions__","__WEBPACK_IMPORTED_MODULE_3__components__","mapStateToProps","_state$app","mapDispatchToProps","__WEBPACK_IMPORTED_MODULE_2__utils_PropTypes__","_Provider$childContex","subKey","createListenerCollection","CLEARED","notify","Subscription","nullListeners","addNestedSub","factories","strictEqual","__WEBPACK_IMPORTED_MODULE_0__components_connectAdvanced__","__WEBPACK_IMPORTED_MODULE_1__utils_shallowEqual__","__WEBPACK_IMPORTED_MODULE_2__mapDispatchToProps__","__WEBPACK_IMPORTED_MODULE_3__mapStateToProps__","__WEBPACK_IMPORTED_MODULE_4__mergeProps__","__WEBPACK_IMPORTED_MODULE_5__selectorFactory__","_ref$connectHOC","connectHOC","_ref$mapStateToPropsF","mapStateToPropsFactories","_ref$mapDispatchToPro","mapDispatchToPropsFactories","_ref$mergePropsFactor","mergePropsFactories","_ref$selectorFactory","mergeProps","_ref2$pure","pure","_ref2$areStatesEqual","areStatesEqual","_ref2$areOwnPropsEqua","areOwnPropsEqual","_ref2$areStatePropsEq","areStatePropsEqual","_ref2$areMergedPropsE","areMergedPropsEqual","extraOptions","initMapStateToProps","initMapDispatchToProps","initMergeProps","hasOwn","whenMapDispatchToPropsIsFunction","__WEBPACK_IMPORTED_MODULE_1__wrapMapToProps__","whenMapDispatchToPropsIsMissing","whenMapDispatchToPropsIsObject","__WEBPACK_IMPORTED_MODULE_0_redux__","__WEBPACK_IMPORTED_MODULE_1__getRawTag_js__","__WEBPACK_IMPORTED_MODULE_2__objectToString_js__","__WEBPACK_IMPORTED_MODULE_0__Symbol_js__","__WEBPACK_IMPORTED_MODULE_0__freeGlobal_js__","__WEBPACK_IMPORTED_MODULE_0__overArg_js__","getPrototype","overArg","transform","__WEBPACK_IMPORTED_MODULE_0__ponyfill_js__","originalModule","webpackPolyfill","symbolObservablePonyfill","getUndefinedStateErrorMessage","actionType","assertReducerShape","reducers","combineReducers","reducerKeys","finalReducers","finalReducerKeys","shapeAssertionError","hasChanged","_i","previousStateForKey","nextStateForKey","errorMessage","bindActionCreator","actionCreator","bindActionCreators","actionCreators","boundActionCreators","applyMiddleware","middlewares","_dispatch","middlewareAPI","middleware","__WEBPACK_IMPORTED_MODULE_0__compose__","whenMapStateToPropsIsFunction","__WEBPACK_IMPORTED_MODULE_0__wrapMapToProps__","whenMapStateToPropsIsMissing","defaultMergeProps","stateProps","dispatchProps","wrapMergePropsFunc","hasRunOnce","mergedProps","nextMergedProps","whenMergePropsIsFunction","whenMergePropsIsOmitted","impureFinalPropsSelectorFactory","pureFinalPropsSelectorFactory","handleFirstCall","firstState","firstOwnProps","hasRunAtLeastOnce","handleNewPropsAndNewState","handleNewProps","handleNewState","nextStateProps","statePropsChanged","handleSubsequentCalls","nextOwnProps","propsChanged","stateChanged","finalPropsSelectorFactory","register","origin","swUrl","isLocalhost","checkValidServiceWorker","serviceWorker","ready","registerValidSW","registration","onupdatefound","installingWorker","installing","onstatechange","controller","unregister","reload","hostname","__WEBPACK_IMPORTED_MODULE_1_redux_thunk__","__WEBPACK_IMPORTED_MODULE_1_redux_thunk___default","__WEBPACK_IMPORTED_MODULE_2__modules_root__","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","createThunkMiddleware","extraArgument","thunk","withExtraArgument","rootReducer","__WEBPACK_IMPORTED_MODULE_1__App__","Drone"],"mappings":"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AAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAG1CC,IACH,EAAG,EAAG,EAAG,IACT,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC7F,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAE1ClpD,IACH,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG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","file":"static/js/main.1a52cc3e.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/synaesthesia/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 53);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nif (true) {\n  module.exports = __webpack_require__(60);\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (false) {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = __webpack_require__(71)();\n}\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = function() {};\n\nif (false) {\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n        '`warning(condition, format, ...args)` requires a warning ' +\n        'message argument'\n      );\n    }\n\n    if (format.length < 10 || (/^[s\\W]*$/).test(format)) {\n      throw new Error(\n        'The warning format should be able to uniquely identify this ' +\n        'warning. Please, use a more descriptive format than: ' + format\n      );\n    }\n\n    if (!condition) {\n      var argIndex = 0;\n      var message = 'Warning: ' +\n        format.replace(/%s/g, function() {\n          return args[argIndex++];\n        });\n      if (typeof console !== 'undefined') {\n        console.error(message);\n      }\n      try {\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n      } catch(x) {}\n    }\n  };\n}\n\nmodule.exports = warning;\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (false) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;(function(root, factory){\n\n\t//UMD\n\tif ( true ) {\n\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\t\treturn factory();\n\t\t}.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else if (typeof module === \"object\") {\n\t\tmodule.exports = factory();\n \t} else {\n\t\troot.Tone = factory();\n\t}\n\n}(this, function(){\n\n\t\"use strict\";\n\t\n\tvar Tone;\n\t//constructs the main Tone object\n\tfunction Main(func){\n\t\tTone = func();\n\t}\n\t//invokes each of the modules with the main Tone object as the argument\n\tfunction Module(func){\n\t\tfunc(Tone);\n\t}\t/**\n\t *  Tone.js\n\t *  @author Yotam Mann\n\t *  @license http://opensource.org/licenses/MIT MIT License\n\t *  @copyright 2014-2017 Yotam Mann\n\t */\n\tMain(function () {\n\t    \n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tTONE\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  @class  Tone is the base class of all other classes.\n\t\t *  @constructor\n\t\t */\n\t    var Tone = function () {\n\t    };\n\t    /**\n\t\t *  @memberOf Tone#\n\t\t *  @returns {string} returns the name of the class as a string\n\t\t */\n\t    Tone.prototype.toString = function () {\n\t        for (var className in Tone) {\n\t            var isLetter = className[0].match(/^[A-Z]$/);\n\t            var sameConstructor = Tone[className] === this.constructor;\n\t            if (Tone.isFunction(Tone[className]) && isLetter && sameConstructor) {\n\t                return className;\n\t            }\n\t        }\n\t        return 'Tone';\n\t    };\n\t    /**\n\t\t *  @memberOf Tone#\n\t\t *  disconnect and dispose\n\t\t *  @returns {Tone} this\n\t\t */\n\t    Tone.prototype.dispose = function () {\n\t        return this;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tGET/SET\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Set the parameters at once. Either pass in an\n\t\t *  object mapping parameters to values, or to set a\n\t\t *  single parameter, by passing in a string and value.\n\t\t *  The last argument is an optional ramp time which\n\t\t *  will ramp any signal values to their destination value\n\t\t *  over the duration of the rampTime.\n\t\t *  @param {Object|string} params\n\t\t *  @param {number=} value\n\t\t *  @param {Time=} rampTime\n\t\t *  @returns {Tone} this\n\t\t *  @memberOf Tone#\n\t\t *  @example\n\t\t * //set values using an object\n\t\t * filter.set({\n\t\t * \t\"frequency\" : 300,\n\t\t * \t\"type\" : highpass\n\t\t * });\n\t\t *  @example\n\t\t * filter.set(\"type\", \"highpass\");\n\t\t *  @example\n\t\t * //ramp to the value 220 over 3 seconds.\n\t\t * oscillator.set({\n\t\t * \t\"frequency\" : 220\n\t\t * }, 3);\n\t\t */\n\t    Tone.prototype.set = function (params, value, rampTime) {\n\t        if (Tone.isObject(params)) {\n\t            rampTime = value;\n\t        } else if (Tone.isString(params)) {\n\t            var tmpObj = {};\n\t            tmpObj[params] = value;\n\t            params = tmpObj;\n\t        }\n\t        paramLoop:\n\t            for (var attr in params) {\n\t                value = params[attr];\n\t                var parent = this;\n\t                if (attr.indexOf('.') !== -1) {\n\t                    var attrSplit = attr.split('.');\n\t                    for (var i = 0; i < attrSplit.length - 1; i++) {\n\t                        parent = parent[attrSplit[i]];\n\t                        if (parent instanceof Tone) {\n\t                            attrSplit.splice(0, i + 1);\n\t                            var innerParam = attrSplit.join('.');\n\t                            parent.set(innerParam, value);\n\t                            continue paramLoop;\n\t                        }\n\t                    }\n\t                    attr = attrSplit[attrSplit.length - 1];\n\t                }\n\t                var param = parent[attr];\n\t                if (Tone.isUndef(param)) {\n\t                    continue;\n\t                }\n\t                if (Tone.Signal && param instanceof Tone.Signal || Tone.Param && param instanceof Tone.Param) {\n\t                    if (param.value !== value) {\n\t                        if (Tone.isUndef(rampTime)) {\n\t                            param.value = value;\n\t                        } else {\n\t                            param.rampTo(value, rampTime);\n\t                        }\n\t                    }\n\t                } else if (param instanceof AudioParam) {\n\t                    if (param.value !== value) {\n\t                        param.value = value;\n\t                    }\n\t                } else if (param instanceof Tone) {\n\t                    param.set(value);\n\t                } else if (param !== value) {\n\t                    parent[attr] = value;\n\t                }\n\t            }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Get the object's attributes. Given no arguments get\n\t\t *  will return all available object properties and their corresponding\n\t\t *  values. Pass in a single attribute to retrieve or an array\n\t\t *  of attributes. The attribute strings can also include a \".\"\n\t\t *  to access deeper properties.\n\t\t *  @memberOf Tone#\n\t\t *  @example\n\t\t * osc.get();\n\t\t * //returns {\"type\" : \"sine\", \"frequency\" : 440, ...etc}\n\t\t *  @example\n\t\t * osc.get(\"type\");\n\t\t * //returns { \"type\" : \"sine\"}\n\t\t * @example\n\t\t * //use dot notation to access deep properties\n\t\t * synth.get([\"envelope.attack\", \"envelope.release\"]);\n\t\t * //returns {\"envelope\" : {\"attack\" : 0.2, \"release\" : 0.4}}\n\t\t *  @param {Array=|string|undefined} params the parameters to get, otherwise will return\n\t\t *  \t\t\t\t\t                  all available.\n\t\t *  @returns {Object}\n\t\t */\n\t    Tone.prototype.get = function (params) {\n\t        if (Tone.isUndef(params)) {\n\t            params = this._collectDefaults(this.constructor);\n\t        } else if (Tone.isString(params)) {\n\t            params = [params];\n\t        }\n\t        var ret = {};\n\t        for (var i = 0; i < params.length; i++) {\n\t            var attr = params[i];\n\t            var parent = this;\n\t            var subRet = ret;\n\t            if (attr.indexOf('.') !== -1) {\n\t                var attrSplit = attr.split('.');\n\t                for (var j = 0; j < attrSplit.length - 1; j++) {\n\t                    var subAttr = attrSplit[j];\n\t                    subRet[subAttr] = subRet[subAttr] || {};\n\t                    subRet = subRet[subAttr];\n\t                    parent = parent[subAttr];\n\t                }\n\t                attr = attrSplit[attrSplit.length - 1];\n\t            }\n\t            var param = parent[attr];\n\t            if (Tone.isObject(params[attr])) {\n\t                subRet[attr] = param.get();\n\t            } else if (Tone.Signal && param instanceof Tone.Signal) {\n\t                subRet[attr] = param.value;\n\t            } else if (Tone.Param && param instanceof Tone.Param) {\n\t                subRet[attr] = param.value;\n\t            } else if (param instanceof AudioParam) {\n\t                subRet[attr] = param.value;\n\t            } else if (param instanceof Tone) {\n\t                subRet[attr] = param.get();\n\t            } else if (!Tone.isFunction(param) && !Tone.isUndef(param)) {\n\t                subRet[attr] = param;\n\t            }\n\t        }\n\t        return ret;\n\t    };\n\t    /**\n\t\t *  collect all of the default attributes in one\n\t\t *  @private\n\t\t *  @param {function} constr the constructor to find the defaults from\n\t\t *  @return {Array} all of the attributes which belong to the class\n\t\t */\n\t    Tone.prototype._collectDefaults = function (constr) {\n\t        var ret = [];\n\t        if (!Tone.isUndef(constr.defaults)) {\n\t            ret = Object.keys(constr.defaults);\n\t        }\n\t        if (!Tone.isUndef(constr._super)) {\n\t            var superDefs = this._collectDefaults(constr._super);\n\t            //filter out repeats\n\t            for (var i = 0; i < superDefs.length; i++) {\n\t                if (ret.indexOf(superDefs[i]) === -1) {\n\t                    ret.push(superDefs[i]);\n\t                }\n\t            }\n\t        }\n\t        return ret;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tDEFAULTS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  @memberOf Tone\n\t\t *  @param  {Array}  values  The arguments array\n\t\t *  @param  {Array}  keys    The names of the arguments\n\t\t *  @param {Function|Object} constr The class constructor\n\t\t *  @return  {Object}  An object composed of the  defaults between the class' defaults\n\t\t *                        and the passed in arguments.\n\t\t */\n\t    Tone.defaults = function (values, keys, constr) {\n\t        var options = {};\n\t        if (values.length === 1 && Tone.isObject(values[0])) {\n\t            options = values[0];\n\t        } else {\n\t            for (var i = 0; i < keys.length; i++) {\n\t                options[keys[i]] = values[i];\n\t            }\n\t        }\n\t        if (!Tone.isUndef(constr.defaults)) {\n\t            return Tone.defaultArg(options, constr.defaults);\n\t        } else if (Tone.isObject(constr)) {\n\t            return Tone.defaultArg(options, constr);\n\t        } else {\n\t            return options;\n\t        }\n\t    };\n\t    /**\n\t\t *  If the `given` parameter is undefined, use the `fallback`.\n\t\t *  If both `given` and `fallback` are object literals, it will\n\t\t *  return a deep copy which includes all of the parameters from both\n\t\t *  objects. If a parameter is undefined in given, it will return\n\t\t *  the fallback property.\n\t\t *  <br><br>\n\t\t *  WARNING: if object is self referential, it will go into an an\n\t\t *  infinite recursive loop.\n\t\t *  @memberOf Tone\n\t\t *  @param  {*} given\n\t\t *  @param  {*} fallback\n\t\t *  @return {*}\n\t\t */\n\t    Tone.defaultArg = function (given, fallback) {\n\t        if (Tone.isObject(given) && Tone.isObject(fallback)) {\n\t            var ret = {};\n\t            //make a deep copy of the given object\n\t            for (var givenProp in given) {\n\t                ret[givenProp] = Tone.defaultArg(fallback[givenProp], given[givenProp]);\n\t            }\n\t            for (var fallbackProp in fallback) {\n\t                ret[fallbackProp] = Tone.defaultArg(given[fallbackProp], fallback[fallbackProp]);\n\t            }\n\t            return ret;\n\t        } else {\n\t            return Tone.isUndef(given) ? fallback : given;\n\t        }\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tCONNECTIONS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  connect together all of the arguments in series\n\t\t *  @param {...AudioParam|Tone|AudioNode} nodes\n\t\t *  @returns {Tone}\n\t\t *  @memberOf Tone\n\t\t *  @static\n\t\t */\n\t    Tone.connectSeries = function () {\n\t        var currentUnit = arguments[0];\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            var toUnit = arguments[i];\n\t            currentUnit.connect(toUnit);\n\t            currentUnit = toUnit;\n\t        }\n\t        return Tone;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    // TYPE CHECKING\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  test if the arg is undefined\n\t\t *  @param {*} arg the argument to test\n\t\t *  @returns {boolean} true if the arg is undefined\n\t\t *  @static\n\t\t *  @memberOf Tone\n\t\t */\n\t    Tone.isUndef = function (val) {\n\t        return typeof val === 'undefined';\n\t    };\n\t    /**\n\t\t *  test if the arg is a function\n\t\t *  @param {*} arg the argument to test\n\t\t *  @returns {boolean} true if the arg is a function\n\t\t *  @static\n\t\t *  @memberOf Tone\n\t\t */\n\t    Tone.isFunction = function (val) {\n\t        return typeof val === 'function';\n\t    };\n\t    /**\n\t\t *  Test if the argument is a number.\n\t\t *  @param {*} arg the argument to test\n\t\t *  @returns {boolean} true if the arg is a number\n\t\t *  @static\n\t\t *  @memberOf Tone\n\t\t */\n\t    Tone.isNumber = function (arg) {\n\t        return typeof arg === 'number';\n\t    };\n\t    /**\n\t\t *  Test if the given argument is an object literal (i.e. `{}`);\n\t\t *  @param {*} arg the argument to test\n\t\t *  @returns {boolean} true if the arg is an object literal.\n\t\t *  @static\n\t\t *  @memberOf Tone\n\t\t */\n\t    Tone.isObject = function (arg) {\n\t        return Object.prototype.toString.call(arg) === '[object Object]' && arg.constructor === Object;\n\t    };\n\t    /**\n\t\t *  Test if the argument is a boolean.\n\t\t *  @param {*} arg the argument to test\n\t\t *  @returns {boolean} true if the arg is a boolean\n\t\t *  @static\n\t\t *  @memberOf Tone\n\t\t */\n\t    Tone.isBoolean = function (arg) {\n\t        return typeof arg === 'boolean';\n\t    };\n\t    /**\n\t\t *  Test if the argument is an Array\n\t\t *  @param {*} arg the argument to test\n\t\t *  @returns {boolean} true if the arg is an array\n\t\t *  @static\n\t\t *  @memberOf Tone\n\t\t */\n\t    Tone.isArray = function (arg) {\n\t        return Array.isArray(arg);\n\t    };\n\t    /**\n\t\t *  Test if the argument is a string.\n\t\t *  @param {*} arg the argument to test\n\t\t *  @returns {boolean} true if the arg is a string\n\t\t *  @static\n\t\t *  @memberOf Tone\n\t\t */\n\t    Tone.isString = function (arg) {\n\t        return typeof arg === 'string';\n\t    };\n\t    /**\n\t\t *  Test if the argument is in the form of a note in scientific pitch notation.\n\t\t *  e.g. \"C4\"\n\t\t *  @param {*} arg the argument to test\n\t\t *  @returns {boolean} true if the arg is a string\n\t\t *  @static\n\t\t *  @memberOf Tone\n\t\t */\n\t    Tone.isNote = function (arg) {\n\t        return Tone.isString(arg) && /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(arg);\n\t    };\n\t    /**\n\t\t *  An empty function.\n\t\t *  @static\n\t\t */\n\t    Tone.noOp = function () {\n\t    };\n\t    /**\n\t\t *  Make the property not writable. Internal use only.\n\t\t *  @private\n\t\t *  @param  {string}  property  the property to make not writable\n\t\t */\n\t    Tone.prototype._readOnly = function (property) {\n\t        if (Array.isArray(property)) {\n\t            for (var i = 0; i < property.length; i++) {\n\t                this._readOnly(property[i]);\n\t            }\n\t        } else {\n\t            Object.defineProperty(this, property, {\n\t                writable: false,\n\t                enumerable: true\n\t            });\n\t        }\n\t    };\n\t    /**\n\t\t *  Make an attribute writeable. Interal use only.\n\t\t *  @private\n\t\t *  @param  {string}  property  the property to make writable\n\t\t */\n\t    Tone.prototype._writable = function (property) {\n\t        if (Array.isArray(property)) {\n\t            for (var i = 0; i < property.length; i++) {\n\t                this._writable(property[i]);\n\t            }\n\t        } else {\n\t            Object.defineProperty(this, property, { writable: true });\n\t        }\n\t    };\n\t    /**\n\t\t * Possible play states.\n\t\t * @enum {string}\n\t\t */\n\t    Tone.State = {\n\t        Started: 'started',\n\t        Stopped: 'stopped',\n\t        Paused: 'paused'\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    // CONVERSIONS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Equal power gain scale. Good for cross-fading.\n\t\t *  @param  {NormalRange} percent (0-1)\n\t\t *  @return {Number}         output gain (0-1)\n\t\t *  @static\n\t\t *  @memberOf Tone\n\t\t */\n\t    Tone.equalPowerScale = function (percent) {\n\t        var piFactor = 0.5 * Math.PI;\n\t        return Math.sin(percent * piFactor);\n\t    };\n\t    /**\n\t\t *  Convert decibels into gain.\n\t\t *  @param  {Decibels} db\n\t\t *  @return {Number}\n\t\t *  @static\n\t\t *  @memberOf Tone\n\t\t */\n\t    Tone.dbToGain = function (db) {\n\t        return Math.pow(2, db / 6);\n\t    };\n\t    /**\n\t\t *  Convert gain to decibels.\n\t\t *  @param  {Number} gain (0-1)\n\t\t *  @return {Decibels}\n\t\t *  @static\n\t\t *  @memberOf Tone\n\t\t */\n\t    Tone.gainToDb = function (gain) {\n\t        return 20 * (Math.log(gain) / Math.LN10);\n\t    };\n\t    /**\n\t\t *  Convert an interval (in semitones) to a frequency ratio.\n\t\t *  @param  {Interval} interval the number of semitones above the base note\n\t\t *  @return {number}          the frequency ratio\n\t\t *  @static\n\t\t *  @memberOf Tone\n\t\t *  @example\n\t\t * tone.intervalToFrequencyRatio(0); // 1\n\t\t * tone.intervalToFrequencyRatio(12); // 2\n\t\t * tone.intervalToFrequencyRatio(-12); // 0.5\n\t\t */\n\t    Tone.intervalToFrequencyRatio = function (interval) {\n\t        return Math.pow(2, interval / 12);\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tTIMING\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Return the current time of the AudioContext clock.\n\t\t *  @return {Number} the currentTime from the AudioContext\n\t\t *  @memberOf Tone#\n\t\t */\n\t    Tone.prototype.now = function () {\n\t        return Tone.context.now();\n\t    };\n\t    /**\n\t\t *  Return the current time of the AudioContext clock.\n\t\t *  @return {Number} the currentTime from the AudioContext\n\t\t *  @static\n\t\t *  @memberOf Tone\n\t\t */\n\t    Tone.now = function () {\n\t        return Tone.context.now();\n\t    };\n\t    /**\n\t\t * Adds warning in the console if the scheduled time has passed.\n\t\t * @type {Time}\n\t\t */\n\t    Tone.isPast = function (time) {\n\t        if (time < Tone.context.currentTime) {\n\t            console.warn('Time \\'' + time + '\\' is in the past. Scheduled time must be \\u2265 AudioContext.currentTime');\n\t        }\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tINHERITANCE\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  have a child inherit all of Tone's (or a parent's) prototype\n\t\t *  to inherit the parent's properties, make sure to call\n\t\t *  Parent.call(this) in the child's constructor\n\t\t *\n\t\t *  based on closure library's inherit function\n\t\t *\n\t\t *  @memberOf Tone\n\t\t *  @static\n\t\t *  @param  {function} \tchild\n\t\t *  @param  {function=} parent (optional) parent to inherit from\n\t\t *                             if no parent is supplied, the child\n\t\t *                             will inherit from Tone\n\t\t */\n\t    Tone.extend = function (child, parent) {\n\t        if (Tone.isUndef(parent)) {\n\t            parent = Tone;\n\t        }\n\t        function TempConstructor() {\n\t        }\n\t        TempConstructor.prototype = parent.prototype;\n\t        child.prototype = new TempConstructor();\n\t        /** @override */\n\t        child.prototype.constructor = child;\n\t        child._super = parent;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tCONTEXT\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  The private audio context shared by all Tone Nodes.\n\t\t *  @private\n\t\t *  @type {Tone.Context}\n\t\t */\n\t    var audioContext = null;\n\t    /**\n\t\t *  A static pointer to the audio context accessible as Tone.context.\n\t\t *  @type {Tone.Context}\n\t\t *  @name context\n\t\t *  @memberOf Tone\n\t\t */\n\t    Object.defineProperty(Tone, 'context', {\n\t        get: function () {\n\t            return audioContext;\n\t        },\n\t        set: function (context) {\n\t            if (Tone.Context && context instanceof Tone.Context) {\n\t                audioContext = context;\n\t            } else {\n\t                audioContext = new Tone.Context(context);\n\t            }\n\t            //initialize the new audio context\n\t            Tone.Context.emit('init', audioContext);\n\t        }\n\t    });\n\t    /**\n\t\t *  The AudioContext\n\t\t *  @type {Tone.Context}\n\t\t *  @name context\n\t\t *  @memberOf Tone#\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.prototype, 'context', {\n\t        get: function () {\n\t            return Tone.context;\n\t        }\n\t    });\n\t    /**\n\t\t *  Tone automatically creates a context on init, but if you are working\n\t\t *  with other libraries which also create an AudioContext, it can be\n\t\t *  useful to set your own. If you are going to set your own context,\n\t\t *  be sure to do it at the start of your code, before creating any objects.\n\t\t *  @static\n\t\t *  @param {AudioContext} ctx The new audio context to set\n\t\t */\n\t    Tone.setContext = function (ctx) {\n\t        Tone.context = ctx;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tATTRIBUTES\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  The number of seconds of 1 processing block (128 samples)\n\t\t *  @type {Number}\n\t\t *  @name blockTime\n\t\t *  @memberOf Tone\n\t\t *  @static\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.prototype, 'blockTime', {\n\t        get: function () {\n\t            return 128 / this.context.sampleRate;\n\t        }\n\t    });\n\t    /**\n\t\t *  The duration in seconds of one sample.\n\t\t *  @type {Number}\n\t\t *  @name sampleTime\n\t\t *  @memberOf Tone\n\t\t *  @static\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.prototype, 'sampleTime', {\n\t        get: function () {\n\t            return 1 / this.context.sampleRate;\n\t        }\n\t    });\n\t    /**\n\t\t *  Whether or not all the technologies that Tone.js relies on are supported by the current browser.\n\t\t *  @type {Boolean}\n\t\t *  @name supported\n\t\t *  @memberOf Tone\n\t\t *  @readOnly\n\t\t *  @static\n\t\t */\n\t    Object.defineProperty(Tone, 'supported', {\n\t        get: function () {\n\t            var hasAudioContext = window.hasOwnProperty('AudioContext') || window.hasOwnProperty('webkitAudioContext');\n\t            var hasPromises = window.hasOwnProperty('Promise');\n\t            var hasWorkers = window.hasOwnProperty('Worker');\n\t            return hasAudioContext && hasPromises && hasWorkers;\n\t        }\n\t    });\n\t    /**\n\t\t *  Boolean value if the audio context has been initialized.\n\t\t *  @type {Boolean}\n\t\t *  @memberOf Tone\n\t\t *  @static\n\t\t *  @name initialized\n\t\t */\n\t    Object.defineProperty(Tone, 'initialized', {\n\t        get: function () {\n\t            return audioContext !== null;\n\t        }\n\t    });\n\t    /**\n\t\t *  Get the context when it becomes available\n\t\t *  @param  {Function}  resolve  Callback when the context is initialized\n\t\t *  @return  {Tone}\n\t\t */\n\t    Tone.getContext = function (resolve) {\n\t        if (Tone.initialized) {\n\t            resolve(Tone.context);\n\t        } else {\n\t            var resCallback = function () {\n\t                resolve(Tone.context);\n\t                Tone.Context.off('init', resCallback);\n\t            };\n\t            Tone.Context.on('init', resCallback);\n\t        }\n\t        return Tone;\n\t    };\n\t    /**\n\t\t * The version number\n\t\t * @type {String}\n\t\t * @static\n\t\t */\n\t    Tone.version = 'r12-dev';\n\t    // allow optional silencing of this log\n\t    if (!window.TONE_SILENCE_VERSION_LOGGING) {\n\t        console.log('%c * Tone.js ' + Tone.version + ' * ', 'background: #000; color: #fff');\n\t    }\n\t    return Tone;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Emitter gives classes which extend it\n\t\t *         the ability to listen for and emit events. \n\t\t *         Inspiration and reference from Jerome Etienne's [MicroEvent](https://github.com/jeromeetienne/microevent.js).\n\t\t *         MIT (c) 2011 Jerome Etienne.\n\t\t *         \n\t\t *  @extends {Tone}\n\t\t */\n\t    Tone.Emitter = function () {\n\t        Tone.call(this);\n\t        /**\n\t\t\t *  Contains all of the events.\n\t\t\t *  @private\n\t\t\t *  @type  {Object}\n\t\t\t */\n\t        this._events = {};\n\t    };\n\t    Tone.extend(Tone.Emitter);\n\t    /**\n\t\t *  Bind a callback to a specific event.\n\t\t *  @param  {String}    event     The name of the event to listen for.\n\t\t *  @param  {Function}  callback  The callback to invoke when the\n\t\t *                                event is emitted\n\t\t *  @return  {Tone.Emitter}    this\n\t\t */\n\t    Tone.Emitter.prototype.on = function (event, callback) {\n\t        //split the event\n\t        var events = event.split(/\\W+/);\n\t        for (var i = 0; i < events.length; i++) {\n\t            var eventName = events[i];\n\t            if (!this._events.hasOwnProperty(eventName)) {\n\t                this._events[eventName] = [];\n\t            }\n\t            this._events[eventName].push(callback);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Remove the event listener.\n\t\t *  @param  {String}    event     The event to stop listening to.\n\t\t *  @param  {Function=}  callback  The callback which was bound to \n\t\t *                                the event with Tone.Emitter.on.\n\t\t *                                If no callback is given, all callbacks\n\t\t *                                events are removed.\n\t\t *  @return  {Tone.Emitter}    this\n\t\t */\n\t    Tone.Emitter.prototype.off = function (event, callback) {\n\t        var events = event.split(/\\W+/);\n\t        for (var ev = 0; ev < events.length; ev++) {\n\t            event = events[ev];\n\t            if (this._events.hasOwnProperty(event)) {\n\t                if (Tone.isUndef(callback)) {\n\t                    this._events[event] = [];\n\t                } else {\n\t                    var eventList = this._events[event];\n\t                    for (var i = 0; i < eventList.length; i++) {\n\t                        if (eventList[i] === callback) {\n\t                            eventList.splice(i, 1);\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Invoke all of the callbacks bound to the event\n\t\t *  with any arguments passed in. \n\t\t *  @param  {String}  event  The name of the event.\n\t\t *  @param {*} args... The arguments to pass to the functions listening.\n\t\t *  @return  {Tone.Emitter}  this\n\t\t */\n\t    Tone.Emitter.prototype.emit = function (event) {\n\t        if (this._events) {\n\t            var args = Array.apply(null, arguments).slice(1);\n\t            if (this._events.hasOwnProperty(event)) {\n\t                var eventList = this._events[event];\n\t                for (var i = 0, len = eventList.length; i < len; i++) {\n\t                    eventList[i].apply(this, args);\n\t                }\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Add Emitter functions (on/off/emit) to the object\n\t\t *  @param  {Object|Function}  object  The object or class to extend.\n\t\t *  @returns {Tone.Emitter}\n\t\t */\n\t    Tone.Emitter.mixin = function (object) {\n\t        var functions = [\n\t            'on',\n\t            'off',\n\t            'emit'\n\t        ];\n\t        object._events = {};\n\t        for (var i = 0; i < functions.length; i++) {\n\t            var func = functions[i];\n\t            var emitterFunc = Tone.Emitter.prototype[func];\n\t            object[func] = emitterFunc;\n\t        }\n\t        return Tone.Emitter;\n\t    };\n\t    /**\n\t\t *  Clean up\n\t\t *  @return  {Tone.Emitter}  this\n\t\t */\n\t    Tone.Emitter.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._events = null;\n\t        return this;\n\t    };\n\t    return Tone.Emitter;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class A Timeline class for scheduling and maintaining state\n\t\t *         along a timeline. All events must have a \"time\" property.\n\t\t *         Internally, events are stored in time order for fast\n\t\t *         retrieval.\n\t\t *  @extends {Tone}\n\t\t *  @param {Positive} [memory=Infinity] The number of previous events that are retained.\n\t\t */\n\t    Tone.Timeline = function () {\n\t        var options = Tone.defaults(arguments, ['memory'], Tone.Timeline);\n\t        Tone.call(this);\n\t        /**\n\t\t\t *  The array of scheduled timeline events\n\t\t\t *  @type  {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._timeline = [];\n\t        /**\n\t\t\t *  An array of items to remove from the list.\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._toRemove = [];\n\t        /**\n\t\t\t *  An array of items to add from the list (once it's done iterating)\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._toAdd = [];\n\t        /**\n\t\t\t *  Flag if the timeline is mid iteration\n\t\t\t *  @private\n\t\t\t *  @type {Boolean}\n\t\t\t */\n\t        this._iterating = false;\n\t        /**\n\t\t\t *  The memory of the timeline, i.e.\n\t\t\t *  how many events in the past it will retain\n\t\t\t *  @type {Positive}\n\t\t\t */\n\t        this.memory = options.memory;\n\t    };\n\t    Tone.extend(Tone.Timeline);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t *  @const\n\t\t */\n\t    Tone.Timeline.defaults = { 'memory': Infinity };\n\t    /**\n\t\t *  The number of items in the timeline.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Timeline#\n\t\t *  @name length\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Timeline.prototype, 'length', {\n\t        get: function () {\n\t            return this._timeline.length;\n\t        }\n\t    });\n\t    /**\n\t\t *  Insert an event object onto the timeline. Events must have a \"time\" attribute.\n\t\t *  @param  {Object}  event  The event object to insert into the\n\t\t *                           timeline.\n\t\t *  @returns {Tone.Timeline} this\n\t\t */\n\t    Tone.Timeline.prototype.add = function (event) {\n\t        //the event needs to have a time attribute\n\t        if (Tone.isUndef(event.time)) {\n\t            throw new Error('Tone.Timeline: events must have a time attribute');\n\t        }\n\t        if (this._iterating) {\n\t            this._toAdd.push(event);\n\t        } else {\n\t            var index = this._search(event.time);\n\t            this._timeline.splice(index + 1, 0, event);\n\t            //if the length is more than the memory, remove the previous ones\n\t            if (this.length > this.memory) {\n\t                var diff = this.length - this.memory;\n\t                this._timeline.splice(0, diff);\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Remove an event from the timeline.\n\t\t *  @param  {Object}  event  The event object to remove from the list.\n\t\t *  @returns {Tone.Timeline} this\n\t\t */\n\t    Tone.Timeline.prototype.remove = function (event) {\n\t        if (this._iterating) {\n\t            this._toRemove.push(event);\n\t        } else {\n\t            var index = this._timeline.indexOf(event);\n\t            if (index !== -1) {\n\t                this._timeline.splice(index, 1);\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Get the nearest event whose time is less than or equal to the given time.\n\t\t *  @param  {Number}  time  The time to query.\n\t\t *  @param  {String}  comparator Which value in the object to compare\n\t\t *  @returns {Object} The event object set after that time.\n\t\t */\n\t    Tone.Timeline.prototype.get = function (time, comparator) {\n\t        comparator = Tone.defaultArg(comparator, 'time');\n\t        var index = this._search(time, comparator);\n\t        if (index !== -1) {\n\t            return this._timeline[index];\n\t        } else {\n\t            return null;\n\t        }\n\t    };\n\t    /**\n\t\t *  Return the first event in the timeline without removing it\n\t\t *  @returns {Object} The first event object\n\t\t */\n\t    Tone.Timeline.prototype.peek = function () {\n\t        return this._timeline[0];\n\t    };\n\t    /**\n\t\t *  Return the first event in the timeline and remove it\n\t\t *  @returns {Object} The first event object\n\t\t */\n\t    Tone.Timeline.prototype.shift = function () {\n\t        return this._timeline.shift();\n\t    };\n\t    /**\n\t\t *  Get the event which is scheduled after the given time.\n\t\t *  @param  {Number}  time  The time to query.\n\t\t *  @param  {String}  comparator Which value in the object to compare\n\t\t *  @returns {Object} The event object after the given time\n\t\t */\n\t    Tone.Timeline.prototype.getAfter = function (time, comparator) {\n\t        comparator = Tone.defaultArg(comparator, 'time');\n\t        var index = this._search(time, comparator);\n\t        if (index + 1 < this._timeline.length) {\n\t            return this._timeline[index + 1];\n\t        } else {\n\t            return null;\n\t        }\n\t    };\n\t    /**\n\t\t *  Get the event before the event at the given time.\n\t\t *  @param  {Number}  time  The time to query.\n\t\t *  @param  {String}  comparator Which value in the object to compare\n\t\t *  @returns {Object} The event object before the given time\n\t\t */\n\t    Tone.Timeline.prototype.getBefore = function (time, comparator) {\n\t        comparator = Tone.defaultArg(comparator, 'time');\n\t        var len = this._timeline.length;\n\t        //if it's after the last item, return the last item\n\t        if (len > 0 && this._timeline[len - 1][comparator] < time) {\n\t            return this._timeline[len - 1];\n\t        }\n\t        var index = this._search(time, comparator);\n\t        if (index - 1 >= 0) {\n\t            return this._timeline[index - 1];\n\t        } else {\n\t            return null;\n\t        }\n\t    };\n\t    /**\n\t\t *  Cancel events after the given time\n\t\t *  @param  {Number}  time  The time to query.\n\t\t *  @returns {Tone.Timeline} this\n\t\t */\n\t    Tone.Timeline.prototype.cancel = function (after) {\n\t        if (this._timeline.length > 1) {\n\t            var index = this._search(after);\n\t            if (index >= 0) {\n\t                if (this._timeline[index].time === after) {\n\t                    //get the first item with that time\n\t                    for (var i = index; i >= 0; i--) {\n\t                        if (this._timeline[i].time === after) {\n\t                            index = i;\n\t                        } else {\n\t                            break;\n\t                        }\n\t                    }\n\t                    this._timeline = this._timeline.slice(0, index);\n\t                } else {\n\t                    this._timeline = this._timeline.slice(0, index + 1);\n\t                }\n\t            } else {\n\t                this._timeline = [];\n\t            }\n\t        } else if (this._timeline.length === 1) {\n\t            //the first item's time\n\t            if (this._timeline[0].time >= after) {\n\t                this._timeline = [];\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Cancel events before or equal to the given time.\n\t\t *  @param  {Number}  time  The time to cancel before.\n\t\t *  @returns {Tone.Timeline} this\n\t\t */\n\t    Tone.Timeline.prototype.cancelBefore = function (time) {\n\t        var index = this._search(time);\n\t        if (index >= 0) {\n\t            this._timeline = this._timeline.slice(index + 1);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t * Returns the previous event if there is one. null otherwise\n\t\t * @param  {Object} event The event to find the previous one of\n\t\t * @return {Object}       The event right before the given event\n\t\t */\n\t    Tone.Timeline.prototype.previousEvent = function (event) {\n\t        var index = this._timeline.indexOf(event);\n\t        if (index > 0) {\n\t            return this._timeline[index - 1];\n\t        } else {\n\t            return null;\n\t        }\n\t    };\n\t    /**\n\t\t *  Does a binary search on the timeline array and returns the\n\t\t *  nearest event index whose time is after or equal to the given time.\n\t\t *  If a time is searched before the first index in the timeline, -1 is returned.\n\t\t *  If the time is after the end, the index of the last item is returned.\n\t\t *  @param  {Number}  time\n\t\t *  @param  {String}  comparator Which value in the object to compare\n\t\t *  @return  {Number} the index in the timeline array\n\t\t *  @private\n\t\t */\n\t    Tone.Timeline.prototype._search = function (time, comparator) {\n\t        if (this._timeline.length === 0) {\n\t            return -1;\n\t        }\n\t        comparator = Tone.defaultArg(comparator, 'time');\n\t        var beginning = 0;\n\t        var len = this._timeline.length;\n\t        var end = len;\n\t        if (len > 0 && this._timeline[len - 1][comparator] <= time) {\n\t            return len - 1;\n\t        }\n\t        while (beginning < end) {\n\t            // calculate the midpoint for roughly equal partition\n\t            var midPoint = Math.floor(beginning + (end - beginning) / 2);\n\t            var event = this._timeline[midPoint];\n\t            var nextEvent = this._timeline[midPoint + 1];\n\t            if (event[comparator] === time) {\n\t                //choose the last one that has the same time\n\t                for (var i = midPoint; i < this._timeline.length; i++) {\n\t                    var testEvent = this._timeline[i];\n\t                    if (testEvent[comparator] === time) {\n\t                        midPoint = i;\n\t                    }\n\t                }\n\t                return midPoint;\n\t            } else if (event[comparator] < time && nextEvent[comparator] > time) {\n\t                return midPoint;\n\t            } else if (event[comparator] > time) {\n\t                //search lower\n\t                end = midPoint;\n\t            } else {\n\t                //search upper\n\t                beginning = midPoint + 1;\n\t            }\n\t        }\n\t        return -1;\n\t    };\n\t    /**\n\t\t *  Internal iterator. Applies extra safety checks for\n\t\t *  removing items from the array.\n\t\t *  @param  {Function}  callback\n\t\t *  @param  {Number=}    lowerBound\n\t\t *  @param  {Number=}    upperBound\n\t\t *  @private\n\t\t */\n\t    Tone.Timeline.prototype._iterate = function (callback, lowerBound, upperBound) {\n\t        this._iterating = true;\n\t        lowerBound = Tone.defaultArg(lowerBound, 0);\n\t        upperBound = Tone.defaultArg(upperBound, this._timeline.length - 1);\n\t        for (var i = lowerBound; i <= upperBound; i++) {\n\t            callback.call(this, this._timeline[i]);\n\t        }\n\t        this._iterating = false;\n\t        this._toRemove.forEach(function (event) {\n\t            this.remove(event);\n\t        }.bind(this));\n\t        this._toRemove = [];\n\t        this._toAdd.forEach(function (event) {\n\t            this.add(event);\n\t        }.bind(this));\n\t        this._toAdd = [];\n\t    };\n\t    /**\n\t\t *  Iterate over everything in the array\n\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t *  @returns {Tone.Timeline} this\n\t\t */\n\t    Tone.Timeline.prototype.forEach = function (callback) {\n\t        this._iterate(callback);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Iterate over everything in the array at or before the given time.\n\t\t *  @param  {Number}  time The time to check if items are before\n\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t *  @returns {Tone.Timeline} this\n\t\t */\n\t    Tone.Timeline.prototype.forEachBefore = function (time, callback) {\n\t        //iterate over the items in reverse so that removing an item doesn't break things\n\t        var upperBound = this._search(time);\n\t        if (upperBound !== -1) {\n\t            this._iterate(callback, 0, upperBound);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Iterate over everything in the array after the given time.\n\t\t *  @param  {Number}  time The time to check if items are before\n\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t *  @returns {Tone.Timeline} this\n\t\t */\n\t    Tone.Timeline.prototype.forEachAfter = function (time, callback) {\n\t        //iterate over the items in reverse so that removing an item doesn't break things\n\t        var lowerBound = this._search(time);\n\t        this._iterate(callback, lowerBound + 1);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Iterate over everything in the array at or after the given time. Similar to\n\t\t *  forEachAfter, but includes the item(s) at the given time.\n\t\t *  @param  {Number}  time The time to check if items are before\n\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t *  @returns {Tone.Timeline} this\n\t\t */\n\t    Tone.Timeline.prototype.forEachFrom = function (time, callback) {\n\t        //iterate over the items in reverse so that removing an item doesn't break things\n\t        var lowerBound = this._search(time);\n\t        //work backwards until the event time is less than time\n\t        while (lowerBound >= 0 && this._timeline[lowerBound].time >= time) {\n\t            lowerBound--;\n\t        }\n\t        this._iterate(callback, lowerBound + 1);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Iterate over everything in the array at the given time\n\t\t *  @param  {Number}  time The time to check if items are before\n\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t *  @returns {Tone.Timeline} this\n\t\t */\n\t    Tone.Timeline.prototype.forEachAtTime = function (time, callback) {\n\t        //iterate over the items in reverse so that removing an item doesn't break things\n\t        var upperBound = this._search(time);\n\t        if (upperBound !== -1) {\n\t            this._iterate(function (event) {\n\t                if (event.time === time) {\n\t                    callback.call(this, event);\n\t                }\n\t            }, 0, upperBound);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return  {Tone.Timeline}  this\n\t\t */\n\t    Tone.Timeline.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._timeline = null;\n\t        this._toRemove = null;\n\t        this._toAdd = null;\n\t        return this;\n\t    };\n\t    return Tone.Timeline;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  shim\n\t\t *  @private\n\t\t */\n\t    if (!window.hasOwnProperty('AudioContext') && window.hasOwnProperty('webkitAudioContext')) {\n\t        window.AudioContext = window.webkitAudioContext;\n\t    }\n\t    /**\n\t\t *  @class Wrapper around the native AudioContext.\n\t\t *  @extends {Tone.Emitter}\n\t\t *  @param {AudioContext=} context optionally pass in a context\n\t\t */\n\t    Tone.Context = function () {\n\t        Tone.Emitter.call(this);\n\t        var options = Tone.defaults(arguments, ['context'], Tone.Context);\n\t        if (!options.context) {\n\t            options.context = new window.AudioContext();\n\t        }\n\t        this._context = options.context;\n\t        // extend all of the methods\n\t        for (var prop in this._context) {\n\t            this._defineProperty(this._context, prop);\n\t        }\n\t        /**\n\t\t\t *  The default latency hint\n\t\t\t *  @type  {String}\n\t\t\t *  @private\n\t\t\t */\n\t        this._latencyHint = options.latencyHint;\n\t        /**\n\t\t\t *  An object containing all of the constants AudioBufferSourceNodes\n\t\t\t *  @type  {Object}\n\t\t\t *  @private\n\t\t\t */\n\t        this._constants = {};\n\t        ///////////////////////////////////////////////////////////////////////\n\t        // WORKER\n\t        ///////////////////////////////////////////////////////////////////////\n\t        /**\n\t\t\t *  The amount of time events are scheduled\n\t\t\t *  into the future\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this.lookAhead = options.lookAhead;\n\t        /**\n\t\t\t *  A reference to the actual computed update interval\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._computedUpdateInterval = 0;\n\t        /**\n\t\t\t *  A reliable callback method\n\t\t\t *  @private\n\t\t\t *  @type  {Ticker}\n\t\t\t */\n\t        this._ticker = new Ticker(this.emit.bind(this, 'tick'), options.clockSource, options.updateInterval);\n\t        ///////////////////////////////////////////////////////////////////////\n\t        // TIMEOUTS\n\t        ///////////////////////////////////////////////////////////////////////\n\t        /**\n\t\t\t *  All of the setTimeout events.\n\t\t\t *  @type  {Tone.Timeline}\n\t\t\t *  @private\n\t\t\t */\n\t        this._timeouts = new Tone.Timeline();\n\t        /**\n\t\t\t *  The timeout id counter\n\t\t\t *  @private\n\t\t\t *  @type {Number}\n\t\t\t */\n\t        this._timeoutIds = 0;\n\t        this.on('tick', this._timeoutLoop.bind(this));\n\t    };\n\t    Tone.extend(Tone.Context, Tone.Emitter);\n\t    Tone.Emitter.mixin(Tone.Context);\n\t    /**\n\t\t * defaults\n\t\t * @static\n\t\t * @type {Object}\n\t\t */\n\t    Tone.Context.defaults = {\n\t        'clockSource': 'worker',\n\t        'latencyHint': 'interactive',\n\t        'lookAhead': 0.1,\n\t        'updateInterval': 0.03\n\t    };\n\t    /**\n\t\t *  Define a property on this Tone.Context. \n\t\t *  This is used to extend the native AudioContext\n\t\t *  @param  {AudioContext}  context\n\t\t *  @param  {String}  prop \n\t\t *  @private\n\t\t */\n\t    Tone.Context.prototype._defineProperty = function (context, prop) {\n\t        if (Tone.isUndef(this[prop])) {\n\t            Object.defineProperty(this, prop, {\n\t                get: function () {\n\t                    if (typeof context[prop] === 'function') {\n\t                        return context[prop].bind(context);\n\t                    } else {\n\t                        return context[prop];\n\t                    }\n\t                },\n\t                set: function (val) {\n\t                    context[prop] = val;\n\t                }\n\t            });\n\t        }\n\t    };\n\t    /**\n\t\t *  The current audio context time\n\t\t *  @return  {Number}\n\t\t */\n\t    Tone.Context.prototype.now = function () {\n\t        return this._context.currentTime + this.lookAhead;\n\t    };\n\t    /**\n\t\t *  Generate a looped buffer at some constant value.\n\t\t *  @param  {Number}  val\n\t\t *  @return  {BufferSourceNode}\n\t\t */\n\t    Tone.Context.prototype.getConstant = function (val) {\n\t        if (this._constants[val]) {\n\t            return this._constants[val];\n\t        } else {\n\t            var buffer = this._context.createBuffer(1, 128, this._context.sampleRate);\n\t            var arr = buffer.getChannelData(0);\n\t            for (var i = 0; i < arr.length; i++) {\n\t                arr[i] = val;\n\t            }\n\t            var constant = this._context.createBufferSource();\n\t            constant.channelCount = 1;\n\t            constant.channelCountMode = 'explicit';\n\t            constant.buffer = buffer;\n\t            constant.loop = true;\n\t            constant.start(0);\n\t            this._constants[val] = constant;\n\t            return constant;\n\t        }\n\t    };\n\t    /**\n\t\t *  The private loop which keeps track of the context scheduled timeouts\n\t\t *  Is invoked from the clock source\n\t\t *  @private\n\t\t */\n\t    Tone.Context.prototype._timeoutLoop = function () {\n\t        var now = this.now();\n\t        while (this._timeouts && this._timeouts.length && this._timeouts.peek().time <= now) {\n\t            this._timeouts.shift().callback();\n\t        }\n\t    };\n\t    /**\n\t\t *  A setTimeout which is gaurenteed by the clock source. \n\t\t *  Also runs in the offline context.\n\t\t *  @param  {Function}  fn       The callback to invoke\n\t\t *  @param  {Seconds}    timeout  The timeout in seconds\n\t\t *  @returns {Number} ID to use when invoking Tone.Context.clearTimeout\n\t\t */\n\t    Tone.Context.prototype.setTimeout = function (fn, timeout) {\n\t        this._timeoutIds++;\n\t        var now = this.now();\n\t        this._timeouts.add({\n\t            callback: fn,\n\t            time: now + timeout,\n\t            id: this._timeoutIds\n\t        });\n\t        return this._timeoutIds;\n\t    };\n\t    /**\n\t\t *  Clears a previously scheduled timeout with Tone.context.setTimeout\n\t\t *  @param  {Number}  id  The ID returned from setTimeout\n\t\t *  @return  {Tone.Context}  this\n\t\t */\n\t    Tone.Context.prototype.clearTimeout = function (id) {\n\t        this._timeouts.forEach(function (event) {\n\t            if (event.id === id) {\n\t                this.remove(event);\n\t            }\n\t        });\n\t        return this;\n\t    };\n\t    /**\n\t\t *  How often the Web Worker callback is invoked.\n\t\t *  This number corresponds to how responsive the scheduling\n\t\t *  can be. Context.updateInterval + Context.lookAhead gives you the\n\t\t *  total latency between scheduling an event and hearing it.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Context#\n\t\t *  @name updateInterval\n\t\t */\n\t    Object.defineProperty(Tone.Context.prototype, 'updateInterval', {\n\t        get: function () {\n\t            return this._ticker.updateInterval;\n\t        },\n\t        set: function (interval) {\n\t            this._ticker.updateInterval = interval;\n\t        }\n\t    });\n\t    /**\n\t\t *  What the source of the clock is, either \"worker\" (Web Worker [default]), \n\t\t *  \"timeout\" (setTimeout), or \"offline\" (none). \n\t\t *  @type {String}\n\t\t *  @memberOf Tone.Context#\n\t\t *  @name clockSource\n\t\t */\n\t    Object.defineProperty(Tone.Context.prototype, 'clockSource', {\n\t        get: function () {\n\t            return this._ticker.type;\n\t        },\n\t        set: function (type) {\n\t            this._ticker.type = type;\n\t        }\n\t    });\n\t    /**\n\t\t *  The type of playback, which affects tradeoffs between audio \n\t\t *  output latency and responsiveness. \n\t\t *  \n\t\t *  In addition to setting the value in seconds, the latencyHint also\n\t\t *  accepts the strings \"interactive\" (prioritizes low latency), \n\t\t *  \"playback\" (prioritizes sustained playback), \"balanced\" (balances\n\t\t *  latency and performance), and \"fastest\" (lowest latency, might glitch more often). \n\t\t *  @type {String|Seconds}\n\t\t *  @memberOf Tone.Context#\n\t\t *  @name latencyHint\n\t\t *  @example\n\t\t * //set the lookAhead to 0.3 seconds\n\t\t * Tone.context.latencyHint = 0.3;\n\t\t */\n\t    Object.defineProperty(Tone.Context.prototype, 'latencyHint', {\n\t        get: function () {\n\t            return this._latencyHint;\n\t        },\n\t        set: function (hint) {\n\t            var lookAhead = hint;\n\t            this._latencyHint = hint;\n\t            if (Tone.isString(hint)) {\n\t                switch (hint) {\n\t                case 'interactive':\n\t                    lookAhead = 0.1;\n\t                    this._context.latencyHint = hint;\n\t                    break;\n\t                case 'playback':\n\t                    lookAhead = 0.8;\n\t                    this._context.latencyHint = hint;\n\t                    break;\n\t                case 'balanced':\n\t                    lookAhead = 0.25;\n\t                    this._context.latencyHint = hint;\n\t                    break;\n\t                case 'fastest':\n\t                    this._context.latencyHint = 'interactive';\n\t                    lookAhead = 0.01;\n\t                    break;\n\t                }\n\t            }\n\t            this.lookAhead = lookAhead;\n\t            this.updateInterval = lookAhead / 3;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up\n\t\t *  @returns {Tone.Context} this\n\t\t */\n\t    Tone.Context.prototype.dispose = function () {\n\t        Tone.Context.emit('close', this);\n\t        Tone.Emitter.prototype.dispose.call(this);\n\t        this._ticker.dispose();\n\t        this._ticker = null;\n\t        this._timeouts.dispose();\n\t        this._timeouts = null;\n\t        for (var con in this._constants) {\n\t            this._constants[con].disconnect();\n\t        }\n\t        this._constants = null;\n\t        this.close();\n\t        return this;\n\t    };\n\t    /**\n\t\t * @class A class which provides a reliable callback using either\n\t\t *        a Web Worker, or if that isn't supported, falls back to setTimeout.\n\t\t * @private\n\t\t */\n\t    var Ticker = function (callback, type, updateInterval) {\n\t        /**\n\t\t\t * Either \"worker\" or \"timeout\"\n\t\t\t * @type {String}\n\t\t\t * @private\n\t\t\t */\n\t        this._type = type;\n\t        /**\n\t\t\t * The update interval of the worker\n\t\t\t * @private\n\t\t\t * @type {Number}\n\t\t\t */\n\t        this._updateInterval = updateInterval;\n\t        /**\n\t\t\t * The callback to invoke at regular intervals\n\t\t\t * @type {Function}\n\t\t\t * @private\n\t\t\t */\n\t        this._callback = Tone.defaultArg(callback, Tone.noOp);\n\t        //create the clock source for the first time\n\t        this._createClock();\n\t    };\n\t    /**\n\t\t * The possible ticker types\n\t\t * @private\n\t\t * @type {Object}\n\t\t */\n\t    Ticker.Type = {\n\t        Worker: 'worker',\n\t        Timeout: 'timeout',\n\t        Offline: 'offline'\n\t    };\n\t    /**\n\t\t *  Generate a web worker\n\t\t *  @return  {WebWorker}\n\t\t *  @private\n\t\t */\n\t    Ticker.prototype._createWorker = function () {\n\t        //URL Shim\n\t        window.URL = window.URL || window.webkitURL;\n\t        var blob = new Blob([//the initial timeout time\n\t            'var timeoutTime = ' + (this._updateInterval * 1000).toFixed(1) + ';' + //onmessage callback\n\t            'self.onmessage = function(msg){' + '\\ttimeoutTime = parseInt(msg.data);' + '};' + //the tick function which posts a message\n\t            //and schedules a new tick\n\t            'function tick(){' + '\\tsetTimeout(tick, timeoutTime);' + '\\tself.postMessage(\\'tick\\');' + '}' + //call tick initially\n\t            'tick();']);\n\t        var blobUrl = URL.createObjectURL(blob);\n\t        var worker = new Worker(blobUrl);\n\t        worker.onmessage = this._callback.bind(this);\n\t        this._worker = worker;\n\t    };\n\t    /**\n\t\t * Create a timeout loop\n\t\t * @private\n\t\t */\n\t    Ticker.prototype._createTimeout = function () {\n\t        this._timeout = setTimeout(function () {\n\t            this._createTimeout();\n\t            this._callback();\n\t        }.bind(this), this._updateInterval * 1000);\n\t    };\n\t    /**\n\t\t * Create the clock source.\n\t\t * @private\n\t\t */\n\t    Ticker.prototype._createClock = function () {\n\t        if (this._type === Ticker.Type.Worker) {\n\t            try {\n\t                this._createWorker();\n\t            } catch (e) {\n\t                // workers not supported, fallback to timeout\n\t                this._type = Ticker.Type.Timeout;\n\t                this._createClock();\n\t            }\n\t        } else if (this._type === Ticker.Type.Timeout) {\n\t            this._createTimeout();\n\t        }\n\t    };\n\t    /**\n\t\t * @memberOf Ticker#\n\t\t * @type {Number}\n\t\t * @name updateInterval\n\t\t * @private\n\t\t */\n\t    Object.defineProperty(Ticker.prototype, 'updateInterval', {\n\t        get: function () {\n\t            return this._updateInterval;\n\t        },\n\t        set: function (interval) {\n\t            this._updateInterval = Math.max(interval, 128 / 44100);\n\t            if (this._type === Ticker.Type.Worker) {\n\t                this._worker.postMessage(Math.max(interval * 1000, 1));\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The type of the ticker, either a worker or a timeout\n\t\t * @memberOf Ticker#\n\t\t * @type {Number}\n\t\t * @name type\n\t\t * @private\n\t\t */\n\t    Object.defineProperty(Ticker.prototype, 'type', {\n\t        get: function () {\n\t            return this._type;\n\t        },\n\t        set: function (type) {\n\t            this._disposeClock();\n\t            this._type = type;\n\t            this._createClock();\n\t        }\n\t    });\n\t    /**\n\t\t * Clean up the current clock source\n\t\t * @private\n\t\t */\n\t    Ticker.prototype._disposeClock = function () {\n\t        if (this._timeout) {\n\t            clearTimeout(this._timeout);\n\t            this._timeout = null;\n\t        }\n\t        if (this._worker) {\n\t            this._worker.terminate();\n\t            this._worker.onmessage = null;\n\t            this._worker = null;\n\t        }\n\t    };\n\t    /**\n\t\t * Clean up\n\t\t * @private\n\t\t */\n\t    Ticker.prototype.dispose = function () {\n\t        this._disposeClock();\n\t        this._callback = null;\n\t    };\n\t    /**\n\t\t *  Shim all connect/disconnect and some deprecated methods which are still in\n\t\t *  some older implementations.\n\t\t *  @private\n\t\t */\n\t    Tone.getContext(function () {\n\t        var nativeConnect = AudioNode.prototype.connect;\n\t        var nativeDisconnect = AudioNode.prototype.disconnect;\n\t        //replace the old connect method\n\t        function toneConnect(B, outNum, inNum) {\n\t            if (B.input) {\n\t                inNum = Tone.defaultArg(inNum, 0);\n\t                if (Tone.isArray(B.input)) {\n\t                    this.connect(B.input[inNum]);\n\t                } else {\n\t                    this.connect(B.input, outNum, inNum);\n\t                }\n\t            } else {\n\t                try {\n\t                    if (B instanceof AudioNode) {\n\t                        nativeConnect.call(this, B, outNum, inNum);\n\t                    } else {\n\t                        nativeConnect.call(this, B, outNum);\n\t                    }\n\t                } catch (e) {\n\t                    throw new Error('error connecting to node: ' + B + '\\n' + e);\n\t                }\n\t            }\n\t        }\n\t        //replace the old disconnect method\n\t        function toneDisconnect(B, outNum, inNum) {\n\t            if (B && B.input && Tone.isArray(B.input)) {\n\t                inNum = Tone.defaultArg(inNum, 0);\n\t                this.disconnect(B.input[inNum], outNum, 0);\n\t            } else if (B && B.input) {\n\t                this.disconnect(B.input, outNum, inNum);\n\t            } else {\n\t                try {\n\t                    nativeDisconnect.apply(this, arguments);\n\t                } catch (e) {\n\t                    throw new Error('error disconnecting node: ' + B + '\\n' + e);\n\t                }\n\t            }\n\t        }\n\t        if (AudioNode.prototype.connect !== toneConnect) {\n\t            AudioNode.prototype.connect = toneConnect;\n\t            AudioNode.prototype.disconnect = toneDisconnect;\n\t        }\n\t    });\n\t    // set the audio context initially\n\t    if (Tone.supported) {\n\t        Tone.context = new Tone.Context();\n\t    } else {\n\t        console.warn('This browser does not support Tone.js');\n\t    }\n\t    return Tone.Context;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class Tone.AudioNode is the base class for classes which process audio.\n\t\t *         AudioNodes have inputs and outputs.\n\t\t *  @param\t{AudioContext=} context\tThe audio context to use with the class\n\t\t *  @extends {Tone}\n\t\t */\n\t    Tone.AudioNode = function () {\n\t        Tone.call(this);\n\t        //use the default context if one is not passed in\n\t        var options = Tone.defaults(arguments, ['context'], { 'context': Tone.context });\n\t        /**\n\t\t\t * The AudioContext of this instance\n\t\t\t * @private\n\t\t\t * @type {AudioContext}\n\t\t\t */\n\t        this._context = options.context;\n\t    };\n\t    Tone.extend(Tone.AudioNode);\n\t    /**\n\t\t * Get the audio context belonging to this instance.\n\t\t * @type {Tone.Context}\n\t\t * @memberOf Tone.AudioNode#\n\t\t * @name context\n\t\t * @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.AudioNode.prototype, 'context', {\n\t        get: function () {\n\t            return this._context;\n\t        }\n\t    });\n\t    /**\n\t\t *  Create input and outputs for this object.\n\t\t *  @param  {Number}  [input=0]   The number of inputs\n\t\t *  @param  {Number}  [outputs=0]  The number of outputs\n\t\t *  @return  {Tone.AudioNode}  this\n\t\t *  @private\n\t\t */\n\t    Tone.AudioNode.prototype.createInsOuts = function (inputs, outputs) {\n\t        if (inputs === 1) {\n\t            this.input = this.context.createGain();\n\t        } else if (inputs > 1) {\n\t            this.input = new Array(inputs);\n\t        }\n\t        if (outputs === 1) {\n\t            this.output = this.context.createGain();\n\t        } else if (outputs > 1) {\n\t            this.output = new Array(outputs);\n\t        }\n\t    };\n\t    /**\n\t\t *  The number of inputs feeding into the AudioNode.\n\t\t *  For source nodes, this will be 0.\n\t\t *  @type {Number}\n\t\t *  @name numberOfInputs\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.AudioNode.prototype, 'numberOfInputs', {\n\t        get: function () {\n\t            if (this.input) {\n\t                if (Tone.isArray(this.input)) {\n\t                    return this.input.length;\n\t                } else {\n\t                    return 1;\n\t                }\n\t            } else {\n\t                return 0;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  The number of outputs coming out of the AudioNode.\n\t\t *  @type {Number}\n\t\t *  @name numberOfOutputs\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.AudioNode.prototype, 'numberOfOutputs', {\n\t        get: function () {\n\t            if (this.output) {\n\t                if (Tone.isArray(this.output)) {\n\t                    return this.output.length;\n\t                } else {\n\t                    return 1;\n\t                }\n\t            } else {\n\t                return 0;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  connect the output of a ToneNode to an AudioParam, AudioNode, or ToneNode\n\t\t *  @param  {Tone | AudioParam | AudioNode} unit\n\t\t *  @param {number} [outputNum=0] optionally which output to connect from\n\t\t *  @param {number} [inputNum=0] optionally which input to connect to\n\t\t *  @returns {Tone.AudioNode} this\n\t\t */\n\t    Tone.AudioNode.prototype.connect = function (unit, outputNum, inputNum) {\n\t        if (Tone.isArray(this.output)) {\n\t            outputNum = Tone.defaultArg(outputNum, 0);\n\t            this.output[outputNum].connect(unit, 0, inputNum);\n\t        } else {\n\t            this.output.connect(unit, outputNum, inputNum);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  disconnect the output\n\t\t *  @param {Number|AudioNode} output Either the output index to disconnect\n\t\t *                                   if the output is an array, or the\n\t\t *                                   node to disconnect from.\n\t\t *  @returns {Tone.AudioNode} this\n\t\t */\n\t    Tone.AudioNode.prototype.disconnect = function (destination, outputNum, inputNum) {\n\t        if (Tone.isArray(this.output)) {\n\t            if (Tone.isNumber(destination)) {\n\t                this.output[destination].disconnect();\n\t            } else {\n\t                outputNum = Tone.defaultArg(outputNum, 0);\n\t                this.output[outputNum].disconnect(destination, 0, inputNum);\n\t            }\n\t        } else {\n\t            this.output.disconnect.apply(this.output, arguments);\n\t        }\n\t    };\n\t    /**\n\t\t *  Connect the output of this node to the rest of the nodes in series.\n\t\t *  @example\n\t\t *  //connect a node to an effect, panVol and then to the master output\n\t\t *  node.chain(effect, panVol, Tone.Master);\n\t\t *  @param {...AudioParam|Tone|AudioNode} nodes\n\t\t *  @returns {Tone.AudioNode} this\n\t\t *  @private\n\t\t */\n\t    Tone.AudioNode.prototype.chain = function () {\n\t        var currentUnit = this;\n\t        for (var i = 0; i < arguments.length; i++) {\n\t            var toUnit = arguments[i];\n\t            currentUnit.connect(toUnit);\n\t            currentUnit = toUnit;\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  connect the output of this node to the rest of the nodes in parallel.\n\t\t *  @param {...AudioParam|Tone|AudioNode} nodes\n\t\t *  @returns {Tone.AudioNode} this\n\t\t *  @private\n\t\t */\n\t    Tone.AudioNode.prototype.fan = function () {\n\t        for (var i = 0; i < arguments.length; i++) {\n\t            this.connect(arguments[i]);\n\t        }\n\t        return this;\n\t    };\n\t    if (window.AudioNode) {\n\t        //give native nodes chain and fan methods\n\t        AudioNode.prototype.chain = Tone.AudioNode.prototype.chain;\n\t        AudioNode.prototype.fan = Tone.AudioNode.prototype.fan;\n\t    }\n\t    /**\n\t\t * Dispose and disconnect\n\t\t * @return {Tone.AudioNode} this\n\t\t */\n\t    Tone.AudioNode.prototype.dispose = function () {\n\t        if (!Tone.isUndef(this.input)) {\n\t            if (this.input instanceof AudioNode) {\n\t                this.input.disconnect();\n\t            }\n\t            this.input = null;\n\t        }\n\t        if (!Tone.isUndef(this.output)) {\n\t            if (this.output instanceof AudioNode) {\n\t                this.output.disconnect();\n\t            }\n\t            this.output = null;\n\t        }\n\t        this._context = null;\n\t        return this;\n\t    };\n\t    return Tone.AudioNode;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Base class for all Signals. Used Internally.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t */\n\t    Tone.SignalBase = function () {\n\t        Tone.AudioNode.call(this);\n\t    };\n\t    Tone.extend(Tone.SignalBase, Tone.AudioNode);\n\t    /**\n\t\t *  When signals connect to other signals or AudioParams,\n\t\t *  they take over the output value of that signal or AudioParam.\n\t\t *  For all other nodes, the behavior is the same as a default <code>connect</code>.\n\t\t *\n\t\t *  @override\n\t\t *  @param {AudioParam|AudioNode|Tone.Signal|Tone} node\n\t\t *  @param {number} [outputNumber=0] The output number to connect from.\n\t\t *  @param {number} [inputNumber=0] The input number to connect to.\n\t\t *  @returns {Tone.SignalBase} this\n\t\t */\n\t    Tone.SignalBase.prototype.connect = function (node, outputNumber, inputNumber) {\n\t        //zero it out so that the signal can have full control\n\t        if (Tone.Signal && Tone.Signal === node.constructor || Tone.Param && Tone.Param === node.constructor || Tone.TimelineSignal && Tone.TimelineSignal === node.constructor) {\n\t            //cancel changes\n\t            node._param.cancelScheduledValues(0);\n\t            //reset the value\n\t            node._param.value = 0;\n\t            //mark the value as overridden\n\t            node.overridden = true;\n\t        } else if (node instanceof AudioParam) {\n\t            node.cancelScheduledValues(0);\n\t            node.value = 0;\n\t        }\n\t        Tone.AudioNode.prototype.connect.call(this, node, outputNumber, inputNumber);\n\t        return this;\n\t    };\n\t    return Tone.SignalBase;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Wraps the native Web Audio API \n\t\t *         [WaveShaperNode](http://webaudio.github.io/web-audio-api/#the-waveshapernode-interface).\n\t\t *\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @constructor\n\t\t *  @param {function|Array|Number} mapping The function used to define the values. \n\t\t *                                    The mapping function should take two arguments: \n\t\t *                                    the first is the value at the current position \n\t\t *                                    and the second is the array position. \n\t\t *                                    If the argument is an array, that array will be\n\t\t *                                    set as the wave shaping function. The input\n\t\t *                                    signal is an AudioRange [-1, 1] value and the output\n\t\t *                                    signal can take on any numerical values. \n\t\t *                                    \n\t\t *  @param {Number} [bufferLen=1024] The length of the WaveShaperNode buffer.\n\t\t *  @example\n\t\t * var timesTwo = new Tone.WaveShaper(function(val){\n\t\t * \treturn val * 2;\n\t\t * }, 2048);\n\t\t *  @example\n\t\t * //a waveshaper can also be constructed with an array of values\n\t\t * var invert = new Tone.WaveShaper([1, -1]);\n\t\t */\n\t    Tone.WaveShaper = function (mapping, bufferLen) {\n\t        Tone.SignalBase.call(this);\n\t        /**\n\t\t\t *  the waveshaper\n\t\t\t *  @type {WaveShaperNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._shaper = this.input = this.output = this.context.createWaveShaper();\n\t        /**\n\t\t\t *  the waveshapers curve\n\t\t\t *  @type {Float32Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._curve = null;\n\t        if (Array.isArray(mapping)) {\n\t            this.curve = mapping;\n\t        } else if (isFinite(mapping) || Tone.isUndef(mapping)) {\n\t            this._curve = new Float32Array(Tone.defaultArg(mapping, 1024));\n\t        } else if (Tone.isFunction(mapping)) {\n\t            this._curve = new Float32Array(Tone.defaultArg(bufferLen, 1024));\n\t            this.setMap(mapping);\n\t        }\n\t    };\n\t    Tone.extend(Tone.WaveShaper, Tone.SignalBase);\n\t    /**\n\t\t *  Uses a mapping function to set the value of the curve. \n\t\t *  @param {function} mapping The function used to define the values. \n\t\t *                            The mapping function take two arguments: \n\t\t *                            the first is the value at the current position \n\t\t *                            which goes from -1 to 1 over the number of elements\n\t\t *                            in the curve array. The second argument is the array position. \n\t\t *  @returns {Tone.WaveShaper} this\n\t\t *  @example\n\t\t * //map the input signal from [-1, 1] to [0, 10]\n\t\t * shaper.setMap(function(val, index){\n\t\t * \treturn (val + 1) * 5;\n\t\t * })\n\t\t */\n\t    Tone.WaveShaper.prototype.setMap = function (mapping) {\n\t        for (var i = 0, len = this._curve.length; i < len; i++) {\n\t            var normalized = i / (len - 1) * 2 - 1;\n\t            this._curve[i] = mapping(normalized, i);\n\t        }\n\t        this._shaper.curve = this._curve;\n\t        return this;\n\t    };\n\t    /**\n\t\t * The array to set as the waveshaper curve. For linear curves\n\t\t * array length does not make much difference, but for complex curves\n\t\t * longer arrays will provide smoother interpolation. \n\t\t * @memberOf Tone.WaveShaper#\n\t\t * @type {Array}\n\t\t * @name curve\n\t\t */\n\t    Object.defineProperty(Tone.WaveShaper.prototype, 'curve', {\n\t        get: function () {\n\t            return this._shaper.curve;\n\t        },\n\t        set: function (mapping) {\n\t            this._curve = new Float32Array(mapping);\n\t            this._shaper.curve = this._curve;\n\t        }\n\t    });\n\t    /**\n\t\t * Specifies what type of oversampling (if any) should be used when \n\t\t * applying the shaping curve. Can either be \"none\", \"2x\" or \"4x\". \n\t\t * @memberOf Tone.WaveShaper#\n\t\t * @type {string}\n\t\t * @name oversample\n\t\t */\n\t    Object.defineProperty(Tone.WaveShaper.prototype, 'oversample', {\n\t        get: function () {\n\t            return this._shaper.oversample;\n\t        },\n\t        set: function (oversampling) {\n\t            if ([\n\t                    'none',\n\t                    '2x',\n\t                    '4x'\n\t                ].indexOf(oversampling) !== -1) {\n\t                this._shaper.oversample = oversampling;\n\t            } else {\n\t                throw new RangeError('Tone.WaveShaper: oversampling must be either \\'none\\', \\'2x\\', or \\'4x\\'');\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.WaveShaper} this\n\t\t */\n\t    Tone.WaveShaper.prototype.dispose = function () {\n\t        Tone.SignalBase.prototype.dispose.call(this);\n\t        this._shaper.disconnect();\n\t        this._shaper = null;\n\t        this._curve = null;\n\t        return this;\n\t    };\n\t    return Tone.WaveShaper;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class Tone.TimeBase is a flexible encoding of time\n\t\t *         which can be evaluated to and from a string.\n\t\t *         Parsing code modified from https://code.google.com/p/tapdigit/\n\t\t *         Copyright 2011 2012 Ariya Hidayat, New BSD License\n\t\t *  @extends {Tone}\n\t\t *  @param  {Time}  val    The time value as a number or string\n\t\t *  @param  {String=}  units  Unit values\n\t\t *  @example\n\t\t * Tone.TimeBase(4, \"n\")\n\t\t * Tone.TimeBase(2, \"t\")\n\t\t * Tone.TimeBase(\"2t\").add(\"1m\")\n\t\t * Tone.TimeBase(\"2t + 1m\");\n\t\t */\n\t    Tone.TimeBase = function (val, units) {\n\t        //allows it to be constructed with or without 'new'\n\t        if (this instanceof Tone.TimeBase) {\n\t            /**\n\t\t\t\t *  Any expressions parsed from the Time\n\t\t\t\t *  @type  {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._expr = this._noOp;\n\t            if (val instanceof Tone.TimeBase) {\n\t                this.copy(val);\n\t            } else if (!Tone.isUndef(units) || Tone.isNumber(val)) {\n\t                //default units\n\t                units = Tone.defaultArg(units, this._defaultUnits);\n\t                var method = this._primaryExpressions[units].method;\n\t                this._expr = method.bind(this, val);\n\t            } else if (Tone.isString(val)) {\n\t                this.set(val);\n\t            } else if (Tone.isUndef(val)) {\n\t                //default expression\n\t                this._expr = this._defaultExpr();\n\t            }\n\t        } else {\n\t            return new Tone.TimeBase(val, units);\n\t        }\n\t    };\n\t    Tone.extend(Tone.TimeBase);\n\t    /**\n\t\t *  Repalce the current time value with the value\n\t\t *  given by the expression string.\n\t\t *  @param  {String}  exprString\n\t\t *  @return {Tone.TimeBase} this\n\t\t */\n\t    Tone.TimeBase.prototype.set = function (exprString) {\n\t        this._expr = this._parseExprString(exprString);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Return a clone of the TimeBase object.\n\t\t *  @return  {Tone.TimeBase} The new cloned Tone.TimeBase\n\t\t */\n\t    Tone.TimeBase.prototype.clone = function () {\n\t        var instance = new this.constructor();\n\t        instance.copy(this);\n\t        return instance;\n\t    };\n\t    /**\n\t\t *  Copies the value of time to this Time\n\t\t *  @param {Tone.TimeBase} time\n\t\t *  @return  {TimeBase}\n\t\t */\n\t    Tone.TimeBase.prototype.copy = function (time) {\n\t        var val = time._expr();\n\t        return this.set(val);\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tABSTRACT SYNTAX TREE PARSER\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  All the primary expressions.\n\t\t *  @private\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.TimeBase.prototype._primaryExpressions = {\n\t        'n': {\n\t            regexp: /^(\\d+)n/i,\n\t            method: function (value) {\n\t                value = parseInt(value);\n\t                if (value === 1) {\n\t                    return this._beatsToUnits(this._timeSignature());\n\t                } else {\n\t                    return this._beatsToUnits(4 / value);\n\t                }\n\t            }\n\t        },\n\t        't': {\n\t            regexp: /^(\\d+)t/i,\n\t            method: function (value) {\n\t                value = parseInt(value);\n\t                return this._beatsToUnits(8 / (parseInt(value) * 3));\n\t            }\n\t        },\n\t        'm': {\n\t            regexp: /^(\\d+)m/i,\n\t            method: function (value) {\n\t                return this._beatsToUnits(parseInt(value) * this._timeSignature());\n\t            }\n\t        },\n\t        'i': {\n\t            regexp: /^(\\d+)i/i,\n\t            method: function (value) {\n\t                return this._ticksToUnits(parseInt(value));\n\t            }\n\t        },\n\t        'hz': {\n\t            regexp: /^(\\d+(?:\\.\\d+)?)hz/i,\n\t            method: function (value) {\n\t                return this._frequencyToUnits(parseFloat(value));\n\t            }\n\t        },\n\t        'tr': {\n\t            regexp: /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?/,\n\t            method: function (m, q, s) {\n\t                var total = 0;\n\t                if (m && m !== '0') {\n\t                    total += this._beatsToUnits(this._timeSignature() * parseFloat(m));\n\t                }\n\t                if (q && q !== '0') {\n\t                    total += this._beatsToUnits(parseFloat(q));\n\t                }\n\t                if (s && s !== '0') {\n\t                    total += this._beatsToUnits(parseFloat(s) / 4);\n\t                }\n\t                return total;\n\t            }\n\t        },\n\t        's': {\n\t            regexp: /^(\\d+(?:\\.\\d+)?s)/,\n\t            method: function (value) {\n\t                return this._secondsToUnits(parseFloat(value));\n\t            }\n\t        },\n\t        'samples': {\n\t            regexp: /^(\\d+)samples/,\n\t            method: function (value) {\n\t                return parseInt(value) / this.context.sampleRate;\n\t            }\n\t        },\n\t        'default': {\n\t            regexp: /^(\\d+(?:\\.\\d+)?)/,\n\t            method: function (value) {\n\t                return this._primaryExpressions[this._defaultUnits].method.call(this, value);\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  All the binary expressions that TimeBase can accept.\n\t\t *  @private\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.TimeBase.prototype._binaryExpressions = {\n\t        '+': {\n\t            regexp: /^\\+/,\n\t            precedence: 2,\n\t            method: function (lh, rh) {\n\t                return lh() + rh();\n\t            }\n\t        },\n\t        '-': {\n\t            regexp: /^\\-/,\n\t            precedence: 2,\n\t            method: function (lh, rh) {\n\t                return lh() - rh();\n\t            }\n\t        },\n\t        '*': {\n\t            regexp: /^\\*/,\n\t            precedence: 1,\n\t            method: function (lh, rh) {\n\t                return lh() * rh();\n\t            }\n\t        },\n\t        '/': {\n\t            regexp: /^\\//,\n\t            precedence: 1,\n\t            method: function (lh, rh) {\n\t                return lh() / rh();\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  All the unary expressions.\n\t\t *  @private\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.TimeBase.prototype._unaryExpressions = {\n\t        'neg': {\n\t            regexp: /^\\-/,\n\t            method: function (lh) {\n\t                return -lh();\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  Syntactic glue which holds expressions together\n\t\t *  @private\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.TimeBase.prototype._syntaxGlue = {\n\t        '(': { regexp: /^\\(/ },\n\t        ')': { regexp: /^\\)/ }\n\t    };\n\t    /**\n\t\t *  tokenize the expression based on the Expressions object\n\t\t *  @param   {string} expr \n\t\t *  @return  {Object}      returns two methods on the tokenized list, next and peek\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._tokenize = function (expr) {\n\t        var position = -1;\n\t        var tokens = [];\n\t        while (expr.length > 0) {\n\t            expr = expr.trim();\n\t            var token = getNextToken(expr, this);\n\t            tokens.push(token);\n\t            expr = expr.substr(token.value.length);\n\t        }\n\t        function getNextToken(expr, context) {\n\t            var expressions = [\n\t                '_binaryExpressions',\n\t                '_unaryExpressions',\n\t                '_primaryExpressions',\n\t                '_syntaxGlue'\n\t            ];\n\t            for (var i = 0; i < expressions.length; i++) {\n\t                var group = context[expressions[i]];\n\t                for (var opName in group) {\n\t                    var op = group[opName];\n\t                    var reg = op.regexp;\n\t                    var match = expr.match(reg);\n\t                    if (match !== null) {\n\t                        return {\n\t                            method: op.method,\n\t                            precedence: op.precedence,\n\t                            regexp: op.regexp,\n\t                            value: match[0]\n\t                        };\n\t                    }\n\t                }\n\t            }\n\t            throw new SyntaxError('Tone.TimeBase: Unexpected token ' + expr);\n\t        }\n\t        return {\n\t            next: function () {\n\t                return tokens[++position];\n\t            },\n\t            peek: function () {\n\t                return tokens[position + 1];\n\t            }\n\t        };\n\t    };\n\t    /**\n\t\t *  Given a token, find the value within the groupName\n\t\t *  @param {Object} token\n\t\t *  @param {String} groupName\n\t\t *  @param {Number} precedence\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._matchGroup = function (token, group, prec) {\n\t        var ret = false;\n\t        if (!Tone.isUndef(token)) {\n\t            for (var opName in group) {\n\t                var op = group[opName];\n\t                if (op.regexp.test(token.value)) {\n\t                    if (!Tone.isUndef(prec)) {\n\t                        if (op.precedence === prec) {\n\t                            return op;\n\t                        }\n\t                    } else {\n\t                        return op;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return ret;\n\t    };\n\t    /**\n\t\t *  Match a binary expression given the token and the precedence\n\t\t *  @param {Lexer} lexer\n\t\t *  @param {Number} precedence\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._parseBinary = function (lexer, precedence) {\n\t        if (Tone.isUndef(precedence)) {\n\t            precedence = 2;\n\t        }\n\t        var expr;\n\t        if (precedence < 0) {\n\t            expr = this._parseUnary(lexer);\n\t        } else {\n\t            expr = this._parseBinary(lexer, precedence - 1);\n\t        }\n\t        var token = lexer.peek();\n\t        while (token && this._matchGroup(token, this._binaryExpressions, precedence)) {\n\t            token = lexer.next();\n\t            expr = token.method.bind(this, expr, this._parseBinary(lexer, precedence - 1));\n\t            token = lexer.peek();\n\t        }\n\t        return expr;\n\t    };\n\t    /**\n\t\t *  Match a unary expression.\n\t\t *  @param {Lexer} lexer\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._parseUnary = function (lexer) {\n\t        var token, expr;\n\t        token = lexer.peek();\n\t        var op = this._matchGroup(token, this._unaryExpressions);\n\t        if (op) {\n\t            token = lexer.next();\n\t            expr = this._parseUnary(lexer);\n\t            return op.method.bind(this, expr);\n\t        }\n\t        return this._parsePrimary(lexer);\n\t    };\n\t    /**\n\t\t *  Match a primary expression (a value).\n\t\t *  @param {Lexer} lexer\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._parsePrimary = function (lexer) {\n\t        var token, expr;\n\t        token = lexer.peek();\n\t        if (Tone.isUndef(token)) {\n\t            throw new SyntaxError('Tone.TimeBase: Unexpected end of expression');\n\t        }\n\t        if (this._matchGroup(token, this._primaryExpressions)) {\n\t            token = lexer.next();\n\t            var matching = token.value.match(token.regexp);\n\t            return token.method.bind(this, matching[1], matching[2], matching[3]);\n\t        }\n\t        if (token && token.value === '(') {\n\t            lexer.next();\n\t            expr = this._parseBinary(lexer);\n\t            token = lexer.next();\n\t            if (!(token && token.value === ')')) {\n\t                throw new SyntaxError('Expected )');\n\t            }\n\t            return expr;\n\t        }\n\t        throw new SyntaxError('Tone.TimeBase: Cannot process token ' + token.value);\n\t    };\n\t    /**\n\t\t *  Recursively parse the string expression into a syntax tree.\n\t\t *  @param   {string} expr \n\t\t *  @return  {Function} the bound method to be evaluated later\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._parseExprString = function (exprString) {\n\t        if (!Tone.isString(exprString)) {\n\t            exprString = exprString.toString();\n\t        }\n\t        var lexer = this._tokenize(exprString);\n\t        var tree = this._parseBinary(lexer);\n\t        return tree;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tDEFAULTS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  The initial expression value\n\t\t *  @return  {Number}  The initial value 0\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._noOp = function () {\n\t        return 0;\n\t    };\n\t    /**\n\t\t *  The default expression value if no arguments are given\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._defaultExpr = function () {\n\t        return this._noOp;\n\t    };\n\t    /**\n\t\t *  The default units if none are given.\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._defaultUnits = 's';\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tUNIT CONVERSIONS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Returns the value of a frequency in the current units\n\t\t *  @param {Frequency} freq\n\t\t *  @return  {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._frequencyToUnits = function (freq) {\n\t        return 1 / freq;\n\t    };\n\t    /**\n\t\t *  Return the value of the beats in the current units\n\t\t *  @param {Number} beats\n\t\t *  @return  {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._beatsToUnits = function (beats) {\n\t        return 60 / Tone.Transport.bpm.value * beats;\n\t    };\n\t    /**\n\t\t *  Returns the value of a second in the current units\n\t\t *  @param {Seconds} seconds\n\t\t *  @return  {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._secondsToUnits = function (seconds) {\n\t        return seconds;\n\t    };\n\t    /**\n\t\t *  Returns the value of a tick in the current time units\n\t\t *  @param {Ticks} ticks\n\t\t *  @return  {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._ticksToUnits = function (ticks) {\n\t        return ticks * (this._beatsToUnits(1) / Tone.Transport.PPQ);\n\t    };\n\t    /**\n\t\t *  Return the time signature.\n\t\t *  @return  {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._timeSignature = function () {\n\t        return Tone.Transport.timeSignature;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tEXPRESSIONS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Push an expression onto the expression list\n\t\t *  @param  {Time}  val\n\t\t *  @param  {String}  type\n\t\t *  @param  {String}  units\n\t\t *  @return  {Tone.TimeBase} \n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._pushExpr = function (val, name, units) {\n\t        //create the expression\n\t        if (!(val instanceof Tone.TimeBase)) {\n\t            val = new this.constructor(val, units);\n\t        }\n\t        this._expr = this._binaryExpressions[name].method.bind(this, this._expr, val._expr);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Add to the current value.\n\t\t *  @param  {Time}  val    The value to add\n\t\t *  @param  {String=}  units  Optional units to use with the value.\n\t\t *  @return  {Tone.TimeBase}  this\n\t\t *  @example\n\t\t * Tone.TimeBase(\"2m\").add(\"1m\"); //\"3m\"\n\t\t */\n\t    Tone.TimeBase.prototype.add = function (val, units) {\n\t        return this._pushExpr(val, '+', units);\n\t    };\n\t    /**\n\t\t *  Subtract the value from the current time.\n\t\t *  @param  {Time}  val    The value to subtract\n\t\t *  @param  {String=}  units  Optional units to use with the value.\n\t\t *  @return  {Tone.TimeBase}  this\n\t\t *  @example\n\t\t * Tone.TimeBase(\"2m\").sub(\"1m\"); //\"1m\"\n\t\t */\n\t    Tone.TimeBase.prototype.sub = function (val, units) {\n\t        return this._pushExpr(val, '-', units);\n\t    };\n\t    /**\n\t\t *  Multiply the current value by the given time.\n\t\t *  @param  {Time}  val    The value to multiply\n\t\t *  @param  {String=}  units  Optional units to use with the value.\n\t\t *  @return  {Tone.TimeBase}  this\n\t\t *  @example\n\t\t * Tone.TimeBase(\"2m\").mult(\"2\"); //\"4m\"\n\t\t */\n\t    Tone.TimeBase.prototype.mult = function (val, units) {\n\t        return this._pushExpr(val, '*', units);\n\t    };\n\t    /**\n\t\t *  Divide the current value by the given time.\n\t\t *  @param  {Time}  val    The value to divide by\n\t\t *  @param  {String=}  units  Optional units to use with the value.\n\t\t *  @return  {Tone.TimeBase}  this\n\t\t *  @example\n\t\t * Tone.TimeBase(\"2m\").div(2); //\"1m\"\n\t\t */\n\t    Tone.TimeBase.prototype.div = function (val, units) {\n\t        return this._pushExpr(val, '/', units);\n\t    };\n\t    /**\n\t\t *  Evaluate the time value. Returns the time\n\t\t *  in seconds.\n\t\t *  @return  {Seconds} \n\t\t */\n\t    Tone.TimeBase.prototype.valueOf = function () {\n\t        return this._expr();\n\t    };\n\t    /**\n\t\t *  Clean up\n\t\t *  @return {Tone.TimeBase} this\n\t\t */\n\t    Tone.TimeBase.prototype.dispose = function () {\n\t        this._expr = null;\n\t    };\n\t    return Tone.TimeBase;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class Tone.Time is a primitive type for encoding Time values. \n\t\t *         Eventually all time values are evaluated to seconds\n\t\t *         using the `eval` method. Tone.Time can be constructed\n\t\t *         with or without the `new` keyword. Tone.Time can be passed\n\t\t *         into the parameter of any method which takes time as an argument. \n\t\t *  @constructor\n\t\t *  @extends {Tone.TimeBase}\n\t\t *  @param  {String|Number}  val    The time value.\n\t\t *  @param  {String=}  units  The units of the value.\n\t\t *  @example\n\t\t * var t = Tone.Time(\"4n\");//encodes a quarter note\n\t\t * t.mult(4); // multiply that value by 4\n\t\t * t.toNotation(); //returns \"1m\"\n\t\t */\n\t    Tone.Time = function (val, units) {\n\t        if (this instanceof Tone.Time) {\n\t            /**\n\t\t\t\t *  If the current clock time should\n\t\t\t\t *  be added to the output\n\t\t\t\t *  @type  {Boolean}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._plusNow = false;\n\t            Tone.TimeBase.call(this, val, units);\n\t        } else {\n\t            return new Tone.Time(val, units);\n\t        }\n\t    };\n\t    Tone.extend(Tone.Time, Tone.TimeBase);\n\t    //clone the expressions so that \n\t    //we can add more without modifying the original\n\t    Tone.Time.prototype._unaryExpressions = Object.create(Tone.TimeBase.prototype._unaryExpressions);\n\t    /*\n\t\t *  Adds an additional unary expression\n\t\t *  which quantizes values to the next subdivision\n\t\t *  @type {Object}\n\t\t *  @private\n\t\t */\n\t    Tone.Time.prototype._unaryExpressions.quantize = {\n\t        regexp: /^@/,\n\t        method: function (rh) {\n\t            return Tone.Transport.nextSubdivision(rh());\n\t        }\n\t    };\n\t    /*\n\t\t *  Adds an additional unary expression\n\t\t *  which adds the current clock time.\n\t\t *  @type {Object}\n\t\t *  @private\n\t\t */\n\t    Tone.Time.prototype._unaryExpressions.now = {\n\t        regexp: /^\\+/,\n\t        method: function (lh) {\n\t            this._plusNow = true;\n\t            return lh();\n\t        }\n\t    };\n\t    /**\n\t\t *  Quantize the time by the given subdivision. Optionally add a\n\t\t *  percentage which will move the time value towards the ideal\n\t\t *  quantized value by that percentage. \n\t\t *  @param  {Number|Time}  val    The subdivision to quantize to\n\t\t *  @param  {NormalRange}  [percent=1]  Move the time value\n\t\t *                                   towards the quantized value by\n\t\t *                                   a percentage.\n\t\t *  @return  {Tone.Time}  this\n\t\t *  @example\n\t\t * Tone.Time(21).quantize(2) //returns 22\n\t\t * Tone.Time(0.6).quantize(\"4n\", 0.5) //returns 0.55\n\t\t */\n\t    Tone.Time.prototype.quantize = function (subdiv, percent) {\n\t        percent = Tone.defaultArg(percent, 1);\n\t        this._expr = function (expr, subdivision, percent) {\n\t            expr = expr();\n\t            subdivision = subdivision.toSeconds();\n\t            var multiple = Math.round(expr / subdivision);\n\t            var ideal = multiple * subdivision;\n\t            var diff = ideal - expr;\n\t            return expr + diff * percent;\n\t        }.bind(this, this._expr, new this.constructor(subdiv), percent);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Adds the clock time to the time expression at the \n\t\t *  moment of evaluation. \n\t\t *  @return  {Tone.Time}  this\n\t\t */\n\t    Tone.Time.prototype.addNow = function () {\n\t        this._plusNow = true;\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Override the default value return when no arguments are passed in.\n\t\t *  The default value is 'now'\n\t\t *  @override\n\t\t *  @private\n\t\t */\n\t    Tone.Time.prototype._defaultExpr = function () {\n\t        this._plusNow = true;\n\t        return this._noOp;\n\t    };\n\t    /**\n\t\t *  Copies the value of time to this Time\n\t\t *  @param {Tone.Time} time\n\t\t *  @return  {Time}\n\t\t */\n\t    Tone.Time.prototype.copy = function (time) {\n\t        Tone.TimeBase.prototype.copy.call(this, time);\n\t        this._plusNow = time._plusNow;\n\t        return this;\n\t    };\n\t    //CONVERSIONS//////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Convert a Time to Notation. Values will be thresholded to the nearest 128th note. \n\t\t *  @return {Notation} \n\t\t *  @example\n\t\t * //if the Transport is at 120bpm:\n\t\t * Tone.Time(2).toNotation();//returns \"1m\"\n\t\t */\n\t    Tone.Time.prototype.toNotation = function () {\n\t        var time = this.toSeconds();\n\t        var testNotations = [\n\t            '1m',\n\t            '2n',\n\t            '4n',\n\t            '8n',\n\t            '16n',\n\t            '32n',\n\t            '64n',\n\t            '128n'\n\t        ];\n\t        var retNotation = this._toNotationHelper(time, testNotations);\n\t        //try the same thing but with tripelets\n\t        var testTripletNotations = [\n\t            '1m',\n\t            '2n',\n\t            '2t',\n\t            '4n',\n\t            '4t',\n\t            '8n',\n\t            '8t',\n\t            '16n',\n\t            '16t',\n\t            '32n',\n\t            '32t',\n\t            '64n',\n\t            '64t',\n\t            '128n'\n\t        ];\n\t        var retTripletNotation = this._toNotationHelper(time, testTripletNotations);\n\t        //choose the simpler expression of the two\n\t        if (retTripletNotation.split('+').length < retNotation.split('+').length) {\n\t            return retTripletNotation;\n\t        } else {\n\t            return retNotation;\n\t        }\n\t    };\n\t    /**\n\t\t *  Helper method for Tone.toNotation\n\t\t *  @param {Number} units \n\t\t *  @param {Array} testNotations\n\t\t *  @return {String}\n\t\t *  @private\n\t\t */\n\t    Tone.Time.prototype._toNotationHelper = function (units, testNotations) {\n\t        //the threshold is the last value in the array\n\t        var threshold = this._notationToUnits(testNotations[testNotations.length - 1]);\n\t        var retNotation = '';\n\t        for (var i = 0; i < testNotations.length; i++) {\n\t            var notationTime = this._notationToUnits(testNotations[i]);\n\t            //account for floating point errors (i.e. round up if the value is 0.999999)\n\t            var multiple = units / notationTime;\n\t            var floatingPointError = 0.000001;\n\t            if (1 - multiple % 1 < floatingPointError) {\n\t                multiple += floatingPointError;\n\t            }\n\t            multiple = Math.floor(multiple);\n\t            if (multiple > 0) {\n\t                if (multiple === 1) {\n\t                    retNotation += testNotations[i];\n\t                } else {\n\t                    retNotation += multiple.toString() + '*' + testNotations[i];\n\t                }\n\t                units -= multiple * notationTime;\n\t                if (units < threshold) {\n\t                    break;\n\t                } else {\n\t                    retNotation += ' + ';\n\t                }\n\t            }\n\t        }\n\t        if (retNotation === '') {\n\t            retNotation = '0';\n\t        }\n\t        return retNotation;\n\t    };\n\t    /**\n\t\t *  Convert a notation value to the current units\n\t\t *  @param  {Notation}  notation \n\t\t *  @return  {Number} \n\t\t *  @private\n\t\t */\n\t    Tone.Time.prototype._notationToUnits = function (notation) {\n\t        var primaryExprs = this._primaryExpressions;\n\t        var notationExprs = [\n\t            primaryExprs.n,\n\t            primaryExprs.t,\n\t            primaryExprs.m\n\t        ];\n\t        for (var i = 0; i < notationExprs.length; i++) {\n\t            var expr = notationExprs[i];\n\t            var match = notation.match(expr.regexp);\n\t            if (match) {\n\t                return expr.method.call(this, match[1]);\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  Return the time encoded as Bars:Beats:Sixteenths.\n\t\t *  @return  {BarsBeatsSixteenths}\n\t\t */\n\t    Tone.Time.prototype.toBarsBeatsSixteenths = function () {\n\t        var quarterTime = this._beatsToUnits(1);\n\t        var quarters = this.toSeconds() / quarterTime;\n\t        var measures = Math.floor(quarters / this._timeSignature());\n\t        var sixteenths = quarters % 1 * 4;\n\t        quarters = Math.floor(quarters) % this._timeSignature();\n\t        sixteenths = sixteenths.toString();\n\t        if (sixteenths.length > 3) {\n\t            // the additional parseFloat removes insignificant trailing zeroes\n\t            sixteenths = parseFloat(parseFloat(sixteenths).toFixed(3));\n\t        }\n\t        var progress = [\n\t            measures,\n\t            quarters,\n\t            sixteenths\n\t        ];\n\t        return progress.join(':');\n\t    };\n\t    /**\n\t\t *  Return the time in ticks.\n\t\t *  @return  {Ticks}\n\t\t */\n\t    Tone.Time.prototype.toTicks = function () {\n\t        var quarterTime = this._beatsToUnits(1);\n\t        var quarters = this.valueOf() / quarterTime;\n\t        return Math.round(quarters * Tone.Transport.PPQ);\n\t    };\n\t    /**\n\t\t *  Return the time in samples\n\t\t *  @return  {Samples}  \n\t\t */\n\t    Tone.Time.prototype.toSamples = function () {\n\t        return this.toSeconds() * this.context.sampleRate;\n\t    };\n\t    /**\n\t\t *  Return the time as a frequency value\n\t\t *  @return  {Frequency} \n\t\t *  @example\n\t\t * Tone.Time(2).toFrequency(); //0.5\n\t\t */\n\t    Tone.Time.prototype.toFrequency = function () {\n\t        return 1 / this.toSeconds();\n\t    };\n\t    /**\n\t\t *  Return the time in seconds.\n\t\t *  @return  {Seconds} \n\t\t */\n\t    Tone.Time.prototype.toSeconds = function () {\n\t        return this.valueOf();\n\t    };\n\t    /**\n\t\t *  Return the time in milliseconds.\n\t\t *  @return  {Milliseconds} \n\t\t */\n\t    Tone.Time.prototype.toMilliseconds = function () {\n\t        return this.toSeconds() * 1000;\n\t    };\n\t    /**\n\t\t *  Return the time in seconds.\n\t\t *  @return  {Seconds} \n\t\t */\n\t    Tone.Time.prototype.valueOf = function () {\n\t        var val = this._expr();\n\t        return val + (this._plusNow ? this.now() : 0);\n\t    };\n\t    return Tone.Time;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class Tone.Frequency is a primitive type for encoding Frequency values.\n\t\t *         Eventually all time values are evaluated to hertz\n\t\t *         using the `eval` method.\n\t\t *  @constructor\n\t\t *  @extends {Tone.TimeBase}\n\t\t *  @param  {String|Number}  val    The time value.\n\t\t *  @param  {String=}  units  The units of the value.\n\t\t *  @example\n\t\t * Tone.Frequency(\"C3\") // 261\n\t\t * Tone.Frequency(38, \"midi\") //\n\t\t * Tone.Frequency(\"C3\").transpose(4);\n\t\t */\n\t    Tone.Frequency = function (val, units) {\n\t        if (this instanceof Tone.Frequency) {\n\t            Tone.TimeBase.call(this, val, units);\n\t        } else {\n\t            return new Tone.Frequency(val, units);\n\t        }\n\t    };\n\t    Tone.extend(Tone.Frequency, Tone.TimeBase);\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tAUGMENT BASE EXPRESSIONS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //clone the expressions so that\n\t    //we can add more without modifying the original\n\t    Tone.Frequency.prototype._primaryExpressions = Object.create(Tone.TimeBase.prototype._primaryExpressions);\n\t    /*\n\t\t *  midi type primary expression\n\t\t *  @type {Object}\n\t\t *  @private\n\t\t */\n\t    Tone.Frequency.prototype._primaryExpressions.midi = {\n\t        regexp: /^(\\d+(?:\\.\\d+)?midi)/,\n\t        method: function (value) {\n\t            return this.midiToFrequency(value);\n\t        }\n\t    };\n\t    /*\n\t\t *  note type primary expression\n\t\t *  @type {Object}\n\t\t *  @private\n\t\t */\n\t    Tone.Frequency.prototype._primaryExpressions.note = {\n\t        regexp: /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,\n\t        method: function (pitch, octave) {\n\t            var index = noteToScaleIndex[pitch.toLowerCase()];\n\t            var noteNumber = index + (parseInt(octave) + 1) * 12;\n\t            return this.midiToFrequency(noteNumber);\n\t        }\n\t    };\n\t    /*\n\t\t *  BeatsBarsSixteenths type primary expression\n\t\t *  @type {Object}\n\t\t *  @private\n\t\t */\n\t    Tone.Frequency.prototype._primaryExpressions.tr = {\n\t        regexp: /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?/,\n\t        method: function (m, q, s) {\n\t            var total = 1;\n\t            if (m && m !== '0') {\n\t                total *= this._beatsToUnits(this._timeSignature() * parseFloat(m));\n\t            }\n\t            if (q && q !== '0') {\n\t                total *= this._beatsToUnits(parseFloat(q));\n\t            }\n\t            if (s && s !== '0') {\n\t                total *= this._beatsToUnits(parseFloat(s) / 4);\n\t            }\n\t            return total;\n\t        }\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tEXPRESSIONS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Transposes the frequency by the given number of semitones.\n\t\t *  @param  {Interval}  interval\n\t\t *  @return  {Tone.Frequency} this\n\t\t *  @example\n\t\t * Tone.Frequency(\"A4\").transpose(3); //\"C5\"\n\t\t */\n\t    Tone.Frequency.prototype.transpose = function (interval) {\n\t        this._expr = function (expr, interval) {\n\t            var val = expr();\n\t            return val * Tone.intervalToFrequencyRatio(interval);\n\t        }.bind(this, this._expr, interval);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Takes an array of semitone intervals and returns\n\t\t *  an array of frequencies transposed by those intervals.\n\t\t *  @param  {Array}  intervals\n\t\t *  @return  {Tone.Frequency} this\n\t\t *  @example\n\t\t * Tone.Frequency(\"A4\").harmonize([0, 3, 7]); //[\"A4\", \"C5\", \"E5\"]\n\t\t */\n\t    Tone.Frequency.prototype.harmonize = function (intervals) {\n\t        this._expr = function (expr, intervals) {\n\t            var val = expr();\n\t            var ret = [];\n\t            for (var i = 0; i < intervals.length; i++) {\n\t                ret[i] = val * Tone.intervalToFrequencyRatio(intervals[i]);\n\t            }\n\t            return ret;\n\t        }.bind(this, this._expr, intervals);\n\t        return this;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tUNIT CONVERSIONS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Return the value of the frequency as a MIDI note\n\t\t *  @return  {MIDI}\n\t\t *  @example\n\t\t * Tone.Frequency(\"C4\").toMidi(); //60\n\t\t */\n\t    Tone.Frequency.prototype.toMidi = function () {\n\t        return this.frequencyToMidi(this.valueOf());\n\t    };\n\t    /**\n\t\t *  Return the value of the frequency in Scientific Pitch Notation\n\t\t *  @return  {Note}\n\t\t *  @example\n\t\t * Tone.Frequency(69, \"midi\").toNote(); //\"A4\"\n\t\t */\n\t    Tone.Frequency.prototype.toNote = function () {\n\t        var freq = this.valueOf();\n\t        var log = Math.log(freq / Tone.Frequency.A4) / Math.LN2;\n\t        var noteNumber = Math.round(12 * log) + 57;\n\t        var octave = Math.floor(noteNumber / 12);\n\t        if (octave < 0) {\n\t            noteNumber += -12 * octave;\n\t        }\n\t        var noteName = scaleIndexToNote[noteNumber % 12];\n\t        return noteName + octave.toString();\n\t    };\n\t    /**\n\t\t *  Return the duration of one cycle in seconds.\n\t\t *  @return  {Seconds}\n\t\t */\n\t    Tone.Frequency.prototype.toSeconds = function () {\n\t        return 1 / this.valueOf();\n\t    };\n\t    /**\n\t\t *  Return the value in Hertz\n\t\t *  @return  {Frequency}\n\t\t */\n\t    Tone.Frequency.prototype.toFrequency = function () {\n\t        return this.valueOf();\n\t    };\n\t    /**\n\t\t *  Return the duration of one cycle in ticks\n\t\t *  @return  {Ticks}\n\t\t */\n\t    Tone.Frequency.prototype.toTicks = function () {\n\t        var quarterTime = this._beatsToUnits(1);\n\t        var quarters = this.valueOf() / quarterTime;\n\t        return Math.floor(quarters * Tone.Transport.PPQ);\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tUNIT CONVERSIONS HELPERS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Returns the value of a frequency in the current units\n\t\t *  @param {Frequency} freq\n\t\t *  @return  {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.Frequency.prototype._frequencyToUnits = function (freq) {\n\t        return freq;\n\t    };\n\t    /**\n\t\t *  Returns the value of a tick in the current time units\n\t\t *  @param {Ticks} ticks\n\t\t *  @return  {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.Frequency.prototype._ticksToUnits = function (ticks) {\n\t        return 1 / (ticks * 60 / (Tone.Transport.bpm.value * Tone.Transport.PPQ));\n\t    };\n\t    /**\n\t\t *  Return the value of the beats in the current units\n\t\t *  @param {Number} beats\n\t\t *  @return  {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.Frequency.prototype._beatsToUnits = function (beats) {\n\t        return 1 / Tone.TimeBase.prototype._beatsToUnits.call(this, beats);\n\t    };\n\t    /**\n\t\t *  Returns the value of a second in the current units\n\t\t *  @param {Seconds} seconds\n\t\t *  @return  {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.Frequency.prototype._secondsToUnits = function (seconds) {\n\t        return 1 / seconds;\n\t    };\n\t    /**\n\t\t *  The default units if none are given.\n\t\t *  @private\n\t\t */\n\t    Tone.Frequency.prototype._defaultUnits = 'hz';\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tFREQUENCY CONVERSIONS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Note to scale index\n\t\t *  @type  {Object}\n\t\t */\n\t    var noteToScaleIndex = {\n\t        'cbb': -2,\n\t        'cb': -1,\n\t        'c': 0,\n\t        'c#': 1,\n\t        'cx': 2,\n\t        'dbb': 0,\n\t        'db': 1,\n\t        'd': 2,\n\t        'd#': 3,\n\t        'dx': 4,\n\t        'ebb': 2,\n\t        'eb': 3,\n\t        'e': 4,\n\t        'e#': 5,\n\t        'ex': 6,\n\t        'fbb': 3,\n\t        'fb': 4,\n\t        'f': 5,\n\t        'f#': 6,\n\t        'fx': 7,\n\t        'gbb': 5,\n\t        'gb': 6,\n\t        'g': 7,\n\t        'g#': 8,\n\t        'gx': 9,\n\t        'abb': 7,\n\t        'ab': 8,\n\t        'a': 9,\n\t        'a#': 10,\n\t        'ax': 11,\n\t        'bbb': 9,\n\t        'bb': 10,\n\t        'b': 11,\n\t        'b#': 12,\n\t        'bx': 13\n\t    };\n\t    /**\n\t\t *  scale index to note (sharps)\n\t\t *  @type  {Array}\n\t\t */\n\t    var scaleIndexToNote = [\n\t        'C',\n\t        'C#',\n\t        'D',\n\t        'D#',\n\t        'E',\n\t        'F',\n\t        'F#',\n\t        'G',\n\t        'G#',\n\t        'A',\n\t        'A#',\n\t        'B'\n\t    ];\n\t    /**\n\t\t *  The [concert pitch](https://en.wikipedia.org/wiki/Concert_pitch)\n\t\t *  A4's values in Hertz.\n\t\t *  @type {Frequency}\n\t\t *  @static\n\t\t */\n\t    Tone.Frequency.A4 = 440;\n\t    /**\n\t\t *  Convert a MIDI note to frequency value.\n\t\t *  @param  {MIDI} midi The midi number to convert.\n\t\t *  @return {Frequency} the corresponding frequency value\n\t\t *  @example\n\t\t * tone.midiToFrequency(69); // returns 440\n\t\t */\n\t    Tone.Frequency.prototype.midiToFrequency = function (midi) {\n\t        return Tone.Frequency.A4 * Math.pow(2, (midi - 69) / 12);\n\t    };\n\t    /**\n\t\t *  Convert a frequency value to a MIDI note.\n\t\t *  @param {Frequency} frequency The value to frequency value to convert.\n\t\t *  @returns  {MIDI}\n\t\t *  @example\n\t\t * tone.midiToFrequency(440); // returns 69\n\t\t */\n\t    Tone.Frequency.prototype.frequencyToMidi = function (frequency) {\n\t        return 69 + Math.round(12 * Math.log(frequency / Tone.Frequency.A4) / Math.LN2);\n\t    };\n\t    return Tone.Frequency;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class Tone.TransportTime is a the time along the Transport's\n\t\t *         timeline. It is similar to Tone.Time, but instead of evaluating\n\t\t *         against the AudioContext's clock, it is evaluated against\n\t\t *         the Transport's position. See [TransportTime wiki](https://github.com/Tonejs/Tone.js/wiki/TransportTime).\n\t\t *  @constructor\n\t\t *  @param  {Time}  val    The time value as a number or string\n\t\t *  @param  {String=}  units  Unit values\n\t\t *  @extends {Tone.Time}\n\t\t */\n\t    Tone.TransportTime = function (val, units) {\n\t        if (this instanceof Tone.TransportTime) {\n\t            Tone.Time.call(this, val, units);\n\t        } else {\n\t            return new Tone.TransportTime(val, units);\n\t        }\n\t    };\n\t    Tone.extend(Tone.TransportTime, Tone.Time);\n\t    //clone the expressions so that \n\t    //we can add more without modifying the original\n\t    Tone.TransportTime.prototype._unaryExpressions = Object.create(Tone.Time.prototype._unaryExpressions);\n\t    /**\n\t\t *  Adds an additional unary expression\n\t\t *  which quantizes values to the next subdivision\n\t\t *  @type {Object}\n\t\t *  @private\n\t\t */\n\t    Tone.TransportTime.prototype._unaryExpressions.quantize = {\n\t        regexp: /^@/,\n\t        method: function (rh) {\n\t            var subdivision = this._secondsToTicks(rh());\n\t            var multiple = Math.ceil(Tone.Transport.ticks / subdivision);\n\t            return this._ticksToUnits(multiple * subdivision);\n\t        }\n\t    };\n\t    /**\n\t\t *  Convert seconds into ticks\n\t\t *  @param {Seconds} seconds\n\t\t *  @return  {Ticks}\n\t\t *  @private\n\t\t */\n\t    Tone.TransportTime.prototype._secondsToTicks = function (seconds) {\n\t        var quarterTime = this._beatsToUnits(1);\n\t        var quarters = seconds / quarterTime;\n\t        return Math.round(quarters * Tone.Transport.PPQ);\n\t    };\n\t    /**\n\t\t *  Evaluate the time expression. Returns values in ticks\n\t\t *  @return {Ticks}\n\t\t */\n\t    Tone.TransportTime.prototype.valueOf = function () {\n\t        var val = this._secondsToTicks(this._expr());\n\t        return val + (this._plusNow ? Tone.Transport.ticks : 0);\n\t    };\n\t    /**\n\t\t *  Return the time in ticks.\n\t\t *  @return  {Ticks}\n\t\t */\n\t    Tone.TransportTime.prototype.toTicks = function () {\n\t        return this.valueOf();\n\t    };\n\t    /**\n\t\t *  Return the time in seconds.\n\t\t *  @return  {Seconds}\n\t\t */\n\t    Tone.TransportTime.prototype.toSeconds = function () {\n\t        var val = this._expr();\n\t        return val + (this._plusNow ? Tone.Transport.seconds : 0);\n\t    };\n\t    /**\n\t\t *  Return the time as a frequency value\n\t\t *  @return  {Frequency} \n\t\t */\n\t    Tone.TransportTime.prototype.toFrequency = function () {\n\t        return 1 / this.toSeconds();\n\t    };\n\t    return Tone.TransportTime;\n\t});\n\tModule(function (Tone) {\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tTYPES\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t * Units which a value can take on.\n\t\t * @enum {String}\n\t\t */\n\t    Tone.Type = {\n\t        /**\n\t\t\t *  Default units\n\t\t\t *  @typedef {Default}\n\t\t\t */\n\t        Default: 'number',\n\t        /**\n\t\t\t *  Time can be described in a number of ways. Read more [Time](https://github.com/Tonejs/Tone.js/wiki/Time).\n\t\t\t *\n\t\t\t *  * Numbers, which will be taken literally as the time (in seconds).\n\t\t\t *  * Notation, (\"4n\", \"8t\") describes time in BPM and time signature relative values.\n\t\t\t *  * TransportTime, (\"4:3:2\") will also provide tempo and time signature relative times\n\t\t\t *  in the form BARS:QUARTERS:SIXTEENTHS.\n\t\t\t *  * Frequency, (\"8hz\") is converted to the length of the cycle in seconds.\n\t\t\t *  * Now-Relative, (\"+1\") prefix any of the above with \"+\" and it will be interpreted as\n\t\t\t *  \"the current time plus whatever expression follows\".\n\t\t\t *  * Expressions, (\"3:0 + 2 - (1m / 7)\") any of the above can also be combined\n\t\t\t *  into a mathematical expression which will be evaluated to compute the desired time.\n\t\t\t *  * No Argument, for methods which accept time, no argument will be interpreted as\n\t\t\t *  \"now\" (i.e. the currentTime).\n\t\t\t *\n\t\t\t *  @typedef {Time}\n\t\t\t */\n\t        Time: 'time',\n\t        /**\n\t\t\t *  Frequency can be described similar to time, except ultimately the\n\t\t\t *  values are converted to frequency instead of seconds. A number\n\t\t\t *  is taken literally as the value in hertz. Additionally any of the\n\t\t\t *  Time encodings can be used. Note names in the form\n\t\t\t *  of NOTE OCTAVE (i.e. C4) are also accepted and converted to their\n\t\t\t *  frequency value.\n\t\t\t *  @typedef {Frequency}\n\t\t\t */\n\t        Frequency: 'frequency',\n\t        /**\n\t\t\t *  TransportTime describes a position along the Transport's timeline. It is\n\t\t\t *  similar to Time in that it uses all the same encodings, but TransportTime specifically\n\t\t\t *  pertains to the Transport's timeline, which is startable, stoppable, loopable, and seekable.\n\t\t\t *  [Read more](https://github.com/Tonejs/Tone.js/wiki/TransportTime)\n\t\t\t *  @typedef {TransportTime}\n\t\t\t */\n\t        TransportTime: 'transportTime',\n\t        /**\n\t\t\t *  Ticks are the basic subunit of the Transport. They are\n\t\t\t *  the smallest unit of time that the Transport supports.\n\t\t\t *  @typedef {Ticks}\n\t\t\t */\n\t        Ticks: 'ticks',\n\t        /**\n\t\t\t *  Normal values are within the range [0, 1].\n\t\t\t *  @typedef {NormalRange}\n\t\t\t */\n\t        NormalRange: 'normalRange',\n\t        /**\n\t\t\t *  AudioRange values are between [-1, 1].\n\t\t\t *  @typedef {AudioRange}\n\t\t\t */\n\t        AudioRange: 'audioRange',\n\t        /**\n\t\t\t *  Decibels are a logarithmic unit of measurement which is useful for volume\n\t\t\t *  because of the logarithmic way that we perceive loudness. 0 decibels\n\t\t\t *  means no change in volume. -10db is approximately half as loud and 10db\n\t\t\t *  is twice is loud.\n\t\t\t *  @typedef {Decibels}\n\t\t\t */\n\t        Decibels: 'db',\n\t        /**\n\t\t\t *  Half-step note increments, i.e. 12 is an octave above the root. and 1 is a half-step up.\n\t\t\t *  @typedef {Interval}\n\t\t\t */\n\t        Interval: 'interval',\n\t        /**\n\t\t\t *  Beats per minute.\n\t\t\t *  @typedef {BPM}\n\t\t\t */\n\t        BPM: 'bpm',\n\t        /**\n\t\t\t *  The value must be greater than or equal to 0.\n\t\t\t *  @typedef {Positive}\n\t\t\t */\n\t        Positive: 'positive',\n\t        /**\n\t\t\t *  Gain is the ratio between input and output of a signal.\n\t\t\t *  A gain of 0 is the same as silencing the signal. A gain of\n\t\t\t *  1, causes no change to the incoming signal.\n\t\t\t *  @typedef {Gain}\n\t\t\t */\n\t        Gain: 'gain',\n\t        /**\n\t\t\t *  A cent is a hundredth of a semitone.\n\t\t\t *  @typedef {Cents}\n\t\t\t */\n\t        Cents: 'cents',\n\t        /**\n\t\t\t *  Angle between 0 and 360.\n\t\t\t *  @typedef {Degrees}\n\t\t\t */\n\t        Degrees: 'degrees',\n\t        /**\n\t\t\t *  A number representing a midi note.\n\t\t\t *  @typedef {MIDI}\n\t\t\t */\n\t        MIDI: 'midi',\n\t        /**\n\t\t\t *  A colon-separated representation of time in the form of\n\t\t\t *  Bars:Beats:Sixteenths.\n\t\t\t *  @typedef {BarsBeatsSixteenths}\n\t\t\t */\n\t        BarsBeatsSixteenths: 'barsBeatsSixteenths',\n\t        /**\n\t\t\t *  Sampling is the reduction of a continuous signal to a discrete signal.\n\t\t\t *  Audio is typically sampled 44100 times per second.\n\t\t\t *  @typedef {Samples}\n\t\t\t */\n\t        Samples: 'samples',\n\t        /**\n\t\t\t *  Hertz are a frequency representation defined as one cycle per second.\n\t\t\t *  @typedef {Hertz}\n\t\t\t */\n\t        Hertz: 'hertz',\n\t        /**\n\t\t\t *  A frequency represented by a letter name,\n\t\t\t *  accidental and octave. This system is known as\n\t\t\t *  [Scientific Pitch Notation](https://en.wikipedia.org/wiki/Scientific_pitch_notation).\n\t\t\t *  @typedef {Note}\n\t\t\t */\n\t        Note: 'note',\n\t        /**\n\t\t\t *  One millisecond is a thousandth of a second.\n\t\t\t *  @typedef {Milliseconds}\n\t\t\t */\n\t        Milliseconds: 'milliseconds',\n\t        /**\n\t\t\t *  Seconds are the time unit of the AudioContext. In the end,\n\t\t\t *  all values need to be evaluated to seconds.\n\t\t\t *  @typedef {Seconds}\n\t\t\t */\n\t        Seconds: 'seconds',\n\t        /**\n\t\t\t *  A string representing a duration relative to a measure.\n\t\t\t *  * \"4n\" = quarter note\n\t\t\t *  * \"2m\" = two measures\n\t\t\t *  * \"8t\" = eighth-note triplet\n\t\t\t *  @typedef {Notation}\n\t\t\t */\n\t        Notation: 'notation'\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    // AUGMENT TONE's PROTOTYPE\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Convert Time into seconds.\n\t\t *\n\t\t *  Unlike the method which it overrides, this takes into account\n\t\t *  transporttime and musical notation.\n\t\t *\n\t\t *  Time : 1.40\n\t\t *  Notation: 4n or 1m or 2t\n\t\t *  Now Relative: +3n\n\t\t *  Math: 3n+16n or even complicated expressions ((3n*2)/6 + 1)\n\t\t *\n\t\t *  @param  {Time} time\n\t\t *  @return {Seconds}\n\t\t */\n\t    Tone.prototype.toSeconds = function (time) {\n\t        if (Tone.isNumber(time)) {\n\t            return time;\n\t        } else if (Tone.isUndef(time)) {\n\t            return this.now();\n\t        } else if (Tone.isString(time)) {\n\t            return new Tone.Time(time).toSeconds();\n\t        } else if (time instanceof Tone.TimeBase) {\n\t            return time.toSeconds();\n\t        }\n\t    };\n\t    /**\n\t\t *  Convert a frequency representation into a number.\n\t\t *  @param  {Frequency} freq\n\t\t *  @return {Hertz}      the frequency in hertz\n\t\t */\n\t    Tone.prototype.toFrequency = function (freq) {\n\t        if (Tone.isNumber(freq)) {\n\t            return freq;\n\t        } else if (Tone.isString(freq) || Tone.isUndef(freq)) {\n\t            return new Tone.Frequency(freq).valueOf();\n\t        } else if (freq instanceof Tone.TimeBase) {\n\t            return freq.toFrequency();\n\t        }\n\t    };\n\t    /**\n\t\t *  Convert a time representation into ticks.\n\t\t *  @param  {Time} time\n\t\t *  @return {Ticks}  the time in ticks\n\t\t */\n\t    Tone.prototype.toTicks = function (time) {\n\t        if (Tone.isNumber(time) || Tone.isString(time)) {\n\t            return new Tone.TransportTime(time).toTicks();\n\t        } else if (Tone.isUndef(time)) {\n\t            return Tone.Transport.ticks;\n\t        } else if (time instanceof Tone.TimeBase) {\n\t            return time.toTicks();\n\t        }\n\t    };\n\t    return Tone;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Param wraps the native Web Audio's AudioParam to provide\n\t\t *         additional unit conversion functionality. It also\n\t\t *         serves as a base-class for classes which have a single,\n\t\t *         automatable parameter.\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @param  {AudioParam}  param  The parameter to wrap.\n\t\t *  @param  {Tone.Type} units The units of the audio param.\n\t\t *  @param  {Boolean} convert If the param should be converted.\n\t\t */\n\t    Tone.Param = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'param',\n\t            'units',\n\t            'convert'\n\t        ], Tone.Param);\n\t        Tone.AudioNode.call(this);\n\t        /**\n\t\t\t *  The native parameter to control\n\t\t\t *  @type  {AudioParam}\n\t\t\t *  @private\n\t\t\t */\n\t        this._param = this.input = options.param;\n\t        /**\n\t\t\t *  The units of the parameter\n\t\t\t *  @type {Tone.Type}\n\t\t\t */\n\t        this.units = options.units;\n\t        /**\n\t\t\t *  If the value should be converted or not\n\t\t\t *  @type {Boolean}\n\t\t\t */\n\t        this.convert = options.convert;\n\t        /**\n\t\t\t *  True if the signal value is being overridden by\n\t\t\t *  a connected signal.\n\t\t\t *  @readOnly\n\t\t\t *  @type  {boolean}\n\t\t\t *  @private\n\t\t\t */\n\t        this.overridden = false;\n\t        if (!Tone.isUndef(options.value)) {\n\t            this.value = options.value;\n\t        }\n\t    };\n\t    Tone.extend(Tone.Param, Tone.AudioNode);\n\t    /**\n\t\t *  Defaults\n\t\t *  @type  {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.Param.defaults = {\n\t        'units': Tone.Type.Default,\n\t        'convert': true,\n\t        'param': undefined\n\t    };\n\t    /**\n\t\t * The current value of the parameter.\n\t\t * @memberOf Tone.Param#\n\t\t * @type {Number}\n\t\t * @name value\n\t\t */\n\t    Object.defineProperty(Tone.Param.prototype, 'value', {\n\t        get: function () {\n\t            return this._toUnits(this._param.value);\n\t        },\n\t        set: function (value) {\n\t            var convertedVal = this._fromUnits(value);\n\t            this._param.cancelScheduledValues(0);\n\t            this._param.value = convertedVal;\n\t        }\n\t    });\n\t    /**\n\t\t *  Convert the given value from the type specified by Tone.Param.units\n\t\t *  into the destination value (such as Gain or Frequency).\n\t\t *  @private\n\t\t *  @param  {*} val the value to convert\n\t\t *  @return {number}     the number which the value should be set to\n\t\t */\n\t    Tone.Param.prototype._fromUnits = function (val) {\n\t        if (this.convert || Tone.isUndef(this.convert)) {\n\t            switch (this.units) {\n\t            case Tone.Type.Time:\n\t                return this.toSeconds(val);\n\t            case Tone.Type.Frequency:\n\t                return this.toFrequency(val);\n\t            case Tone.Type.Decibels:\n\t                return Tone.dbToGain(val);\n\t            case Tone.Type.NormalRange:\n\t                return Math.min(Math.max(val, 0), 1);\n\t            case Tone.Type.AudioRange:\n\t                return Math.min(Math.max(val, -1), 1);\n\t            case Tone.Type.Positive:\n\t                return Math.max(val, 0);\n\t            default:\n\t                return val;\n\t            }\n\t        } else {\n\t            return val;\n\t        }\n\t    };\n\t    /**\n\t\t * Convert the parameters value into the units specified by Tone.Param.units.\n\t\t * @private\n\t\t * @param  {number} val the value to convert\n\t\t * @return {number}\n\t\t */\n\t    Tone.Param.prototype._toUnits = function (val) {\n\t        if (this.convert || Tone.isUndef(this.convert)) {\n\t            switch (this.units) {\n\t            case Tone.Type.Decibels:\n\t                return Tone.gainToDb(val);\n\t            default:\n\t                return val;\n\t            }\n\t        } else {\n\t            return val;\n\t        }\n\t    };\n\t    /**\n\t\t *  the minimum output value\n\t\t *  @type {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.Param.prototype._minOutput = 0.00001;\n\t    /**\n\t\t *  Schedules a parameter value change at the given time.\n\t\t *  @param {*}\tvalue The value to set the signal.\n\t\t *  @param {Time}  time The time when the change should occur.\n\t\t *  @returns {Tone.Param} this\n\t\t *  @example\n\t\t * //set the frequency to \"G4\" in exactly 1 second from now.\n\t\t * freq.setValueAtTime(\"G4\", \"+1\");\n\t\t */\n\t    Tone.Param.prototype.setValueAtTime = function (value, time) {\n\t        time = this.toSeconds(time);\n\t        Tone.isPast(time);\n\t        this._param.setValueAtTime(this._fromUnits(value), time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Creates a schedule point with the current value at the current time.\n\t\t *  This is useful for creating an automation anchor point in order to\n\t\t *  schedule changes from the current value.\n\t\t *\n\t\t *  @param {number=} now (Optionally) pass the now value in.\n\t\t *  @returns {Tone.Param} this\n\t\t */\n\t    Tone.Param.prototype.setRampPoint = function (now) {\n\t        now = Tone.defaultArg(now, this.now());\n\t        this.cancelAndHoldAtTime(this.context.currentTime);\n\t        var currentVal = this._param.value;\n\t        if (currentVal === 0) {\n\t            currentVal = this._minOutput;\n\t        }\n\t        // cancel and hold at the given time\n\t        this._param.setValueAtTime(currentVal, now);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Schedules a linear continuous change in parameter value from the\n\t\t *  previous scheduled parameter value to the given value.\n\t\t *\n\t\t *  @param  {number} value\n\t\t *  @param  {Time} endTime\n\t\t *  @returns {Tone.Param} this\n\t\t */\n\t    Tone.Param.prototype.linearRampToValueAtTime = function (value, endTime) {\n\t        value = this._fromUnits(value);\n\t        endTime = this.toSeconds(endTime);\n\t        Tone.isPast(endTime);\n\t        this._param.linearRampToValueAtTime(value, endTime);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Schedules an exponential continuous change in parameter value from\n\t\t *  the previous scheduled parameter value to the given value.\n\t\t *\n\t\t *  @param  {number} value\n\t\t *  @param  {Time} endTime\n\t\t *  @returns {Tone.Param} this\n\t\t */\n\t    Tone.Param.prototype.exponentialRampToValueAtTime = function (value, endTime) {\n\t        value = this._fromUnits(value);\n\t        value = Math.max(this._minOutput, value);\n\t        endTime = this.toSeconds(endTime);\n\t        Tone.isPast(endTime);\n\t        this._param.exponentialRampToValueAtTime(value, endTime);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Schedules an exponential continuous change in parameter value from\n\t\t *  the current time and current value to the given value over the\n\t\t *  duration of the rampTime.\n\t\t *\n\t\t *  @param  {number} value   The value to ramp to.\n\t\t *  @param  {Time} rampTime the time that it takes the\n\t\t *                               value to ramp from it's current value\n\t\t *  @param {Time}\t[startTime=now] \tWhen the ramp should start.\n\t\t *  @returns {Tone.Param} this\n\t\t *  @example\n\t\t * //exponentially ramp to the value 2 over 4 seconds.\n\t\t * signal.exponentialRampTo(2, 4);\n\t\t */\n\t    Tone.Param.prototype.exponentialRampTo = function (value, rampTime, startTime) {\n\t        startTime = this.toSeconds(startTime);\n\t        this.setRampPoint(startTime);\n\t        this.exponentialRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Schedules an linear continuous change in parameter value from\n\t\t *  the current time and current value to the given value over the\n\t\t *  duration of the rampTime.\n\t\t *\n\t\t *  @param  {number} value   The value to ramp to.\n\t\t *  @param  {Time} rampTime the time that it takes the\n\t\t *                               value to ramp from it's current value\n\t\t *  @param {Time}\t[startTime=now] \tWhen the ramp should start.\n\t\t *  @returns {Tone.Param} this\n\t\t *  @example\n\t\t * //linearly ramp to the value 4 over 3 seconds.\n\t\t * signal.linearRampTo(4, 3);\n\t\t */\n\t    Tone.Param.prototype.linearRampTo = function (value, rampTime, startTime) {\n\t        startTime = this.toSeconds(startTime);\n\t        this.setRampPoint(startTime);\n\t        this.linearRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n\t        return this;\n\t    };\n\t    /**\n\t\t * Convert between Time and time constant. The time\n\t\t * constant returned can be used in setTargetAtTime.\n\t\t * @param  {Time} time The time to convert\n\t\t * @return {Number}      The time constant to get an exponentially approaching\n\t\t *                           curve to over 99% of towards the target value.\n\t\t */\n\t    Tone.Param.prototype.getTimeConstant = function (time) {\n\t        return Math.log(this.toSeconds(time) + 1) / Math.log(200);\n\t    };\n\t    /**\n\t\t *  Start exponentially approaching the target value at the given time. Since it\n\t\t *  is an exponential approach it will continue approaching after the ramp duration. The\n\t\t *  rampTime is the time that it takes to reach over 99% of the way towards the value.\n\t\t *  @param  {number} value   The value to ramp to.\n\t\t *  @param  {Time} rampTime the time that it takes the\n\t\t *                               value to ramp from it's current value\n\t\t *  @param {Time}\t[startTime=now] \tWhen the ramp should start.\n\t\t *  @returns {Tone.Param} this\n\t\t *  @example\n\t\t * //exponentially ramp to the value 2 over 4 seconds.\n\t\t * signal.exponentialRampTo(2, 4);\n\t\t */\n\t    Tone.Param.prototype.targetRampTo = function (value, rampTime, startTime) {\n\t        startTime = this.toSeconds(startTime);\n\t        this.setRampPoint(startTime);\n\t        this.setTargetAtTime(value, startTime, this.getTimeConstant(rampTime));\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Start exponentially approaching the target value at the given time with\n\t\t *  a rate having the given time constant.\n\t\t *  @param {number} value\n\t\t *  @param {Time} startTime\n\t\t *  @param {number} timeConstant\n\t\t *  @returns {Tone.Param} this\n\t\t */\n\t    Tone.Param.prototype.setTargetAtTime = function (value, startTime, timeConstant) {\n\t        value = this._fromUnits(value);\n\t        // The value will never be able to approach without timeConstant > 0.\n\t        // http://www.w3.org/TR/webaudio/#dfn-setTargetAtTime, where the equation\n\t        // is described. 0 results in a division by 0.\n\t        value = Math.max(this._minOutput, value);\n\t        timeConstant = Math.max(this._minOutput, timeConstant);\n\t        this._param.setTargetAtTime(value, this.toSeconds(startTime), timeConstant);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Sets an array of arbitrary parameter values starting at the given time\n\t\t *  for the given duration.\n\t\t *\n\t\t *  @param {Array} values\n\t\t *  @param {Time} startTime\n\t\t *  @param {Time} duration\n\t\t *  @returns {Tone.Param} this\n\t\t */\n\t    Tone.Param.prototype.setValueCurveAtTime = function (values, startTime, duration) {\n\t        duration = this.toSeconds(duration);\n\t        startTime = this.toSeconds(startTime);\n\t        this.setValueAtTime(values[0], startTime);\n\t        var segTime = duration / (values.length - 1);\n\t        for (var i = 1; i < values.length; i++) {\n\t            this._param.linearRampToValueAtTime(this._fromUnits(values[i]), startTime + i * segTime);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Cancels all scheduled parameter changes with times greater than or\n\t\t *  equal to startTime.\n\t\t *\n\t\t *  @param  {Time} startTime\n\t\t *  @returns {Tone.Param} this\n\t\t */\n\t    Tone.Param.prototype.cancelScheduledValues = function (startTime) {\n\t        this._param.cancelScheduledValues(this.toSeconds(startTime));\n\t        return this;\n\t    };\n\t    /**\n\t\t *  This is similar to [cancelScheduledValues](#cancelScheduledValues) except\n\t\t *  it holds the automated value at cancelTime until the next automated event.\n\t\t *  @param  {Time} cancelTime\n\t\t *  @returns {Tone.Param} this\n\t\t */\n\t    Tone.Param.prototype.cancelAndHoldAtTime = function (cancelTime) {\n\t        cancelTime = this.toSeconds(cancelTime);\n\t        if (this._param.cancelAndHoldAtTime) {\n\t            this._param.cancelAndHoldAtTime(cancelTime);\n\t        } else {\n\t            //fallback for unsupported browsers\n\t            //can't cancel and hold at any time in the future\n\t            //just do it immediately for gapless automation curves\n\t            var now = this.context.currentTime;\n\t            this._param.cancelScheduledValues(now);\n\t            var currentVal = this._param.value;\n\t            if (currentVal === 0) {\n\t                currentVal = this._minOutput;\n\t            }\n\t            this._param.setValueAtTime(currentVal, now + this.sampleTime);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Ramps to the given value over the duration of the rampTime.\n\t\t *  Automatically selects the best ramp type (exponential or linear)\n\t\t *  depending on the `units` of the signal\n\t\t *\n\t\t *  @param  {number} value\n\t\t *  @param  {Time} rampTime \tThe time that it takes the\n\t\t *                              value to ramp from it's current value\n\t\t *  @param {Time}\t[startTime=now] \tWhen the ramp should start.\n\t\t *  @returns {Tone.Param} this\n\t\t *  @example\n\t\t * //ramp to the value either linearly or exponentially\n\t\t * //depending on the \"units\" value of the signal\n\t\t * signal.rampTo(0, 10);\n\t\t *  @example\n\t\t * //schedule it to ramp starting at a specific time\n\t\t * signal.rampTo(0, 10, 5)\n\t\t */\n\t    Tone.Param.prototype.rampTo = function (value, rampTime, startTime) {\n\t        rampTime = Tone.defaultArg(rampTime, 0.1);\n\t        if (this.units === Tone.Type.Frequency || this.units === Tone.Type.BPM || this.units === Tone.Type.Decibels) {\n\t            this.exponentialRampTo(value, rampTime, startTime);\n\t        } else {\n\t            this.linearRampTo(value, rampTime, startTime);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Clean up\n\t\t *  @returns {Tone.Param} this\n\t\t */\n\t    Tone.Param.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._param = null;\n\t        return this;\n\t    };\n\t    return Tone.Param;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  createGain shim\n\t\t *  @private\n\t\t */\n\t    if (window.GainNode && !AudioContext.prototype.createGain) {\n\t        AudioContext.prototype.createGain = AudioContext.prototype.createGainNode;\n\t    }\n\t    /**\n\t\t *  @class A thin wrapper around the Native Web Audio GainNode.\n\t\t *         The GainNode is a basic building block of the Web Audio\n\t\t *         API and is useful for routing audio and adjusting gains.\n\t\t *  @extends {Tone}\n\t\t *  @param  {Number=}  gain  The initial gain of the GainNode\n\t\t *  @param {Tone.Type=} units The units of the gain parameter.\n\t\t */\n\t    Tone.Gain = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'gain',\n\t            'units'\n\t        ], Tone.Gain);\n\t        Tone.AudioNode.call(this);\n\t        /**\n\t\t\t *  The GainNode\n\t\t\t *  @type  {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this.input = this.output = this._gainNode = this.context.createGain();\n\t        /**\n\t\t\t *  The gain parameter of the gain node.\n\t\t\t *  @type {Gain}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.gain = new Tone.Param({\n\t            'param': this._gainNode.gain,\n\t            'units': options.units,\n\t            'value': options.gain,\n\t            'convert': options.convert\n\t        });\n\t        this._readOnly('gain');\n\t    };\n\t    Tone.extend(Tone.Gain, Tone.AudioNode);\n\t    /**\n\t\t *  The defaults\n\t\t *  @const\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.Gain.defaults = {\n\t        'gain': 1,\n\t        'convert': true\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return  {Tone.Gain}  this\n\t\t */\n\t    Tone.Gain.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._gainNode.disconnect();\n\t        this._gainNode = null;\n\t        this._writable('gain');\n\t        this.gain.dispose();\n\t        this.gain = null;\n\t    };\n\t    return Tone.Gain;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  A signal is an audio-rate value. Tone.Signal is a core component of the library.\n\t\t *          Unlike a number, Signals can be scheduled with sample-level accuracy. Tone.Signal\n\t\t *          has all of the methods available to native Web Audio \n\t\t *          [AudioParam](http://webaudio.github.io/web-audio-api/#the-audioparam-interface)\n\t\t *          as well as additional conveniences. Read more about working with signals \n\t\t *          [here](https://github.com/Tonejs/Tone.js/wiki/Signals).\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Param}\n\t\t *  @param {Number|AudioParam} [value] Initial value of the signal. If an AudioParam\n\t\t *                                     is passed in, that parameter will be wrapped\n\t\t *                                     and controlled by the Signal. \n\t\t *  @param {string} [units=Number] unit The units the signal is in. \n\t\t *  @example\n\t\t * var signal = new Tone.Signal(10);\n\t\t */\n\t    Tone.Signal = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'value',\n\t            'units'\n\t        ], Tone.Signal);\n\t        var gainNode = Tone.context.createGain();\n\t        options.param = gainNode.gain;\n\t        Tone.Param.call(this, options);\n\t        /**\n\t\t\t * The node where the constant signal value is scaled.\n\t\t\t * @type {GainNode}\n\t\t\t * @private\n\t\t\t */\n\t        this.output = gainNode;\n\t        /**\n\t\t\t * The node where the value is set.\n\t\t\t * @type {Tone.Param}\n\t\t\t * @private\n\t\t\t */\n\t        this.input = this._param = this.output.gain;\n\t        //connect the const output to the node output\n\t        this.context.getConstant(1).connect(this.output);\n\t    };\n\t    Tone.extend(Tone.Signal, Tone.Param);\n\t    /**\n\t\t *  The default values\n\t\t *  @type  {Object}\n\t\t *  @static\n\t\t *  @const\n\t\t */\n\t    Tone.Signal.defaults = {\n\t        'value': 0,\n\t        'units': Tone.Type.Default,\n\t        'convert': true\n\t    };\n\t    /**\n\t\t *  When signals connect to other signals or AudioParams, \n\t\t *  they take over the output value of that signal or AudioParam. \n\t\t *  For all other nodes, the behavior is the same as a default <code>connect</code>. \n\t\t *\n\t\t *  @override\n\t\t *  @param {AudioParam|AudioNode|Tone.Signal|Tone} node \n\t\t *  @param {number} [outputNumber=0] The output number to connect from.\n\t\t *  @param {number} [inputNumber=0] The input number to connect to.\n\t\t *  @returns {Tone.SignalBase} this\n\t\t *  @method\n\t\t */\n\t    Tone.Signal.prototype.connect = Tone.SignalBase.prototype.connect;\n\t    /**\n\t\t *  dispose and disconnect\n\t\t *  @returns {Tone.Signal} this\n\t\t */\n\t    Tone.Signal.prototype.dispose = function () {\n\t        Tone.Param.prototype.dispose.call(this);\n\t        return this;\n\t    };\n\t    return Tone.Signal;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class A signal which adds the method getValueAtTime.\n\t\t *         Code and inspiration from https://github.com/jsantell/web-audio-automation-timeline\n\t\t *  @extends {Tone.Signal}\n\t\t *  @param {Number=} value The initial value of the signal\n\t\t *  @param {String=} units The conversion units of the signal.\n\t\t */\n\t    Tone.TimelineSignal = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'value',\n\t            'units'\n\t        ], Tone.Signal);\n\t        Tone.Signal.call(this, options);\n\t        /**\n\t\t\t *  The scheduled events\n\t\t\t *  @type {Tone.Timeline}\n\t\t\t *  @private\n\t\t\t */\n\t        this._events = new Tone.Timeline(100);\n\t        /**\n\t\t\t *  The initial scheduled value\n\t\t\t *  @type {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._initial = this._fromUnits(this._param.value);\n\t        this.value = options.value;\n\t        //delete the input node so that nothing can overwrite the signal value\n\t        delete this.input;\n\t    };\n\t    Tone.extend(Tone.TimelineSignal, Tone.Signal);\n\t    /**\n\t\t *  The event types of a schedulable signal.\n\t\t *  @enum {String}\n\t\t *  @private\n\t\t */\n\t    Tone.TimelineSignal.Type = {\n\t        Linear: 'linear',\n\t        Exponential: 'exponential',\n\t        Target: 'target',\n\t        Set: 'set'\n\t    };\n\t    /**\n\t\t * The current value of the signal.\n\t\t * @memberOf Tone.TimelineSignal#\n\t\t * @type {Number}\n\t\t * @name value\n\t\t */\n\t    Object.defineProperty(Tone.TimelineSignal.prototype, 'value', {\n\t        get: function () {\n\t            var now = this.now();\n\t            var val = this.getValueAtTime(now);\n\t            return this._toUnits(val);\n\t        },\n\t        set: function (value) {\n\t            if (this._events) {\n\t                var convertedVal = this._fromUnits(value);\n\t                this._initial = convertedVal;\n\t                this.cancelScheduledValues();\n\t                this._param.value = convertedVal;\n\t            }\n\t        }\n\t    });\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tSCHEDULING\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Schedules a parameter value change at the given time.\n\t\t *  @param {*}\tvalue The value to set the signal.\n\t\t *  @param {Time}  time The time when the change should occur.\n\t\t *  @returns {Tone.TimelineSignal} this\n\t\t *  @example\n\t\t * //set the frequency to \"G4\" in exactly 1 second from now.\n\t\t * freq.setValueAtTime(\"G4\", \"+1\");\n\t\t */\n\t    Tone.TimelineSignal.prototype.setValueAtTime = function (value, startTime) {\n\t        value = this._fromUnits(value);\n\t        startTime = this.toSeconds(startTime);\n\t        this._events.add({\n\t            'type': Tone.TimelineSignal.Type.Set,\n\t            'value': value,\n\t            'time': startTime\n\t        });\n\t        //invoke the original event\n\t        this._param.setValueAtTime(value, startTime);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Schedules a linear continuous change in parameter value from the\n\t\t *  previous scheduled parameter value to the given value.\n\t\t *\n\t\t *  @param  {number} value\n\t\t *  @param  {Time} endTime\n\t\t *  @returns {Tone.TimelineSignal} this\n\t\t */\n\t    Tone.TimelineSignal.prototype.linearRampToValueAtTime = function (value, endTime) {\n\t        value = this._fromUnits(value);\n\t        endTime = this.toSeconds(endTime);\n\t        this._events.add({\n\t            'type': Tone.TimelineSignal.Type.Linear,\n\t            'value': value,\n\t            'time': endTime\n\t        });\n\t        this._param.linearRampToValueAtTime(value, endTime);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Schedules an exponential continuous change in parameter value from\n\t\t *  the previous scheduled parameter value to the given value.\n\t\t *\n\t\t *  @param  {number} value\n\t\t *  @param  {Time} endTime\n\t\t *  @returns {Tone.TimelineSignal} this\n\t\t */\n\t    Tone.TimelineSignal.prototype.exponentialRampToValueAtTime = function (value, endTime) {\n\t        //get the previous event and make sure it's not starting from 0\n\t        endTime = this.toSeconds(endTime);\n\t        var beforeEvent = this._searchBefore(endTime);\n\t        if (beforeEvent && beforeEvent.value === 0) {\n\t            //reschedule that event\n\t            this.setValueAtTime(this._minOutput, beforeEvent.time);\n\t        }\n\t        value = this._fromUnits(value);\n\t        var setValue = Math.max(value, this._minOutput);\n\t        this._events.add({\n\t            'type': Tone.TimelineSignal.Type.Exponential,\n\t            'value': setValue,\n\t            'time': endTime\n\t        });\n\t        //if the ramped to value is 0, make it go to the min output, and then set to 0.\n\t        if (value < this._minOutput) {\n\t            this._param.exponentialRampToValueAtTime(this._minOutput, endTime - this.sampleTime);\n\t            this.setValueAtTime(0, endTime);\n\t        } else {\n\t            this._param.exponentialRampToValueAtTime(value, endTime);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Start exponentially approaching the target value at the given time with\n\t\t *  a rate having the given time constant.\n\t\t *  @param {number} value\n\t\t *  @param {Time} startTime\n\t\t *  @param {number} timeConstant\n\t\t *  @returns {Tone.TimelineSignal} this\n\t\t */\n\t    Tone.TimelineSignal.prototype.setTargetAtTime = function (value, startTime, timeConstant) {\n\t        value = this._fromUnits(value);\n\t        value = Math.max(this._minOutput, value);\n\t        timeConstant = Math.max(this._minOutput, timeConstant);\n\t        startTime = this.toSeconds(startTime);\n\t        this._events.add({\n\t            'type': Tone.TimelineSignal.Type.Target,\n\t            'value': value,\n\t            'time': startTime,\n\t            'constant': timeConstant\n\t        });\n\t        this._param.setTargetAtTime(value, startTime, timeConstant);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Set an array of arbitrary values starting at the given time for the given duration.\n\t\t *  @param {Float32Array} values\n\t\t *  @param {Time} startTime\n\t\t *  @param {Time} duration\n\t\t *  @param {NormalRange} [scaling=1] If the values in the curve should be scaled by some value\n\t\t *  @returns {Tone.TimelineSignal} this\n\t\t */\n\t    Tone.TimelineSignal.prototype.setValueCurveAtTime = function (values, startTime, duration, scaling) {\n\t        scaling = Tone.defaultArg(scaling, 1);\n\t        duration = this.toSeconds(duration);\n\t        startTime = this.toSeconds(startTime);\n\t        var segTime = duration / (values.length - 1);\n\t        this.setValueAtTime(values[0] * scaling, startTime);\n\t        for (var i = 1; i < values.length; i++) {\n\t            this.linearRampToValueAtTime(values[i] * scaling, startTime + i * segTime);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Cancels all scheduled parameter changes with times greater than or\n\t\t *  equal to startTime.\n\t\t *  @param  {Time} startTime\n\t\t *  @returns {Tone.TimelineSignal} this\n\t\t */\n\t    Tone.TimelineSignal.prototype.cancelScheduledValues = function (after) {\n\t        after = this.toSeconds(after);\n\t        this._events.cancel(after);\n\t        this._param.cancelScheduledValues(after);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Cancels all scheduled parameter changes with times greater than or\n\t\t *  equal to cancelTime and sets the output of the signal to be the value\n\t\t *  at cancelTime. Similar to (cancelScheduledValues)[#cancelscheduledvalues].\n\t\t *  @param  {Time} cancelTime\n\t\t *  @returns {Tone.TimelineSignal} this\n\t\t */\n\t    Tone.TimelineSignal.prototype.cancelAndHoldAtTime = function (cancelTime) {\n\t        this.setRampPoint(this.toSeconds(cancelTime));\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Sets the computed value at the given time. This provides\n\t\t *  a point from which a linear or exponential curve\n\t\t *  can be scheduled after. Will cancel events after\n\t\t *  the given time and shorten the currently scheduled\n\t\t *  linear or exponential ramp so that it ends at `time` .\n\t\t *  This is to avoid discontinuities and clicks in envelopes.\n\t\t *  @param {Time} time When to set the ramp point\n\t\t *  @returns {Tone.TimelineSignal} this\n\t\t */\n\t    Tone.TimelineSignal.prototype.setRampPoint = function (time) {\n\t        time = this.toSeconds(time);\n\t        //get the value at the given time\n\t        var val = this._toUnits(this.getValueAtTime(time));\n\t        //if there is an event at the given time\n\t        //and that even is not a \"set\"\n\t        var before = this._searchBefore(time);\n\t        if (before && before.time === time) {\n\t            //remove everything after\n\t            this.cancelScheduledValues(time + this.sampleTime);\n\t        } else {\n\t            //reschedule the next event to end at the given time\n\t            var after = this._searchAfter(time);\n\t            if (after) {\n\t                //cancel the next event(s)\n\t                this.cancelScheduledValues(time);\n\t                if (after.type === Tone.TimelineSignal.Type.Linear) {\n\t                    this.linearRampToValueAtTime(val, time);\n\t                } else if (after.type === Tone.TimelineSignal.Type.Exponential) {\n\t                    this.exponentialRampToValueAtTime(val, time);\n\t                }\n\t            }\n\t        }\n\t        this.setValueAtTime(val, time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Do a linear ramp to the given value between the start and finish times.\n\t\t *  @param {Number} value The value to ramp to.\n\t\t *  @param {Time} start The beginning anchor point to do the linear ramp\n\t\t *  @param {Time} finish The ending anchor point by which the value of\n\t\t *                       the signal will equal the given value.\n\t\t *  @returns {Tone.TimelineSignal} this\n\t\t */\n\t    Tone.TimelineSignal.prototype.linearRampToValueBetween = function (value, start, finish) {\n\t        this.setRampPoint(start);\n\t        this.linearRampToValueAtTime(value, finish);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Do a exponential ramp to the given value between the start and finish times.\n\t\t *  @param {Number} value The value to ramp to.\n\t\t *  @param {Time} start The beginning anchor point to do the exponential ramp\n\t\t *  @param {Time} finish The ending anchor point by which the value of\n\t\t *                       the signal will equal the given value.\n\t\t *  @returns {Tone.TimelineSignal} this\n\t\t */\n\t    Tone.TimelineSignal.prototype.exponentialRampToValueBetween = function (value, start, finish) {\n\t        this.setRampPoint(start);\n\t        this.exponentialRampToValueAtTime(value, finish);\n\t        return this;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tGETTING SCHEDULED VALUES\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Returns the value before or equal to the given time\n\t\t *  @param  {Number}  time  The time to query\n\t\t *  @return  {Object}  The event at or before the given time.\n\t\t *  @private\n\t\t */\n\t    Tone.TimelineSignal.prototype._searchBefore = function (time) {\n\t        return this._events.get(time);\n\t    };\n\t    /**\n\t\t *  The event after the given time\n\t\t *  @param  {Number}  time  The time to query.\n\t\t *  @return  {Object}  The next event after the given time\n\t\t *  @private\n\t\t */\n\t    Tone.TimelineSignal.prototype._searchAfter = function (time) {\n\t        return this._events.getAfter(time);\n\t    };\n\t    /**\n\t\t *  Get the scheduled value at the given time. This will\n\t\t *  return the unconverted (raw) value.\n\t\t *  @param  {Number}  time  The time in seconds.\n\t\t *  @return  {Number}  The scheduled value at the given time.\n\t\t */\n\t    Tone.TimelineSignal.prototype.getValueAtTime = function (time) {\n\t        time = this.toSeconds(time);\n\t        var after = this._searchAfter(time);\n\t        var before = this._searchBefore(time);\n\t        var value = this._initial;\n\t        //if it was set by\n\t        if (before === null) {\n\t            value = this._initial;\n\t        } else if (before.type === Tone.TimelineSignal.Type.Target) {\n\t            var previous = this._events.getBefore(before.time);\n\t            var previousVal;\n\t            if (previous === null) {\n\t                previousVal = this._initial;\n\t            } else {\n\t                previousVal = previous.value;\n\t            }\n\t            value = this._exponentialApproach(before.time, previousVal, before.value, before.constant, time);\n\t        } else if (after === null) {\n\t            value = before.value;\n\t        } else if (after.type === Tone.TimelineSignal.Type.Linear) {\n\t            value = this._linearInterpolate(before.time, before.value, after.time, after.value, time);\n\t        } else if (after.type === Tone.TimelineSignal.Type.Exponential) {\n\t            value = this._exponentialInterpolate(before.time, before.value, after.time, after.value, time);\n\t        } else {\n\t            value = before.value;\n\t        }\n\t        return value;\n\t    };\n\t    /**\n\t\t *  When signals connect to other signals or AudioParams,\n\t\t *  they take over the output value of that signal or AudioParam.\n\t\t *  For all other nodes, the behavior is the same as a default <code>connect</code>.\n\t\t *\n\t\t *  @override\n\t\t *  @param {AudioParam|AudioNode|Tone.Signal|Tone} node\n\t\t *  @param {number} [outputNumber=0] The output number to connect from.\n\t\t *  @param {number} [inputNumber=0] The input number to connect to.\n\t\t *  @returns {Tone.TimelineSignal} this\n\t\t *  @method\n\t\t */\n\t    Tone.TimelineSignal.prototype.connect = Tone.SignalBase.prototype.connect;\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tAUTOMATION CURVE CALCULATIONS\n\t    //\tMIT License, copyright (c) 2014 Jordan Santell\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Calculates the the value along the curve produced by setTargetAtTime\n\t\t *  @private\n\t\t */\n\t    Tone.TimelineSignal.prototype._exponentialApproach = function (t0, v0, v1, timeConstant, t) {\n\t        return v1 + (v0 - v1) * Math.exp(-(t - t0) / timeConstant);\n\t    };\n\t    /**\n\t\t *  Calculates the the value along the curve produced by linearRampToValueAtTime\n\t\t *  @private\n\t\t */\n\t    Tone.TimelineSignal.prototype._linearInterpolate = function (t0, v0, t1, v1, t) {\n\t        return v0 + (v1 - v0) * ((t - t0) / (t1 - t0));\n\t    };\n\t    /**\n\t\t *  Calculates the the value along the curve produced by exponentialRampToValueAtTime\n\t\t *  @private\n\t\t */\n\t    Tone.TimelineSignal.prototype._exponentialInterpolate = function (t0, v0, t1, v1, t) {\n\t        v0 = Math.max(this._minOutput, v0);\n\t        return v0 * Math.pow(v1 / v0, (t - t0) / (t1 - t0));\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return {Tone.TimelineSignal} this\n\t\t */\n\t    Tone.TimelineSignal.prototype.dispose = function () {\n\t        Tone.Signal.prototype.dispose.call(this);\n\t        this._events.dispose();\n\t        this._events = null;\n\t    };\n\t    return Tone.TimelineSignal;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Pow applies an exponent to the incoming signal. The incoming signal\n\t\t *         must be AudioRange.\n\t\t *\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @constructor\n\t\t *  @param {Positive} exp The exponent to apply to the incoming signal, must be at least 2. \n\t\t *  @example\n\t\t * var pow = new Tone.Pow(2);\n\t\t * var sig = new Tone.Signal(0.5).connect(pow);\n\t\t * //output of pow is 0.25. \n\t\t */\n\t    Tone.Pow = function (exp) {\n\t        Tone.SignalBase.call(this);\n\t        /**\n\t\t\t * the exponent\n\t\t\t * @private\n\t\t\t * @type {number}\n\t\t\t */\n\t        this._exp = Tone.defaultArg(exp, 1);\n\t        /**\n\t\t\t *  @type {WaveShaperNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._expScaler = this.input = this.output = new Tone.WaveShaper(this._expFunc(this._exp), 8192);\n\t    };\n\t    Tone.extend(Tone.Pow, Tone.SignalBase);\n\t    /**\n\t\t * The value of the exponent.\n\t\t * @memberOf Tone.Pow#\n\t\t * @type {number}\n\t\t * @name value\n\t\t */\n\t    Object.defineProperty(Tone.Pow.prototype, 'value', {\n\t        get: function () {\n\t            return this._exp;\n\t        },\n\t        set: function (exp) {\n\t            this._exp = exp;\n\t            this._expScaler.setMap(this._expFunc(this._exp));\n\t        }\n\t    });\n\t    /**\n\t\t *  the function which maps the waveshaper\n\t\t *  @param   {number} exp\n\t\t *  @return {function}\n\t\t *  @private\n\t\t */\n\t    Tone.Pow.prototype._expFunc = function (exp) {\n\t        return function (val) {\n\t            return Math.pow(Math.abs(val), exp);\n\t        };\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Pow} this\n\t\t */\n\t    Tone.Pow.prototype.dispose = function () {\n\t        Tone.SignalBase.prototype.dispose.call(this);\n\t        this._expScaler.dispose();\n\t        this._expScaler = null;\n\t        return this;\n\t    };\n\t    return Tone.Pow;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Envelope is an [ADSR](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope)\n\t\t *          envelope generator. Tone.Envelope outputs a signal which\n\t\t *          can be connected to an AudioParam or Tone.Signal.\n\t\t *          <img src=\"https://upload.wikimedia.org/wikipedia/commons/e/ea/ADSR_parameter.svg\">\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @param {Time} [attack] The amount of time it takes for the envelope to go from\n\t\t *                         0 to it's maximum value.\n\t\t *  @param {Time} [decay]\tThe period of time after the attack that it takes for the envelope\n\t\t *                       \tto fall to the sustain value.\n\t\t *  @param {NormalRange} [sustain]\tThe percent of the maximum value that the envelope rests at until\n\t\t *                                \tthe release is triggered.\n\t\t *  @param {Time} [release]\tThe amount of time after the release is triggered it takes to reach 0.\n\t\t *  @example\n\t\t * //an amplitude envelope\n\t\t * var gainNode = Tone.context.createGain();\n\t\t * var env = new Tone.Envelope({\n\t\t * \t\"attack\" : 0.1,\n\t\t * \t\"decay\" : 0.2,\n\t\t * \t\"sustain\" : 1,\n\t\t * \t\"release\" : 0.8,\n\t\t * });\n\t\t * env.connect(gainNode.gain);\n\t\t */\n\t    Tone.Envelope = function () {\n\t        //get all of the defaults\n\t        var options = Tone.defaults(arguments, [\n\t            'attack',\n\t            'decay',\n\t            'sustain',\n\t            'release'\n\t        ], Tone.Envelope);\n\t        Tone.AudioNode.call(this);\n\t        /**\n\t\t\t *  When triggerAttack is called, the attack time is the amount of\n\t\t\t *  time it takes for the envelope to reach it's maximum value.\n\t\t\t *  @type {Time}\n\t\t\t */\n\t        this.attack = options.attack;\n\t        /**\n\t\t\t *  After the attack portion of the envelope, the value will fall\n\t\t\t *  over the duration of the decay time to it's sustain value.\n\t\t\t *  @type {Time}\n\t\t\t */\n\t        this.decay = options.decay;\n\t        /**\n\t\t\t * \tThe sustain value is the value\n\t\t\t * \twhich the envelope rests at after triggerAttack is\n\t\t\t * \tcalled, but before triggerRelease is invoked.\n\t\t\t *  @type {NormalRange}\n\t\t\t */\n\t        this.sustain = options.sustain;\n\t        /**\n\t\t\t *  After triggerRelease is called, the envelope's\n\t\t\t *  value will fall to it's miminum value over the\n\t\t\t *  duration of the release time.\n\t\t\t *  @type {Time}\n\t\t\t */\n\t        this.release = options.release;\n\t        /**\n\t\t\t *  the next time the envelope is at standby\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._attackCurve = 'linear';\n\t        /**\n\t\t\t *  the next time the envelope is at standby\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._releaseCurve = 'exponential';\n\t        /**\n\t\t\t *  the signal\n\t\t\t *  @type {Tone.TimelineSignal}\n\t\t\t *  @private\n\t\t\t */\n\t        this._sig = this.output = new Tone.TimelineSignal();\n\t        this._sig.setValueAtTime(0, 0);\n\t        //set the attackCurve initially\n\t        this.attackCurve = options.attackCurve;\n\t        this.releaseCurve = options.releaseCurve;\n\t    };\n\t    Tone.extend(Tone.Envelope, Tone.AudioNode);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t *  @const\n\t\t */\n\t    Tone.Envelope.defaults = {\n\t        'attack': 0.01,\n\t        'decay': 0.1,\n\t        'sustain': 0.5,\n\t        'release': 1,\n\t        'attackCurve': 'linear',\n\t        'releaseCurve': 'exponential'\n\t    };\n\t    /**\n\t\t * Read the current value of the envelope. Useful for\n\t\t * syncronizing visual output to the envelope.\n\t\t * @memberOf Tone.Envelope#\n\t\t * @type {Number}\n\t\t * @name value\n\t\t * @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Envelope.prototype, 'value', {\n\t        get: function () {\n\t            return this.getValueAtTime(this.now());\n\t        }\n\t    });\n\t    /**\n\t\t * The shape of the attack.\n\t\t * Can be any of these strings:\n\t\t * <ul>\n\t\t *   <li>linear</li>\n\t\t *   <li>exponential</li>\n\t\t *   <li>sine</li>\n\t\t *   <li>cosine</li>\n\t\t *   <li>bounce</li>\n\t\t *   <li>ripple</li>\n\t\t *   <li>step</li>\n\t\t * </ul>\n\t\t * Can also be an array which describes the curve. Values\n\t\t * in the array are evenly subdivided and linearly\n\t\t * interpolated over the duration of the attack.\n\t\t * @memberOf Tone.Envelope#\n\t\t * @type {String|Array}\n\t\t * @name attackCurve\n\t\t * @example\n\t\t * env.attackCurve = \"linear\";\n\t\t * @example\n\t\t * //can also be an array\n\t\t * env.attackCurve = [0, 0.2, 0.3, 0.4, 1]\n\t\t */\n\t    Object.defineProperty(Tone.Envelope.prototype, 'attackCurve', {\n\t        get: function () {\n\t            if (Tone.isString(this._attackCurve)) {\n\t                return this._attackCurve;\n\t            } else if (Tone.isArray(this._attackCurve)) {\n\t                //look up the name in the curves array\n\t                for (var type in Tone.Envelope.Type) {\n\t                    if (Tone.Envelope.Type[type].In === this._attackCurve) {\n\t                        return type;\n\t                    }\n\t                }\n\t                //otherwise just return the array\n\t                return this._attackCurve;\n\t            }\n\t        },\n\t        set: function (curve) {\n\t            //check if it's a valid type\n\t            if (Tone.Envelope.Type.hasOwnProperty(curve)) {\n\t                var curveDef = Tone.Envelope.Type[curve];\n\t                if (Tone.isObject(curveDef)) {\n\t                    this._attackCurve = curveDef.In;\n\t                } else {\n\t                    this._attackCurve = curveDef;\n\t                }\n\t            } else if (Tone.isArray(curve)) {\n\t                this._attackCurve = curve;\n\t            } else {\n\t                throw new Error('Tone.Envelope: invalid curve: ' + curve);\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The shape of the release. See the attack curve types.\n\t\t * @memberOf Tone.Envelope#\n\t\t * @type {String|Array}\n\t\t * @name releaseCurve\n\t\t * @example\n\t\t * env.releaseCurve = \"linear\";\n\t\t */\n\t    Object.defineProperty(Tone.Envelope.prototype, 'releaseCurve', {\n\t        get: function () {\n\t            if (Tone.isString(this._releaseCurve)) {\n\t                return this._releaseCurve;\n\t            } else if (Tone.isArray(this._releaseCurve)) {\n\t                //look up the name in the curves array\n\t                for (var type in Tone.Envelope.Type) {\n\t                    if (Tone.Envelope.Type[type].Out === this._releaseCurve) {\n\t                        return type;\n\t                    }\n\t                }\n\t                //otherwise just return the array\n\t                return this._releaseCurve;\n\t            }\n\t        },\n\t        set: function (curve) {\n\t            //check if it's a valid type\n\t            if (Tone.Envelope.Type.hasOwnProperty(curve)) {\n\t                var curveDef = Tone.Envelope.Type[curve];\n\t                if (Tone.isObject(curveDef)) {\n\t                    this._releaseCurve = curveDef.Out;\n\t                } else {\n\t                    this._releaseCurve = curveDef;\n\t                }\n\t            } else if (Tone.isArray(curve)) {\n\t                this._releaseCurve = curve;\n\t            } else {\n\t                throw new Error('Tone.Envelope: invalid curve: ' + curve);\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Trigger the attack/decay portion of the ADSR envelope.\n\t\t *  @param  {Time} [time=now] When the attack should start.\n\t\t *  @param {NormalRange} [velocity=1] The velocity of the envelope scales the vales.\n\t\t *                               number between 0-1\n\t\t *  @returns {Tone.Envelope} this\n\t\t *  @example\n\t\t *  //trigger the attack 0.5 seconds from now with a velocity of 0.2\n\t\t *  env.triggerAttack(\"+0.5\", 0.2);\n\t\t */\n\t    Tone.Envelope.prototype.triggerAttack = function (time, velocity) {\n\t        time = this.toSeconds(time);\n\t        var originalAttack = this.toSeconds(this.attack);\n\t        var attack = originalAttack;\n\t        var decay = this.toSeconds(this.decay);\n\t        velocity = Tone.defaultArg(velocity, 1);\n\t        //check if it's not a complete attack\n\t        var currentValue = this.getValueAtTime(time);\n\t        if (currentValue > 0) {\n\t            //subtract the current value from the attack time\n\t            var attackRate = 1 / attack;\n\t            var remainingDistance = 1 - currentValue;\n\t            //the attack is now the remaining time\n\t            attack = remainingDistance / attackRate;\n\t        }\n\t        //attack\n\t        if (this._attackCurve === 'linear') {\n\t            this._sig.linearRampTo(velocity, attack, time);\n\t        } else if (this._attackCurve === 'exponential') {\n\t            this._sig.targetRampTo(velocity, attack, time);\n\t        } else if (attack > 0) {\n\t            this._sig.setRampPoint(time);\n\t            var curve = this._attackCurve;\n\t            //take only a portion of the curve\n\t            if (attack < originalAttack) {\n\t                var percentComplete = 1 - attack / originalAttack;\n\t                var sliceIndex = Math.floor(percentComplete * this._attackCurve.length);\n\t                curve = this._attackCurve.slice(sliceIndex);\n\t                //the first index is the current value\n\t                curve[0] = currentValue;\n\t            }\n\t            this._sig.setValueCurveAtTime(curve, time, attack, velocity);\n\t        }\n\t        //decay\n\t        this._sig.targetRampTo(velocity * this.sustain, decay, attack + time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Triggers the release of the envelope.\n\t\t *  @param  {Time} [time=now] When the release portion of the envelope should start.\n\t\t *  @returns {Tone.Envelope} this\n\t\t *  @example\n\t\t *  //trigger release immediately\n\t\t *  env.triggerRelease();\n\t\t */\n\t    Tone.Envelope.prototype.triggerRelease = function (time) {\n\t        time = this.toSeconds(time);\n\t        var currentValue = this.getValueAtTime(time);\n\t        if (currentValue > 0) {\n\t            var release = this.toSeconds(this.release);\n\t            if (this._releaseCurve === 'linear') {\n\t                this._sig.linearRampTo(0, release, time);\n\t            } else if (this._releaseCurve === 'exponential') {\n\t                this._sig.targetRampTo(0, release, time);\n\t            } else {\n\t                var curve = this._releaseCurve;\n\t                if (Tone.isArray(curve)) {\n\t                    this._sig.setRampPoint(time);\n\t                    this._sig.setValueCurveAtTime(curve, time, release, currentValue);\n\t                }\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Get the scheduled value at the given time. This will\n\t\t *  return the unconverted (raw) value.\n\t\t *  @param  {Number}  time  The time in seconds.\n\t\t *  @return  {Number}  The scheduled value at the given time.\n\t\t */\n\t    Tone.Envelope.prototype.getValueAtTime = function (time) {\n\t        return this._sig.getValueAtTime(time);\n\t    };\n\t    /**\n\t\t *  triggerAttackRelease is shorthand for triggerAttack, then waiting\n\t\t *  some duration, then triggerRelease.\n\t\t *  @param {Time} duration The duration of the sustain.\n\t\t *  @param {Time} [time=now] When the attack should be triggered.\n\t\t *  @param {number} [velocity=1] The velocity of the envelope.\n\t\t *  @returns {Tone.Envelope} this\n\t\t *  @example\n\t\t * //trigger the attack and then the release after 0.6 seconds.\n\t\t * env.triggerAttackRelease(0.6);\n\t\t */\n\t    Tone.Envelope.prototype.triggerAttackRelease = function (duration, time, velocity) {\n\t        time = this.toSeconds(time);\n\t        this.triggerAttack(time, velocity);\n\t        this.triggerRelease(time + this.toSeconds(duration));\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Cancels all scheduled envelope changes after the given time.\n\t\t *  @param  {Time} after\n\t\t *  @returns {Tone.Envelope} this\n\t\t */\n\t    Tone.Envelope.prototype.cancel = function (after) {\n\t        this._sig.cancelScheduledValues(after);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Borrows the connect method from Tone.Signal.\n\t\t *  @function\n\t\t *  @private\n\t\t */\n\t    Tone.Envelope.prototype.connect = Tone.Signal.prototype.connect;\n\t    /**\n\t \t *  Generate some complex envelope curves.\n\t \t */\n\t    (function _createCurves() {\n\t        var curveLen = 128;\n\t        var i, k;\n\t        //cosine curve\n\t        var cosineCurve = [];\n\t        for (i = 0; i < curveLen; i++) {\n\t            cosineCurve[i] = Math.sin(i / (curveLen - 1) * (Math.PI / 2));\n\t        }\n\t        //ripple curve\n\t        var rippleCurve = [];\n\t        var rippleCurveFreq = 6.4;\n\t        for (i = 0; i < curveLen - 1; i++) {\n\t            k = i / (curveLen - 1);\n\t            var sineWave = Math.sin(k * (Math.PI * 2) * rippleCurveFreq - Math.PI / 2) + 1;\n\t            rippleCurve[i] = sineWave / 10 + k * 0.83;\n\t        }\n\t        rippleCurve[curveLen - 1] = 1;\n\t        //stairs curve\n\t        var stairsCurve = [];\n\t        var steps = 5;\n\t        for (i = 0; i < curveLen; i++) {\n\t            stairsCurve[i] = Math.ceil(i / (curveLen - 1) * steps) / steps;\n\t        }\n\t        //in-out easing curve\n\t        var sineCurve = [];\n\t        for (i = 0; i < curveLen; i++) {\n\t            k = i / (curveLen - 1);\n\t            sineCurve[i] = 0.5 * (1 - Math.cos(Math.PI * k));\n\t        }\n\t        //a bounce curve\n\t        var bounceCurve = [];\n\t        for (i = 0; i < curveLen; i++) {\n\t            k = i / (curveLen - 1);\n\t            var freq = Math.pow(k, 3) * 4 + 0.2;\n\t            var val = Math.cos(freq * Math.PI * 2 * k);\n\t            bounceCurve[i] = Math.abs(val * (1 - k));\n\t        }\n\t        /**\n\t\t\t *  Invert a value curve to make it work for the release\n\t\t\t *  @private\n\t\t\t */\n\t        function invertCurve(curve) {\n\t            var out = new Array(curve.length);\n\t            for (var j = 0; j < curve.length; j++) {\n\t                out[j] = 1 - curve[j];\n\t            }\n\t            return out;\n\t        }\n\t        /**\n\t\t\t *  reverse the curve\n\t\t\t *  @private\n\t\t\t */\n\t        function reverseCurve(curve) {\n\t            return curve.slice(0).reverse();\n\t        }\n\t        /**\n\t\t\t *  attack and release curve arrays\n\t\t\t *  @type  {Object}\n\t\t\t *  @private\n\t\t\t */\n\t        Tone.Envelope.Type = {\n\t            'linear': 'linear',\n\t            'exponential': 'exponential',\n\t            'bounce': {\n\t                In: invertCurve(bounceCurve),\n\t                Out: bounceCurve\n\t            },\n\t            'cosine': {\n\t                In: cosineCurve,\n\t                Out: reverseCurve(cosineCurve)\n\t            },\n\t            'step': {\n\t                In: stairsCurve,\n\t                Out: invertCurve(stairsCurve)\n\t            },\n\t            'ripple': {\n\t                In: rippleCurve,\n\t                Out: invertCurve(rippleCurve)\n\t            },\n\t            'sine': {\n\t                In: sineCurve,\n\t                Out: invertCurve(sineCurve)\n\t            }\n\t        };\n\t    }());\n\t    /**\n\t\t *  Disconnect and dispose.\n\t\t *  @returns {Tone.Envelope} this\n\t\t */\n\t    Tone.Envelope.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._sig.dispose();\n\t        this._sig = null;\n\t        this._attackCurve = null;\n\t        this._releaseCurve = null;\n\t        return this;\n\t    };\n\t    return Tone.Envelope;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.AmplitudeEnvelope is a Tone.Envelope connected to a gain node.\n\t\t *          Unlike Tone.Envelope, which outputs the envelope's value, Tone.AmplitudeEnvelope accepts\n\t\t *          an audio signal as the input and will apply the envelope to the amplitude\n\t\t *          of the signal. Read more about ADSR Envelopes on [Wikipedia](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope).\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Envelope}\n\t\t *  @param {Time|Object} [attack] The amount of time it takes for the envelope to go from\n\t\t *                               0 to it's maximum value.\n\t\t *  @param {Time} [decay]\tThe period of time after the attack that it takes for the envelope\n\t\t *                       \tto fall to the sustain value.\n\t\t *  @param {NormalRange} [sustain]\tThe percent of the maximum value that the envelope rests at until\n\t\t *                                \tthe release is triggered.\n\t\t *  @param {Time} [release]\tThe amount of time after the release is triggered it takes to reach 0.\n\t\t *  @example\n\t\t * var ampEnv = new Tone.AmplitudeEnvelope({\n\t\t * \t\"attack\": 0.1,\n\t\t * \t\"decay\": 0.2,\n\t\t * \t\"sustain\": 1.0,\n\t\t * \t\"release\": 0.8\n\t\t * }).toMaster();\n\t\t * //create an oscillator and connect it\n\t\t * var osc = new Tone.Oscillator().connect(ampEnv).start();\n\t\t * //trigger the envelopes attack and release \"8t\" apart\n\t\t * ampEnv.triggerAttackRelease(\"8t\");\n\t\t */\n\t    Tone.AmplitudeEnvelope = function () {\n\t        Tone.Envelope.apply(this, arguments);\n\t        /**\n\t\t\t *  the input node\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this.input = this.output = new Tone.Gain();\n\t        this._sig.connect(this.output.gain);\n\t    };\n\t    Tone.extend(Tone.AmplitudeEnvelope, Tone.Envelope);\n\t    /**\n\t\t *  Clean up\n\t\t *  @return  {Tone.AmplitudeEnvelope}  this\n\t\t */\n\t    Tone.AmplitudeEnvelope.prototype.dispose = function () {\n\t        Tone.Envelope.prototype.dispose.call(this);\n\t        return this;\n\t    };\n\t    return Tone.AmplitudeEnvelope;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  AnalyserNode.getFloatTimeDomainData polyfill\n\t\t *  @private\n\t\t */\n\t    if (window.AnalyserNode && !AnalyserNode.prototype.getFloatTimeDomainData) {\n\t        //referenced https://github.com/mohayonao/get-float-time-domain-data\n\t        AnalyserNode.prototype.getFloatTimeDomainData = function (array) {\n\t            var uint8 = new Uint8Array(array.length);\n\t            this.getByteTimeDomainData(uint8);\n\t            for (var i = 0; i < uint8.length; i++) {\n\t                array[i] = (uint8[i] - 128) / 128;\n\t            }\n\t        };\n\t    }\n\t    /**\n\t\t *  @class  Wrapper around the native Web Audio's\n\t\t *          [AnalyserNode](http://webaudio.github.io/web-audio-api/#idl-def-AnalyserNode).\n\t\t *          Extracts FFT or Waveform data from the incoming signal.\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @param {String=} type The return type of the analysis, either \"fft\", or \"waveform\".\n\t\t *  @param {Number=} size The size of the FFT. Value must be a power of\n\t\t *                       two in the range 32 to 32768.\n\t\t */\n\t    Tone.Analyser = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'type',\n\t            'size'\n\t        ], Tone.Analyser);\n\t        Tone.AudioNode.call(this);\n\t        /**\n\t\t\t *  The analyser node.\n\t\t\t *  @private\n\t\t\t *  @type {AnalyserNode}\n\t\t\t */\n\t        this._analyser = this.input = this.output = this.context.createAnalyser();\n\t        /**\n\t\t\t *  The analysis type\n\t\t\t *  @type {String}\n\t\t\t *  @private\n\t\t\t */\n\t        this._type = options.type;\n\t        /**\n\t\t\t *  The buffer that the FFT data is written to\n\t\t\t *  @type {TypedArray}\n\t\t\t *  @private\n\t\t\t */\n\t        this._buffer = null;\n\t        //set the values initially\n\t        this.size = options.size;\n\t        this.type = options.type;\n\t    };\n\t    Tone.extend(Tone.Analyser, Tone.AudioNode);\n\t    /**\n\t\t *  The default values.\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.Analyser.defaults = {\n\t        'size': 1024,\n\t        'type': 'fft',\n\t        'smoothing': 0.8\n\t    };\n\t    /**\n\t\t *  Possible return types of analyser.getValue()\n\t\t *  @enum {String}\n\t\t */\n\t    Tone.Analyser.Type = {\n\t        Waveform: 'waveform',\n\t        FFT: 'fft'\n\t    };\n\t    /**\n\t\t *  Run the analysis given the current settings and return the\n\t\t *  result as a TypedArray.\n\t\t *  @returns {TypedArray}\n\t\t */\n\t    Tone.Analyser.prototype.getValue = function () {\n\t        if (this._type === Tone.Analyser.Type.FFT) {\n\t            this._analyser.getFloatFrequencyData(this._buffer);\n\t        } else if (this._type === Tone.Analyser.Type.Waveform) {\n\t            this._analyser.getFloatTimeDomainData(this._buffer);\n\t        }\n\t        return this._buffer;\n\t    };\n\t    /**\n\t\t *  The size of analysis. This must be a power of two in the range 32 to 32768.\n\t\t *  @memberOf Tone.Analyser#\n\t\t *  @type {Number}\n\t\t *  @name size\n\t\t */\n\t    Object.defineProperty(Tone.Analyser.prototype, 'size', {\n\t        get: function () {\n\t            return this._analyser.frequencyBinCount;\n\t        },\n\t        set: function (size) {\n\t            this._analyser.fftSize = size * 2;\n\t            this._buffer = new Float32Array(size);\n\t        }\n\t    });\n\t    /**\n\t\t *  The analysis function returned by analyser.getValue(), either \"fft\" or \"waveform\".\n\t\t *  @memberOf Tone.Analyser#\n\t\t *  @type {String}\n\t\t *  @name type\n\t\t */\n\t    Object.defineProperty(Tone.Analyser.prototype, 'type', {\n\t        get: function () {\n\t            return this._type;\n\t        },\n\t        set: function (type) {\n\t            if (type !== Tone.Analyser.Type.Waveform && type !== Tone.Analyser.Type.FFT) {\n\t                throw new TypeError('Tone.Analyser: invalid type: ' + type);\n\t            }\n\t            this._type = type;\n\t        }\n\t    });\n\t    /**\n\t\t *  0 represents no time averaging with the last analysis frame.\n\t\t *  @memberOf Tone.Analyser#\n\t\t *  @type {NormalRange}\n\t\t *  @name smoothing\n\t\t */\n\t    Object.defineProperty(Tone.Analyser.prototype, 'smoothing', {\n\t        get: function () {\n\t            return this._analyser.smoothingTimeConstant;\n\t        },\n\t        set: function (val) {\n\t            this._analyser.smoothingTimeConstant = val;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return  {Tone.Analyser}  this\n\t\t */\n\t    Tone.Analyser.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._analyser.disconnect();\n\t        this._analyser = null;\n\t        this._buffer = null;\n\t    };\n\t    return Tone.Analyser;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Compressor is a thin wrapper around the Web Audio\n\t\t *         [DynamicsCompressorNode](http://webaudio.github.io/web-audio-api/#the-dynamicscompressornode-interface).\n\t\t *         Compression reduces the volume of loud sounds or amplifies quiet sounds\n\t\t *         by narrowing or \"compressing\" an audio signal's dynamic range.\n\t\t *         Read more on [Wikipedia](https://en.wikipedia.org/wiki/Dynamic_range_compression).\n\t\t *\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @constructor\n\t\t *  @param {Decibels|Object} [threshold] The value above which the compression starts to be applied.\n\t\t *  @param {Positive} [ratio] The gain reduction ratio.\n\t\t *  @example\n\t\t * var comp = new Tone.Compressor(-30, 3);\n\t\t */\n\t    Tone.Compressor = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'threshold',\n\t            'ratio'\n\t        ], Tone.Compressor);\n\t        Tone.AudioNode.call(this);\n\t        /**\n\t\t\t *  the compressor node\n\t\t\t *  @type {DynamicsCompressorNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._compressor = this.input = this.output = this.context.createDynamicsCompressor();\n\t        /**\n\t\t\t *  the threshold vaue\n\t\t\t *  @type {Decibels}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.threshold = new Tone.Param({\n\t            'param': this._compressor.threshold,\n\t            'units': Tone.Type.Decibels,\n\t            'convert': false\n\t        });\n\t        /**\n\t\t\t *  The attack parameter\n\t\t\t *  @type {Time}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.attack = new Tone.Param(this._compressor.attack, Tone.Type.Time);\n\t        /**\n\t\t\t *  The release parameter\n\t\t\t *  @type {Time}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.release = new Tone.Param(this._compressor.release, Tone.Type.Time);\n\t        /**\n\t\t\t *  The knee parameter\n\t\t\t *  @type {Decibels}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.knee = new Tone.Param({\n\t            'param': this._compressor.knee,\n\t            'units': Tone.Type.Decibels,\n\t            'convert': false\n\t        });\n\t        /**\n\t\t\t *  The ratio value\n\t\t\t *  @type {Number}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.ratio = new Tone.Param({\n\t            'param': this._compressor.ratio,\n\t            'convert': false\n\t        });\n\t        //set the defaults\n\t        this._readOnly([\n\t            'knee',\n\t            'release',\n\t            'attack',\n\t            'ratio',\n\t            'threshold'\n\t        ]);\n\t        this.set(options);\n\t    };\n\t    Tone.extend(Tone.Compressor, Tone.AudioNode);\n\t    /**\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Compressor.defaults = {\n\t        'ratio': 12,\n\t        'threshold': -24,\n\t        'release': 0.25,\n\t        'attack': 0.003,\n\t        'knee': 30\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.Compressor} this\n\t\t */\n\t    Tone.Compressor.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._writable([\n\t            'knee',\n\t            'release',\n\t            'attack',\n\t            'ratio',\n\t            'threshold'\n\t        ]);\n\t        this._compressor.disconnect();\n\t        this._compressor = null;\n\t        this.attack.dispose();\n\t        this.attack = null;\n\t        this.release.dispose();\n\t        this.release = null;\n\t        this.threshold.dispose();\n\t        this.threshold = null;\n\t        this.ratio.dispose();\n\t        this.ratio = null;\n\t        this.knee.dispose();\n\t        this.knee = null;\n\t        return this;\n\t    };\n\t    return Tone.Compressor;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Add a signal and a number or two signals. When no value is\n\t\t *         passed into the constructor, Tone.Add will sum <code>input[0]</code>\n\t\t *         and <code>input[1]</code>. If a value is passed into the constructor, \n\t\t *         the it will be added to the input.\n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone.Signal}\n\t\t *  @param {number=} value If no value is provided, Tone.Add will sum the first\n\t\t *                         and second inputs. \n\t\t *  @example\n\t\t * var signal = new Tone.Signal(2);\n\t\t * var add = new Tone.Add(2);\n\t\t * signal.connect(add);\n\t\t * //the output of add equals 4\n\t\t *  @example\n\t\t * //if constructed with no arguments\n\t\t * //it will add the first and second inputs\n\t\t * var add = new Tone.Add();\n\t\t * var sig0 = new Tone.Signal(3).connect(add, 0, 0);\n\t\t * var sig1 = new Tone.Signal(4).connect(add, 0, 1);\n\t\t * //the output of add equals 7. \n\t\t */\n\t    Tone.Add = function (value) {\n\t        Tone.Signal.call(this);\n\t        this.createInsOuts(2, 0);\n\t        /**\n\t\t\t *  the summing node\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._sum = this.input[0] = this.input[1] = this.output = new Tone.Gain();\n\t        /**\n\t\t\t *  @private\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t        this._param = this.input[1] = new Tone.Signal(value);\n\t        this._param.connect(this._sum);\n\t    };\n\t    Tone.extend(Tone.Add, Tone.Signal);\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Add} this\n\t\t */\n\t    Tone.Add.prototype.dispose = function () {\n\t        Tone.Signal.prototype.dispose.call(this);\n\t        this._sum.dispose();\n\t        this._sum = null;\n\t        return this;\n\t    };\n\t    return Tone.Add;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Multiply two incoming signals. Or, if a number is given in the constructor, \n\t\t *          multiplies the incoming signal by that value. \n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Signal}\n\t\t *  @param {number=} value Constant value to multiple. If no value is provided,\n\t\t *                         it will return the product of the first and second inputs\n\t\t *  @example\n\t\t * var mult = new Tone.Multiply();\n\t\t * var sigA = new Tone.Signal(3);\n\t\t * var sigB = new Tone.Signal(4);\n\t\t * sigA.connect(mult, 0, 0);\n\t\t * sigB.connect(mult, 0, 1);\n\t\t * //output of mult is 12.\n\t\t *  @example\n\t\t * var mult = new Tone.Multiply(10);\n\t\t * var sig = new Tone.Signal(2).connect(mult);\n\t\t * //the output of mult is 20. \n\t\t */\n\t    Tone.Multiply = function (value) {\n\t        Tone.Signal.call(this);\n\t        this.createInsOuts(2, 0);\n\t        /**\n\t\t\t *  the input node is the same as the output node\n\t\t\t *  it is also the GainNode which handles the scaling of incoming signal\n\t\t\t *  \n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._mult = this.input[0] = this.output = new Tone.Gain();\n\t        /**\n\t\t\t *  the scaling parameter\n\t\t\t *  @type {AudioParam}\n\t\t\t *  @private\n\t\t\t */\n\t        this._param = this.input[1] = this.output.gain;\n\t        this._param.value = Tone.defaultArg(value, 0);\n\t    };\n\t    Tone.extend(Tone.Multiply, Tone.Signal);\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.Multiply} this\n\t\t */\n\t    Tone.Multiply.prototype.dispose = function () {\n\t        Tone.Signal.prototype.dispose.call(this);\n\t        this._mult.dispose();\n\t        this._mult = null;\n\t        this._param = null;\n\t        return this;\n\t    };\n\t    return Tone.Multiply;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Negate the incoming signal. i.e. an input signal of 10 will output -10\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @example\n\t\t * var neg = new Tone.Negate();\n\t\t * var sig = new Tone.Signal(-2).connect(neg);\n\t\t * //output of neg is positive 2. \n\t\t */\n\t    Tone.Negate = function () {\n\t        Tone.SignalBase.call(this);\n\t        /**\n\t\t\t *  negation is done by multiplying by -1\n\t\t\t *  @type {Tone.Multiply}\n\t\t\t *  @private\n\t\t\t */\n\t        this._multiply = this.input = this.output = new Tone.Multiply(-1);\n\t    };\n\t    Tone.extend(Tone.Negate, Tone.SignalBase);\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.Negate} this\n\t\t */\n\t    Tone.Negate.prototype.dispose = function () {\n\t        Tone.SignalBase.prototype.dispose.call(this);\n\t        this._multiply.dispose();\n\t        this._multiply = null;\n\t        return this;\n\t    };\n\t    return Tone.Negate;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Subtract the signal connected to <code>input[1]</code> from the signal connected \n\t\t *         to <code>input[0]</code>. If an argument is provided in the constructor, the \n\t\t *         signals <code>.value</code> will be subtracted from the incoming signal.\n\t\t *\n\t\t *  @extends {Tone.Signal}\n\t\t *  @constructor\n\t\t *  @param {number=} value The value to subtract from the incoming signal. If the value\n\t\t *                         is omitted, it will subtract the second signal from the first.\n\t\t *  @example\n\t\t * var sub = new Tone.Subtract(1);\n\t\t * var sig = new Tone.Signal(4).connect(sub);\n\t\t * //the output of sub is 3. \n\t\t *  @example\n\t\t * var sub = new Tone.Subtract();\n\t\t * var sigA = new Tone.Signal(10);\n\t\t * var sigB = new Tone.Signal(2.5);\n\t\t * sigA.connect(sub, 0, 0);\n\t\t * sigB.connect(sub, 0, 1);\n\t\t * //output of sub is 7.5\n\t\t */\n\t    Tone.Subtract = function (value) {\n\t        Tone.Signal.call(this);\n\t        this.createInsOuts(2, 0);\n\t        /**\n\t\t\t *  the summing node\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._sum = this.input[0] = this.output = new Tone.Gain();\n\t        /**\n\t\t\t *  negate the input of the second input before connecting it\n\t\t\t *  to the summing node.\n\t\t\t *  @type {Tone.Negate}\n\t\t\t *  @private\n\t\t\t */\n\t        this._neg = new Tone.Negate();\n\t        /**\n\t\t\t *  the node where the value is set\n\t\t\t *  @private\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t        this._param = this.input[1] = new Tone.Signal(value);\n\t        this._param.chain(this._neg, this._sum);\n\t    };\n\t    Tone.extend(Tone.Subtract, Tone.Signal);\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.SignalBase} this\n\t\t */\n\t    Tone.Subtract.prototype.dispose = function () {\n\t        Tone.Signal.prototype.dispose.call(this);\n\t        this._neg.dispose();\n\t        this._neg = null;\n\t        this._sum.disconnect();\n\t        this._sum = null;\n\t        return this;\n\t    };\n\t    return Tone.Subtract;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  GreaterThanZero outputs 1 when the input is strictly greater than zero\n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @example\n\t\t * var gt0 = new Tone.GreaterThanZero();\n\t\t * var sig = new Tone.Signal(0.01).connect(gt0);\n\t\t * //the output of gt0 is 1. \n\t\t * sig.value = 0;\n\t\t * //the output of gt0 is 0. \n\t\t */\n\t    Tone.GreaterThanZero = function () {\n\t        Tone.SignalBase.call(this);\n\t        /**\n\t\t\t *  @type {Tone.WaveShaper}\n\t\t\t *  @private\n\t\t\t */\n\t        this._thresh = this.output = new Tone.WaveShaper(function (val) {\n\t            if (val <= 0) {\n\t                return 0;\n\t            } else {\n\t                return 1;\n\t            }\n\t        }, 127);\n\t        /**\n\t\t\t *  scale the first thresholded signal by a large value.\n\t\t\t *  this will help with values which are very close to 0\n\t\t\t *  @type {Tone.Multiply}\n\t\t\t *  @private\n\t\t\t */\n\t        this._scale = this.input = new Tone.Multiply(10000);\n\t        //connections\n\t        this._scale.connect(this._thresh);\n\t    };\n\t    Tone.extend(Tone.GreaterThanZero, Tone.SignalBase);\n\t    /**\n\t\t *  dispose method\n\t\t *  @returns {Tone.GreaterThanZero} this\n\t\t */\n\t    Tone.GreaterThanZero.prototype.dispose = function () {\n\t        Tone.SignalBase.prototype.dispose.call(this);\n\t        this._scale.dispose();\n\t        this._scale = null;\n\t        this._thresh.dispose();\n\t        this._thresh = null;\n\t        return this;\n\t    };\n\t    return Tone.GreaterThanZero;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Output 1 if the signal is greater than the value, otherwise outputs 0.\n\t\t *          can compare two signals or a signal and a number. \n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone.Signal}\n\t\t *  @param {number} [value=0] the value to compare to the incoming signal\n\t\t *  @example\n\t\t * var gt = new Tone.GreaterThan(2);\n\t\t * var sig = new Tone.Signal(4).connect(gt);\n\t\t * //output of gt is equal 1. \n\t\t */\n\t    Tone.GreaterThan = function (value) {\n\t        Tone.Signal.call(this);\n\t        this.createInsOuts(2, 0);\n\t        /**\n\t\t\t *  subtract the amount from the incoming signal\n\t\t\t *  @type {Tone.Subtract}\n\t\t\t *  @private\n\t\t\t */\n\t        this._param = this.input[0] = new Tone.Subtract(value);\n\t        this.input[1] = this._param.input[1];\n\t        /**\n\t\t\t *  compare that amount to zero\n\t\t\t *  @type {Tone.GreaterThanZero}\n\t\t\t *  @private\n\t\t\t */\n\t        this._gtz = this.output = new Tone.GreaterThanZero();\n\t        //connect\n\t        this._param.connect(this._gtz);\n\t    };\n\t    Tone.extend(Tone.GreaterThan, Tone.Signal);\n\t    /**\n\t\t *  dispose method\n\t\t *  @returns {Tone.GreaterThan} this\n\t\t */\n\t    Tone.GreaterThan.prototype.dispose = function () {\n\t        Tone.Signal.prototype.dispose.call(this);\n\t        this._gtz.dispose();\n\t        this._gtz = null;\n\t        return this;\n\t    };\n\t    return Tone.GreaterThan;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Return the absolute value of an incoming signal. \n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @example\n\t\t * var signal = new Tone.Signal(-1);\n\t\t * var abs = new Tone.Abs();\n\t\t * signal.connect(abs);\n\t\t * //the output of abs is 1. \n\t\t */\n\t    Tone.Abs = function () {\n\t        Tone.SignalBase.call(this);\n\t        /**\n\t\t\t *  @type {Tone.LessThan}\n\t\t\t *  @private\n\t\t\t */\n\t        this._abs = this.input = this.output = new Tone.WaveShaper(function (val) {\n\t            if (val === 0) {\n\t                return 0;\n\t            } else {\n\t                return Math.abs(val);\n\t            }\n\t        }, 127);\n\t    };\n\t    Tone.extend(Tone.Abs, Tone.SignalBase);\n\t    /**\n\t\t *  dispose method\n\t\t *  @returns {Tone.Abs} this\n\t\t */\n\t    Tone.Abs.prototype.dispose = function () {\n\t        Tone.SignalBase.prototype.dispose.call(this);\n\t        this._abs.dispose();\n\t        this._abs = null;\n\t        return this;\n\t    };\n\t    return Tone.Abs;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Signal-rate modulo operator. Only works in AudioRange [-1, 1] and for modulus\n\t\t *         values in the NormalRange. \n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @param {NormalRange} modulus The modulus to apply.\n\t\t *  @example\n\t\t * var mod = new Tone.Modulo(0.2)\n\t\t * var sig = new Tone.Signal(0.5).connect(mod);\n\t\t * //mod outputs 0.1\n\t\t */\n\t    Tone.Modulo = function (modulus) {\n\t        Tone.SignalBase.call(this);\n\t        this.createInsOuts(1, 0);\n\t        /**\n\t\t\t *  A waveshaper gets the integer multiple of \n\t\t\t *  the input signal and the modulus.\n\t\t\t *  @private\n\t\t\t *  @type {Tone.WaveShaper}\n\t\t\t */\n\t        this._shaper = new Tone.WaveShaper(Math.pow(2, 16));\n\t        /**\n\t\t\t *  the integer multiple is multiplied by the modulus\n\t\t\t *  @type  {Tone.Multiply}\n\t\t\t *  @private\n\t\t\t */\n\t        this._multiply = new Tone.Multiply();\n\t        /**\n\t\t\t *  and subtracted from the input signal\n\t\t\t *  @type  {Tone.Subtract}\n\t\t\t *  @private\n\t\t\t */\n\t        this._subtract = this.output = new Tone.Subtract();\n\t        /**\n\t\t\t *  the modulus signal\n\t\t\t *  @type  {Tone.Signal}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modSignal = new Tone.Signal(modulus);\n\t        //connections\n\t        this.input.fan(this._shaper, this._subtract);\n\t        this._modSignal.connect(this._multiply, 0, 0);\n\t        this._shaper.connect(this._multiply, 0, 1);\n\t        this._multiply.connect(this._subtract, 0, 1);\n\t        this._setWaveShaper(modulus);\n\t    };\n\t    Tone.extend(Tone.Modulo, Tone.SignalBase);\n\t    /**\n\t\t *  @param  {number}  mod  the modulus to apply\n\t\t *  @private\n\t\t */\n\t    Tone.Modulo.prototype._setWaveShaper = function (mod) {\n\t        this._shaper.setMap(function (val) {\n\t            var multiple = Math.floor((val + 0.0001) / mod);\n\t            return multiple;\n\t        });\n\t    };\n\t    /**\n\t\t * The modulus value.\n\t\t * @memberOf Tone.Modulo#\n\t\t * @type {NormalRange}\n\t\t * @name value\n\t\t */\n\t    Object.defineProperty(Tone.Modulo.prototype, 'value', {\n\t        get: function () {\n\t            return this._modSignal.value;\n\t        },\n\t        set: function (mod) {\n\t            this._modSignal.value = mod;\n\t            this._setWaveShaper(mod);\n\t        }\n\t    });\n\t    /**\n\t\t * clean up\n\t\t *  @returns {Tone.Modulo} this\n\t\t */\n\t    Tone.Modulo.prototype.dispose = function () {\n\t        Tone.SignalBase.prototype.dispose.call(this);\n\t        this._shaper.dispose();\n\t        this._shaper = null;\n\t        this._multiply.dispose();\n\t        this._multiply = null;\n\t        this._subtract.dispose();\n\t        this._subtract = null;\n\t        this._modSignal.dispose();\n\t        this._modSignal = null;\n\t        return this;\n\t    };\n\t    return Tone.Modulo;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class AudioToGain converts an input in AudioRange [-1,1] to NormalRange [0,1]. \n\t\t *         See Tone.GainToAudio.\n\t\t *\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @constructor\n\t\t *  @example\n\t\t *  var a2g = new Tone.AudioToGain();\n\t\t */\n\t    Tone.AudioToGain = function () {\n\t        Tone.SignalBase.call(this);\n\t        /**\n\t\t\t *  @type {WaveShaperNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._norm = this.input = this.output = new Tone.WaveShaper(function (x) {\n\t            return (x + 1) / 2;\n\t        });\n\t    };\n\t    Tone.extend(Tone.AudioToGain, Tone.SignalBase);\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.AudioToGain} this\n\t\t */\n\t    Tone.AudioToGain.prototype.dispose = function () {\n\t        Tone.SignalBase.prototype.dispose.call(this);\n\t        this._norm.dispose();\n\t        this._norm = null;\n\t        return this;\n\t    };\n\t    return Tone.AudioToGain;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Evaluate an expression at audio rate. <br><br>\n\t\t *         Parsing code modified from https://code.google.com/p/tapdigit/\n\t\t *         Copyright 2011 2012 Ariya Hidayat, New BSD License\n\t\t *\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @constructor\n\t\t *  @param {string} expr the expression to generate\n\t\t *  @example\n\t\t * //adds the signals from input[0] and input[1].\n\t\t * var expr = new Tone.Expr(\"$0 + $1\");\n\t\t */\n\t    Tone.Expr = function () {\n\t        Tone.SignalBase.call(this);\n\t        var expr = this._replacements(Array.prototype.slice.call(arguments));\n\t        var inputCount = this._parseInputs(expr);\n\t        /**\n\t\t\t *  hold onto all of the nodes for disposal\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._nodes = [];\n\t        /**\n\t\t\t *  The inputs. The length is determined by the expression. \n\t\t\t *  @type {Array}\n\t\t\t */\n\t        this.input = new Array(inputCount);\n\t        //create a gain for each input\n\t        for (var i = 0; i < inputCount; i++) {\n\t            this.input[i] = this.context.createGain();\n\t        }\n\t        //parse the syntax tree\n\t        var tree = this._parseTree(expr);\n\t        //evaluate the results\n\t        var result;\n\t        try {\n\t            result = this._eval(tree);\n\t        } catch (e) {\n\t            this._disposeNodes();\n\t            throw new Error('Tone.Expr: Could evaluate expression: ' + expr);\n\t        }\n\t        /**\n\t\t\t *  The output node is the result of the expression\n\t\t\t *  @type {Tone}\n\t\t\t */\n\t        this.output = result;\n\t    };\n\t    Tone.extend(Tone.Expr, Tone.SignalBase);\n\t    //some helpers to cut down the amount of code\n\t    function applyBinary(Constructor, args, self) {\n\t        var op = new Constructor();\n\t        self._eval(args[0]).connect(op, 0, 0);\n\t        self._eval(args[1]).connect(op, 0, 1);\n\t        return op;\n\t    }\n\t    function applyUnary(Constructor, args, self) {\n\t        var op = new Constructor();\n\t        self._eval(args[0]).connect(op, 0, 0);\n\t        return op;\n\t    }\n\t    function getNumber(arg) {\n\t        return arg ? parseFloat(arg) : undefined;\n\t    }\n\t    function literalNumber(arg) {\n\t        return arg && arg.args ? parseFloat(arg.args) : undefined;\n\t    }\n\t    /*\n\t\t *  the Expressions that Tone.Expr can parse.\n\t\t *\n\t\t *  each expression belongs to a group and contains a regexp \n\t\t *  for selecting the operator as well as that operators method\n\t\t *  \n\t\t *  @type {Object}\n\t\t *  @private\n\t\t */\n\t    Tone.Expr._Expressions = {\n\t        //values\n\t        'value': {\n\t            'signal': {\n\t                regexp: /^\\d+\\.\\d+|^\\d+/,\n\t                method: function (arg) {\n\t                    var sig = new Tone.Signal(getNumber(arg));\n\t                    return sig;\n\t                }\n\t            },\n\t            'input': {\n\t                regexp: /^\\$\\d/,\n\t                method: function (arg, self) {\n\t                    return self.input[getNumber(arg.substr(1))];\n\t                }\n\t            }\n\t        },\n\t        //syntactic glue\n\t        'glue': {\n\t            '(': { regexp: /^\\(/ },\n\t            ')': { regexp: /^\\)/ },\n\t            ',': { regexp: /^,/ }\n\t        },\n\t        //functions\n\t        'func': {\n\t            'abs': {\n\t                regexp: /^abs/,\n\t                method: applyUnary.bind(this, Tone.Abs)\n\t            },\n\t            'mod': {\n\t                regexp: /^mod/,\n\t                method: function (args, self) {\n\t                    var modulus = literalNumber(args[1]);\n\t                    var op = new Tone.Modulo(modulus);\n\t                    self._eval(args[0]).connect(op);\n\t                    return op;\n\t                }\n\t            },\n\t            'pow': {\n\t                regexp: /^pow/,\n\t                method: function (args, self) {\n\t                    var exp = literalNumber(args[1]);\n\t                    var op = new Tone.Pow(exp);\n\t                    self._eval(args[0]).connect(op);\n\t                    return op;\n\t                }\n\t            },\n\t            'a2g': {\n\t                regexp: /^a2g/,\n\t                method: function (args, self) {\n\t                    var op = new Tone.AudioToGain();\n\t                    self._eval(args[0]).connect(op);\n\t                    return op;\n\t                }\n\t            }\n\t        },\n\t        //binary expressions\n\t        'binary': {\n\t            '+': {\n\t                regexp: /^\\+/,\n\t                precedence: 1,\n\t                method: applyBinary.bind(this, Tone.Add)\n\t            },\n\t            '-': {\n\t                regexp: /^\\-/,\n\t                precedence: 1,\n\t                method: function (args, self) {\n\t                    //both unary and binary op\n\t                    if (args.length === 1) {\n\t                        return applyUnary(Tone.Negate, args, self);\n\t                    } else {\n\t                        return applyBinary(Tone.Subtract, args, self);\n\t                    }\n\t                }\n\t            },\n\t            '*': {\n\t                regexp: /^\\*/,\n\t                precedence: 0,\n\t                method: applyBinary.bind(this, Tone.Multiply)\n\t            }\n\t        },\n\t        //unary expressions\n\t        'unary': {\n\t            '-': {\n\t                regexp: /^\\-/,\n\t                method: applyUnary.bind(this, Tone.Negate)\n\t            },\n\t            '!': {\n\t                regexp: /^\\!/,\n\t                method: applyUnary.bind(this, Tone.NOT)\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  @param   {string} expr the expression string\n\t\t *  @return  {number}      the input count\n\t\t *  @private\n\t\t */\n\t    Tone.Expr.prototype._parseInputs = function (expr) {\n\t        var inputArray = expr.match(/\\$\\d/g);\n\t        var inputMax = 0;\n\t        if (inputArray !== null) {\n\t            for (var i = 0; i < inputArray.length; i++) {\n\t                var inputNum = parseInt(inputArray[i].substr(1)) + 1;\n\t                inputMax = Math.max(inputMax, inputNum);\n\t            }\n\t        }\n\t        return inputMax;\n\t    };\n\t    /**\n\t\t *  @param   {Array} args \tan array of arguments\n\t\t *  @return  {string} the results of the replacements being replaced\n\t\t *  @private\n\t\t */\n\t    Tone.Expr.prototype._replacements = function (args) {\n\t        var expr = args.shift();\n\t        for (var i = 0; i < args.length; i++) {\n\t            expr = expr.replace(/\\%/i, args[i]);\n\t        }\n\t        return expr;\n\t    };\n\t    /**\n\t\t *  tokenize the expression based on the Expressions object\n\t\t *  @param   {string} expr \n\t\t *  @return  {Object}      returns two methods on the tokenized list, next and peek\n\t\t *  @private\n\t\t */\n\t    Tone.Expr.prototype._tokenize = function (expr) {\n\t        var position = -1;\n\t        var tokens = [];\n\t        while (expr.length > 0) {\n\t            expr = expr.trim();\n\t            var token = getNextToken(expr);\n\t            tokens.push(token);\n\t            expr = expr.substr(token.value.length);\n\t        }\n\t        function getNextToken(expr) {\n\t            for (var type in Tone.Expr._Expressions) {\n\t                var group = Tone.Expr._Expressions[type];\n\t                for (var opName in group) {\n\t                    var op = group[opName];\n\t                    var reg = op.regexp;\n\t                    var match = expr.match(reg);\n\t                    if (match !== null) {\n\t                        return {\n\t                            type: type,\n\t                            value: match[0],\n\t                            method: op.method\n\t                        };\n\t                    }\n\t                }\n\t            }\n\t            throw new SyntaxError('Tone.Expr: Unexpected token ' + expr);\n\t        }\n\t        return {\n\t            next: function () {\n\t                return tokens[++position];\n\t            },\n\t            peek: function () {\n\t                return tokens[position + 1];\n\t            }\n\t        };\n\t    };\n\t    /**\n\t\t *  recursively parse the string expression into a syntax tree\n\t\t *  \n\t\t *  @param   {string} expr \n\t\t *  @return  {Object}\n\t\t *  @private\n\t\t */\n\t    Tone.Expr.prototype._parseTree = function (expr) {\n\t        var lexer = this._tokenize(expr);\n\t        var isUndef = Tone.isUndef.bind(this);\n\t        function matchSyntax(token, syn) {\n\t            return !isUndef(token) && token.type === 'glue' && token.value === syn;\n\t        }\n\t        function matchGroup(token, groupName, prec) {\n\t            var ret = false;\n\t            var group = Tone.Expr._Expressions[groupName];\n\t            if (!isUndef(token)) {\n\t                for (var opName in group) {\n\t                    var op = group[opName];\n\t                    if (op.regexp.test(token.value)) {\n\t                        if (!isUndef(prec)) {\n\t                            if (op.precedence === prec) {\n\t                                return true;\n\t                            }\n\t                        } else {\n\t                            return true;\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t            return ret;\n\t        }\n\t        function parseExpression(precedence) {\n\t            if (isUndef(precedence)) {\n\t                precedence = 5;\n\t            }\n\t            var expr;\n\t            if (precedence < 0) {\n\t                expr = parseUnary();\n\t            } else {\n\t                expr = parseExpression(precedence - 1);\n\t            }\n\t            var token = lexer.peek();\n\t            while (matchGroup(token, 'binary', precedence)) {\n\t                token = lexer.next();\n\t                expr = {\n\t                    operator: token.value,\n\t                    method: token.method,\n\t                    args: [\n\t                        expr,\n\t                        parseExpression(precedence - 1)\n\t                    ]\n\t                };\n\t                token = lexer.peek();\n\t            }\n\t            return expr;\n\t        }\n\t        function parseUnary() {\n\t            var token, expr;\n\t            token = lexer.peek();\n\t            if (matchGroup(token, 'unary')) {\n\t                token = lexer.next();\n\t                expr = parseUnary();\n\t                return {\n\t                    operator: token.value,\n\t                    method: token.method,\n\t                    args: [expr]\n\t                };\n\t            }\n\t            return parsePrimary();\n\t        }\n\t        function parsePrimary() {\n\t            var token, expr;\n\t            token = lexer.peek();\n\t            if (isUndef(token)) {\n\t                throw new SyntaxError('Tone.Expr: Unexpected termination of expression');\n\t            }\n\t            if (token.type === 'func') {\n\t                token = lexer.next();\n\t                return parseFunctionCall(token);\n\t            }\n\t            if (token.type === 'value') {\n\t                token = lexer.next();\n\t                return {\n\t                    method: token.method,\n\t                    args: token.value\n\t                };\n\t            }\n\t            if (matchSyntax(token, '(')) {\n\t                lexer.next();\n\t                expr = parseExpression();\n\t                token = lexer.next();\n\t                if (!matchSyntax(token, ')')) {\n\t                    throw new SyntaxError('Expected )');\n\t                }\n\t                return expr;\n\t            }\n\t            throw new SyntaxError('Tone.Expr: Parse error, cannot process token ' + token.value);\n\t        }\n\t        function parseFunctionCall(func) {\n\t            var token, args = [];\n\t            token = lexer.next();\n\t            if (!matchSyntax(token, '(')) {\n\t                throw new SyntaxError('Tone.Expr: Expected ( in a function call \"' + func.value + '\"');\n\t            }\n\t            token = lexer.peek();\n\t            if (!matchSyntax(token, ')')) {\n\t                args = parseArgumentList();\n\t            }\n\t            token = lexer.next();\n\t            if (!matchSyntax(token, ')')) {\n\t                throw new SyntaxError('Tone.Expr: Expected ) in a function call \"' + func.value + '\"');\n\t            }\n\t            return {\n\t                method: func.method,\n\t                args: args,\n\t                name: name\n\t            };\n\t        }\n\t        function parseArgumentList() {\n\t            var token, expr, args = [];\n\t            while (true) {\n\t                expr = parseExpression();\n\t                if (isUndef(expr)) {\n\t                    // TODO maybe throw exception?\n\t                    break;\n\t                }\n\t                args.push(expr);\n\t                token = lexer.peek();\n\t                if (!matchSyntax(token, ',')) {\n\t                    break;\n\t                }\n\t                lexer.next();\n\t            }\n\t            return args;\n\t        }\n\t        return parseExpression();\n\t    };\n\t    /**\n\t\t *  recursively evaluate the expression tree\n\t\t *  @param   {Object} tree \n\t\t *  @return  {AudioNode}      the resulting audio node from the expression\n\t\t *  @private\n\t\t */\n\t    Tone.Expr.prototype._eval = function (tree) {\n\t        if (!Tone.isUndef(tree)) {\n\t            var node = tree.method(tree.args, this);\n\t            this._nodes.push(node);\n\t            return node;\n\t        }\n\t    };\n\t    /**\n\t\t *  dispose all the nodes\n\t\t *  @private\n\t\t */\n\t    Tone.Expr.prototype._disposeNodes = function () {\n\t        for (var i = 0; i < this._nodes.length; i++) {\n\t            var node = this._nodes[i];\n\t            if (Tone.isFunction(node.dispose)) {\n\t                node.dispose();\n\t            } else if (Tone.isFunction(node.disconnect)) {\n\t                node.disconnect();\n\t            }\n\t            node = null;\n\t            this._nodes[i] = null;\n\t        }\n\t        this._nodes = null;\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t */\n\t    Tone.Expr.prototype.dispose = function () {\n\t        Tone.SignalBase.prototype.dispose.call(this);\n\t        this._disposeNodes();\n\t    };\n\t    return Tone.Expr;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Convert an incoming signal between 0, 1 to an equal power gain scale.\n\t\t *\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @constructor\n\t\t *  @example\n\t\t * var eqPowGain = new Tone.EqualPowerGain();\n\t\t */\n\t    Tone.EqualPowerGain = function () {\n\t        Tone.SignalBase.call(this);\n\t        /**\n\t\t\t *  @type {Tone.WaveShaper}\n\t\t\t *  @private\n\t\t\t */\n\t        this._eqPower = this.input = this.output = new Tone.WaveShaper(function (val) {\n\t            if (Math.abs(val) < 0.001) {\n\t                //should output 0 when input is 0\n\t                return 0;\n\t            } else {\n\t                return Tone.equalPowerScale(val);\n\t            }\n\t        }.bind(this), 4096);\n\t    };\n\t    Tone.extend(Tone.EqualPowerGain, Tone.SignalBase);\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.EqualPowerGain} this\n\t\t */\n\t    Tone.EqualPowerGain.prototype.dispose = function () {\n\t        Tone.SignalBase.prototype.dispose.call(this);\n\t        this._eqPower.dispose();\n\t        this._eqPower = null;\n\t        return this;\n\t    };\n\t    return Tone.EqualPowerGain;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t * @class  Tone.Crossfade provides equal power fading between two inputs.\n\t\t *         More on crossfading technique [here](https://en.wikipedia.org/wiki/Fade_(audio_engineering)#Crossfading).\n\t\t *\n\t\t * @constructor\n\t\t * @extends {Tone.AudioNode}\n\t\t * @param {NormalRange} [initialFade=0.5]\n\t\t * @example\n\t\t * var crossFade = new Tone.CrossFade(0.5);\n\t\t * //connect effect A to crossfade from\n\t\t * //effect output 0 to crossfade input 0\n\t\t * effectA.connect(crossFade, 0, 0);\n\t\t * //connect effect B to crossfade from\n\t\t * //effect output 0 to crossfade input 1\n\t\t * effectB.connect(crossFade, 0, 1);\n\t\t * crossFade.fade.value = 0;\n\t\t * // ^ only effectA is output\n\t\t * crossFade.fade.value = 1;\n\t\t * // ^ only effectB is output\n\t\t * crossFade.fade.value = 0.5;\n\t\t * // ^ the two signals are mixed equally.\n\t\t */\n\t    Tone.CrossFade = function (initialFade) {\n\t        Tone.AudioNode.call(this);\n\t        this.createInsOuts(2, 1);\n\t        /**\n\t\t\t *  Alias for <code>input[0]</code>.\n\t\t\t *  @type {Tone.Gain}\n\t\t\t */\n\t        this.a = this.input[0] = new Tone.Gain();\n\t        /**\n\t\t\t *  Alias for <code>input[1]</code>.\n\t\t\t *  @type {Tone.Gain}\n\t\t\t */\n\t        this.b = this.input[1] = new Tone.Gain();\n\t        /**\n\t\t\t * \tThe mix between the two inputs. A fade value of 0\n\t\t\t * \twill output 100% <code>input[0]</code> and\n\t\t\t * \ta value of 1 will output 100% <code>input[1]</code>.\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.fade = new Tone.Signal(Tone.defaultArg(initialFade, 0.5), Tone.Type.NormalRange);\n\t        /**\n\t\t\t *  equal power gain cross fade\n\t\t\t *  @private\n\t\t\t *  @type {Tone.EqualPowerGain}\n\t\t\t */\n\t        this._equalPowerA = new Tone.EqualPowerGain();\n\t        /**\n\t\t\t *  equal power gain cross fade\n\t\t\t *  @private\n\t\t\t *  @type {Tone.EqualPowerGain}\n\t\t\t */\n\t        this._equalPowerB = new Tone.EqualPowerGain();\n\t        /**\n\t\t\t *  invert the incoming signal\n\t\t\t *  @private\n\t\t\t *  @type {Tone}\n\t\t\t */\n\t        this._invert = new Tone.Expr('1 - $0');\n\t        //connections\n\t        this.a.connect(this.output);\n\t        this.b.connect(this.output);\n\t        this.fade.chain(this._equalPowerB, this.b.gain);\n\t        this.fade.chain(this._invert, this._equalPowerA, this.a.gain);\n\t        this._readOnly('fade');\n\t    };\n\t    Tone.extend(Tone.CrossFade, Tone.AudioNode);\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.CrossFade} this\n\t\t */\n\t    Tone.CrossFade.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._writable('fade');\n\t        this._equalPowerA.dispose();\n\t        this._equalPowerA = null;\n\t        this._equalPowerB.dispose();\n\t        this._equalPowerB = null;\n\t        this.fade.dispose();\n\t        this.fade = null;\n\t        this._invert.dispose();\n\t        this._invert = null;\n\t        this.a.dispose();\n\t        this.a = null;\n\t        this.b.dispose();\n\t        this.b = null;\n\t        return this;\n\t    };\n\t    return Tone.CrossFade;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Filter is a filter which allows for all of the same native methods\n\t\t *          as the [BiquadFilterNode](http://webaudio.github.io/web-audio-api/#the-biquadfilternode-interface).\n\t\t *          Tone.Filter has the added ability to set the filter rolloff at -12\n\t\t *          (default), -24 and -48.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @param {Frequency|Object} [frequency] The cutoff frequency of the filter.\n\t\t *  @param {string=} type The type of filter.\n\t\t *  @param {number=} rolloff The drop in decibels per octave after the cutoff frequency.\n\t\t *                            3 choices: -12, -24, and -48\n\t\t *  @example\n\t\t *  var filter = new Tone.Filter(200, \"highpass\");\n\t\t */\n\t    Tone.Filter = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'frequency',\n\t            'type',\n\t            'rolloff'\n\t        ], Tone.Filter);\n\t        Tone.AudioNode.call(this);\n\t        this.createInsOuts(1, 1);\n\t        /**\n\t\t\t *  the filter(s)\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._filters = [];\n\t        /**\n\t\t\t *  The cutoff frequency of the filter.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The detune parameter\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = new Tone.Signal(0, Tone.Type.Cents);\n\t        /**\n\t\t\t *  The gain of the filter, only used in certain filter types\n\t\t\t *  @type {Number}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.gain = new Tone.Signal({\n\t            'value': options.gain,\n\t            'convert': false\n\t        });\n\t        /**\n\t\t\t *  The Q or Quality of the filter\n\t\t\t *  @type {Positive}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.Q = new Tone.Signal(options.Q);\n\t        /**\n\t\t\t *  the type of the filter\n\t\t\t *  @type {string}\n\t\t\t *  @private\n\t\t\t */\n\t        this._type = options.type;\n\t        /**\n\t\t\t *  the rolloff value of the filter\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._rolloff = options.rolloff;\n\t        //set the rolloff;\n\t        this.rolloff = options.rolloff;\n\t        this._readOnly([\n\t            'detune',\n\t            'frequency',\n\t            'gain',\n\t            'Q'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.Filter, Tone.AudioNode);\n\t    /**\n\t\t *  the default parameters\n\t\t *\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Filter.defaults = {\n\t        'type': 'lowpass',\n\t        'frequency': 350,\n\t        'rolloff': -12,\n\t        'Q': 1,\n\t        'gain': 0\n\t    };\n\t    /**\n\t\t * The type of the filter. Types: \"lowpass\", \"highpass\",\n\t\t * \"bandpass\", \"lowshelf\", \"highshelf\", \"notch\", \"allpass\", or \"peaking\".\n\t\t * @memberOf Tone.Filter#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.Filter.prototype, 'type', {\n\t        get: function () {\n\t            return this._type;\n\t        },\n\t        set: function (type) {\n\t            var types = [\n\t                'lowpass',\n\t                'highpass',\n\t                'bandpass',\n\t                'lowshelf',\n\t                'highshelf',\n\t                'notch',\n\t                'allpass',\n\t                'peaking'\n\t            ];\n\t            if (types.indexOf(type) === -1) {\n\t                throw new TypeError('Tone.Filter: invalid type ' + type);\n\t            }\n\t            this._type = type;\n\t            for (var i = 0; i < this._filters.length; i++) {\n\t                this._filters[i].type = type;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The rolloff of the filter which is the drop in db\n\t\t * per octave. Implemented internally by cascading filters.\n\t\t * Only accepts the values -12, -24, -48 and -96.\n\t\t * @memberOf Tone.Filter#\n\t\t * @type {number}\n\t\t * @name rolloff\n\t\t */\n\t    Object.defineProperty(Tone.Filter.prototype, 'rolloff', {\n\t        get: function () {\n\t            return this._rolloff;\n\t        },\n\t        set: function (rolloff) {\n\t            rolloff = parseInt(rolloff, 10);\n\t            var possibilities = [\n\t                -12,\n\t                -24,\n\t                -48,\n\t                -96\n\t            ];\n\t            var cascadingCount = possibilities.indexOf(rolloff);\n\t            //check the rolloff is valid\n\t            if (cascadingCount === -1) {\n\t                throw new RangeError('Tone.Filter: rolloff can only be -12, -24, -48 or -96');\n\t            }\n\t            cascadingCount += 1;\n\t            this._rolloff = rolloff;\n\t            //first disconnect the filters and throw them away\n\t            this.input.disconnect();\n\t            for (var i = 0; i < this._filters.length; i++) {\n\t                this._filters[i].disconnect();\n\t                this._filters[i] = null;\n\t            }\n\t            this._filters = new Array(cascadingCount);\n\t            for (var count = 0; count < cascadingCount; count++) {\n\t                var filter = this.context.createBiquadFilter();\n\t                filter.type = this._type;\n\t                this.frequency.connect(filter.frequency);\n\t                this.detune.connect(filter.detune);\n\t                this.Q.connect(filter.Q);\n\t                this.gain.connect(filter.gain);\n\t                this._filters[count] = filter;\n\t            }\n\t            //connect them up\n\t            var connectionChain = [this.input].concat(this._filters).concat([this.output]);\n\t            Tone.connectSeries.apply(Tone, connectionChain);\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return {Tone.Filter} this\n\t\t */\n\t    Tone.Filter.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        for (var i = 0; i < this._filters.length; i++) {\n\t            this._filters[i].disconnect();\n\t            this._filters[i] = null;\n\t        }\n\t        this._filters = null;\n\t        this._writable([\n\t            'detune',\n\t            'frequency',\n\t            'gain',\n\t            'Q'\n\t        ]);\n\t        this.frequency.dispose();\n\t        this.Q.dispose();\n\t        this.frequency = null;\n\t        this.Q = null;\n\t        this.detune.dispose();\n\t        this.detune = null;\n\t        this.gain.dispose();\n\t        this.gain = null;\n\t        return this;\n\t    };\n\t    return Tone.Filter;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Split the incoming signal into three bands (low, mid, high)\n\t\t *         with two crossover frequency controls.\n\t\t *\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @constructor\n\t\t *  @param {Frequency|Object} [lowFrequency] the low/mid crossover frequency\n\t\t *  @param {Frequency} [highFrequency] the mid/high crossover frequency\n\t\t */\n\t    Tone.MultibandSplit = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'lowFrequency',\n\t            'highFrequency'\n\t        ], Tone.MultibandSplit);\n\t        Tone.AudioNode.call(this);\n\t        /**\n\t\t\t *  the input\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this.input = new Tone.Gain();\n\t        /**\n\t\t\t *  the outputs\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this.output = new Array(3);\n\t        /**\n\t\t\t *  The low band. Alias for <code>output[0]</code>\n\t\t\t *  @type {Tone.Filter}\n\t\t\t */\n\t        this.low = this.output[0] = new Tone.Filter(0, 'lowpass');\n\t        /**\n\t\t\t *  the lower filter of the mid band\n\t\t\t *  @type {Tone.Filter}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lowMidFilter = new Tone.Filter(0, 'highpass');\n\t        /**\n\t\t\t *  The mid band output. Alias for <code>output[1]</code>\n\t\t\t *  @type {Tone.Filter}\n\t\t\t */\n\t        this.mid = this.output[1] = new Tone.Filter(0, 'lowpass');\n\t        /**\n\t\t\t *  The high band output. Alias for <code>output[2]</code>\n\t\t\t *  @type {Tone.Filter}\n\t\t\t */\n\t        this.high = this.output[2] = new Tone.Filter(0, 'highpass');\n\t        /**\n\t\t\t *  The low/mid crossover frequency.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.lowFrequency = new Tone.Signal(options.lowFrequency, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The mid/high crossover frequency.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.highFrequency = new Tone.Signal(options.highFrequency, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The quality of all the filters\n\t\t\t *  @type {Number}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.Q = new Tone.Signal(options.Q);\n\t        this.input.fan(this.low, this.high);\n\t        this.input.chain(this._lowMidFilter, this.mid);\n\t        //the frequency control signal\n\t        this.lowFrequency.connect(this.low.frequency);\n\t        this.lowFrequency.connect(this._lowMidFilter.frequency);\n\t        this.highFrequency.connect(this.mid.frequency);\n\t        this.highFrequency.connect(this.high.frequency);\n\t        //the Q value\n\t        this.Q.connect(this.low.Q);\n\t        this.Q.connect(this._lowMidFilter.Q);\n\t        this.Q.connect(this.mid.Q);\n\t        this.Q.connect(this.high.Q);\n\t        this._readOnly([\n\t            'high',\n\t            'mid',\n\t            'low',\n\t            'highFrequency',\n\t            'lowFrequency'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.MultibandSplit, Tone.AudioNode);\n\t    /**\n\t\t *  @private\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.MultibandSplit.defaults = {\n\t        'lowFrequency': 400,\n\t        'highFrequency': 2500,\n\t        'Q': 1\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.MultibandSplit} this\n\t\t */\n\t    Tone.MultibandSplit.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._writable([\n\t            'high',\n\t            'mid',\n\t            'low',\n\t            'highFrequency',\n\t            'lowFrequency'\n\t        ]);\n\t        this.low.dispose();\n\t        this.low = null;\n\t        this._lowMidFilter.dispose();\n\t        this._lowMidFilter = null;\n\t        this.mid.dispose();\n\t        this.mid = null;\n\t        this.high.dispose();\n\t        this.high = null;\n\t        this.lowFrequency.dispose();\n\t        this.lowFrequency = null;\n\t        this.highFrequency.dispose();\n\t        this.highFrequency = null;\n\t        this.Q.dispose();\n\t        this.Q = null;\n\t        return this;\n\t    };\n\t    return Tone.MultibandSplit;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.EQ3 is a three band EQ with control over low, mid, and high gain as\n\t\t *         well as the low and high crossover frequencies.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.AudioNode}\n\t\t *\n\t\t *  @param {Decibels|Object} [lowLevel] The gain applied to the lows.\n\t\t *  @param {Decibels} [midLevel] The gain applied to the mid.\n\t\t *  @param {Decibels} [highLevel] The gain applied to the high.\n\t\t *  @example\n\t\t * var eq = new Tone.EQ3(-10, 3, -20);\n\t\t */\n\t    Tone.EQ3 = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'low',\n\t            'mid',\n\t            'high'\n\t        ], Tone.EQ3);\n\t        Tone.AudioNode.call(this);\n\t        /**\n\t\t\t *  the output node\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this.output = new Tone.Gain();\n\t        /**\n\t\t\t *  the multiband split\n\t\t\t *  @type {Tone.MultibandSplit}\n\t\t\t *  @private\n\t\t\t */\n\t        this._multibandSplit = this.input = new Tone.MultibandSplit({\n\t            'lowFrequency': options.lowFrequency,\n\t            'highFrequency': options.highFrequency\n\t        });\n\t        /**\n\t\t\t *  The gain for the lower signals\n\t\t\t *  @type  {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lowGain = new Tone.Gain(options.low, Tone.Type.Decibels);\n\t        /**\n\t\t\t *  The gain for the mid signals\n\t\t\t *  @type  {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._midGain = new Tone.Gain(options.mid, Tone.Type.Decibels);\n\t        /**\n\t\t\t * The gain in decibels of the high part\n\t\t\t * @type {Tone.Gain}\n\t\t\t * @private\n\t\t\t */\n\t        this._highGain = new Tone.Gain(options.high, Tone.Type.Decibels);\n\t        /**\n\t\t\t * The gain in decibels of the low part\n\t\t\t * @type {Decibels}\n\t\t\t * @signal\n\t\t\t */\n\t        this.low = this._lowGain.gain;\n\t        /**\n\t\t\t * The gain in decibels of the mid part\n\t\t\t * @type {Decibels}\n\t\t\t * @signal\n\t\t\t */\n\t        this.mid = this._midGain.gain;\n\t        /**\n\t\t\t * The gain in decibels of the high part\n\t\t\t * @type {Decibels}\n\t\t\t * @signal\n\t\t\t */\n\t        this.high = this._highGain.gain;\n\t        /**\n\t\t\t *  The Q value for all of the filters.\n\t\t\t *  @type {Positive}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.Q = this._multibandSplit.Q;\n\t        /**\n\t\t\t *  The low/mid crossover frequency.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.lowFrequency = this._multibandSplit.lowFrequency;\n\t        /**\n\t\t\t *  The mid/high crossover frequency.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.highFrequency = this._multibandSplit.highFrequency;\n\t        //the frequency bands\n\t        this._multibandSplit.low.chain(this._lowGain, this.output);\n\t        this._multibandSplit.mid.chain(this._midGain, this.output);\n\t        this._multibandSplit.high.chain(this._highGain, this.output);\n\t        this._readOnly([\n\t            'low',\n\t            'mid',\n\t            'high',\n\t            'lowFrequency',\n\t            'highFrequency'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.EQ3, Tone.AudioNode);\n\t    /**\n\t\t *  the default values\n\t\t */\n\t    Tone.EQ3.defaults = {\n\t        'low': 0,\n\t        'mid': 0,\n\t        'high': 0,\n\t        'lowFrequency': 400,\n\t        'highFrequency': 2500\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.EQ3} this\n\t\t */\n\t    Tone.EQ3.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._writable([\n\t            'low',\n\t            'mid',\n\t            'high',\n\t            'lowFrequency',\n\t            'highFrequency'\n\t        ]);\n\t        this._multibandSplit.dispose();\n\t        this._multibandSplit = null;\n\t        this.lowFrequency = null;\n\t        this.highFrequency = null;\n\t        this._lowGain.dispose();\n\t        this._lowGain = null;\n\t        this._midGain.dispose();\n\t        this._midGain = null;\n\t        this._highGain.dispose();\n\t        this._highGain = null;\n\t        this.low = null;\n\t        this.mid = null;\n\t        this.high = null;\n\t        this.Q = null;\n\t        return this;\n\t    };\n\t    return Tone.EQ3;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Performs a linear scaling on an input signal.\n\t\t *          Scales a NormalRange input to between\n\t\t *          outputMin and outputMax.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @param {number} [outputMin=0] The output value when the input is 0. \n\t\t *  @param {number} [outputMax=1]\tThe output value when the input is 1. \n\t\t *  @example\n\t\t * var scale = new Tone.Scale(50, 100);\n\t\t * var signal = new Tone.Signal(0.5).connect(scale);\n\t\t * //the output of scale equals 75\n\t\t */\n\t    Tone.Scale = function (outputMin, outputMax) {\n\t        Tone.SignalBase.call(this);\n\t        /** \n\t\t\t *  @private\n\t\t\t *  @type {number}\n\t\t\t */\n\t        this._outputMin = Tone.defaultArg(outputMin, 0);\n\t        /** \n\t\t\t *  @private\n\t\t\t *  @type {number}\n\t\t\t */\n\t        this._outputMax = Tone.defaultArg(outputMax, 1);\n\t        /** \n\t\t\t *  @private\n\t\t\t *  @type {Tone.Multiply}\n\t\t\t *  @private\n\t\t\t */\n\t        this._scale = this.input = new Tone.Multiply(1);\n\t        /** \n\t\t\t *  @private\n\t\t\t *  @type {Tone.Add}\n\t\t\t *  @private\n\t\t\t */\n\t        this._add = this.output = new Tone.Add(0);\n\t        this._scale.connect(this._add);\n\t        this._setRange();\n\t    };\n\t    Tone.extend(Tone.Scale, Tone.SignalBase);\n\t    /**\n\t\t * The minimum output value. This number is output when \n\t\t * the value input value is 0. \n\t\t * @memberOf Tone.Scale#\n\t\t * @type {number}\n\t\t * @name min\n\t\t */\n\t    Object.defineProperty(Tone.Scale.prototype, 'min', {\n\t        get: function () {\n\t            return this._outputMin;\n\t        },\n\t        set: function (min) {\n\t            this._outputMin = min;\n\t            this._setRange();\n\t        }\n\t    });\n\t    /**\n\t\t * The maximum output value. This number is output when \n\t\t * the value input value is 1. \n\t\t * @memberOf Tone.Scale#\n\t\t * @type {number}\n\t\t * @name max\n\t\t */\n\t    Object.defineProperty(Tone.Scale.prototype, 'max', {\n\t        get: function () {\n\t            return this._outputMax;\n\t        },\n\t        set: function (max) {\n\t            this._outputMax = max;\n\t            this._setRange();\n\t        }\n\t    });\n\t    /**\n\t\t *  set the values\n\t\t *  @private\n\t\t */\n\t    Tone.Scale.prototype._setRange = function () {\n\t        this._add.value = this._outputMin;\n\t        this._scale.value = this._outputMax - this._outputMin;\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Scale} this\n\t\t */\n\t    Tone.Scale.prototype.dispose = function () {\n\t        Tone.SignalBase.prototype.dispose.call(this);\n\t        this._add.dispose();\n\t        this._add = null;\n\t        this._scale.dispose();\n\t        this._scale = null;\n\t        return this;\n\t    };\n\t    return Tone.Scale;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class  Performs an exponential scaling on an input signal.\n\t\t *          Scales a NormalRange value [0,1] exponentially\n\t\t *          to the output range of outputMin to outputMax.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @param {number} [outputMin=0] The output value when the input is 0. \n\t\t *  @param {number} [outputMax=1]\tThe output value when the input is 1. \n\t\t *  @param {number} [exponent=2] The exponent which scales the incoming signal.\n\t\t *  @example\n\t\t * var scaleExp = new Tone.ScaleExp(0, 100, 2);\n\t\t * var signal = new Tone.Signal(0.5).connect(scaleExp);\n\t\t */\n\t    Tone.ScaleExp = function (outputMin, outputMax, exponent) {\n\t        Tone.SignalBase.call(this);\n\t        /**\n\t\t\t *  scale the input to the output range\n\t\t\t *  @type {Tone.Scale}\n\t\t\t *  @private\n\t\t\t */\n\t        this._scale = this.output = new Tone.Scale(outputMin, outputMax);\n\t        /**\n\t\t\t *  @private\n\t\t\t *  @type {Tone.Pow}\n\t\t\t *  @private\n\t\t\t */\n\t        this._exp = this.input = new Tone.Pow(Tone.defaultArg(exponent, 2));\n\t        this._exp.connect(this._scale);\n\t    };\n\t    Tone.extend(Tone.ScaleExp, Tone.SignalBase);\n\t    /**\n\t\t * Instead of interpolating linearly between the <code>min</code> and \n\t\t * <code>max</code> values, setting the exponent will interpolate between\n\t\t * the two values with an exponential curve. \n\t\t * @memberOf Tone.ScaleExp#\n\t\t * @type {number}\n\t\t * @name exponent\n\t\t */\n\t    Object.defineProperty(Tone.ScaleExp.prototype, 'exponent', {\n\t        get: function () {\n\t            return this._exp.value;\n\t        },\n\t        set: function (exp) {\n\t            this._exp.value = exp;\n\t        }\n\t    });\n\t    /**\n\t\t * The minimum output value. This number is output when \n\t\t * the value input value is 0. \n\t\t * @memberOf Tone.ScaleExp#\n\t\t * @type {number}\n\t\t * @name min\n\t\t */\n\t    Object.defineProperty(Tone.ScaleExp.prototype, 'min', {\n\t        get: function () {\n\t            return this._scale.min;\n\t        },\n\t        set: function (min) {\n\t            this._scale.min = min;\n\t        }\n\t    });\n\t    /**\n\t\t * The maximum output value. This number is output when \n\t\t * the value input value is 1. \n\t\t * @memberOf Tone.ScaleExp#\n\t\t * @type {number}\n\t\t * @name max\n\t\t */\n\t    Object.defineProperty(Tone.ScaleExp.prototype, 'max', {\n\t        get: function () {\n\t            return this._scale.max;\n\t        },\n\t        set: function (max) {\n\t            this._scale.max = max;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.ScaleExp} this\n\t\t */\n\t    Tone.ScaleExp.prototype.dispose = function () {\n\t        Tone.SignalBase.prototype.dispose.call(this);\n\t        this._scale.dispose();\n\t        this._scale = null;\n\t        this._exp.dispose();\n\t        this._exp = null;\n\t        return this;\n\t    };\n\t    return Tone.ScaleExp;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  createDelay shim\n\t\t *  @private\n\t\t */\n\t    if (window.DelayNode && !AudioContext.prototype.createDelay) {\n\t        AudioContext.prototype.createDelay = AudioContext.prototype.createDelayNode;\n\t    }\n\t    /**\n\t\t *  @class Wrapper around Web Audio's native [DelayNode](http://webaudio.github.io/web-audio-api/#the-delaynode-interface).\n\t\t *  @extends {Tone}\n\t\t *  @param {Time=} delayTime The delay applied to the incoming signal.\n\t\t *  @param {Time=} maxDelay The maximum delay time.\n\t\t */\n\t    Tone.Delay = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'delayTime',\n\t            'maxDelay'\n\t        ], Tone.Delay);\n\t        Tone.AudioNode.call(this);\n\t        /**\n\t\t\t *  The native delay node\n\t\t\t *  @type {DelayNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delayNode = this.input = this.output = this.context.createDelay(this.toSeconds(options.maxDelay));\n\t        /**\n\t\t\t *  The amount of time the incoming signal is\n\t\t\t *  delayed.\n\t\t\t *  @type {Time}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.delayTime = new Tone.Param({\n\t            'param': this._delayNode.delayTime,\n\t            'units': Tone.Type.Time,\n\t            'value': options.delayTime\n\t        });\n\t        this._readOnly('delayTime');\n\t    };\n\t    Tone.extend(Tone.Delay, Tone.AudioNode);\n\t    /**\n\t\t *  The defaults\n\t\t *  @const\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.Delay.defaults = {\n\t        'maxDelay': 1,\n\t        'delayTime': 0\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return  {Tone.Delay}  this\n\t\t */\n\t    Tone.Delay.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._delayNode.disconnect();\n\t        this._delayNode = null;\n\t        this._writable('delayTime');\n\t        this.delayTime = null;\n\t        return this;\n\t    };\n\t    return Tone.Delay;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Comb filters are basic building blocks for physical modeling. Read more\n\t\t *         about comb filters on [CCRMA's website](https://ccrma.stanford.edu/~jos/pasp/Feedback_Comb_Filters.html).\n\t\t *\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @constructor\n\t\t *  @param {Time|Object} [delayTime] The delay time of the filter.\n\t\t *  @param {NormalRange=} resonance The amount of feedback the filter has.\n\t\t */\n\t    Tone.FeedbackCombFilter = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'delayTime',\n\t            'resonance'\n\t        ], Tone.FeedbackCombFilter);\n\t        Tone.AudioNode.call(this);\n\t        /**\n\t\t\t *  the delay node\n\t\t\t *  @type {DelayNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delay = this.input = this.output = new Tone.Delay(options.delayTime);\n\t        /**\n\t\t\t *  The amount of delay of the comb filter.\n\t\t\t *  @type {Time}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.delayTime = this._delay.delayTime;\n\t        /**\n\t\t\t *  the feedback node\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._feedback = new Tone.Gain(options.resonance, Tone.Type.NormalRange);\n\t        /**\n\t\t\t *  The amount of feedback of the delayed signal.\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.resonance = this._feedback.gain;\n\t        this._delay.chain(this._feedback, this._delay);\n\t        this._readOnly([\n\t            'resonance',\n\t            'delayTime'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.FeedbackCombFilter, Tone.AudioNode);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.FeedbackCombFilter.defaults = {\n\t        'delayTime': 0.1,\n\t        'resonance': 0.5\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.FeedbackCombFilter} this\n\t\t */\n\t    Tone.FeedbackCombFilter.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._writable([\n\t            'resonance',\n\t            'delayTime'\n\t        ]);\n\t        this._delay.dispose();\n\t        this._delay = null;\n\t        this.delayTime = null;\n\t        this._feedback.dispose();\n\t        this._feedback = null;\n\t        this.resonance = null;\n\t        return this;\n\t    };\n\t    return Tone.FeedbackCombFilter;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class  Get the current waveform data of the connected audio source.\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @param {Number=} size The size of the FFT. Value must be a power of\n\t\t *                       two in the range 32 to 32768.\n\t\t */\n\t    Tone.FFT = function () {\n\t        var options = Tone.defaults(arguments, ['size'], Tone.FFT);\n\t        options.type = Tone.Analyser.Type.FFT;\n\t        Tone.AudioNode.call(this);\n\t        /**\n\t\t\t *  The analyser node.\n\t\t\t *  @private\n\t\t\t *  @type {Tone.Analyser}\n\t\t\t */\n\t        this._analyser = this.input = this.output = new Tone.Analyser(options);\n\t    };\n\t    Tone.extend(Tone.FFT, Tone.AudioNode);\n\t    /**\n\t\t *  The default values.\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.FFT.defaults = { 'size': 1024 };\n\t    /**\n\t\t *  Gets the waveform of the audio source. Returns the waveform data\n\t\t *  of length [size](#size) as a Float32Array with values between -1 and 1.\n\t\t *  @returns {TypedArray}\n\t\t */\n\t    Tone.FFT.prototype.getValue = function () {\n\t        return this._analyser.getValue();\n\t    };\n\t    /**\n\t\t *  The size of analysis. This must be a power of two in the range 32 to 32768.\n\t\t *  @memberOf Tone.FFT#\n\t\t *  @type {Number}\n\t\t *  @name size\n\t\t */\n\t    Object.defineProperty(Tone.FFT.prototype, 'size', {\n\t        get: function () {\n\t            return this._analyser.size;\n\t        },\n\t        set: function (size) {\n\t            this._analyser.size = size;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return  {Tone.FFT}  this\n\t\t */\n\t    Tone.FFT.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._analyser.dispose();\n\t        this._analyser = null;\n\t    };\n\t    return Tone.FFT;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Follower is a  crude envelope follower which will follow\n\t\t *          the amplitude of an incoming signal.\n\t\t *          Take care with small (< 0.02) attack or decay values\n\t\t *          as follower has some ripple which is exaggerated\n\t\t *          at these values. Read more about envelope followers (also known\n\t\t *          as envelope detectors) on [Wikipedia](https://en.wikipedia.org/wiki/Envelope_detector).\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @param {Time|Object} [attack] The rate at which the follower rises.\n\t\t *  @param {Time=} release The rate at which the folower falls.\n\t\t *  @example\n\t\t * var follower = new Tone.Follower(0.2, 0.4);\n\t\t */\n\t    Tone.Follower = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'attack',\n\t            'release'\n\t        ], Tone.Follower);\n\t        Tone.AudioNode.call(this);\n\t        this.createInsOuts(1, 1);\n\t        /**\n\t\t\t *  @type {Tone.Abs}\n\t\t\t *  @private\n\t\t\t */\n\t        this._abs = new Tone.Abs();\n\t        /**\n\t\t\t *  the lowpass filter which smooths the input\n\t\t\t *  @type {BiquadFilterNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._filter = this.context.createBiquadFilter();\n\t        this._filter.type = 'lowpass';\n\t        this._filter.frequency.value = 0;\n\t        this._filter.Q.value = -100;\n\t        /**\n\t\t\t *  @type {WaveShaperNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._frequencyValues = new Tone.WaveShaper();\n\t        /**\n\t\t\t *  @type {Tone.Subtract}\n\t\t\t *  @private\n\t\t\t */\n\t        this._sub = new Tone.Subtract();\n\t        /**\n\t\t\t *  @type {Tone.Delay}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delay = new Tone.Delay(this.blockTime);\n\t        /**\n\t\t\t *  this keeps it far from 0, even for very small differences\n\t\t\t *  @type {Tone.Multiply}\n\t\t\t *  @private\n\t\t\t */\n\t        this._mult = new Tone.Multiply(10000);\n\t        /**\n\t\t\t *  @private\n\t\t\t *  @type {number}\n\t\t\t */\n\t        this._attack = options.attack;\n\t        /**\n\t\t\t *  @private\n\t\t\t *  @type {number}\n\t\t\t */\n\t        this._release = options.release;\n\t        //the smoothed signal to get the values\n\t        this.input.chain(this._abs, this._filter, this.output);\n\t        //the difference path\n\t        this._abs.connect(this._sub, 0, 1);\n\t        this._filter.chain(this._delay, this._sub);\n\t        //threshold the difference and use the thresh to set the frequency\n\t        this._sub.chain(this._mult, this._frequencyValues, this._filter.frequency);\n\t        //set the attack and release values in the table\n\t        this._setAttackRelease(this._attack, this._release);\n\t    };\n\t    Tone.extend(Tone.Follower, Tone.AudioNode);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Follower.defaults = {\n\t        'attack': 0.05,\n\t        'release': 0.5\n\t    };\n\t    /**\n\t\t *  sets the attack and release times in the wave shaper\n\t\t *  @param   {Time} attack\n\t\t *  @param   {Time} release\n\t\t *  @private\n\t\t */\n\t    Tone.Follower.prototype._setAttackRelease = function (attack, release) {\n\t        var minTime = this.blockTime;\n\t        attack = Tone.Time(attack).toFrequency();\n\t        release = Tone.Time(release).toFrequency();\n\t        attack = Math.max(attack, minTime);\n\t        release = Math.max(release, minTime);\n\t        this._frequencyValues.setMap(function (val) {\n\t            if (val <= 0) {\n\t                return attack;\n\t            } else {\n\t                return release;\n\t            }\n\t        });\n\t    };\n\t    /**\n\t\t * The attack time.\n\t\t * @memberOf Tone.Follower#\n\t\t * @type {Time}\n\t\t * @name attack\n\t\t */\n\t    Object.defineProperty(Tone.Follower.prototype, 'attack', {\n\t        get: function () {\n\t            return this._attack;\n\t        },\n\t        set: function (attack) {\n\t            this._attack = attack;\n\t            this._setAttackRelease(this._attack, this._release);\n\t        }\n\t    });\n\t    /**\n\t\t * The release time.\n\t\t * @memberOf Tone.Follower#\n\t\t * @type {Time}\n\t\t * @name release\n\t\t */\n\t    Object.defineProperty(Tone.Follower.prototype, 'release', {\n\t        get: function () {\n\t            return this._release;\n\t        },\n\t        set: function (release) {\n\t            this._release = release;\n\t            this._setAttackRelease(this._attack, this._release);\n\t        }\n\t    });\n\t    /**\n\t\t *  Borrows the connect method from Signal so that the output can be used\n\t\t *  as a Tone.Signal control signal.\n\t\t *  @function\n\t\t */\n\t    Tone.Follower.prototype.connect = Tone.Signal.prototype.connect;\n\t    /**\n\t\t *  dispose\n\t\t *  @returns {Tone.Follower} this\n\t\t */\n\t    Tone.Follower.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._filter.disconnect();\n\t        this._filter = null;\n\t        this._frequencyValues.disconnect();\n\t        this._frequencyValues = null;\n\t        this._delay.dispose();\n\t        this._delay = null;\n\t        this._sub.disconnect();\n\t        this._sub = null;\n\t        this._abs.dispose();\n\t        this._abs = null;\n\t        this._mult.dispose();\n\t        this._mult = null;\n\t        this._curve = null;\n\t        return this;\n\t    };\n\t    return Tone.Follower;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.ScaledEnvelop is an envelope which can be scaled \n\t\t *         to any range. It's useful for applying an envelope \n\t\t *         to a frequency or any other non-NormalRange signal \n\t\t *         parameter. \n\t\t *\n\t\t *  @extends {Tone.Envelope}\n\t\t *  @constructor\n\t\t *  @param {Time|Object} [attack]\tthe attack time in seconds\n\t\t *  @param {Time} [decay]\tthe decay time in seconds\n\t\t *  @param {number} [sustain] \ta percentage (0-1) of the full amplitude\n\t\t *  @param {Time} [release]\tthe release time in seconds\n\t\t *  @example\n\t\t *  var scaledEnv = new Tone.ScaledEnvelope({\n\t\t *  \t\"attack\" : 0.2,\n\t\t *  \t\"min\" : 200,\n\t\t *  \t\"max\" : 2000\n\t\t *  });\n\t\t *  scaledEnv.connect(oscillator.frequency);\n\t\t */\n\t    Tone.ScaledEnvelope = function () {\n\t        //get all of the defaults\n\t        var options = Tone.defaults(arguments, [\n\t            'attack',\n\t            'decay',\n\t            'sustain',\n\t            'release'\n\t        ], Tone.Envelope);\n\t        Tone.Envelope.call(this, options);\n\t        options = Tone.defaultArg(options, Tone.ScaledEnvelope.defaults);\n\t        /** \n\t\t\t *  scale the incoming signal by an exponent\n\t\t\t *  @type {Tone.Pow}\n\t\t\t *  @private\n\t\t\t */\n\t        this._exp = this.output = new Tone.Pow(options.exponent);\n\t        /**\n\t\t\t *  scale the signal to the desired range\n\t\t\t *  @type {Tone.Multiply}\n\t\t\t *  @private\n\t\t\t */\n\t        this._scale = this.output = new Tone.Scale(options.min, options.max);\n\t        this._sig.chain(this._exp, this._scale);\n\t    };\n\t    Tone.extend(Tone.ScaledEnvelope, Tone.Envelope);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t */\n\t    Tone.ScaledEnvelope.defaults = {\n\t        'min': 0,\n\t        'max': 1,\n\t        'exponent': 1\n\t    };\n\t    /**\n\t\t * The envelope's min output value. This is the value which it\n\t\t * starts at. \n\t\t * @memberOf Tone.ScaledEnvelope#\n\t\t * @type {number}\n\t\t * @name min\n\t\t */\n\t    Object.defineProperty(Tone.ScaledEnvelope.prototype, 'min', {\n\t        get: function () {\n\t            return this._scale.min;\n\t        },\n\t        set: function (min) {\n\t            this._scale.min = min;\n\t        }\n\t    });\n\t    /**\n\t\t * The envelope's max output value. In other words, the value\n\t\t * at the peak of the attack portion of the envelope. \n\t\t * @memberOf Tone.ScaledEnvelope#\n\t\t * @type {number}\n\t\t * @name max\n\t\t */\n\t    Object.defineProperty(Tone.ScaledEnvelope.prototype, 'max', {\n\t        get: function () {\n\t            return this._scale.max;\n\t        },\n\t        set: function (max) {\n\t            this._scale.max = max;\n\t        }\n\t    });\n\t    /**\n\t\t * The envelope's exponent value. \n\t\t * @memberOf Tone.ScaledEnvelope#\n\t\t * @type {number}\n\t\t * @name exponent\n\t\t */\n\t    Object.defineProperty(Tone.ScaledEnvelope.prototype, 'exponent', {\n\t        get: function () {\n\t            return this._exp.value;\n\t        },\n\t        set: function (exp) {\n\t            this._exp.value = exp;\n\t        }\n\t    });\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.ScaledEnvelope} this\n\t\t */\n\t    Tone.ScaledEnvelope.prototype.dispose = function () {\n\t        Tone.Envelope.prototype.dispose.call(this);\n\t        this._scale.dispose();\n\t        this._scale = null;\n\t        this._exp.dispose();\n\t        this._exp = null;\n\t        return this;\n\t    };\n\t    return Tone.ScaledEnvelope;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.FrequencyEnvelope is a Tone.ScaledEnvelope, but instead of `min` and `max`\n\t\t *         it's got a `baseFrequency` and `octaves` parameter. \n\t\t *\n\t\t *  @extends {Tone.Envelope}\n\t\t *  @constructor\n\t\t *  @param {Time|Object} [attack]\tthe attack time in seconds\n\t\t *  @param {Time} [decay]\tthe decay time in seconds\n\t\t *  @param {number} [sustain] \ta percentage (0-1) of the full amplitude\n\t\t *  @param {Time} [release]\tthe release time in seconds\n\t\t *  @example\n\t\t *  var env = new Tone.FrequencyEnvelope({\n\t\t *  \t\"attack\" : 0.2,\n\t\t *  \t\"baseFrequency\" : \"C2\",\n\t\t *  \t\"octaves\" : 4\n\t\t *  });\n\t\t *  scaledEnv.connect(oscillator.frequency);\n\t\t */\n\t    Tone.FrequencyEnvelope = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'attack',\n\t            'decay',\n\t            'sustain',\n\t            'release'\n\t        ], Tone.Envelope);\n\t        Tone.ScaledEnvelope.call(this, options);\n\t        //merge it with the frequency envelope defaults\n\t        options = Tone.defaultArg(options, Tone.FrequencyEnvelope.defaults);\n\t        /**\n\t\t\t *  Stores the octave value\n\t\t\t *  @type {Positive}\n\t\t\t *  @private\n\t\t\t */\n\t        this._octaves = options.octaves;\n\t        //setup\n\t        this.baseFrequency = options.baseFrequency;\n\t        this.octaves = options.octaves;\n\t    };\n\t    Tone.extend(Tone.FrequencyEnvelope, Tone.Envelope);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t */\n\t    Tone.FrequencyEnvelope.defaults = {\n\t        'baseFrequency': 200,\n\t        'octaves': 4,\n\t        'exponent': 2\n\t    };\n\t    /**\n\t\t * The envelope's mininum output value. This is the value which it\n\t\t * starts at. \n\t\t * @memberOf Tone.FrequencyEnvelope#\n\t\t * @type {Frequency}\n\t\t * @name baseFrequency\n\t\t */\n\t    Object.defineProperty(Tone.FrequencyEnvelope.prototype, 'baseFrequency', {\n\t        get: function () {\n\t            return this._scale.min;\n\t        },\n\t        set: function (min) {\n\t            this._scale.min = this.toFrequency(min);\n\t            //also update the octaves\n\t            this.octaves = this._octaves;\n\t        }\n\t    });\n\t    /**\n\t\t * The number of octaves above the baseFrequency that the\n\t\t * envelope will scale to.\n\t\t * @memberOf Tone.FrequencyEnvelope#\n\t\t * @type {Positive}\n\t\t * @name octaves\n\t\t */\n\t    Object.defineProperty(Tone.FrequencyEnvelope.prototype, 'octaves', {\n\t        get: function () {\n\t            return this._octaves;\n\t        },\n\t        set: function (octaves) {\n\t            this._octaves = octaves;\n\t            this._scale.max = this.baseFrequency * Math.pow(2, octaves);\n\t        }\n\t    });\n\t    /**\n\t\t * The envelope's exponent value. \n\t\t * @memberOf Tone.FrequencyEnvelope#\n\t\t * @type {number}\n\t\t * @name exponent\n\t\t */\n\t    Object.defineProperty(Tone.FrequencyEnvelope.prototype, 'exponent', {\n\t        get: function () {\n\t            return this._exp.value;\n\t        },\n\t        set: function (exp) {\n\t            this._exp.value = exp;\n\t        }\n\t    });\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.FrequencyEnvelope} this\n\t\t */\n\t    Tone.FrequencyEnvelope.prototype.dispose = function () {\n\t        Tone.ScaledEnvelope.prototype.dispose.call(this);\n\t        return this;\n\t    };\n\t    return Tone.FrequencyEnvelope;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Gate only passes a signal through when the incoming\n\t\t *          signal exceeds a specified threshold. To do this, Gate uses\n\t\t *          a Tone.Follower to follow the amplitude of the incoming signal.\n\t\t *          A common implementation of this class is a [Noise Gate](https://en.wikipedia.org/wiki/Noise_gate).\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @param {Decibels|Object} [threshold] The threshold above which the gate will open.\n\t\t *  @param {Time=} attack The follower's attack time\n\t\t *  @param {Time=} release The follower's release time\n\t\t *  @example\n\t\t * var gate = new Tone.Gate(-30, 0.2, 0.3).toMaster();\n\t\t * var mic = new Tone.UserMedia().connect(gate);\n\t\t * //the gate will only pass through the incoming\n\t\t * //signal when it's louder than -30db\n\t\t */\n\t    Tone.Gate = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'threshold',\n\t            'attack',\n\t            'release'\n\t        ], Tone.Gate);\n\t        Tone.AudioNode.call(this);\n\t        this.createInsOuts(1, 1);\n\t        /**\n\t\t\t *  @type {Tone.Follower}\n\t\t\t *  @private\n\t\t\t */\n\t        this._follower = new Tone.Follower(options.attack, options.release);\n\t        /**\n\t\t\t *  @type {Tone.GreaterThan}\n\t\t\t *  @private\n\t\t\t */\n\t        this._gt = new Tone.GreaterThan(Tone.dbToGain(options.threshold));\n\t        //the connections\n\t        this.input.connect(this.output);\n\t        //the control signal\n\t        this.input.chain(this._gt, this._follower, this.output.gain);\n\t    };\n\t    Tone.extend(Tone.Gate, Tone.AudioNode);\n\t    /**\n\t\t *  @const\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Gate.defaults = {\n\t        'attack': 0.1,\n\t        'release': 0.1,\n\t        'threshold': -40\n\t    };\n\t    /**\n\t\t * The threshold of the gate in decibels\n\t\t * @memberOf Tone.Gate#\n\t\t * @type {Decibels}\n\t\t * @name threshold\n\t\t */\n\t    Object.defineProperty(Tone.Gate.prototype, 'threshold', {\n\t        get: function () {\n\t            return Tone.gainToDb(this._gt.value);\n\t        },\n\t        set: function (thresh) {\n\t            this._gt.value = Tone.dbToGain(thresh);\n\t        }\n\t    });\n\t    /**\n\t\t * The attack speed of the gate\n\t\t * @memberOf Tone.Gate#\n\t\t * @type {Time}\n\t\t * @name attack\n\t\t */\n\t    Object.defineProperty(Tone.Gate.prototype, 'attack', {\n\t        get: function () {\n\t            return this._follower.attack;\n\t        },\n\t        set: function (attackTime) {\n\t            this._follower.attack = attackTime;\n\t        }\n\t    });\n\t    /**\n\t\t * The release speed of the gate\n\t\t * @memberOf Tone.Gate#\n\t\t * @type {Time}\n\t\t * @name release\n\t\t */\n\t    Object.defineProperty(Tone.Gate.prototype, 'release', {\n\t        get: function () {\n\t            return this._follower.release;\n\t        },\n\t        set: function (releaseTime) {\n\t            this._follower.release = releaseTime;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Gate} this\n\t\t */\n\t    Tone.Gate.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._follower.dispose();\n\t        this._gt.dispose();\n\t        this._follower = null;\n\t        this._gt = null;\n\t        return this;\n\t    };\n\t    return Tone.Gate;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t * @class Tone.TickSignal extends Tone.TimelineSignal, but adds the capability\n\t\t *        to calculate the number of elapsed ticks. exponential and target curves\n\t\t *        are approximated with multiple linear ramps.\n\t\t *\n\t\t *        Thank you Bruno Dias, H. Sofia Pinto, and David M. Matos, for your [WAC paper](https://smartech.gatech.edu/bitstream/handle/1853/54588/WAC2016-49.pdf)\n\t\t *        describing integrating timing functions for tempo calculations.\n\t\t *\n\t\t * @param {Number} value The initial value of the signal\n\t\t * @extends {Tone.TimelineSignal}\n\t\t */\n\t    Tone.TickSignal = function (value) {\n\t        value = Tone.defaultArg(value, 1);\n\t        Tone.TimelineSignal.call(this, {\n\t            'units': Tone.Type.Ticks,\n\t            'value': value\n\t        });\n\t        //extend the memory\n\t        this._events.memory = Infinity;\n\t    };\n\t    Tone.extend(Tone.TickSignal, Tone.TimelineSignal);\n\t    /**\n\t\t * Wraps Tone.TimelineSignal methods so that they also\n\t\t * record the ticks.\n\t\t * @param  {Function} method\n\t\t * @return {Function}\n\t\t * @private\n\t\t */\n\t    function _wrapScheduleMethods(method) {\n\t        return function (value, time) {\n\t            time = this.toSeconds(time);\n\t            method.apply(this, arguments);\n\t            var event = this._events.get(time);\n\t            var previousEvent = this._events.previousEvent(event);\n\t            var ticksUntilTime = this._getTickUntilEvent(previousEvent, time - this.sampleTime);\n\t            event.ticks = Math.max(ticksUntilTime, 0);\n\t            return this;\n\t        };\n\t    }\n\t    Tone.TickSignal.prototype.setValueAtTime = _wrapScheduleMethods(Tone.TimelineSignal.prototype.setValueAtTime);\n\t    Tone.TickSignal.prototype.linearRampToValueAtTime = _wrapScheduleMethods(Tone.TimelineSignal.prototype.linearRampToValueAtTime);\n\t    /**\n\t\t *  Start exponentially approaching the target value at the given time with\n\t\t *  a rate having the given time constant.\n\t\t *  @param {number} value\n\t\t *  @param {Time} startTime\n\t\t *  @param {number} timeConstant\n\t\t *  @returns {Tone.TickSignal} this\n\t\t */\n\t    Tone.TickSignal.prototype.setTargetAtTime = function (value, time, constant) {\n\t        //aproximate it with multiple linear ramps\n\t        time = this.toSeconds(time);\n\t        this.setRampPoint(time);\n\t        value = this._fromUnits(value);\n\t        //start from previously scheduled value\n\t        var prevEvent = this._events.get(time);\n\t        var segments = 5;\n\t        for (var i = 0; i <= segments; i++) {\n\t            var segTime = constant * i + time;\n\t            var rampVal = this._exponentialApproach(prevEvent.time, prevEvent.value, value, constant, segTime);\n\t            this.linearRampToValueAtTime(this._toUnits(rampVal), segTime);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Schedules an exponential continuous change in parameter value from\n\t\t *  the previous scheduled parameter value to the given value.\n\t\t *  @param  {number} value\n\t\t *  @param  {Time} endTime\n\t\t *  @returns {Tone.TickSignal} this\n\t\t */\n\t    Tone.TickSignal.prototype.exponentialRampToValueAtTime = function (value, time) {\n\t        //aproximate it with multiple linear ramps\n\t        time = this.toSeconds(time);\n\t        value = this._fromUnits(value);\n\t        //start from previously scheduled value\n\t        var prevEvent = this._events.get(time);\n\t        if (prevEvent === null) {\n\t            prevEvent = {\n\t                'value': this._initial,\n\t                'time': 0\n\t            };\n\t        }\n\t        var segments = 5;\n\t        var segmentDur = (time - prevEvent.time) / segments;\n\t        for (var i = 0; i <= segments; i++) {\n\t            var segTime = segmentDur * i + prevEvent.time;\n\t            var rampVal = this._exponentialInterpolate(prevEvent.time, prevEvent.value, time, value, segTime);\n\t            this.linearRampToValueAtTime(this._toUnits(rampVal), segTime);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t * Returns the tick value at the time. Takes into account\n\t\t * any automation curves scheduled on the signal.\n\t\t * @private\n\t\t * @param  {Time} time The time to get the tick count at\n\t\t * @return {Ticks}      The number of ticks which have elapsed at the time\n\t\t *                          given any automations.\n\t\t */\n\t    Tone.TickSignal.prototype._getTickUntilEvent = function (event, time) {\n\t        if (event === null) {\n\t            event = {\n\t                'ticks': 0,\n\t                'time': 0\n\t            };\n\t        }\n\t        var val0 = this.getValueAtTime(event.time);\n\t        var val1 = this.getValueAtTime(time);\n\t        return 0.5 * (time - event.time) * (val0 + val1) + event.ticks;\n\t    };\n\t    /**\n\t\t * Returns the tick value at the time. Takes into account\n\t\t * any automation curves scheduled on the signal.\n\t\t * @param  {Time} time The time to get the tick count at\n\t\t * @return {Ticks}      The number of ticks which have elapsed at the time\n\t\t *                          given any automations.\n\t\t */\n\t    Tone.TickSignal.prototype.getTickAtTime = function (time) {\n\t        time = this.toSeconds(time);\n\t        var event = this._events.get(time);\n\t        return this._getTickUntilEvent(event, time);\n\t    };\n\t    /**\n\t\t * Return the elapsed time of the number of ticks from the given time\n\t\t * @param {Ticks} ticks The number of ticks to calculate\n\t\t * @param  {Time} time The time to get the next tick from\n\t\t * @return {Seconds} The duration of the number of ticks from the given time in seconds\n\t\t */\n\t    Tone.TickSignal.prototype.getDurationOfTicks = function (ticks, time) {\n\t        time = this.toSeconds(time);\n\t        var currentTick = this.getTickAtTime(time);\n\t        return this.getTimeOfTick(currentTick + ticks) - time;\n\t    };\n\t    /**\n\t\t * Given a tick, returns the time that tick occurs at.\n\t\t * @param  {Ticks} tick\n\t\t * @return {Time}      The time that the tick occurs.\n\t\t */\n\t    Tone.TickSignal.prototype.getTimeOfTick = function (tick) {\n\t        var before = this._events.get(tick, 'ticks');\n\t        var after = this._events.getAfter(tick, 'ticks');\n\t        if (before && before.ticks === tick) {\n\t            return before.time;\n\t        } else if (before && after && after.type === Tone.TimelineSignal.Type.Linear && before.value !== after.value) {\n\t            var val0 = this.getValueAtTime(before.time);\n\t            var val1 = this.getValueAtTime(after.time);\n\t            var delta = (val1 - val0) / (after.time - before.time);\n\t            var k = Math.sqrt(Math.pow(val0, 2) - 2 * delta * (before.ticks - tick));\n\t            var sol1 = (-val0 + k) / delta;\n\t            var sol2 = (-val0 - k) / delta;\n\t            return (sol1 > 0 ? sol1 : sol2) + before.time;\n\t        } else if (before) {\n\t            if (before.value === 0) {\n\t                return Infinity;\n\t            } else {\n\t                return before.time + (tick - before.ticks) / before.value;\n\t            }\n\t        } else {\n\t            return tick / this._initial;\n\t        }\n\t    };\n\t    return Tone.TickSignal;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  A Timeline State. Provides the methods: <code>setStateAtTime(\"state\", time)</code>\n\t\t *          and <code>getValueAtTime(time)</code>.\n\t\t *\n\t\t *  @extends {Tone.Timeline}\n\t\t *  @param {String} initial The initial state of the TimelineState. \n\t\t *                          Defaults to <code>undefined</code>\n\t\t */\n\t    Tone.TimelineState = function (initial) {\n\t        Tone.Timeline.call(this);\n\t        /**\n\t\t\t *  The initial state\n\t\t\t *  @private\n\t\t\t *  @type {String}\n\t\t\t */\n\t        this._initial = initial;\n\t    };\n\t    Tone.extend(Tone.TimelineState, Tone.Timeline);\n\t    /**\n\t\t *  Returns the scheduled state scheduled before or at\n\t\t *  the given time.\n\t\t *  @param  {Number}  time  The time to query.\n\t\t *  @return  {String}  The name of the state input in setStateAtTime.\n\t\t */\n\t    Tone.TimelineState.prototype.getValueAtTime = function (time) {\n\t        var event = this.get(time);\n\t        if (event !== null) {\n\t            return event.state;\n\t        } else {\n\t            return this._initial;\n\t        }\n\t    };\n\t    /**\n\t\t *  Add a state to the timeline.\n\t\t *  @param  {String}  state The name of the state to set.\n\t\t *  @param  {Number}  time  The time to query.\n\t\t *  @returns {Tone.TimelineState} this\n\t\t */\n\t    Tone.TimelineState.prototype.setStateAtTime = function (state, time) {\n\t        this.add({\n\t            'state': state,\n\t            'time': time\n\t        });\n\t        return this;\n\t    };\n\t    return Tone.TimelineState;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  A sample accurate clock which provides a callback at the given rate. \n\t\t *          While the callback is not sample-accurate (it is still susceptible to\n\t\t *          loose JS timing), the time passed in as the argument to the callback\n\t\t *          is precise. For most applications, it is better to use Tone.Transport\n\t\t *          instead of the Clock by itself since you can synchronize multiple callbacks.\n\t\t *\n\t\t * \t@constructor\n\t\t *  @extends {Tone.Emitter}\n\t\t * \t@param {function} callback The callback to be invoked with the time of the audio event\n\t\t * \t@param {Frequency} frequency The rate of the callback\n\t\t * \t@example\n\t\t * //the callback will be invoked approximately once a second\n\t\t * //and will print the time exactly once a second apart.\n\t\t * var clock = new Tone.Clock(function(time){\n\t\t * \tconsole.log(time);\n\t\t * }, 1);\n\t\t */\n\t    Tone.Clock = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'callback',\n\t            'frequency'\n\t        ], Tone.Clock);\n\t        Tone.Emitter.call(this);\n\t        /**\n\t\t\t *  The callback function to invoke at the scheduled tick.\n\t\t\t *  @type  {Function}\n\t\t\t */\n\t        this.callback = options.callback;\n\t        /**\n\t\t\t *  The next time the callback is scheduled.\n\t\t\t *  @type {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._nextTick = 0;\n\t        /**\n\t\t\t *  The last state of the clock.\n\t\t\t *  @type  {State}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lastState = Tone.State.Stopped;\n\t        /**\n\t\t\t *  The rate the callback function should be invoked. \n\t\t\t *  @type  {BPM}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.TickSignal(options.frequency, Tone.Type.Frequency);\n\t        this._readOnly('frequency');\n\t        /**\n\t\t\t *  The number of times the callback was invoked. Starts counting at 0\n\t\t\t *  and increments after the callback was invoked. \n\t\t\t *  @type {Ticks}\n\t\t\t *  @readOnly\n\t\t\t */\n\t        this.ticks = 0;\n\t        /**\n\t\t\t *  The state timeline\n\t\t\t *  @type {Tone.TimelineState}\n\t\t\t *  @private\n\t\t\t */\n\t        this._state = new Tone.TimelineState(Tone.State.Stopped);\n\t        /**\n\t\t\t *  The loop function bound to its context. \n\t\t\t *  This is necessary to remove the event in the end.\n\t\t\t *  @type {Function}\n\t\t\t *  @private\n\t\t\t */\n\t        this._boundLoop = this._loop.bind(this);\n\t        //bind a callback to the worker thread\n\t        this.context.on('tick', this._boundLoop);\n\t    };\n\t    Tone.extend(Tone.Clock, Tone.Emitter);\n\t    /**\n\t\t *  The defaults\n\t\t *  @const\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.Clock.defaults = {\n\t        'callback': Tone.noOp,\n\t        'frequency': 1\n\t    };\n\t    /**\n\t\t *  Returns the playback state of the source, either \"started\", \"stopped\" or \"paused\".\n\t\t *  @type {Tone.State}\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.Clock#\n\t\t *  @name state\n\t\t */\n\t    Object.defineProperty(Tone.Clock.prototype, 'state', {\n\t        get: function () {\n\t            return this._state.getValueAtTime(this.now());\n\t        }\n\t    });\n\t    /**\n\t\t *  Start the clock at the given time. Optionally pass in an offset\n\t\t *  of where to start the tick counter from.\n\t\t *  @param  {Time=}  time    The time the clock should start\n\t\t *  @param  {Ticks=}  offset  Where the tick counter starts counting from.\n\t\t *  @return  {Tone.Clock}  this\n\t\t */\n\t    Tone.Clock.prototype.start = function (time, offset) {\n\t        time = this.toSeconds(time);\n\t        if (this._state.getValueAtTime(time) !== Tone.State.Started) {\n\t            this._state.setStateAtTime(Tone.State.Started, time);\n\t            this._state.get(time).offset = offset;\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Stop the clock. Stopping the clock resets the tick counter to 0.\n\t\t *  @param {Time} [time=now] The time when the clock should stop.\n\t\t *  @returns {Tone.Clock} this\n\t\t *  @example\n\t\t * clock.stop();\n\t\t */\n\t    Tone.Clock.prototype.stop = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._state.cancel(time);\n\t        this._state.setStateAtTime(Tone.State.Stopped, time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Pause the clock. Pausing does not reset the tick counter.\n\t\t *  @param {Time} [time=now] The time when the clock should stop.\n\t\t *  @returns {Tone.Clock} this\n\t\t */\n\t    Tone.Clock.prototype.pause = function (time) {\n\t        time = this.toSeconds(time);\n\t        if (this._state.getValueAtTime(time) === Tone.State.Started) {\n\t            this._state.setStateAtTime(Tone.State.Paused, time);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  The scheduling loop.\n\t\t *  @private\n\t\t */\n\t    Tone.Clock.prototype._loop = function () {\n\t        //the end of the update interval\n\t        var endTime = this.now() + this.context.updateInterval;\n\t        //the current event at the time of the loop\n\t        var event = this._state.get(endTime);\n\t        if (event) {\n\t            //state change events\n\t            if (event.state !== this._lastState) {\n\t                this._lastState = event.state;\n\t                switch (event.state) {\n\t                case Tone.State.Started:\n\t                    if (!Tone.isUndef(event.offset)) {\n\t                        this.ticks = event.offset;\n\t                    }\n\t                    this._nextTick = event.time;\n\t                    this.emit('start', event.time, this.ticks);\n\t                    break;\n\t                case Tone.State.Stopped:\n\t                    this.ticks = 0;\n\t                    this.emit('stop', event.time);\n\t                    break;\n\t                case Tone.State.Paused:\n\t                    this.emit('pause', event.time);\n\t                    break;\n\t                }\n\t            }\n\t            //all the tick events\n\t            while (endTime > this._nextTick && this._state) {\n\t                var tickTime = this._nextTick;\n\t                if (this.frequency) {\n\t                    this._nextTick += this.frequency.getDurationOfTicks(1, this._nextTick);\n\t                    if (event.state === Tone.State.Started) {\n\t                        try {\n\t                            this.callback(tickTime);\n\t                            this.ticks++;\n\t                        } catch (e) {\n\t                            this.ticks++;\n\t                            throw e;\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  Returns the scheduled state at the given time.\n\t\t *  @param  {Time}  time  The time to query.\n\t\t *  @return  {String}  The name of the state input in setStateAtTime.\n\t\t *  @example\n\t\t * clock.start(\"+0.1\");\n\t\t * clock.getStateAtTime(\"+0.1\"); //returns \"started\"\n\t\t */\n\t    Tone.Clock.prototype.getStateAtTime = function (time) {\n\t        time = this.toSeconds(time);\n\t        return this._state.getValueAtTime(time);\n\t    };\n\t    /**\n\t\t *  Clean up\n\t\t *  @returns {Tone.Clock} this\n\t\t */\n\t    Tone.Clock.prototype.dispose = function () {\n\t        Tone.Emitter.prototype.dispose.call(this);\n\t        this.context.off('tick', this._boundLoop);\n\t        this._writable('frequency');\n\t        this.frequency.dispose();\n\t        this.frequency = null;\n\t        this._boundLoop = null;\n\t        this._nextTick = Infinity;\n\t        this.callback = null;\n\t        this._state.dispose();\n\t        this._state = null;\n\t    };\n\t    return Tone.Clock;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Similar to Tone.Timeline, but all events represent\n\t\t *         intervals with both \"time\" and \"duration\" times. The \n\t\t *         events are placed in a tree structure optimized\n\t\t *         for querying an intersection point with the timeline\n\t\t *         events. Internally uses an [Interval Tree](https://en.wikipedia.org/wiki/Interval_tree)\n\t\t *         to represent the data.\n\t\t *  @extends {Tone}\n\t\t */\n\t    Tone.IntervalTimeline = function () {\n\t        Tone.call(this);\n\t        /**\n\t\t\t *  The root node of the inteval tree\n\t\t\t *  @type  {IntervalNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._root = null;\n\t        /**\n\t\t\t *  Keep track of the length of the timeline.\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._length = 0;\n\t    };\n\t    Tone.extend(Tone.IntervalTimeline);\n\t    /**\n\t\t *  The event to add to the timeline. All events must \n\t\t *  have a time and duration value\n\t\t *  @param  {Object}  event  The event to add to the timeline\n\t\t *  @return  {Tone.IntervalTimeline}  this\n\t\t */\n\t    Tone.IntervalTimeline.prototype.add = function (event) {\n\t        if (Tone.isUndef(event.time) || Tone.isUndef(event.duration)) {\n\t            throw new Error('Tone.IntervalTimeline: events must have time and duration parameters');\n\t        }\n\t        var node = new IntervalNode(event.time, event.time + event.duration, event);\n\t        if (this._root === null) {\n\t            this._root = node;\n\t        } else {\n\t            this._root.insert(node);\n\t        }\n\t        this._length++;\n\t        // Restructure tree to be balanced\n\t        while (node !== null) {\n\t            node.updateHeight();\n\t            node.updateMax();\n\t            this._rebalance(node);\n\t            node = node.parent;\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Remove an event from the timeline.\n\t\t *  @param  {Object}  event  The event to remove from the timeline\n\t\t *  @return  {Tone.IntervalTimeline}  this\n\t\t */\n\t    Tone.IntervalTimeline.prototype.remove = function (event) {\n\t        if (this._root !== null) {\n\t            var results = [];\n\t            this._root.search(event.time, results);\n\t            for (var i = 0; i < results.length; i++) {\n\t                var node = results[i];\n\t                if (node.event === event) {\n\t                    this._removeNode(node);\n\t                    this._length--;\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  The number of items in the timeline.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.IntervalTimeline#\n\t\t *  @name length\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.IntervalTimeline.prototype, 'length', {\n\t        get: function () {\n\t            return this._length;\n\t        }\n\t    });\n\t    /**\n\t\t *  Remove events whose time time is after the given time\n\t\t *  @param  {Number}  time  The time to query.\n\t\t *  @returns {Tone.IntervalTimeline} this\n\t\t */\n\t    Tone.IntervalTimeline.prototype.cancel = function (after) {\n\t        this.forEachAfter(after, function (event) {\n\t            this.remove(event);\n\t        }.bind(this));\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Set the root node as the given node\n\t\t *  @param {IntervalNode} node\n\t\t *  @private\n\t\t */\n\t    Tone.IntervalTimeline.prototype._setRoot = function (node) {\n\t        this._root = node;\n\t        if (this._root !== null) {\n\t            this._root.parent = null;\n\t        }\n\t    };\n\t    /**\n\t\t *  Replace the references to the node in the node's parent\n\t\t *  with the replacement node.\n\t\t *  @param  {IntervalNode}  node        \n\t\t *  @param  {IntervalNode}  replacement \n\t\t *  @private\n\t\t */\n\t    Tone.IntervalTimeline.prototype._replaceNodeInParent = function (node, replacement) {\n\t        if (node.parent !== null) {\n\t            if (node.isLeftChild()) {\n\t                node.parent.left = replacement;\n\t            } else {\n\t                node.parent.right = replacement;\n\t            }\n\t            this._rebalance(node.parent);\n\t        } else {\n\t            this._setRoot(replacement);\n\t        }\n\t    };\n\t    /**\n\t\t *  Remove the node from the tree and replace it with \n\t\t *  a successor which follows the schema.\n\t\t *  @param  {IntervalNode}  node\n\t\t *  @private\n\t\t */\n\t    Tone.IntervalTimeline.prototype._removeNode = function (node) {\n\t        if (node.left === null && node.right === null) {\n\t            this._replaceNodeInParent(node, null);\n\t        } else if (node.right === null) {\n\t            this._replaceNodeInParent(node, node.left);\n\t        } else if (node.left === null) {\n\t            this._replaceNodeInParent(node, node.right);\n\t        } else {\n\t            var balance = node.getBalance();\n\t            var replacement, temp;\n\t            if (balance > 0) {\n\t                if (node.left.right === null) {\n\t                    replacement = node.left;\n\t                    replacement.right = node.right;\n\t                    temp = replacement;\n\t                } else {\n\t                    replacement = node.left.right;\n\t                    while (replacement.right !== null) {\n\t                        replacement = replacement.right;\n\t                    }\n\t                    replacement.parent.right = replacement.left;\n\t                    temp = replacement.parent;\n\t                    replacement.left = node.left;\n\t                    replacement.right = node.right;\n\t                }\n\t            } else {\n\t                if (node.right.left === null) {\n\t                    replacement = node.right;\n\t                    replacement.left = node.left;\n\t                    temp = replacement;\n\t                } else {\n\t                    replacement = node.right.left;\n\t                    while (replacement.left !== null) {\n\t                        replacement = replacement.left;\n\t                    }\n\t                    replacement.parent = replacement.parent;\n\t                    replacement.parent.left = replacement.right;\n\t                    temp = replacement.parent;\n\t                    replacement.left = node.left;\n\t                    replacement.right = node.right;\n\t                }\n\t            }\n\t            if (node.parent !== null) {\n\t                if (node.isLeftChild()) {\n\t                    node.parent.left = replacement;\n\t                } else {\n\t                    node.parent.right = replacement;\n\t                }\n\t            } else {\n\t                this._setRoot(replacement);\n\t            }\n\t            // this._replaceNodeInParent(node, replacement);\n\t            this._rebalance(temp);\n\t        }\n\t        node.dispose();\n\t    };\n\t    /**\n\t\t *  Rotate the tree to the left\n\t\t *  @param  {IntervalNode}  node\n\t\t *  @private\n\t\t */\n\t    Tone.IntervalTimeline.prototype._rotateLeft = function (node) {\n\t        var parent = node.parent;\n\t        var isLeftChild = node.isLeftChild();\n\t        // Make node.right the new root of this sub tree (instead of node)\n\t        var pivotNode = node.right;\n\t        node.right = pivotNode.left;\n\t        pivotNode.left = node;\n\t        if (parent !== null) {\n\t            if (isLeftChild) {\n\t                parent.left = pivotNode;\n\t            } else {\n\t                parent.right = pivotNode;\n\t            }\n\t        } else {\n\t            this._setRoot(pivotNode);\n\t        }\n\t    };\n\t    /**\n\t\t *  Rotate the tree to the right\n\t\t *  @param  {IntervalNode}  node\n\t\t *  @private\n\t\t */\n\t    Tone.IntervalTimeline.prototype._rotateRight = function (node) {\n\t        var parent = node.parent;\n\t        var isLeftChild = node.isLeftChild();\n\t        // Make node.left the new root of this sub tree (instead of node)\n\t        var pivotNode = node.left;\n\t        node.left = pivotNode.right;\n\t        pivotNode.right = node;\n\t        if (parent !== null) {\n\t            if (isLeftChild) {\n\t                parent.left = pivotNode;\n\t            } else {\n\t                parent.right = pivotNode;\n\t            }\n\t        } else {\n\t            this._setRoot(pivotNode);\n\t        }\n\t    };\n\t    /**\n\t\t *  Balance the BST\n\t\t *  @param  {IntervalNode}  node\n\t\t *  @private\n\t\t */\n\t    Tone.IntervalTimeline.prototype._rebalance = function (node) {\n\t        var balance = node.getBalance();\n\t        if (balance > 1) {\n\t            if (node.left.getBalance() < 0) {\n\t                this._rotateLeft(node.left);\n\t            } else {\n\t                this._rotateRight(node);\n\t            }\n\t        } else if (balance < -1) {\n\t            if (node.right.getBalance() > 0) {\n\t                this._rotateRight(node.right);\n\t            } else {\n\t                this._rotateLeft(node);\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  Get an event whose time and duration span the give time. Will\n\t\t *  return the match whose \"time\" value is closest to the given time.\n\t\t *  @param  {Object}  event  The event to add to the timeline\n\t\t *  @return  {Object}  The event which spans the desired time\n\t\t */\n\t    Tone.IntervalTimeline.prototype.get = function (time) {\n\t        if (this._root !== null) {\n\t            var results = [];\n\t            this._root.search(time, results);\n\t            if (results.length > 0) {\n\t                var max = results[0];\n\t                for (var i = 1; i < results.length; i++) {\n\t                    if (results[i].low > max.low) {\n\t                        max = results[i];\n\t                    }\n\t                }\n\t                return max.event;\n\t            }\n\t        }\n\t        return null;\n\t    };\n\t    /**\n\t\t *  Iterate over everything in the timeline.\n\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t *  @returns {Tone.IntervalTimeline} this\n\t\t */\n\t    Tone.IntervalTimeline.prototype.forEach = function (callback) {\n\t        if (this._root !== null) {\n\t            var allNodes = [];\n\t            this._root.traverse(function (node) {\n\t                allNodes.push(node);\n\t            });\n\t            for (var i = 0; i < allNodes.length; i++) {\n\t                var ev = allNodes[i].event;\n\t                if (ev) {\n\t                    callback(ev);\n\t                }\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Iterate over everything in the array in which the given time\n\t\t *  overlaps with the time and duration time of the event.\n\t\t *  @param  {Number}  time The time to check if items are overlapping\n\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t *  @returns {Tone.IntervalTimeline} this\n\t\t */\n\t    Tone.IntervalTimeline.prototype.forEachAtTime = function (time, callback) {\n\t        if (this._root !== null) {\n\t            var results = [];\n\t            this._root.search(time, results);\n\t            for (var i = results.length - 1; i >= 0; i--) {\n\t                var ev = results[i].event;\n\t                if (ev) {\n\t                    callback(ev);\n\t                }\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Iterate over everything in the array in which the time is greater\n\t\t *  than the given time.\n\t\t *  @param  {Number}  time The time to check if items are before\n\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t *  @returns {Tone.IntervalTimeline} this\n\t\t */\n\t    Tone.IntervalTimeline.prototype.forEachAfter = function (time, callback) {\n\t        if (this._root !== null) {\n\t            var results = [];\n\t            this._root.searchAfter(time, results);\n\t            for (var i = results.length - 1; i >= 0; i--) {\n\t                var ev = results[i].event;\n\t                callback(ev);\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Clean up\n\t\t *  @return  {Tone.IntervalTimeline}  this\n\t\t */\n\t    Tone.IntervalTimeline.prototype.dispose = function () {\n\t        var allNodes = [];\n\t        if (this._root !== null) {\n\t            this._root.traverse(function (node) {\n\t                allNodes.push(node);\n\t            });\n\t        }\n\t        for (var i = 0; i < allNodes.length; i++) {\n\t            allNodes[i].dispose();\n\t        }\n\t        allNodes = null;\n\t        this._root = null;\n\t        return this;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tINTERVAL NODE HELPER\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Represents a node in the binary search tree, with the addition\n\t\t *  of a \"high\" value which keeps track of the highest value of\n\t\t *  its children. \n\t\t *  References: \n\t\t *  https://brooknovak.wordpress.com/2013/12/07/augmented-interval-tree-in-c/\n\t\t *  http://www.mif.vu.lt/~valdas/ALGORITMAI/LITERATURA/Cormen/Cormen.pdf\n\t\t *  @param {Number} low\n\t\t *  @param {Number} high\n\t\t *  @private\n\t\t */\n\t    var IntervalNode = function (low, high, event) {\n\t        //the event container\n\t        this.event = event;\n\t        //the low value\n\t        this.low = low;\n\t        //the high value\n\t        this.high = high;\n\t        //the high value for this and all child nodes\n\t        this.max = this.high;\n\t        //the nodes to the left\n\t        this._left = null;\n\t        //the nodes to the right\n\t        this._right = null;\n\t        //the parent node\n\t        this.parent = null;\n\t        //the number of child nodes\n\t        this.height = 0;\n\t    };\n\t    /** \n\t\t *  Insert a node into the correct spot in the tree\n\t\t *  @param  {IntervalNode}  node\n\t\t */\n\t    IntervalNode.prototype.insert = function (node) {\n\t        if (node.low <= this.low) {\n\t            if (this.left === null) {\n\t                this.left = node;\n\t            } else {\n\t                this.left.insert(node);\n\t            }\n\t        } else {\n\t            if (this.right === null) {\n\t                this.right = node;\n\t            } else {\n\t                this.right.insert(node);\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  Search the tree for nodes which overlap \n\t\t *  with the given point\n\t\t *  @param  {Number}  point  The point to query\n\t\t *  @param  {Array}  results  The array to put the results\n\t\t */\n\t    IntervalNode.prototype.search = function (point, results) {\n\t        // If p is to the right of the rightmost point of any interval\n\t        // in this node and all children, there won't be any matches.\n\t        if (point > this.max) {\n\t            return;\n\t        }\n\t        // Search left children\n\t        if (this.left !== null) {\n\t            this.left.search(point, results);\n\t        }\n\t        // Check this node\n\t        if (this.low <= point && this.high > point) {\n\t            results.push(this);\n\t        }\n\t        // If p is to the left of the time of this interval,\n\t        // then it can't be in any child to the right.\n\t        if (this.low > point) {\n\t            return;\n\t        }\n\t        // Search right children\n\t        if (this.right !== null) {\n\t            this.right.search(point, results);\n\t        }\n\t    };\n\t    /**\n\t\t *  Search the tree for nodes which are less \n\t\t *  than the given point\n\t\t *  @param  {Number}  point  The point to query\n\t\t *  @param  {Array}  results  The array to put the results\n\t\t */\n\t    IntervalNode.prototype.searchAfter = function (point, results) {\n\t        // Check this node\n\t        if (this.low >= point) {\n\t            results.push(this);\n\t            if (this.left !== null) {\n\t                this.left.searchAfter(point, results);\n\t            }\n\t        }\n\t        // search the right side\n\t        if (this.right !== null) {\n\t            this.right.searchAfter(point, results);\n\t        }\n\t    };\n\t    /**\n\t\t *  Invoke the callback on this element and both it's branches\n\t\t *  @param  {Function}  callback\n\t\t */\n\t    IntervalNode.prototype.traverse = function (callback) {\n\t        callback(this);\n\t        if (this.left !== null) {\n\t            this.left.traverse(callback);\n\t        }\n\t        if (this.right !== null) {\n\t            this.right.traverse(callback);\n\t        }\n\t    };\n\t    /**\n\t\t *  Update the height of the node\n\t\t */\n\t    IntervalNode.prototype.updateHeight = function () {\n\t        if (this.left !== null && this.right !== null) {\n\t            this.height = Math.max(this.left.height, this.right.height) + 1;\n\t        } else if (this.right !== null) {\n\t            this.height = this.right.height + 1;\n\t        } else if (this.left !== null) {\n\t            this.height = this.left.height + 1;\n\t        } else {\n\t            this.height = 0;\n\t        }\n\t    };\n\t    /**\n\t\t *  Update the height of the node\n\t\t */\n\t    IntervalNode.prototype.updateMax = function () {\n\t        this.max = this.high;\n\t        if (this.left !== null) {\n\t            this.max = Math.max(this.max, this.left.max);\n\t        }\n\t        if (this.right !== null) {\n\t            this.max = Math.max(this.max, this.right.max);\n\t        }\n\t    };\n\t    /**\n\t\t *  The balance is how the leafs are distributed on the node\n\t\t *  @return  {Number}  Negative numbers are balanced to the right\n\t\t */\n\t    IntervalNode.prototype.getBalance = function () {\n\t        var balance = 0;\n\t        if (this.left !== null && this.right !== null) {\n\t            balance = this.left.height - this.right.height;\n\t        } else if (this.left !== null) {\n\t            balance = this.left.height + 1;\n\t        } else if (this.right !== null) {\n\t            balance = -(this.right.height + 1);\n\t        }\n\t        return balance;\n\t    };\n\t    /**\n\t\t *  @returns {Boolean} true if this node is the left child\n\t\t *  of its parent\n\t\t */\n\t    IntervalNode.prototype.isLeftChild = function () {\n\t        return this.parent !== null && this.parent.left === this;\n\t    };\n\t    /**\n\t\t *  get/set the left node\n\t\t *  @type {IntervalNode}\n\t\t */\n\t    Object.defineProperty(IntervalNode.prototype, 'left', {\n\t        get: function () {\n\t            return this._left;\n\t        },\n\t        set: function (node) {\n\t            this._left = node;\n\t            if (node !== null) {\n\t                node.parent = this;\n\t            }\n\t            this.updateHeight();\n\t            this.updateMax();\n\t        }\n\t    });\n\t    /**\n\t\t *  get/set the right node\n\t\t *  @type {IntervalNode}\n\t\t */\n\t    Object.defineProperty(IntervalNode.prototype, 'right', {\n\t        get: function () {\n\t            return this._right;\n\t        },\n\t        set: function (node) {\n\t            this._right = node;\n\t            if (node !== null) {\n\t                node.parent = this;\n\t            }\n\t            this.updateHeight();\n\t            this.updateMax();\n\t        }\n\t    });\n\t    /**\n\t\t *  null out references.\n\t\t */\n\t    IntervalNode.prototype.dispose = function () {\n\t        this.parent = null;\n\t        this._left = null;\n\t        this._right = null;\n\t        this.event = null;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tEND INTERVAL NODE HELPER\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    return Tone.IntervalTimeline;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class Tone.TransportEvent is an internal class used by (Tone.Transport)[Transport]\n\t\t *         to schedule events. Do no invoke this class directly, it is\n\t\t *         handled from within Tone.Transport.\n\t\t *  @extends {Tone}\n\t\t *  @param {Object} options\n\t\t */\n\t    Tone.TransportEvent = function (Transport, options) {\n\t        options = Tone.defaultArg(options, Tone.TransportEvent.defaults);\n\t        Tone.call(this);\n\t        /**\n\t\t\t * Reference to the Transport that created it\n\t\t\t * @type {Tone.Transport}\n\t\t\t */\n\t        this.Transport = Transport;\n\t        /**\n\t\t\t * The unique id of the event\n\t\t\t * @type {Number}\n\t\t\t */\n\t        this.id = Tone.TransportEvent._eventId++;\n\t        /**\n\t\t\t * The time the event starts\n\t\t\t * @type {Ticks}\n\t\t\t */\n\t        this.time = options.time;\n\t        /**\n\t\t\t * The callback to invoke\n\t\t\t * @type {Function}\n\t\t\t */\n\t        this.callback = options.callback;\n\t        /**\n\t\t\t * If the event should be removed after being created.\n\t\t\t * @type {Boolean}\n\t\t\t * @private\n\t\t\t */\n\t        this._once = options.once;\n\t    };\n\t    Tone.extend(Tone.TransportEvent);\n\t    /**\n\t\t * The defaults\n\t\t * @static\n\t\t * @type {Object}\n\t\t */\n\t    Tone.TransportEvent.defaults = {\n\t        'once': false,\n\t        'callback': Tone.noOp\n\t    };\n\t    /**\n\t\t * Current ID counter\n\t\t * @private\n\t\t * @static\n\t\t * @type {Number}\n\t\t */\n\t    Tone.TransportEvent._eventId = 0;\n\t    /**\n\t\t * Invoke the callback even callback.\n\t\t * @param  {Time} time  The AudioContext time in seconds of the event\n\t\t */\n\t    Tone.TransportEvent.prototype.invoke = function (time) {\n\t        if (this.callback) {\n\t            this.callback(time);\n\t            if (this._once && this.Transport) {\n\t                this.Transport.clear(this.id);\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t * Clean up\n\t\t * @return {Tone.TransportEvent} this\n\t\t */\n\t    Tone.TransportEvent.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this.Transport = null;\n\t        this.callback = null;\n\t        return this;\n\t    };\n\t    return Tone.TransportEvent;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class Tone.TransportRepeatEvent is an internal class used by Tone.Transport\n\t\t *         to schedule repeat events. This class should not be instantiated directly.\n\t\t *  @extends {Tone.TransportEvent}\n\t\t *  @param {Object} options\n\t\t */\n\t    Tone.TransportRepeatEvent = function (Transport, options) {\n\t        Tone.TransportEvent.call(this, Transport, options);\n\t        options = Tone.defaultArg(options, Tone.TransportRepeatEvent.defaults);\n\t        /**\n\t\t\t * When the event should stop repeating\n\t\t\t * @type {Ticks}\n\t\t\t * @private\n\t\t\t */\n\t        this.duration = options.duration;\n\t        /**\n\t\t\t * The interval of the repeated event\n\t\t\t * @type {Ticks}\n\t\t\t * @private\n\t\t\t */\n\t        this._interval = options.interval;\n\t        /**\n\t\t\t * The ID of the current timeline event\n\t\t\t * @type {Number}\n\t\t\t * @private\n\t\t\t */\n\t        this._currentId = -1;\n\t        /**\n\t\t\t * The ID of the next timeline event\n\t\t\t * @type {Number}\n\t\t\t * @private\n\t\t\t */\n\t        this._nextId = -1;\n\t        /**\n\t\t\t  * The time of the next event\n\t\t\t  * @type {Ticks}\n\t\t\t  * @private\n\t\t\t  */\n\t        this._nextTick = this.time;\n\t        /**\n\t\t\t * a reference to the bound start method\n\t\t\t * @type {Function}\n\t\t\t * @private\n\t\t\t */\n\t        this._boundRestart = this._restart.bind(this);\n\t        this.Transport.on('start loopStart', this._boundRestart);\n\t        this._restart();\n\t    };\n\t    Tone.extend(Tone.TransportRepeatEvent, Tone.TransportEvent);\n\t    /**\n\t\t * The defaults\n\t\t * @static\n\t\t * @type {Object}\n\t\t */\n\t    Tone.TransportRepeatEvent.defaults = {\n\t        'duration': Infinity,\n\t        'interval': 1\n\t    };\n\t    /**\n\t\t * Invoke the callback. Returns the tick time which\n\t\t * the next event should be scheduled at.\n\t\t * @param  {Number} time  The AudioContext time in seconds of the event\n\t\t */\n\t    Tone.TransportRepeatEvent.prototype.invoke = function (time) {\n\t        //create more events if necessary\n\t        this._createEvents();\n\t        //call the super class\n\t        Tone.TransportEvent.prototype.invoke.call(this, time);\n\t    };\n\t    /**\n\t\t * Push more events onto the timeline to keep up with the position of the timeline\n\t\t * @private\n\t\t */\n\t    Tone.TransportRepeatEvent.prototype._createEvents = function () {\n\t        // schedule the next event\n\t        var ticks = this.Transport.ticks;\n\t        if (ticks >= this.time && ticks >= this._nextTick && this._nextTick + this._interval < this.time + this.duration) {\n\t            this._nextTick += this._interval;\n\t            this._currentId = this._nextId;\n\t            this._nextId = this.Transport.scheduleOnce(this.invoke.bind(this), Tone.TransportTime(this._nextTick, 'i'));\n\t        }\n\t    };\n\t    /**\n\t\t * Push more events onto the timeline to keep up with the position of the timeline\n\t\t * @private\n\t\t */\n\t    Tone.TransportRepeatEvent.prototype._restart = function () {\n\t        this.Transport.clear(this._currentId);\n\t        this.Transport.clear(this._nextId);\n\t        var ticks = this.Transport.ticks;\n\t        this._nextTick = this.time;\n\t        if (ticks > this.time) {\n\t            this._nextTick = this.time + Math.ceil((ticks - this.time) / this._interval) * this._interval;\n\t        }\n\t        this._currentId = this.Transport.scheduleOnce(this.invoke.bind(this), Tone.TransportTime(this._nextTick, 'i'));\n\t        this._nextTick += this._interval;\n\t        this._nextId = this.Transport.scheduleOnce(this.invoke.bind(this), Tone.TransportTime(this._nextTick, 'i'));\n\t    };\n\t    /**\n\t\t * Clean up\n\t\t * @return {Tone.TransportRepeatEvent} this\n\t\t */\n\t    Tone.TransportRepeatEvent.prototype.dispose = function () {\n\t        this.Transport.clear(this._currentId);\n\t        this.Transport.clear(this._nextId);\n\t        this.Transport.off('start loopStart', this._boundRestart);\n\t        this._boundCreateEvents = null;\n\t        Tone.TransportEvent.prototype.dispose.call(this);\n\t        return this;\n\t    };\n\t    return Tone.TransportRepeatEvent;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Transport for timing musical events.\n\t\t *          Supports tempo curves and time changes. Unlike browser-based timing (setInterval, requestAnimationFrame)\n\t\t *          Tone.Transport timing events pass in the exact time of the scheduled event\n\t\t *          in the argument of the callback function. Pass that time value to the object\n\t\t *          you're scheduling. <br><br>\n\t\t *          A single transport is created for you when the library is initialized.\n\t\t *          <br><br>\n\t\t *          The transport emits the events: \"start\", \"stop\", \"pause\", and \"loop\" which are\n\t\t *          called with the time of that event as the argument.\n\t\t *\n\t\t *  @extends {Tone.Emitter}\n\t\t *  @singleton\n\t\t *  @example\n\t\t * //repeated event every 8th note\n\t\t * Tone.Transport.scheduleRepeat(function(time){\n\t\t * \t//do something with the time\n\t\t * }, \"8n\");\n\t\t *  @example\n\t\t * //schedule an event on the 16th measure\n\t\t * Tone.Transport.schedule(function(time){\n\t\t * \t//do something with the time\n\t\t * }, \"16:0:0\");\n\t\t */\n\t    Tone.Transport = function () {\n\t        Tone.Emitter.call(this);\n\t        Tone.getContext(function () {\n\t            ///////////////////////////////////////////////////////////////////////\n\t            //\tLOOPING\n\t            //////////////////////////////////////////////////////////////////////\n\t            /**\n\t\t\t\t * \tIf the transport loops or not.\n\t\t\t\t *  @type {boolean}\n\t\t\t\t */\n\t            this.loop = false;\n\t            /**\n\t\t\t\t * \tThe loop start position in ticks\n\t\t\t\t *  @type {Ticks}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._loopStart = 0;\n\t            /**\n\t\t\t\t * \tThe loop end position in ticks\n\t\t\t\t *  @type {Ticks}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._loopEnd = 0;\n\t            ///////////////////////////////////////////////////////////////////////\n\t            //\tCLOCK/TEMPO\n\t            //////////////////////////////////////////////////////////////////////\n\t            /**\n\t\t\t\t *  Pulses per quarter is the number of ticks per quarter note.\n\t\t\t\t *  @private\n\t\t\t\t *  @type  {Number}\n\t\t\t\t */\n\t            this._ppq = TransportConstructor.defaults.PPQ;\n\t            /**\n\t\t\t\t *  watches the main oscillator for timing ticks\n\t\t\t\t *  initially starts at 120bpm\n\t\t\t\t *  @private\n\t\t\t\t *  @type {Tone.Clock}\n\t\t\t\t */\n\t            this._clock = new Tone.Clock({\n\t                'callback': this._processTick.bind(this),\n\t                'frequency': 0\n\t            });\n\t            this._bindClockEvents();\n\t            /**\n\t\t\t\t *  The Beats Per Minute of the Transport.\n\t\t\t\t *  @type {BPM}\n\t\t\t\t *  @signal\n\t\t\t\t *  @example\n\t\t\t\t * Tone.Transport.bpm.value = 80;\n\t\t\t\t * //ramp the bpm to 120 over 10 seconds\n\t\t\t\t * Tone.Transport.bpm.rampTo(120, 10);\n\t\t\t\t */\n\t            this.bpm = this._clock.frequency;\n\t            this.bpm._toUnits = this._toUnits.bind(this);\n\t            this.bpm._fromUnits = this._fromUnits.bind(this);\n\t            this.bpm.units = Tone.Type.BPM;\n\t            this.bpm.value = TransportConstructor.defaults.bpm;\n\t            this._readOnly('bpm');\n\t            /**\n\t\t\t\t *  The time signature, or more accurately the numerator\n\t\t\t\t *  of the time signature over a denominator of 4.\n\t\t\t\t *  @type {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._timeSignature = TransportConstructor.defaults.timeSignature;\n\t            ///////////////////////////////////////////////////////////////////////\n\t            //\tTIMELINE EVENTS\n\t            //////////////////////////////////////////////////////////////////////\n\t            /**\n\t\t\t\t *  All the events in an object to keep track by ID\n\t\t\t\t *  @type {Object}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._scheduledEvents = {};\n\t            /**\n\t\t\t\t * \tThe scheduled events.\n\t\t\t\t *  @type {Tone.Timeline}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._timeline = new Tone.Timeline();\n\t            /**\n\t\t\t\t *  Repeated events\n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._repeatedEvents = new Tone.IntervalTimeline();\n\t            /**\n\t\t\t\t *  All of the synced Signals\n\t\t\t\t *  @private\n\t\t\t\t *  @type {Array}\n\t\t\t\t */\n\t            this._syncedSignals = [];\n\t            ///////////////////////////////////////////////////////////////////////\n\t            //\tSWING\n\t            //////////////////////////////////////////////////////////////////////\n\t            /**\n\t\t\t\t *  The subdivision of the swing\n\t\t\t\t *  @type  {Ticks}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._swingTicks = TransportConstructor.defaults.PPQ / 2;\n\t            //8n\n\t            /**\n\t\t\t\t *  The swing amount\n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._swingAmount = 0;\n\t        }.bind(this));\n\t    };\n\t    Tone.extend(Tone.Transport, Tone.Emitter);\n\t    /**\n\t\t *  the defaults\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t *  @static\n\t\t */\n\t    Tone.Transport.defaults = {\n\t        'bpm': 120,\n\t        'swing': 0,\n\t        'swingSubdivision': '8n',\n\t        'timeSignature': 4,\n\t        'loopStart': 0,\n\t        'loopEnd': '4m',\n\t        'PPQ': 192\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    //\tTICKS\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  called on every tick\n\t\t *  @param   {number} tickTime clock relative tick time\n\t\t *  @private\n\t\t */\n\t    Tone.Transport.prototype._processTick = function (tickTime) {\n\t        var ticks = this._clock.ticks;\n\t        //handle swing\n\t        if (this._swingAmount > 0 && ticks % this._ppq !== 0 && //not on a downbeat\n\t            ticks % (this._swingTicks * 2) !== 0) {\n\t            //add some swing\n\t            var progress = ticks % (this._swingTicks * 2) / (this._swingTicks * 2);\n\t            var amount = Math.sin(progress * Math.PI) * this._swingAmount;\n\t            tickTime += Tone.Time(this._swingTicks * 2 / 3, 'i') * amount;\n\t        }\n\t        //do the loop test\n\t        if (this.loop) {\n\t            if (ticks >= this._loopEnd) {\n\t                this.emit('loopEnd', tickTime);\n\t                this._clock.ticks = this._loopStart;\n\t                ticks = this._loopStart;\n\t                this.emit('loopStart', tickTime, this.seconds);\n\t                this.emit('loop', tickTime);\n\t            }\n\t        }\n\t        //invoke the timeline events scheduled on this tick\n\t        this._timeline.forEachAtTime(ticks, function (event) {\n\t            event.invoke(tickTime);\n\t        });\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    //\tSCHEDULABLE EVENTS\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Schedule an event along the timeline.\n\t\t *  @param {Function} callback The callback to be invoked at the time.\n\t\t *  @param {TransportTime}  time The time to invoke the callback at.\n\t\t *  @return {Number} The id of the event which can be used for canceling the event.\n\t\t *  @example\n\t\t * //trigger the callback when the Transport reaches the desired time\n\t\t * Tone.Transport.schedule(function(time){\n\t\t * \tenvelope.triggerAttack(time);\n\t\t * }, \"128i\");\n\t\t */\n\t    Tone.Transport.prototype.schedule = function (callback, time) {\n\t        var event = new Tone.TransportEvent(this, {\n\t            'time': this.toTicks(time),\n\t            'callback': callback\n\t        });\n\t        return this._addEvent(event, this._timeline);\n\t    };\n\t    /**\n\t\t *  Schedule a repeated event along the timeline. The event will fire\n\t\t *  at the `interval` starting at the `startTime` and for the specified\n\t\t *  `duration`.\n\t\t *  @param  {Function}  callback   The callback to invoke.\n\t\t *  @param  {Time}    interval   The duration between successive\n\t\t *                               callbacks. Must be a positive number.\n\t\t *  @param  {TimelinePosition=}    startTime  When along the timeline the events should\n\t\t *                               start being invoked.\n\t\t *  @param {Time} [duration=Infinity] How long the event should repeat.\n\t\t *  @return  {Number}    The ID of the scheduled event. Use this to cancel\n\t\t *                           the event.\n\t\t *  @example\n\t\t * //a callback invoked every eighth note after the first measure\n\t\t * Tone.Transport.scheduleRepeat(callback, \"8n\", \"1m\");\n\t\t */\n\t    Tone.Transport.prototype.scheduleRepeat = function (callback, interval, startTime, duration) {\n\t        var event = new Tone.TransportRepeatEvent(this, {\n\t            'callback': callback,\n\t            'interval': this.toTicks(interval),\n\t            'time': this.toTicks(startTime),\n\t            'duration': this.toTicks(Tone.defaultArg(duration, Infinity))\n\t        });\n\t        //kick it off if the Transport is started\n\t        return this._addEvent(event, this._repeatedEvents);\n\t    };\n\t    /**\n\t\t *  Schedule an event that will be removed after it is invoked.\n\t\t *  Note that if the given time is less than the current transport time,\n\t\t *  the event will be invoked immediately.\n\t\t *  @param {Function} callback The callback to invoke once.\n\t\t *  @param {TransportTime} time The time the callback should be invoked.\n\t\t *  @returns {Number} The ID of the scheduled event.\n\t\t */\n\t    Tone.Transport.prototype.scheduleOnce = function (callback, time) {\n\t        var event = new Tone.TransportEvent(this, {\n\t            'time': this.toTicks(time),\n\t            'callback': callback,\n\t            'once': true\n\t        });\n\t        return this._addEvent(event, this._timeline);\n\t    };\n\t    /**\n\t\t *  Clear the passed in event id from the timeline\n\t\t *  @param {Number} eventId The id of the event.\n\t\t *  @returns {Tone.Transport} this\n\t\t */\n\t    Tone.Transport.prototype.clear = function (eventId) {\n\t        if (this._scheduledEvents.hasOwnProperty(eventId)) {\n\t            var item = this._scheduledEvents[eventId.toString()];\n\t            item.timeline.remove(item.event);\n\t            item.event.dispose();\n\t            delete this._scheduledEvents[eventId.toString()];\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t * Add an event to the correct timeline. Keep track of the\n\t\t * timeline it was added to.\n\t\t * @param {Tone.TransportEvent}\tevent\n\t\t * @param {Tone.Timeline} timeline\n\t\t * @returns {Number} the event id which was just added\n\t\t * @private\n\t\t */\n\t    Tone.Transport.prototype._addEvent = function (event, timeline) {\n\t        this._scheduledEvents[event.id.toString()] = {\n\t            'event': event,\n\t            'timeline': timeline\n\t        };\n\t        timeline.add(event);\n\t        return event.id;\n\t    };\n\t    /**\n\t\t *  Remove scheduled events from the timeline after\n\t\t *  the given time. Repeated events will be removed\n\t\t *  if their startTime is after the given time\n\t\t *  @param {TransportTime} [after=0] Clear all events after\n\t\t *                          this time.\n\t\t *  @returns {Tone.Transport} this\n\t\t */\n\t    Tone.Transport.prototype.cancel = function (after) {\n\t        after = Tone.defaultArg(after, 0);\n\t        after = this.toTicks(after);\n\t        this._timeline.cancel(after);\n\t        this._repeatedEvents.cancel(after);\n\t        return this;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    //\tSTART/STOP/PAUSE\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Bind start/stop/pause events from the clock and emit them.\n\t\t *  @private\n\t\t */\n\t    Tone.Transport.prototype._bindClockEvents = function () {\n\t        this._clock.on('start', function (time, offset) {\n\t            offset = Tone.Time(this._clock.ticks, 'i').toSeconds();\n\t            this.emit('start', time, offset);\n\t        }.bind(this));\n\t        this._clock.on('stop', function (time) {\n\t            this.emit('stop', time);\n\t        }.bind(this));\n\t        this._clock.on('pause', function (time) {\n\t            this.emit('pause', time);\n\t        }.bind(this));\n\t    };\n\t    /**\n\t\t *  Returns the playback state of the source, either \"started\", \"stopped\", or \"paused\"\n\t\t *  @type {Tone.State}\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.Transport#\n\t\t *  @name state\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'state', {\n\t        get: function () {\n\t            return this._clock.getStateAtTime(this.now());\n\t        }\n\t    });\n\t    /**\n\t\t *  Start the transport and all sources synced to the transport.\n\t\t *  @param  {Time} [time=now] The time when the transport should start.\n\t\t *  @param  {TransportTime=} offset The timeline offset to start the transport.\n\t\t *  @returns {Tone.Transport} this\n\t\t *  @example\n\t\t * //start the transport in one second starting at beginning of the 5th measure.\n\t\t * Tone.Transport.start(\"+1\", \"4:0:0\");\n\t\t */\n\t    Tone.Transport.prototype.start = function (time, offset) {\n\t        //start the clock\n\t        if (!Tone.isUndef(offset)) {\n\t            offset = this.toTicks(offset);\n\t        }\n\t        this._clock.start(time, offset);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Stop the transport and all sources synced to the transport.\n\t\t *  @param  {Time} [time=now] The time when the transport should stop.\n\t\t *  @returns {Tone.Transport} this\n\t\t *  @example\n\t\t * Tone.Transport.stop();\n\t\t */\n\t    Tone.Transport.prototype.stop = function (time) {\n\t        this._clock.stop(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Pause the transport and all sources synced to the transport.\n\t\t *  @param  {Time} [time=now]\n\t\t *  @returns {Tone.Transport} this\n\t\t */\n\t    Tone.Transport.prototype.pause = function (time) {\n\t        this._clock.pause(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Toggle the current state of the transport. If it is\n\t\t * started, it will stop it, otherwise it will start the Transport.\n\t\t * @param  {Time=} time The time of the event\n\t\t * @return {Tone.Transport}      this\n\t\t */\n\t    Tone.Transport.prototype.toggle = function (time) {\n\t        time = this.toSeconds(time);\n\t        if (this._clock.getStateAtTime(time) !== Tone.State.Started) {\n\t            this.start(time);\n\t        } else {\n\t            this.stop(time);\n\t        }\n\t        return this;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    //\tSETTERS/GETTERS\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  The time signature as just the numerator over 4.\n\t\t *  For example 4/4 would be just 4 and 6/8 would be 3.\n\t\t *  @memberOf Tone.Transport#\n\t\t *  @type {Number|Array}\n\t\t *  @name timeSignature\n\t\t *  @example\n\t\t * //common time\n\t\t * Tone.Transport.timeSignature = 4;\n\t\t * // 7/8\n\t\t * Tone.Transport.timeSignature = [7, 8];\n\t\t * //this will be reduced to a single number\n\t\t * Tone.Transport.timeSignature; //returns 3.5\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'timeSignature', {\n\t        get: function () {\n\t            return this._timeSignature;\n\t        },\n\t        set: function (timeSig) {\n\t            if (Tone.isArray(timeSig)) {\n\t                timeSig = timeSig[0] / timeSig[1] * 4;\n\t            }\n\t            this._timeSignature = timeSig;\n\t        }\n\t    });\n\t    /**\n\t\t * When the Tone.Transport.loop = true, this is the starting position of the loop.\n\t\t * @memberOf Tone.Transport#\n\t\t * @type {TransportTime}\n\t\t * @name loopStart\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'loopStart', {\n\t        get: function () {\n\t            return Tone.TransportTime(this._loopStart, 'i').toSeconds();\n\t        },\n\t        set: function (startPosition) {\n\t            this._loopStart = this.toTicks(startPosition);\n\t        }\n\t    });\n\t    /**\n\t\t * When the Tone.Transport.loop = true, this is the ending position of the loop.\n\t\t * @memberOf Tone.Transport#\n\t\t * @type {TransportTime}\n\t\t * @name loopEnd\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'loopEnd', {\n\t        get: function () {\n\t            return Tone.TransportTime(this._loopEnd, 'i').toSeconds();\n\t        },\n\t        set: function (endPosition) {\n\t            this._loopEnd = this.toTicks(endPosition);\n\t        }\n\t    });\n\t    /**\n\t\t *  Set the loop start and stop at the same time.\n\t\t *  @param {TransportTime} startPosition\n\t\t *  @param {TransportTime} endPosition\n\t\t *  @returns {Tone.Transport} this\n\t\t *  @example\n\t\t * //loop over the first measure\n\t\t * Tone.Transport.setLoopPoints(0, \"1m\");\n\t\t * Tone.Transport.loop = true;\n\t\t */\n\t    Tone.Transport.prototype.setLoopPoints = function (startPosition, endPosition) {\n\t        this.loopStart = startPosition;\n\t        this.loopEnd = endPosition;\n\t        return this;\n\t    };\n\t    /**\n\t\t *  The swing value. Between 0-1 where 1 equal to\n\t\t *  the note + half the subdivision.\n\t\t *  @memberOf Tone.Transport#\n\t\t *  @type {NormalRange}\n\t\t *  @name swing\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'swing', {\n\t        get: function () {\n\t            return this._swingAmount;\n\t        },\n\t        set: function (amount) {\n\t            //scale the values to a normal range\n\t            this._swingAmount = amount;\n\t        }\n\t    });\n\t    /**\n\t\t *  Set the subdivision which the swing will be applied to.\n\t\t *  The default value is an 8th note. Value must be less\n\t\t *  than a quarter note.\n\t\t *\n\t\t *  @memberOf Tone.Transport#\n\t\t *  @type {Time}\n\t\t *  @name swingSubdivision\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'swingSubdivision', {\n\t        get: function () {\n\t            return Tone.Time(this._swingTicks, 'i').toNotation();\n\t        },\n\t        set: function (subdivision) {\n\t            this._swingTicks = this.toTicks(subdivision);\n\t        }\n\t    });\n\t    /**\n\t\t *  The Transport's position in Bars:Beats:Sixteenths.\n\t\t *  Setting the value will jump to that position right away.\n\t\t *  @memberOf Tone.Transport#\n\t\t *  @type {BarsBeatsSixteenths}\n\t\t *  @name position\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'position', {\n\t        get: function () {\n\t            return Tone.TransportTime(this.ticks, 'i').toBarsBeatsSixteenths();\n\t        },\n\t        set: function (progress) {\n\t            var ticks = this.toTicks(progress);\n\t            this.ticks = ticks;\n\t        }\n\t    });\n\t    /**\n\t\t *  The Transport's position in seconds\n\t\t *  Setting the value will jump to that position right away.\n\t\t *  @memberOf Tone.Transport#\n\t\t *  @type {Seconds}\n\t\t *  @name seconds\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'seconds', {\n\t        get: function () {\n\t            return Tone.TransportTime(this.ticks, 'i').toSeconds();\n\t        },\n\t        set: function (progress) {\n\t            var ticks = this.toTicks(progress);\n\t            this.ticks = ticks;\n\t        }\n\t    });\n\t    /**\n\t\t *  The Transport's loop position as a normalized value. Always\n\t\t *  returns 0 if the transport if loop is not true.\n\t\t *  @memberOf Tone.Transport#\n\t\t *  @name progress\n\t\t *  @type {NormalRange}\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'progress', {\n\t        get: function () {\n\t            if (this.loop) {\n\t                return (this.ticks - this._loopStart) / (this._loopEnd - this._loopStart);\n\t            } else {\n\t                return 0;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  The transports current tick position.\n\t\t *\n\t\t *  @memberOf Tone.Transport#\n\t\t *  @type {Ticks}\n\t\t *  @name ticks\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'ticks', {\n\t        get: function () {\n\t            return this._clock.ticks;\n\t        },\n\t        set: function (t) {\n\t            if (this._clock.ticks !== t) {\n\t                var now = this.now();\n\t                //stop everything synced to the transport\n\t                if (this.state === Tone.State.Started) {\n\t                    this.emit('stop', now);\n\t                    this._clock.ticks = t;\n\t                    //restart it with the new time\n\t                    this.emit('start', now, this.seconds);\n\t                } else {\n\t                    this._clock.ticks = t;\n\t                }\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Pulses Per Quarter note. This is the smallest resolution\n\t\t *  the Transport timing supports. This should be set once\n\t\t *  on initialization and not set again. Changing this value\n\t\t *  after other objects have been created can cause problems.\n\t\t *\n\t\t *  @memberOf Tone.Transport#\n\t\t *  @type {Number}\n\t\t *  @name PPQ\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'PPQ', {\n\t        get: function () {\n\t            return this._ppq;\n\t        },\n\t        set: function (ppq) {\n\t            var bpm = this.bpm.value;\n\t            this._ppq = ppq;\n\t            this.bpm.value = bpm;\n\t        }\n\t    });\n\t    /**\n\t\t *  Convert from BPM to frequency (factoring in PPQ)\n\t\t *  @param  {BPM}  bpm The BPM value to convert to frequency\n\t\t *  @return  {Frequency}  The BPM as a frequency with PPQ factored in.\n\t\t *  @private\n\t\t */\n\t    Tone.Transport.prototype._fromUnits = function (bpm) {\n\t        return 1 / (60 / bpm / this.PPQ);\n\t    };\n\t    /**\n\t\t *  Convert from frequency (with PPQ) into BPM\n\t\t *  @param  {Frequency}  freq The clocks frequency to convert to BPM\n\t\t *  @return  {BPM}  The frequency value as BPM.\n\t\t *  @private\n\t\t */\n\t    Tone.Transport.prototype._toUnits = function (freq) {\n\t        return freq / this.PPQ * 60;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    //\tSYNCING\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Returns the time aligned to the next subdivision\n\t\t *  of the Transport. If the Transport is not started,\n\t\t *  it will return 0.\n\t\t *  Note: this will not work precisely during tempo ramps.\n\t\t *  @param  {Time}  subdivision  The subdivision to quantize to\n\t\t *  @return  {Number}  The context time of the next subdivision.\n\t\t *  @example\n\t\t * Tone.Transport.start(); //the transport must be started\n\t\t * Tone.Transport.nextSubdivision(\"4n\");\n\t\t */\n\t    Tone.Transport.prototype.nextSubdivision = function (subdivision) {\n\t        subdivision = this.toSeconds(subdivision);\n\t        //if the transport's not started, return 0\n\t        var now;\n\t        if (this.state === Tone.State.Started) {\n\t            now = this._clock._nextTick;\n\t        } else {\n\t            return 0;\n\t        }\n\t        var transportPos = Tone.Time(this.ticks, 'i');\n\t        var remainingTime = subdivision - transportPos % subdivision;\n\t        if (remainingTime === 0) {\n\t            remainingTime = subdivision;\n\t        }\n\t        return now + remainingTime;\n\t    };\n\t    /**\n\t\t *  Attaches the signal to the tempo control signal so that\n\t\t *  any changes in the tempo will change the signal in the same\n\t\t *  ratio.\n\t\t *\n\t\t *  @param  {Tone.Signal} signal\n\t\t *  @param {number=} ratio Optionally pass in the ratio between\n\t\t *                         the two signals. Otherwise it will be computed\n\t\t *                         based on their current values.\n\t\t *  @returns {Tone.Transport} this\n\t\t */\n\t    Tone.Transport.prototype.syncSignal = function (signal, ratio) {\n\t        if (!ratio) {\n\t            //get the sync ratio\n\t            if (signal._param.value !== 0) {\n\t                ratio = signal._param.value / this.bpm._param.value;\n\t            } else {\n\t                ratio = 0;\n\t            }\n\t        }\n\t        var ratioSignal = new Tone.Gain(ratio);\n\t        this.bpm.chain(ratioSignal, signal._param);\n\t        this._syncedSignals.push({\n\t            'ratio': ratioSignal,\n\t            'signal': signal,\n\t            'initial': signal._param.value\n\t        });\n\t        signal._param.value = 0;\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Unsyncs a previously synced signal from the transport's control.\n\t\t *  See Tone.Transport.syncSignal.\n\t\t *  @param  {Tone.Signal} signal\n\t\t *  @returns {Tone.Transport} this\n\t\t */\n\t    Tone.Transport.prototype.unsyncSignal = function (signal) {\n\t        for (var i = this._syncedSignals.length - 1; i >= 0; i--) {\n\t            var syncedSignal = this._syncedSignals[i];\n\t            if (syncedSignal.signal === signal) {\n\t                syncedSignal.ratio.dispose();\n\t                syncedSignal.signal._param.value = syncedSignal.initial;\n\t                this._syncedSignals.splice(i, 1);\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Transport} this\n\t\t *  @private\n\t\t */\n\t    Tone.Transport.prototype.dispose = function () {\n\t        Tone.Emitter.prototype.dispose.call(this);\n\t        this._clock.dispose();\n\t        this._clock = null;\n\t        this._writable('bpm');\n\t        this.bpm = null;\n\t        this._timeline.dispose();\n\t        this._timeline = null;\n\t        this._repeatedEvents.dispose();\n\t        this._repeatedEvents = null;\n\t        return this;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    //\tINITIALIZATION\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    var TransportConstructor = Tone.Transport;\n\t    Tone.Transport = new TransportConstructor();\n\t    Tone.Context.on('init', function (context) {\n\t        if (context.Transport instanceof TransportConstructor) {\n\t            Tone.Transport = context.Transport;\n\t        } else {\n\t            Tone.Transport = new TransportConstructor();\n\t        }\n\t        //store the Transport on the context so it can be retrieved later\n\t        context.Transport = Tone.Transport;\n\t    });\n\t    Tone.Context.on('close', function (context) {\n\t        if (context.Transport instanceof TransportConstructor) {\n\t            context.Transport.dispose();\n\t        }\n\t    });\n\t    return Tone.Transport;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Volume is a simple volume node, useful for creating a volume fader.\n\t\t *\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @constructor\n\t\t *  @param {Decibels} [volume=0] the initial volume\n\t\t *  @example\n\t\t * var vol = new Tone.Volume(-12);\n\t\t * instrument.chain(vol, Tone.Master);\n\t\t */\n\t    Tone.Volume = function () {\n\t        var options = Tone.defaults(arguments, ['volume'], Tone.Volume);\n\t        Tone.AudioNode.call(this);\n\t        /**\n\t\t\t * the output node\n\t\t\t * @type {GainNode}\n\t\t\t * @private\n\t\t\t */\n\t        this.output = this.input = new Tone.Gain(options.volume, Tone.Type.Decibels);\n\t        /**\n\t\t\t * The unmuted volume\n\t\t\t * @type {Decibels}\n\t\t\t * @private\n\t\t\t */\n\t        this._unmutedVolume = options.volume;\n\t        /**\n\t\t\t *  The volume control in decibels.\n\t\t\t *  @type {Decibels}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.volume = this.output.gain;\n\t        this._readOnly('volume');\n\t        //set the mute initially\n\t        this.mute = options.mute;\n\t    };\n\t    Tone.extend(Tone.Volume, Tone.AudioNode);\n\t    /**\n\t\t *  Defaults\n\t\t *  @type  {Object}\n\t\t *  @const\n\t\t *  @static\n\t\t */\n\t    Tone.Volume.defaults = {\n\t        'volume': 0,\n\t        'mute': false\n\t    };\n\t    /**\n\t\t * Mute the output.\n\t\t * @memberOf Tone.Volume#\n\t\t * @type {boolean}\n\t\t * @name mute\n\t\t * @example\n\t\t * //mute the output\n\t\t * volume.mute = true;\n\t\t */\n\t    Object.defineProperty(Tone.Volume.prototype, 'mute', {\n\t        get: function () {\n\t            return this.volume.value === -Infinity;\n\t        },\n\t        set: function (mute) {\n\t            if (!this.mute && mute) {\n\t                this._unmutedVolume = this.volume.value;\n\t                //maybe it should ramp here?\n\t                this.volume.value = -Infinity;\n\t            } else if (this.mute && !mute) {\n\t                this.volume.value = this._unmutedVolume;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.Volume} this\n\t\t */\n\t    Tone.Volume.prototype.dispose = function () {\n\t        this.input.dispose();\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._writable('volume');\n\t        this.volume.dispose();\n\t        this.volume = null;\n\t        return this;\n\t    };\n\t    return Tone.Volume;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  A single master output which is connected to the\n\t\t *          AudioDestinationNode (aka your speakers).\n\t\t *          It provides useful conveniences such as the ability\n\t\t *          to set the volume and mute the entire application.\n\t\t *          It also gives you the ability to apply master effects to your application.\n\t\t *          <br><br>\n\t\t *          Like Tone.Transport, A single Tone.Master is created\n\t\t *          on initialization and you do not need to explicitly construct one.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @singleton\n\t\t *  @example\n\t\t * //the audio will go from the oscillator to the speakers\n\t\t * oscillator.connect(Tone.Master);\n\t\t * //a convenience for connecting to the master output is also provided:\n\t\t * oscillator.toMaster();\n\t\t * //the above two examples are equivalent.\n\t\t */\n\t    Tone.Master = function () {\n\t        Tone.AudioNode.call(this);\n\t        Tone.getContext(function () {\n\t            this.createInsOuts(1, 0);\n\t            /**\n\t\t\t\t *  The private volume node\n\t\t\t\t *  @type  {Tone.Volume}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._volume = this.output = new Tone.Volume();\n\t            /**\n\t\t\t\t * The volume of the master output.\n\t\t\t\t * @type {Decibels}\n\t\t\t\t * @signal\n\t\t\t\t */\n\t            this.volume = this._volume.volume;\n\t            this._readOnly('volume');\n\t            //connections\n\t            this.input.chain(this.output, this.context.destination);\n\t        }.bind(this));\n\t    };\n\t    Tone.extend(Tone.Master, Tone.AudioNode);\n\t    /**\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.Master.defaults = {\n\t        'volume': 0,\n\t        'mute': false\n\t    };\n\t    /**\n\t\t * Mute the output.\n\t\t * @memberOf Tone.Master#\n\t\t * @type {boolean}\n\t\t * @name mute\n\t\t * @example\n\t\t * //mute the output\n\t\t * Tone.Master.mute = true;\n\t\t */\n\t    Object.defineProperty(Tone.Master.prototype, 'mute', {\n\t        get: function () {\n\t            return this._volume.mute;\n\t        },\n\t        set: function (mute) {\n\t            this._volume.mute = mute;\n\t        }\n\t    });\n\t    /**\n\t\t *  Add a master effects chain. NOTE: this will disconnect any nodes which were previously\n\t\t *  chained in the master effects chain.\n\t\t *  @param {AudioNode|Tone} args... All arguments will be connected in a row\n\t\t *                                  and the Master will be routed through it.\n\t\t *  @return  {Tone.Master}  this\n\t\t *  @example\n\t\t * //some overall compression to keep the levels in check\n\t\t * var masterCompressor = new Tone.Compressor({\n\t\t * \t\"threshold\" : -6,\n\t\t * \t\"ratio\" : 3,\n\t\t * \t\"attack\" : 0.5,\n\t\t * \t\"release\" : 0.1\n\t\t * });\n\t\t * //give a little boost to the lows\n\t\t * var lowBump = new Tone.Filter(200, \"lowshelf\");\n\t\t * //route everything through the filter\n\t\t * //and compressor before going to the speakers\n\t\t * Tone.Master.chain(lowBump, masterCompressor);\n\t\t */\n\t    Tone.Master.prototype.chain = function () {\n\t        this.input.disconnect();\n\t        this.input.chain.apply(this.input, arguments);\n\t        arguments[arguments.length - 1].connect(this.output);\n\t    };\n\t    /**\n\t\t *  Clean up\n\t\t *  @return  {Tone.Master}  this\n\t\t */\n\t    Tone.Master.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._writable('volume');\n\t        this._volume.dispose();\n\t        this._volume = null;\n\t        this.volume = null;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tAUGMENT TONE's PROTOTYPE\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Connect 'this' to the master output. Shorthand for this.connect(Tone.Master)\n\t\t *  @returns {Tone.AudioNode} this\n\t\t *  @example\n\t\t * //connect an oscillator to the master output\n\t\t * var osc = new Tone.Oscillator().toMaster();\n\t\t */\n\t    Tone.AudioNode.prototype.toMaster = function () {\n\t        this.connect(Tone.Master);\n\t        return this;\n\t    };\n\t    if (window.AudioNode) {\n\t        // Also augment AudioNode's prototype to include toMaster as a convenience\n\t        AudioNode.prototype.toMaster = function () {\n\t            this.connect(Tone.Master);\n\t            return this;\n\t        };\n\t    }\n\t    /**\n\t\t *  initialize the module and listen for new audio contexts\n\t\t */\n\t    var MasterConstructor = Tone.Master;\n\t    Tone.Master = new MasterConstructor();\n\t    Tone.Context.on('init', function (context) {\n\t        // if it already exists, just restore it\n\t        if (context.Master instanceof MasterConstructor) {\n\t            Tone.Master = context.Master;\n\t        } else {\n\t            Tone.Master = new MasterConstructor();\n\t        }\n\t        context.Master = Tone.Master;\n\t    });\n\t    Tone.Context.on('close', function (context) {\n\t        if (context.Master instanceof MasterConstructor) {\n\t            context.Master.dispose();\n\t        }\n\t    });\n\t    return Tone.Master;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Base class for sources. Sources have start/stop methods\n\t\t *          and the ability to be synced to the\n\t\t *          start/stop of Tone.Transport.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @example\n\t\t * //Multiple state change events can be chained together,\n\t\t * //but must be set in the correct order and with ascending times\n\t\t *\n\t\t * // OK\n\t\t * state.start().stop(\"+0.2\");\n\t\t * // AND\n\t\t * state.start().stop(\"+0.2\").start(\"+0.4\").stop(\"+0.7\")\n\t\t *\n\t\t * // BAD\n\t\t * state.stop(\"+0.2\").start();\n\t\t * // OR\n\t\t * state.start(\"+0.3\").stop(\"+0.2\");\n\t\t *\n\t\t */\n\t    Tone.Source = function (options) {\n\t        options = Tone.defaultArg(options, Tone.Source.defaults);\n\t        Tone.AudioNode.call(this);\n\t        /**\n\t\t\t *  The output volume node\n\t\t\t *  @type  {Tone.Volume}\n\t\t\t *  @private\n\t\t\t */\n\t        this._volume = this.output = new Tone.Volume(options.volume);\n\t        /**\n\t\t\t * The volume of the output in decibels.\n\t\t\t * @type {Decibels}\n\t\t\t * @signal\n\t\t\t * @example\n\t\t\t * source.volume.value = -6;\n\t\t\t */\n\t        this.volume = this._volume.volume;\n\t        this._readOnly('volume');\n\t        /**\n\t\t\t * \tKeep track of the scheduled state.\n\t\t\t *  @type {Tone.TimelineState}\n\t\t\t *  @private\n\t\t\t */\n\t        this._state = new Tone.TimelineState(Tone.State.Stopped);\n\t        this._state.memory = 10;\n\t        /**\n\t\t\t *  The synced `start` callback function from the transport\n\t\t\t *  @type {Function}\n\t\t\t *  @private\n\t\t\t */\n\t        this._synced = false;\n\t        /**\n\t\t\t *  Keep track of all of the scheduled event ids\n\t\t\t *  @type  {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._scheduled = [];\n\t        //make the output explicitly stereo\n\t        this._volume.output.output.channelCount = 2;\n\t        this._volume.output.output.channelCountMode = 'explicit';\n\t        //mute initially\n\t        this.mute = options.mute;\n\t    };\n\t    Tone.extend(Tone.Source, Tone.AudioNode);\n\t    /**\n\t\t *  The default parameters\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Source.defaults = {\n\t        'volume': 0,\n\t        'mute': false\n\t    };\n\t    /**\n\t\t *  Returns the playback state of the source, either \"started\" or \"stopped\".\n\t\t *  @type {Tone.State}\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.Source#\n\t\t *  @name state\n\t\t */\n\t    Object.defineProperty(Tone.Source.prototype, 'state', {\n\t        get: function () {\n\t            if (this._synced) {\n\t                if (Tone.Transport.state === Tone.State.Started) {\n\t                    return this._state.getValueAtTime(Tone.Transport.seconds);\n\t                } else {\n\t                    return Tone.State.Stopped;\n\t                }\n\t            } else {\n\t                return this._state.getValueAtTime(this.now());\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * Mute the output.\n\t\t * @memberOf Tone.Source#\n\t\t * @type {boolean}\n\t\t * @name mute\n\t\t * @example\n\t\t * //mute the output\n\t\t * source.mute = true;\n\t\t */\n\t    Object.defineProperty(Tone.Source.prototype, 'mute', {\n\t        get: function () {\n\t            return this._volume.mute;\n\t        },\n\t        set: function (mute) {\n\t            this._volume.mute = mute;\n\t        }\n\t    });\n\t    //overwrite these functions\n\t    Tone.Source.prototype._start = Tone.noOp;\n\t    Tone.Source.prototype._stop = Tone.noOp;\n\t    /**\n\t\t *  Start the source at the specified time. If no time is given,\n\t\t *  start the source now.\n\t\t *  @param  {Time} [time=now] When the source should be started.\n\t\t *  @returns {Tone.Source} this\n\t\t *  @example\n\t\t * source.start(\"+0.5\"); //starts the source 0.5 seconds from now\n\t\t */\n\t    Tone.Source.prototype.start = function (time, offset, duration) {\n\t        if (Tone.isUndef(time) && this._synced) {\n\t            time = Tone.Transport.seconds;\n\t        } else {\n\t            time = this.toSeconds(time);\n\t        }\n\t        //if it's started, stop it and restart it\n\t        if (!this.retrigger && this._state.getValueAtTime(time) === Tone.State.Started) {\n\t            this.stop(time);\n\t        }\n\t        this._state.setStateAtTime(Tone.State.Started, time);\n\t        if (this._synced) {\n\t            // add the offset time to the event\n\t            var event = this._state.get(time);\n\t            event.offset = Tone.defaultArg(offset, 0);\n\t            event.duration = duration;\n\t            var sched = Tone.Transport.schedule(function (t) {\n\t                this._start(t, offset, duration);\n\t            }.bind(this), time);\n\t            this._scheduled.push(sched);\n\t        } else {\n\t            this._start.apply(this, arguments);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Stop the source at the specified time. If no time is given,\n\t\t *  stop the source now.\n\t\t *  @param  {Time} [time=now] When the source should be stopped.\n\t\t *  @returns {Tone.Source} this\n\t\t *  @example\n\t\t * source.stop(); // stops the source immediately\n\t\t */\n\t    Tone.Source.prototype.stop = function (time) {\n\t        if (Tone.isUndef(time) && this._synced) {\n\t            time = Tone.Transport.seconds;\n\t        } else {\n\t            time = this.toSeconds(time);\n\t        }\n\t        this._state.cancel(time);\n\t        this._state.setStateAtTime(Tone.State.Stopped, time);\n\t        if (!this._synced) {\n\t            this._stop.apply(this, arguments);\n\t        } else {\n\t            var sched = Tone.Transport.schedule(this._stop.bind(this), time);\n\t            this._scheduled.push(sched);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Sync the source to the Transport so that all subsequent\n\t\t *  calls to `start` and `stop` are synced to the TransportTime\n\t\t *  instead of the AudioContext time.\n\t\t *\n\t\t *  @returns {Tone.Source} this\n\t\t *  @example\n\t\t * //sync the source so that it plays between 0 and 0.3 on the Transport's timeline\n\t\t * source.sync().start(0).stop(0.3);\n\t\t * //start the transport.\n\t\t * Tone.Transport.start();\n\t\t *\n\t\t *  @example\n\t\t * //start the transport with an offset and the sync'ed sources\n\t\t * //will start in the correct position\n\t\t * source.sync().start(0.1);\n\t\t * //the source will be invoked with an offset of 0.4\n\t\t * Tone.Transport.start(\"+0.5\", 0.5);\n\t\t */\n\t    Tone.Source.prototype.sync = function () {\n\t        this._synced = true;\n\t        this._syncedStart = function (time, offset) {\n\t            if (offset > 0) {\n\t                // get the playback state at that time\n\t                var stateEvent = this._state.get(offset);\n\t                // listen for start events which may occur in the middle of the sync'ed time\n\t                if (stateEvent && stateEvent.state === Tone.State.Started && stateEvent.time !== offset) {\n\t                    // get the offset\n\t                    var startOffset = offset - this.toSeconds(stateEvent.time);\n\t                    var duration;\n\t                    if (stateEvent.duration) {\n\t                        duration = this.toSeconds(stateEvent.duration) - startOffset;\n\t                    }\n\t                    this._start(time, this.toSeconds(stateEvent.offset) + startOffset, duration);\n\t                }\n\t            }\n\t        }.bind(this);\n\t        this._syncedStop = function (time) {\n\t            if (this._state.getValueAtTime(Tone.Transport.seconds) === Tone.State.Started) {\n\t                this._stop(time);\n\t            }\n\t        }.bind(this);\n\t        Tone.Transport.on('start loopStart', this._syncedStart);\n\t        Tone.Transport.on('stop pause loopEnd', this._syncedStop);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Unsync the source to the Transport. See Tone.Source.sync\n\t\t *  @returns {Tone.Source} this\n\t\t */\n\t    Tone.Source.prototype.unsync = function () {\n\t        if (this._synced) {\n\t            Tone.Transport.off('stop pause loopEnd', this._syncedStop);\n\t            Tone.Transport.off('start loopStart', this._syncedStart);\n\t        }\n\t        this._synced = false;\n\t        // clear all of the scheduled ids\n\t        for (var i = 0; i < this._scheduled.length; i++) {\n\t            var id = this._scheduled[i];\n\t            Tone.Transport.clear(id);\n\t        }\n\t        this._scheduled = [];\n\t        this._state.cancel(0);\n\t        return this;\n\t    };\n\t    /**\n\t\t *\tClean up.\n\t\t *  @return {Tone.Source} this\n\t\t */\n\t    Tone.Source.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this.unsync();\n\t        this._scheduled = null;\n\t        this._writable('volume');\n\t        this._volume.dispose();\n\t        this._volume = null;\n\t        this.volume = null;\n\t        this._state.dispose();\n\t        this._state = null;\n\t    };\n\t    return Tone.Source;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  OscillatorNode shim\n\t\t *  @private\n\t\t */\n\t    if (window.OscillatorNode && !OscillatorNode.prototype.start) {\n\t        OscillatorNode.prototype.start = OscillatorNode.prototype.noteOn;\n\t        OscillatorNode.prototype.stop = OscillatorNode.prototype.noteOff;\n\t        if (!OscillatorNode.prototype.setPeriodicWave) {\n\t            OscillatorNode.prototype.setPeriodicWave = OscillatorNode.prototype.setWaveTable;\n\t        }\n\t        if (!AudioContext.prototype.createPeriodicWave) {\n\t            AudioContext.prototype.createPeriodicWave = AudioContext.prototype.createWaveTable;\n\t        }\n\t    }\n\t    /**\n\t\t *  @class Tone.Oscillator supports a number of features including\n\t\t *         phase rotation, multiple oscillator types (see Tone.Oscillator.type),\n\t\t *         and Transport syncing (see Tone.Oscillator.syncFrequency).\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Source}\n\t\t *  @param {Frequency} [frequency] Starting frequency\n\t\t *  @param {string} [type] The oscillator type. Read more about type below.\n\t\t *  @example\n\t\t * //make and start a 440hz sine tone\n\t\t * var osc = new Tone.Oscillator(440, \"sine\").toMaster().start();\n\t\t */\n\t    Tone.Oscillator = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'frequency',\n\t            'type'\n\t        ], Tone.Oscillator);\n\t        Tone.Source.call(this, options);\n\t        /**\n\t\t\t *  the main oscillator\n\t\t\t *  @type {OscillatorNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._oscillator = null;\n\t        /**\n\t\t\t *  The frequency control.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The detune control signal.\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\t        /**\n\t\t\t *  the periodic wave\n\t\t\t *  @type {PeriodicWave}\n\t\t\t *  @private\n\t\t\t */\n\t        this._wave = null;\n\t        /**\n\t\t\t *  The partials of the oscillator\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._partials = Tone.defaultArg(options.partials, [1]);\n\t        /**\n\t\t\t *  the phase of the oscillator\n\t\t\t *  between 0 - 360\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._phase = options.phase;\n\t        /**\n\t\t\t *  the type of the oscillator\n\t\t\t *  @type {string}\n\t\t\t *  @private\n\t\t\t */\n\t        this._type = null;\n\t        //setup\n\t        this.type = options.type;\n\t        this.phase = this._phase;\n\t        this._readOnly([\n\t            'frequency',\n\t            'detune'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.Oscillator, Tone.Source);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Oscillator.defaults = {\n\t        'type': 'sine',\n\t        'frequency': 440,\n\t        'detune': 0,\n\t        'phase': 0,\n\t        'partials': []\n\t    };\n\t    /**\n\t\t *  The Oscillator types\n\t\t *  @enum {String}\n\t\t */\n\t    Tone.Oscillator.Type = {\n\t        Sine: 'sine',\n\t        Triangle: 'triangle',\n\t        Sawtooth: 'sawtooth',\n\t        Square: 'square',\n\t        Custom: 'custom'\n\t    };\n\t    /**\n\t\t *  start the oscillator\n\t\t *  @param  {Time} [time=now]\n\t\t *  @private\n\t\t */\n\t    Tone.Oscillator.prototype._start = function (time) {\n\t        //new oscillator with previous values\n\t        this._oscillator = this.context.createOscillator();\n\t        this._oscillator.setPeriodicWave(this._wave);\n\t        //connect the control signal to the oscillator frequency & detune\n\t        this._oscillator.connect(this.output);\n\t        this.frequency.connect(this._oscillator.frequency);\n\t        this.detune.connect(this._oscillator.detune);\n\t        //start the oscillator\n\t        time = this.toSeconds(time);\n\t        Tone.isPast(time);\n\t        this._oscillator.start(time);\n\t    };\n\t    /**\n\t\t *  stop the oscillator\n\t\t *  @private\n\t\t *  @param  {Time} [time=now] (optional) timing parameter\n\t\t *  @returns {Tone.Oscillator} this\n\t\t */\n\t    Tone.Oscillator.prototype._stop = function (time) {\n\t        if (this._oscillator) {\n\t            time = this.toSeconds(time);\n\t            Tone.isPast(time);\n\t            this._oscillator.stop(time);\n\t            this._oscillator = null;\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Sync the signal to the Transport's bpm. Any changes to the transports bpm,\n\t\t *  will also affect the oscillators frequency.\n\t\t *  @returns {Tone.Oscillator} this\n\t\t *  @example\n\t\t * Tone.Transport.bpm.value = 120;\n\t\t * osc.frequency.value = 440;\n\t\t * //the ration between the bpm and the frequency will be maintained\n\t\t * osc.syncFrequency();\n\t\t * Tone.Transport.bpm.value = 240;\n\t\t * // the frequency of the oscillator is doubled to 880\n\t\t */\n\t    Tone.Oscillator.prototype.syncFrequency = function () {\n\t        Tone.Transport.syncSignal(this.frequency);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Unsync the oscillator's frequency from the Transport.\n\t\t *  See Tone.Oscillator.syncFrequency\n\t\t *  @returns {Tone.Oscillator} this\n\t\t */\n\t    Tone.Oscillator.prototype.unsyncFrequency = function () {\n\t        Tone.Transport.unsyncSignal(this.frequency);\n\t        return this;\n\t    };\n\t    /**\n\t\t * The type of the oscillator: either sine, square, triangle, or sawtooth. Also capable of\n\t\t * setting the first x number of partials of the oscillator. For example: \"sine4\" would\n\t\t * set be the first 4 partials of the sine wave and \"triangle8\" would set the first\n\t\t * 8 partials of the triangle wave.\n\t\t * <br><br>\n\t\t * Uses PeriodicWave internally even for native types so that it can set the phase.\n\t\t * PeriodicWave equations are from the\n\t\t * [Webkit Web Audio implementation](https://code.google.com/p/chromium/codesearch#chromium/src/third_party/WebKit/Source/modules/webaudio/PeriodicWave.cpp&sq=package:chromium).\n\t\t *\n\t\t * @memberOf Tone.Oscillator#\n\t\t * @type {string}\n\t\t * @name type\n\t\t * @example\n\t\t * //set it to a square wave\n\t\t * osc.type = \"square\";\n\t\t * @example\n\t\t * //set the first 6 partials of a sawtooth wave\n\t\t * osc.type = \"sawtooth6\";\n\t\t */\n\t    Object.defineProperty(Tone.Oscillator.prototype, 'type', {\n\t        get: function () {\n\t            return this._type;\n\t        },\n\t        set: function (type) {\n\t            var coefs = this._getRealImaginary(type, this._phase);\n\t            var periodicWave = this.context.createPeriodicWave(coefs[0], coefs[1]);\n\t            this._wave = periodicWave;\n\t            if (this._oscillator !== null) {\n\t                this._oscillator.setPeriodicWave(this._wave);\n\t            }\n\t            this._type = type;\n\t        }\n\t    });\n\t    /**\n\t\t *  Returns the real and imaginary components based\n\t\t *  on the oscillator type.\n\t\t *  @returns {Array} [real, imaginary]\n\t\t *  @private\n\t\t */\n\t    Tone.Oscillator.prototype._getRealImaginary = function (type, phase) {\n\t        var fftSize = 4096;\n\t        var periodicWaveSize = fftSize / 2;\n\t        var real = new Float32Array(periodicWaveSize);\n\t        var imag = new Float32Array(periodicWaveSize);\n\t        var partialCount = 1;\n\t        if (type === Tone.Oscillator.Type.Custom) {\n\t            partialCount = this._partials.length + 1;\n\t            periodicWaveSize = partialCount;\n\t        } else {\n\t            var partial = /^(sine|triangle|square|sawtooth)(\\d+)$/.exec(type);\n\t            if (partial) {\n\t                partialCount = parseInt(partial[2]) + 1;\n\t                type = partial[1];\n\t                partialCount = Math.max(partialCount, 2);\n\t                periodicWaveSize = partialCount;\n\t            }\n\t        }\n\t        for (var n = 1; n < periodicWaveSize; ++n) {\n\t            var piFactor = 2 / (n * Math.PI);\n\t            var b;\n\t            switch (type) {\n\t            case Tone.Oscillator.Type.Sine:\n\t                b = n <= partialCount ? 1 : 0;\n\t                break;\n\t            case Tone.Oscillator.Type.Square:\n\t                b = n & 1 ? 2 * piFactor : 0;\n\t                break;\n\t            case Tone.Oscillator.Type.Sawtooth:\n\t                b = piFactor * (n & 1 ? 1 : -1);\n\t                break;\n\t            case Tone.Oscillator.Type.Triangle:\n\t                if (n & 1) {\n\t                    b = 2 * (piFactor * piFactor) * (n - 1 >> 1 & 1 ? -1 : 1);\n\t                } else {\n\t                    b = 0;\n\t                }\n\t                break;\n\t            case Tone.Oscillator.Type.Custom:\n\t                b = this._partials[n - 1];\n\t                break;\n\t            default:\n\t                throw new TypeError('Tone.Oscillator: invalid type: ' + type);\n\t            }\n\t            if (b !== 0) {\n\t                real[n] = -b * Math.sin(phase * n);\n\t                imag[n] = b * Math.cos(phase * n);\n\t            } else {\n\t                real[n] = 0;\n\t                imag[n] = 0;\n\t            }\n\t        }\n\t        return [\n\t            real,\n\t            imag\n\t        ];\n\t    };\n\t    /**\n\t\t *  Compute the inverse FFT for a given phase.\n\t\t *  @param  {Float32Array}  real\n\t\t *  @param  {Float32Array}  imag\n\t\t *  @param  {NormalRange}  phase\n\t\t *  @return  {AudioRange}\n\t\t *  @private\n\t\t */\n\t    Tone.Oscillator.prototype._inverseFFT = function (real, imag, phase) {\n\t        var sum = 0;\n\t        var len = real.length;\n\t        for (var i = 0; i < len; i++) {\n\t            sum += real[i] * Math.cos(i * phase) + imag[i] * Math.sin(i * phase);\n\t        }\n\t        return sum;\n\t    };\n\t    /**\n\t\t *  Returns the initial value of the oscillator.\n\t\t *  @return  {AudioRange}\n\t\t *  @private\n\t\t */\n\t    Tone.Oscillator.prototype._getInitialValue = function () {\n\t        var coefs = this._getRealImaginary(this._type, 0);\n\t        var real = coefs[0];\n\t        var imag = coefs[1];\n\t        var maxValue = 0;\n\t        var twoPi = Math.PI * 2;\n\t        //check for peaks in 8 places\n\t        for (var i = 0; i < 8; i++) {\n\t            maxValue = Math.max(this._inverseFFT(real, imag, i / 8 * twoPi), maxValue);\n\t        }\n\t        return -this._inverseFFT(real, imag, this._phase) / maxValue;\n\t    };\n\t    /**\n\t\t * The partials of the waveform. A partial represents\n\t\t * the amplitude at a harmonic. The first harmonic is the\n\t\t * fundamental frequency, the second is the octave and so on\n\t\t * following the harmonic series.\n\t\t * Setting this value will automatically set the type to \"custom\".\n\t\t * The value is an empty array when the type is not \"custom\".\n\t\t * @memberOf Tone.Oscillator#\n\t\t * @type {Array}\n\t\t * @name partials\n\t\t * @example\n\t\t * osc.partials = [1, 0.2, 0.01];\n\t\t */\n\t    Object.defineProperty(Tone.Oscillator.prototype, 'partials', {\n\t        get: function () {\n\t            if (this._type !== Tone.Oscillator.Type.Custom) {\n\t                return [];\n\t            } else {\n\t                return this._partials;\n\t            }\n\t        },\n\t        set: function (partials) {\n\t            this._partials = partials;\n\t            this.type = Tone.Oscillator.Type.Custom;\n\t        }\n\t    });\n\t    /**\n\t\t * The phase of the oscillator in degrees.\n\t\t * @memberOf Tone.Oscillator#\n\t\t * @type {Degrees}\n\t\t * @name phase\n\t\t * @example\n\t\t * osc.phase = 180; //flips the phase of the oscillator\n\t\t */\n\t    Object.defineProperty(Tone.Oscillator.prototype, 'phase', {\n\t        get: function () {\n\t            return this._phase * (180 / Math.PI);\n\t        },\n\t        set: function (phase) {\n\t            this._phase = phase * Math.PI / 180;\n\t            //reset the type\n\t            this.type = this._type;\n\t        }\n\t    });\n\t    /**\n\t\t *  Dispose and disconnect.\n\t\t *  @return {Tone.Oscillator} this\n\t\t */\n\t    Tone.Oscillator.prototype.dispose = function () {\n\t        Tone.Source.prototype.dispose.call(this);\n\t        if (this._oscillator !== null) {\n\t            this._oscillator.disconnect();\n\t            this._oscillator = null;\n\t        }\n\t        this._wave = null;\n\t        this._writable([\n\t            'frequency',\n\t            'detune'\n\t        ]);\n\t        this.frequency.dispose();\n\t        this.frequency = null;\n\t        this.detune.dispose();\n\t        this.detune = null;\n\t        this._partials = null;\n\t        return this;\n\t    };\n\t    return Tone.Oscillator;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class Tone.Zero outputs 0's at audio-rate. The reason this has to be\n\t\t *         it's own class is that many browsers optimize out Tone.Signal\n\t\t *         with a value of 0 and will not process nodes further down the graph.\n\t\t *  @extends {Tone.SignalBase}\n\t\t */\n\t    Tone.Zero = function () {\n\t        Tone.SignalBase.call(this);\n\t        /**\n\t\t\t *  The gain node\n\t\t\t *  @type  {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._gain = this.input = this.output = new Tone.Gain();\n\t        this.context.getConstant(0).connect(this._gain);\n\t    };\n\t    Tone.extend(Tone.Zero, Tone.SignalBase);\n\t    /**\n\t\t *  clean up\n\t\t *  @return  {Tone.Zero}  this\n\t\t */\n\t    Tone.Zero.prototype.dispose = function () {\n\t        Tone.SignalBase.prototype.dispose.call(this);\n\t        this._gain.dispose();\n\t        this._gain = null;\n\t        return this;\n\t    };\n\t    return Tone.Zero;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  LFO stands for low frequency oscillator. Tone.LFO produces an output signal\n\t\t *          which can be attached to an AudioParam or Tone.Signal\n\t\t *          in order to modulate that parameter with an oscillator. The LFO can\n\t\t *          also be synced to the transport to start/stop and change when the tempo changes.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @param {Frequency|Object} [frequency] The frequency of the oscillation. Typically, LFOs will be\n\t\t *                               in the frequency range of 0.1 to 10 hertz.\n\t\t *  @param {number=} min The minimum output value of the LFO.\n\t\t *  @param {number=} max The maximum value of the LFO.\n\t\t *  @example\n\t\t * var lfo = new Tone.LFO(\"4n\", 400, 4000);\n\t\t * lfo.connect(filter.frequency);\n\t\t */\n\t    Tone.LFO = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'frequency',\n\t            'min',\n\t            'max'\n\t        ], Tone.LFO);\n\t        Tone.AudioNode.call(this);\n\t        /**\n\t\t\t *  The oscillator.\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t *  @private\n\t\t\t */\n\t        this._oscillator = new Tone.Oscillator({\n\t            'frequency': options.frequency,\n\t            'type': options.type\n\t        });\n\t        /**\n\t\t\t *  the lfo's frequency\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = this._oscillator.frequency;\n\t        /**\n\t\t\t * The amplitude of the LFO, which controls the output range between\n\t\t\t * the min and max output. For example if the min is -10 and the max\n\t\t\t * is 10, setting the amplitude to 0.5 would make the LFO modulate\n\t\t\t * between -5 and 5.\n\t\t\t * @type {Number}\n\t\t\t * @signal\n\t\t\t */\n\t        this.amplitude = this._oscillator.volume;\n\t        this.amplitude.units = Tone.Type.NormalRange;\n\t        this.amplitude.value = options.amplitude;\n\t        /**\n\t\t\t *  The signal which is output when the LFO is stopped\n\t\t\t *  @type  {Tone.Signal}\n\t\t\t *  @private\n\t\t\t */\n\t        this._stoppedSignal = new Tone.Signal(0, Tone.Type.AudioRange);\n\t        /**\n\t\t\t *  Just outputs zeros.\n\t\t\t *  @type {Tone.Zero}\n\t\t\t *  @private\n\t\t\t */\n\t        this._zeros = new Tone.Zero();\n\t        /**\n\t\t\t *  The value that the LFO outputs when it's stopped\n\t\t\t *  @type {AudioRange}\n\t\t\t *  @private\n\t\t\t */\n\t        this._stoppedValue = 0;\n\t        /**\n\t\t\t *  @type {Tone.AudioToGain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._a2g = new Tone.AudioToGain();\n\t        /**\n\t\t\t *  @type {Tone.Scale}\n\t\t\t *  @private\n\t\t\t */\n\t        this._scaler = this.output = new Tone.Scale(options.min, options.max);\n\t        /**\n\t\t\t *  the units of the LFO (used for converting)\n\t\t\t *  @type {Tone.Type}\n\t\t\t *  @private\n\t\t\t */\n\t        this._units = Tone.Type.Default;\n\t        this.units = options.units;\n\t        //connect it up\n\t        this._oscillator.chain(this._a2g, this._scaler);\n\t        this._zeros.connect(this._a2g);\n\t        this._stoppedSignal.connect(this._a2g);\n\t        this._readOnly([\n\t            'amplitude',\n\t            'frequency'\n\t        ]);\n\t        this.phase = options.phase;\n\t    };\n\t    Tone.extend(Tone.LFO, Tone.AudioNode);\n\t    /**\n\t\t *  the default parameters\n\t\t *\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.LFO.defaults = {\n\t        'type': 'sine',\n\t        'min': 0,\n\t        'max': 1,\n\t        'phase': 0,\n\t        'frequency': '4n',\n\t        'amplitude': 1,\n\t        'units': Tone.Type.Default\n\t    };\n\t    /**\n\t\t *  Start the LFO.\n\t\t *  @param  {Time} [time=now] the time the LFO will start\n\t\t *  @returns {Tone.LFO} this\n\t\t */\n\t    Tone.LFO.prototype.start = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._stoppedSignal.setValueAtTime(0, time);\n\t        this._oscillator.start(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Stop the LFO.\n\t\t *  @param  {Time} [time=now] the time the LFO will stop\n\t\t *  @returns {Tone.LFO} this\n\t\t */\n\t    Tone.LFO.prototype.stop = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._stoppedSignal.setValueAtTime(this._stoppedValue, time);\n\t        this._oscillator.stop(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Sync the start/stop/pause to the transport\n\t\t *  and the frequency to the bpm of the transport\n\t\t *  @returns {Tone.LFO} this\n\t\t *  @example\n\t\t *  lfo.frequency.value = \"8n\";\n\t\t *  lfo.sync().start(0)\n\t\t *  //the rate of the LFO will always be an eighth note,\n\t\t *  //even as the tempo changes\n\t\t */\n\t    Tone.LFO.prototype.sync = function () {\n\t        this._oscillator.sync();\n\t        this._oscillator.syncFrequency();\n\t        return this;\n\t    };\n\t    /**\n\t\t *  unsync the LFO from transport control\n\t\t *  @returns {Tone.LFO} this\n\t\t */\n\t    Tone.LFO.prototype.unsync = function () {\n\t        this._oscillator.unsync();\n\t        this._oscillator.unsyncFrequency();\n\t        return this;\n\t    };\n\t    /**\n\t\t * The miniumum output of the LFO.\n\t\t * @memberOf Tone.LFO#\n\t\t * @type {number}\n\t\t * @name min\n\t\t */\n\t    Object.defineProperty(Tone.LFO.prototype, 'min', {\n\t        get: function () {\n\t            return this._toUnits(this._scaler.min);\n\t        },\n\t        set: function (min) {\n\t            min = this._fromUnits(min);\n\t            this._scaler.min = min;\n\t        }\n\t    });\n\t    /**\n\t\t * The maximum output of the LFO.\n\t\t * @memberOf Tone.LFO#\n\t\t * @type {number}\n\t\t * @name max\n\t\t */\n\t    Object.defineProperty(Tone.LFO.prototype, 'max', {\n\t        get: function () {\n\t            return this._toUnits(this._scaler.max);\n\t        },\n\t        set: function (max) {\n\t            max = this._fromUnits(max);\n\t            this._scaler.max = max;\n\t        }\n\t    });\n\t    /**\n\t\t * The type of the oscillator: sine, square, sawtooth, triangle.\n\t\t * @memberOf Tone.LFO#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.LFO.prototype, 'type', {\n\t        get: function () {\n\t            return this._oscillator.type;\n\t        },\n\t        set: function (type) {\n\t            this._oscillator.type = type;\n\t            this._stoppedValue = this._oscillator._getInitialValue();\n\t            this._stoppedSignal.value = this._stoppedValue;\n\t        }\n\t    });\n\t    /**\n\t\t * The phase of the LFO.\n\t\t * @memberOf Tone.LFO#\n\t\t * @type {number}\n\t\t * @name phase\n\t\t */\n\t    Object.defineProperty(Tone.LFO.prototype, 'phase', {\n\t        get: function () {\n\t            return this._oscillator.phase;\n\t        },\n\t        set: function (phase) {\n\t            this._oscillator.phase = phase;\n\t            this._stoppedValue = this._oscillator._getInitialValue();\n\t            this._stoppedSignal.value = this._stoppedValue;\n\t        }\n\t    });\n\t    /**\n\t\t * The output units of the LFO.\n\t\t * @memberOf Tone.LFO#\n\t\t * @type {Tone.Type}\n\t\t * @name units\n\t\t */\n\t    Object.defineProperty(Tone.LFO.prototype, 'units', {\n\t        get: function () {\n\t            return this._units;\n\t        },\n\t        set: function (val) {\n\t            var currentMin = this.min;\n\t            var currentMax = this.max;\n\t            //convert the min and the max\n\t            this._units = val;\n\t            this.min = currentMin;\n\t            this.max = currentMax;\n\t        }\n\t    });\n\t    /**\n\t\t * Mute the output.\n\t\t * @memberOf Tone.LFO#\n\t\t * @type {Boolean}\n\t\t * @name mute\n\t\t */\n\t    Object.defineProperty(Tone.LFO.prototype, 'mute', {\n\t        get: function () {\n\t            return this._oscillator.mute;\n\t        },\n\t        set: function (mute) {\n\t            this._oscillator.mute = mute;\n\t        }\n\t    });\n\t    /**\n\t\t *  Returns the playback state of the source, either \"started\" or \"stopped\".\n\t\t *  @type {Tone.State}\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.LFO#\n\t\t *  @name state\n\t\t */\n\t    Object.defineProperty(Tone.LFO.prototype, 'state', {\n\t        get: function () {\n\t            return this._oscillator.state;\n\t        }\n\t    });\n\t    /**\n\t\t *  Connect the output of the LFO to an AudioParam, AudioNode, or Tone Node.\n\t\t *  Tone.LFO will automatically convert to the destination units of the\n\t\t *  will get the units from the connected node.\n\t\t *  @param  {Tone | AudioParam | AudioNode} node\n\t\t *  @param {number} [outputNum=0] optionally which output to connect from\n\t\t *  @param {number} [inputNum=0] optionally which input to connect to\n\t\t *  @returns {Tone.LFO} this\n\t\t *  @private\n\t\t */\n\t    Tone.LFO.prototype.connect = function (node) {\n\t        if (node.constructor === Tone.Signal || node.constructor === Tone.Param || node.constructor === Tone.TimelineSignal) {\n\t            this.convert = node.convert;\n\t            this.units = node.units;\n\t        }\n\t        Tone.Signal.prototype.connect.apply(this, arguments);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  private method borrowed from Param converts\n\t\t *  units from their destination value\n\t\t *  @function\n\t\t *  @private\n\t\t */\n\t    Tone.LFO.prototype._fromUnits = Tone.Param.prototype._fromUnits;\n\t    /**\n\t\t *  private method borrowed from Param converts\n\t\t *  units to their destination value\n\t\t *  @function\n\t\t *  @private\n\t\t */\n\t    Tone.LFO.prototype._toUnits = Tone.Param.prototype._toUnits;\n\t    /**\n\t\t *  disconnect and dispose\n\t\t *  @returns {Tone.LFO} this\n\t\t */\n\t    Tone.LFO.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._writable([\n\t            'amplitude',\n\t            'frequency'\n\t        ]);\n\t        this._oscillator.dispose();\n\t        this._oscillator = null;\n\t        this._stoppedSignal.dispose();\n\t        this._stoppedSignal = null;\n\t        this._zeros.dispose();\n\t        this._zeros = null;\n\t        this._scaler.dispose();\n\t        this._scaler = null;\n\t        this._a2g.dispose();\n\t        this._a2g = null;\n\t        this.frequency = null;\n\t        this.amplitude = null;\n\t        return this;\n\t    };\n\t    return Tone.LFO;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Limiter will limit the loudness of an incoming signal.\n\t\t *         It is composed of a Tone.Compressor with a fast attack\n\t\t *         and release. Limiters are commonly used to safeguard against\n\t\t *         signal clipping. Unlike a compressor, limiters do not provide\n\t\t *         smooth gain reduction and almost completely prevent\n\t\t *         additional gain above the threshold.\n\t\t *\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @constructor\n\t\t *  @param {number} threshold The theshold above which the limiting is applied.\n\t\t *  @example\n\t\t *  var limiter = new Tone.Limiter(-6);\n\t\t */\n\t    Tone.Limiter = function () {\n\t        var options = Tone.defaults(arguments, ['threshold'], Tone.Limiter);\n\t        Tone.AudioNode.call(this);\n\t        /**\n\t\t\t *  the compressor\n\t\t\t *  @private\n\t\t\t *  @type {Tone.Compressor}\n\t\t\t */\n\t        this._compressor = this.input = this.output = new Tone.Compressor({\n\t            'attack': 0.001,\n\t            'decay': 0.001,\n\t            'threshold': options.threshold\n\t        });\n\t        /**\n\t\t\t * The threshold of of the limiter\n\t\t\t * @type {Decibel}\n\t\t\t * @signal\n\t\t\t */\n\t        this.threshold = this._compressor.threshold;\n\t        this._readOnly('threshold');\n\t    };\n\t    Tone.extend(Tone.Limiter, Tone.AudioNode);\n\t    /**\n\t\t *  The default value\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t *  @static\n\t\t */\n\t    Tone.Limiter.defaults = { 'threshold': -12 };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Limiter} this\n\t\t */\n\t    Tone.Limiter.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._compressor.dispose();\n\t        this._compressor = null;\n\t        this._writable('threshold');\n\t        this.threshold = null;\n\t        return this;\n\t    };\n\t    return Tone.Limiter;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Lowpass is a lowpass feedback comb filter. It is similar to\n\t\t *         Tone.FeedbackCombFilter, but includes a lowpass filter.\n\t\t *\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @constructor\n\t\t *  @param {Time|Object} [delayTime] The delay time of the comb filter\n\t\t *  @param {NormalRange=} resonance The resonance (feedback) of the comb filter\n\t\t *  @param {Frequency=} dampening The cutoff of the lowpass filter dampens the\n\t\t *                                signal as it is fedback.\n\t\t */\n\t    Tone.LowpassCombFilter = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'delayTime',\n\t            'resonance',\n\t            'dampening'\n\t        ], Tone.LowpassCombFilter);\n\t        Tone.AudioNode.call(this);\n\t        this.createInsOuts(1, 1);\n\t        /**\n\t\t\t *  the delay node\n\t\t\t *  @type {DelayNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delay = this.input = new Tone.Delay(options.delayTime);\n\t        /**\n\t\t\t *  The delayTime of the comb filter.\n\t\t\t *  @type {Time}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.delayTime = this._delay.delayTime;\n\t        /**\n\t\t\t *  the lowpass filter\n\t\t\t *  @type  {BiquadFilterNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lowpass = this.output = this.context.createBiquadFilter();\n\t        this._lowpass.Q.value = -3.0102999566398125;\n\t        this._lowpass.type = 'lowpass';\n\t        /**\n\t\t\t *  The dampening control of the feedback\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.dampening = new Tone.Param({\n\t            'param': this._lowpass.frequency,\n\t            'units': Tone.Type.Frequency,\n\t            'value': options.dampening\n\t        });\n\t        /**\n\t\t\t *  the feedback gain\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._feedback = new Tone.Gain(options.resonance, Tone.Type.NormalRange);\n\t        /**\n\t\t\t *  The amount of feedback of the delayed signal.\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.resonance = this._feedback.gain;\n\t        //connections\n\t        this._delay.chain(this._lowpass, this._feedback, this._delay);\n\t        this._readOnly([\n\t            'dampening',\n\t            'resonance',\n\t            'delayTime'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.LowpassCombFilter, Tone.AudioNode);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.LowpassCombFilter.defaults = {\n\t        'delayTime': 0.1,\n\t        'resonance': 0.5,\n\t        'dampening': 3000\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.LowpassCombFilter} this\n\t\t */\n\t    Tone.LowpassCombFilter.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._writable([\n\t            'dampening',\n\t            'resonance',\n\t            'delayTime'\n\t        ]);\n\t        this.dampening.dispose();\n\t        this.dampening = null;\n\t        this.resonance.dispose();\n\t        this.resonance = null;\n\t        this._delay.dispose();\n\t        this._delay = null;\n\t        this.delayTime = null;\n\t        this._lowpass.disconnect();\n\t        this._lowpass = null;\n\t        this._feedback.disconnect();\n\t        this._feedback = null;\n\t        return this;\n\t    };\n\t    return Tone.LowpassCombFilter;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Merge brings two signals into the left and right\n\t\t *          channels of a single stereo channel.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @example\n\t\t * var merge = new Tone.Merge().toMaster();\n\t\t * //routing a sine tone in the left channel\n\t\t * //and noise in the right channel\n\t\t * var osc = new Tone.Oscillator().connect(merge.left);\n\t\t * var noise = new Tone.Noise().connect(merge.right);\n\t\t * //starting our oscillators\n\t\t * noise.start();\n\t\t * osc.start();\n\t\t */\n\t    Tone.Merge = function () {\n\t        Tone.AudioNode.call(this);\n\t        this.createInsOuts(2, 0);\n\t        /**\n\t\t\t *  The left input channel.\n\t\t\t *  Alias for <code>input[0]</code>\n\t\t\t *  @type {GainNode}\n\t\t\t */\n\t        this.left = this.input[0] = new Tone.Gain();\n\t        /**\n\t\t\t *  The right input channel.\n\t\t\t *  Alias for <code>input[1]</code>.\n\t\t\t *  @type {GainNode}\n\t\t\t */\n\t        this.right = this.input[1] = new Tone.Gain();\n\t        /**\n\t\t\t *  the merger node for the two channels\n\t\t\t *  @type {ChannelMergerNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._merger = this.output = this.context.createChannelMerger(2);\n\t        //connections\n\t        this.left.connect(this._merger, 0, 0);\n\t        this.right.connect(this._merger, 0, 1);\n\t        this.left.channelCount = 1;\n\t        this.right.channelCount = 1;\n\t        this.left.channelCountMode = 'explicit';\n\t        this.right.channelCountMode = 'explicit';\n\t    };\n\t    Tone.extend(Tone.Merge, Tone.AudioNode);\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Merge} this\n\t\t */\n\t    Tone.Merge.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this.left.dispose();\n\t        this.left = null;\n\t        this.right.dispose();\n\t        this.right = null;\n\t        this._merger.disconnect();\n\t        this._merger = null;\n\t        return this;\n\t    };\n\t    return Tone.Merge;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Meter gets the [RMS](https://en.wikipedia.org/wiki/Root_mean_square)\n\t\t *          of an input signal with some averaging applied. It can also get the raw\n\t\t *          value of the input signal.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @param {Number} smoothing The amount of smoothing applied between frames.\n\t\t *  @example\n\t\t * var meter = new Tone.Meter();\n\t\t * var mic = new Tone.UserMedia().open();\n\t\t * //connect mic to the meter\n\t\t * mic.connect(meter);\n\t\t * //the current level of the mic input in decibels\n\t\t * var level = meter.getValue();\n\t\t */\n\t    Tone.Meter = function () {\n\t        var options = Tone.defaults(arguments, ['smoothing'], Tone.Meter);\n\t        Tone.AudioNode.call(this);\n\t        /**\n\t\t\t *  The analyser node which computes the levels.\n\t\t\t *  @private\n\t\t\t *  @type  {Tone.Analyser}\n\t\t\t */\n\t        this.input = this.output = this._analyser = new Tone.Analyser('waveform', 1024);\n\t        /**\n\t\t\t *  The amount of carryover between the current and last frame.\n\t\t\t *  Only applied meter for \"level\" type.\n\t\t\t *  @type  {Number}\n\t\t\t */\n\t        this.smoothing = options.smoothing;\n\t    };\n\t    Tone.extend(Tone.Meter, Tone.AudioNode);\n\t    /**\n\t\t *  The defaults\n\t\t *  @type {Object}\n\t\t *  @static\n\t\t *  @const\n\t\t */\n\t    Tone.Meter.defaults = { 'smoothing': 0.8 };\n\t    /**\n\t\t *  Get the current decibel value of the incoming signal\n\t\t *  @returns {Decibels}\n\t\t */\n\t    Tone.Meter.prototype.getLevel = function () {\n\t        this._analyser.type = 'fft';\n\t        var values = this._analyser.getValue();\n\t        var offset = 28;\n\t        // normalizes most signal levels\n\t        // TODO: compute loudness from FFT\n\t        return Math.max.apply(this, values) + offset;\n\t    };\n\t    /**\n\t\t *  Get the signal value of the incoming signal\n\t\t *  @returns {Number}\n\t\t */\n\t    Tone.Meter.prototype.getValue = function () {\n\t        this._analyser.type = 'waveform';\n\t        var value = this._analyser.getValue();\n\t        return value[0];\n\t    };\n\t    /**\n\t\t * A value from 0 -> 1 where 0 represents no time averaging with the last analysis frame.\n\t\t * @memberOf Tone.Meter#\n\t\t * @type {Number}\n\t\t * @name smoothing\n\t\t * @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Meter.prototype, 'smoothing', {\n\t        get: function () {\n\t            return this._analyser.smoothing;\n\t        },\n\t        set: function (val) {\n\t            this._analyser.smoothing = val;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Meter} this\n\t\t */\n\t    Tone.Meter.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._analyser.dispose();\n\t        this._analyser = null;\n\t        return this;\n\t    };\n\t    return Tone.Meter;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *\t@class  Tone.Split splits an incoming signal into left and right channels.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @example\n\t\t * var split = new Tone.Split();\n\t\t * stereoSignal.connect(split);\n\t\t */\n\t    Tone.Split = function () {\n\t        Tone.AudioNode.call(this);\n\t        this.createInsOuts(0, 2);\n\t        /**\n\t\t\t *  @type {ChannelSplitterNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._splitter = this.input = this.context.createChannelSplitter(2);\n\t        this._splitter.channelCount = 2;\n\t        this._splitter.channelCountMode = 'explicit';\n\t        /**\n\t\t\t *  Left channel output.\n\t\t\t *  Alias for <code>output[0]</code>\n\t\t\t *  @type {Tone.Gain}\n\t\t\t */\n\t        this.left = this.output[0] = new Tone.Gain();\n\t        /**\n\t\t\t *  Right channel output.\n\t\t\t *  Alias for <code>output[1]</code>\n\t\t\t *  @type {Tone.Gain}\n\t\t\t */\n\t        this.right = this.output[1] = new Tone.Gain();\n\t        //connections\n\t        this._splitter.connect(this.left, 0, 0);\n\t        this._splitter.connect(this.right, 1, 0);\n\t    };\n\t    Tone.extend(Tone.Split, Tone.AudioNode);\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Split} this\n\t\t */\n\t    Tone.Split.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._splitter.disconnect();\n\t        this.left.dispose();\n\t        this.left = null;\n\t        this.right.dispose();\n\t        this.right = null;\n\t        this._splitter = null;\n\t        return this;\n\t    };\n\t    return Tone.Split;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Mid/Side processing separates the the 'mid' signal\n\t\t *         (which comes out of both the left and the right channel)\n\t\t *         and the 'side' (which only comes out of the the side channels). <br><br>\n\t\t *         <code>\n\t\t *         Mid = (Left+Right)/sqrt(2);   // obtain mid-signal from left and right<br>\n\t\t *         Side = (Left-Right)/sqrt(2);   // obtain side-signal from left and righ<br>\n\t\t *         </code>\n\t\t *\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @constructor\n\t\t */\n\t    Tone.MidSideSplit = function () {\n\t        Tone.AudioNode.call(this);\n\t        this.createInsOuts(0, 2);\n\t        /**\n\t\t\t *  split the incoming signal into left and right channels\n\t\t\t *  @type  {Tone.Split}\n\t\t\t *  @private\n\t\t\t */\n\t        this._split = this.input = new Tone.Split();\n\t        /**\n\t\t\t *  The mid send. Connect to mid processing. Alias for\n\t\t\t *  <code>output[0]</code>\n\t\t\t *  @type {Tone.Expr}\n\t\t\t */\n\t        this.mid = this.output[0] = new Tone.Expr('($0 + $1) * $2');\n\t        /**\n\t\t\t *  The side output. Connect to side processing. Alias for\n\t\t\t *  <code>output[1]</code>\n\t\t\t *  @type {Tone.Expr}\n\t\t\t */\n\t        this.side = this.output[1] = new Tone.Expr('($0 - $1) * $2');\n\t        this._split.connect(this.mid, 0, 0);\n\t        this._split.connect(this.mid, 1, 1);\n\t        this._split.connect(this.side, 0, 0);\n\t        this._split.connect(this.side, 1, 1);\n\t        this.context.getConstant(Math.SQRT1_2).connect(this.mid, 0, 2);\n\t        this.context.getConstant(Math.SQRT1_2).connect(this.side, 0, 2);\n\t    };\n\t    Tone.extend(Tone.MidSideSplit, Tone.AudioNode);\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.MidSideSplit} this\n\t\t */\n\t    Tone.MidSideSplit.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this.mid.dispose();\n\t        this.mid = null;\n\t        this.side.dispose();\n\t        this.side = null;\n\t        this._split.dispose();\n\t        this._split = null;\n\t        return this;\n\t    };\n\t    return Tone.MidSideSplit;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Mid/Side processing separates the the 'mid' signal\n\t\t *         (which comes out of both the left and the right channel)\n\t\t *         and the 'side' (which only comes out of the the side channels).\n\t\t *         MidSideMerge merges the mid and side signal after they've been seperated\n\t\t *         by Tone.MidSideSplit.<br><br>\n\t\t *         <code>\n\t\t *         Left = (Mid+Side)/sqrt(2);   // obtain left signal from mid and side<br>\n\t\t *         Right = (Mid-Side)/sqrt(2);   // obtain right signal from mid and side<br>\n\t\t *         </code>\n\t\t *\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @constructor\n\t\t */\n\t    Tone.MidSideMerge = function () {\n\t        Tone.AudioNode.call(this);\n\t        this.createInsOuts(2, 0);\n\t        /**\n\t\t\t *  The mid signal input. Alias for\n\t\t\t *  <code>input[0]</code>\n\t\t\t *  @type  {Tone.Gain}\n\t\t\t */\n\t        this.mid = this.input[0] = new Tone.Gain();\n\t        /**\n\t\t\t *  recombine the mid/side into Left\n\t\t\t *  @type {Tone.Expr}\n\t\t\t *  @private\n\t\t\t */\n\t        this._left = new Tone.Expr('($0 + $1) * $2');\n\t        /**\n\t\t\t *  The side signal input. Alias for\n\t\t\t *  <code>input[1]</code>\n\t\t\t *  @type  {Tone.Gain}\n\t\t\t */\n\t        this.side = this.input[1] = new Tone.Gain();\n\t        /**\n\t\t\t *  recombine the mid/side into Right\n\t\t\t *  @type {Tone.Expr}\n\t\t\t *  @private\n\t\t\t */\n\t        this._right = new Tone.Expr('($0 - $1) * $2');\n\t        /**\n\t\t\t *  Merge the left/right signal back into a stereo signal.\n\t\t\t *  @type {Tone.Merge}\n\t\t\t *  @private\n\t\t\t */\n\t        this._merge = this.output = new Tone.Merge();\n\t        this.mid.connect(this._left, 0, 0);\n\t        this.side.connect(this._left, 0, 1);\n\t        this.mid.connect(this._right, 0, 0);\n\t        this.side.connect(this._right, 0, 1);\n\t        this._left.connect(this._merge, 0, 0);\n\t        this._right.connect(this._merge, 0, 1);\n\t        this.context.getConstant(Math.SQRT1_2).connect(this._left, 0, 2);\n\t        this.context.getConstant(Math.SQRT1_2).connect(this._right, 0, 2);\n\t    };\n\t    Tone.extend(Tone.MidSideMerge, Tone.AudioNode);\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.MidSideMerge} this\n\t\t */\n\t    Tone.MidSideMerge.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this.mid.dispose();\n\t        this.mid = null;\n\t        this.side.dispose();\n\t        this.side = null;\n\t        this._left.dispose();\n\t        this._left = null;\n\t        this._right.dispose();\n\t        this._right = null;\n\t        this._merge.dispose();\n\t        this._merge = null;\n\t        return this;\n\t    };\n\t    return Tone.MidSideMerge;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.MidSideCompressor applies two different compressors to the mid\n\t\t *         and side signal components. See Tone.MidSideSplit.\n\t\t *\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @param {Object} options The options that are passed to the mid and side\n\t\t *                          compressors.\n\t\t *  @constructor\n\t\t */\n\t    Tone.MidSideCompressor = function (options) {\n\t        Tone.AudioNode.call(this);\n\t        options = Tone.defaultArg(options, Tone.MidSideCompressor.defaults);\n\t        /**\n\t\t\t *  the mid/side split\n\t\t\t *  @type  {Tone.MidSideSplit}\n\t\t\t *  @private\n\t\t\t */\n\t        this._midSideSplit = this.input = new Tone.MidSideSplit();\n\t        /**\n\t\t\t *  the mid/side recombination\n\t\t\t *  @type  {Tone.MidSideMerge}\n\t\t\t *  @private\n\t\t\t */\n\t        this._midSideMerge = this.output = new Tone.MidSideMerge();\n\t        /**\n\t\t\t *  The compressor applied to the mid signal\n\t\t\t *  @type  {Tone.Compressor}\n\t\t\t */\n\t        this.mid = new Tone.Compressor(options.mid);\n\t        /**\n\t\t\t *  The compressor applied to the side signal\n\t\t\t *  @type  {Tone.Compressor}\n\t\t\t */\n\t        this.side = new Tone.Compressor(options.side);\n\t        this._midSideSplit.mid.chain(this.mid, this._midSideMerge.mid);\n\t        this._midSideSplit.side.chain(this.side, this._midSideMerge.side);\n\t        this._readOnly([\n\t            'mid',\n\t            'side'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.MidSideCompressor, Tone.AudioNode);\n\t    /**\n\t\t *  @const\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.MidSideCompressor.defaults = {\n\t        'mid': {\n\t            'ratio': 3,\n\t            'threshold': -24,\n\t            'release': 0.03,\n\t            'attack': 0.02,\n\t            'knee': 16\n\t        },\n\t        'side': {\n\t            'ratio': 6,\n\t            'threshold': -30,\n\t            'release': 0.25,\n\t            'attack': 0.03,\n\t            'knee': 10\n\t        }\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.MidSideCompressor} this\n\t\t */\n\t    Tone.MidSideCompressor.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._writable([\n\t            'mid',\n\t            'side'\n\t        ]);\n\t        this.mid.dispose();\n\t        this.mid = null;\n\t        this.side.dispose();\n\t        this.side = null;\n\t        this._midSideSplit.dispose();\n\t        this._midSideSplit = null;\n\t        this._midSideMerge.dispose();\n\t        this._midSideMerge = null;\n\t        return this;\n\t    };\n\t    return Tone.MidSideCompressor;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Mono coerces the incoming mono or stereo signal into a mono signal\n\t\t *         where both left and right channels have the same value. This can be useful\n\t\t *         for [stereo imaging](https://en.wikipedia.org/wiki/Stereo_imaging).\n\t\t *\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @constructor\n\t\t */\n\t    Tone.Mono = function () {\n\t        Tone.AudioNode.call(this);\n\t        this.createInsOuts(1, 0);\n\t        /**\n\t\t\t *  merge the signal\n\t\t\t *  @type {Tone.Merge}\n\t\t\t *  @private\n\t\t\t */\n\t        this._merge = this.output = new Tone.Merge();\n\t        this.input.connect(this._merge, 0, 0);\n\t        this.input.connect(this._merge, 0, 1);\n\t        this.input.gain.value = Tone.dbToGain(-10);\n\t    };\n\t    Tone.extend(Tone.Mono);\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.Mono} this\n\t\t */\n\t    Tone.Mono.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._merge.dispose();\n\t        this._merge = null;\n\t        return this;\n\t    };\n\t    return Tone.Mono;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class A compressor with seperate controls over low/mid/high dynamics\n\t\t *\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @constructor\n\t\t *  @param {Object} options The low/mid/high compressor settings.\n\t\t *  @example\n\t\t *  var multiband = new Tone.MultibandCompressor({\n\t\t *  \t\"lowFrequency\" : 200,\n\t\t *  \t\"highFrequency\" : 1300\n\t\t *  \t\"low\" : {\n\t\t *  \t\t\"threshold\" : -12\n\t\t *  \t}\n\t\t *  })\n\t\t */\n\t    Tone.MultibandCompressor = function (options) {\n\t        Tone.AudioNode.call(this);\n\t        options = Tone.defaultArg(arguments, Tone.MultibandCompressor.defaults);\n\t        /**\n\t\t\t *  split the incoming signal into high/mid/low\n\t\t\t *  @type {Tone.MultibandSplit}\n\t\t\t *  @private\n\t\t\t */\n\t        this._splitter = this.input = new Tone.MultibandSplit({\n\t            'lowFrequency': options.lowFrequency,\n\t            'highFrequency': options.highFrequency\n\t        });\n\t        /**\n\t\t\t *  low/mid crossover frequency.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.lowFrequency = this._splitter.lowFrequency;\n\t        /**\n\t\t\t *  mid/high crossover frequency.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.highFrequency = this._splitter.highFrequency;\n\t        /**\n\t\t\t *  the output\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this.output = new Tone.Gain();\n\t        /**\n\t\t\t *  The compressor applied to the low frequencies.\n\t\t\t *  @type {Tone.Compressor}\n\t\t\t */\n\t        this.low = new Tone.Compressor(options.low);\n\t        /**\n\t\t\t *  The compressor applied to the mid frequencies.\n\t\t\t *  @type {Tone.Compressor}\n\t\t\t */\n\t        this.mid = new Tone.Compressor(options.mid);\n\t        /**\n\t\t\t *  The compressor applied to the high frequencies.\n\t\t\t *  @type {Tone.Compressor}\n\t\t\t */\n\t        this.high = new Tone.Compressor(options.high);\n\t        //connect the compressor\n\t        this._splitter.low.chain(this.low, this.output);\n\t        this._splitter.mid.chain(this.mid, this.output);\n\t        this._splitter.high.chain(this.high, this.output);\n\t        this._readOnly([\n\t            'high',\n\t            'mid',\n\t            'low',\n\t            'highFrequency',\n\t            'lowFrequency'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.MultibandCompressor, Tone.AudioNode);\n\t    /**\n\t\t *  @const\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.MultibandCompressor.defaults = {\n\t        'low': Tone.Compressor.defaults,\n\t        'mid': Tone.Compressor.defaults,\n\t        'high': Tone.Compressor.defaults,\n\t        'lowFrequency': 250,\n\t        'highFrequency': 2000\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.MultibandCompressor} this\n\t\t */\n\t    Tone.MultibandCompressor.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._splitter.dispose();\n\t        this._writable([\n\t            'high',\n\t            'mid',\n\t            'low',\n\t            'highFrequency',\n\t            'lowFrequency'\n\t        ]);\n\t        this.low.dispose();\n\t        this.mid.dispose();\n\t        this.high.dispose();\n\t        this._splitter = null;\n\t        this.low = null;\n\t        this.mid = null;\n\t        this.high = null;\n\t        this.lowFrequency = null;\n\t        this.highFrequency = null;\n\t        return this;\n\t    };\n\t    return Tone.MultibandCompressor;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Panner is an equal power Left/Right Panner and does not\n\t\t *          support 3D. Panner uses the StereoPannerNode when available.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @param {NormalRange} [initialPan=0] The initail panner value (center).\n\t\t *  @example\n\t\t *  //pan the input signal hard right.\n\t\t *  var panner = new Tone.Panner(1);\n\t\t */\n\t    Tone.Panner = function (initialPan) {\n\t        Tone.AudioNode.call(this);\n\t        if (Tone.Panner.hasStereoPanner) {\n\t            /**\n\t\t\t\t *  the panner node\n\t\t\t\t *  @type {StereoPannerNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._panner = this.input = this.output = this.context.createStereoPanner();\n\t            /**\n\t\t\t\t *  The pan control. -1 = hard left, 1 = hard right.\n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t            this.pan = this._panner.pan;\n\t        } else {\n\t            /**\n\t\t\t\t *  the dry/wet knob\n\t\t\t\t *  @type {Tone.CrossFade}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._crossFade = new Tone.CrossFade();\n\t            /**\n\t\t\t\t *  @type {Tone.Merge}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._merger = this.output = new Tone.Merge();\n\t            /**\n\t\t\t\t *  @type {Tone.Split}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._splitter = this.input = new Tone.Split();\n\t            /**\n\t\t\t\t *  The pan control. -1 = hard left, 1 = hard right.\n\t\t\t\t *  @type {AudioRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t            this.pan = new Tone.Signal(0, Tone.Type.AudioRange);\n\t            /**\n\t\t\t\t *  always sends 0\n\t\t\t\t *  @type {Tone.Zero}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._zero = new Tone.Zero();\n\t            /**\n\t\t\t\t *  The analog to gain conversion\n\t\t\t\t *  @type  {Tone.AudioToGain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._a2g = new Tone.AudioToGain();\n\t            //CONNECTIONS:\n\t            this._zero.connect(this._a2g);\n\t            this.pan.chain(this._a2g, this._crossFade.fade);\n\t            //left channel is a, right channel is b\n\t            this._splitter.connect(this._crossFade, 0, 0);\n\t            this._splitter.connect(this._crossFade, 1, 1);\n\t            //merge it back together\n\t            this._crossFade.a.connect(this._merger, 0, 0);\n\t            this._crossFade.b.connect(this._merger, 0, 1);\n\t        }\n\t        //initial value\n\t        this.pan.value = Tone.defaultArg(initialPan, 0);\n\t        this._readOnly('pan');\n\t    };\n\t    Tone.extend(Tone.Panner, Tone.AudioNode);\n\t    /**\n\t\t *  Indicates if the panner is using the new StereoPannerNode internally\n\t\t *  @type  {Boolean}\n\t\t *  @static\n\t\t *  @private\n\t\t *  @readOnly\n\t\t */\n\t    Tone.Panner.hasStereoPanner = Tone.context && Tone.isFunction(Tone.context.createStereoPanner);\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Panner} this\n\t\t */\n\t    Tone.Panner.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._writable('pan');\n\t        if (Tone.Panner.hasStereoPanner) {\n\t            this._panner.disconnect();\n\t            this._panner = null;\n\t            this.pan = null;\n\t        } else {\n\t            this._zero.dispose();\n\t            this._zero = null;\n\t            this._crossFade.dispose();\n\t            this._crossFade = null;\n\t            this._splitter.dispose();\n\t            this._splitter = null;\n\t            this._merger.dispose();\n\t            this._merger = null;\n\t            this.pan.dispose();\n\t            this.pan = null;\n\t            this._a2g.dispose();\n\t            this._a2g = null;\n\t        }\n\t        return this;\n\t    };\n\t    return Tone.Panner;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  A spatialized panner node which supports equalpower or HRTF panning.\n\t\t *          Tries to normalize the API across various browsers. See Tone.Listener\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @param {Number} positionX The initial x position.\n\t\t *  @param {Number} positionY The initial y position.\n\t\t *  @param {Number} positionZ The initial z position.\n\t\t */\n\t    Tone.Panner3D = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'positionX',\n\t            'positionY',\n\t            'positionZ'\n\t        ], Tone.Panner3D);\n\t        Tone.AudioNode.call(this);\n\t        /**\n\t\t\t *  The panner node\n\t\t\t *  @type {PannerNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._panner = this.input = this.output = this.context.createPanner();\n\t        //set some values\n\t        this._panner.panningModel = options.panningModel;\n\t        this._panner.maxDistance = options.maxDistance;\n\t        this._panner.distanceModel = options.distanceModel;\n\t        this._panner.coneOuterGain = options.coneOuterGain;\n\t        this._panner.coneOuterAngle = options.coneOuterAngle;\n\t        this._panner.coneInnerAngle = options.coneInnerAngle;\n\t        this._panner.refDistance = options.refDistance;\n\t        this._panner.rolloffFactor = options.rolloffFactor;\n\t        /**\n\t\t\t *  Holds the current orientation\n\t\t\t *  @type  {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._orientation = [\n\t            options.orientationX,\n\t            options.orientationY,\n\t            options.orientationZ\n\t        ];\n\t        /**\n\t\t\t *  Holds the current position\n\t\t\t *  @type  {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._position = [\n\t            options.positionX,\n\t            options.positionY,\n\t            options.positionZ\n\t        ];\n\t        // set the default position/orientation\n\t        this.orientationX = options.orientationX;\n\t        this.orientationY = options.orientationY;\n\t        this.orientationZ = options.orientationZ;\n\t        this.positionX = options.positionX;\n\t        this.positionY = options.positionY;\n\t        this.positionZ = options.positionZ;\n\t    };\n\t    Tone.extend(Tone.Panner3D, Tone.AudioNode);\n\t    /**\n\t\t *  Defaults according to the specification\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Panner3D.defaults = {\n\t        'positionX': 0,\n\t        'positionY': 0,\n\t        'positionZ': 0,\n\t        'orientationX': 0,\n\t        'orientationY': 0,\n\t        'orientationZ': 0,\n\t        'panningModel': 'equalpower',\n\t        'maxDistance': 10000,\n\t        'distanceModel': 'inverse',\n\t        'coneOuterGain': 0,\n\t        'coneOuterAngle': 360,\n\t        'coneInnerAngle': 360,\n\t        'refDistance': 1,\n\t        'rolloffFactor': 1\n\t    };\n\t    /**\n\t\t * The ramp time which is applied to the setTargetAtTime\n\t\t * @type {Number}\n\t\t * @private\n\t\t */\n\t    Tone.Panner3D.prototype._rampTimeConstant = 0.01;\n\t    /**\n\t\t *  Sets the position of the source in 3d space.\n\t\t *  @param  {Number}  x\n\t\t *  @param  {Number}  y\n\t\t *  @param  {Number}  z\n\t\t *  @return {Tone.Panner3D} this\n\t\t */\n\t    Tone.Panner3D.prototype.setPosition = function (x, y, z) {\n\t        if (this._panner.positionX) {\n\t            var now = this.now();\n\t            this._panner.positionX.setTargetAtTime(x, now, this._rampTimeConstant);\n\t            this._panner.positionY.setTargetAtTime(y, now, this._rampTimeConstant);\n\t            this._panner.positionZ.setTargetAtTime(z, now, this._rampTimeConstant);\n\t        } else {\n\t            this._panner.setPosition(x, y, z);\n\t        }\n\t        this._position = Array.prototype.slice.call(arguments);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Sets the orientation of the source in 3d space.\n\t\t *  @param  {Number}  x\n\t\t *  @param  {Number}  y\n\t\t *  @param  {Number}  z\n\t\t *  @return {Tone.Panner3D} this\n\t\t */\n\t    Tone.Panner3D.prototype.setOrientation = function (x, y, z) {\n\t        if (this._panner.orientationX) {\n\t            var now = this.now();\n\t            this._panner.orientationX.setTargetAtTime(x, now, this._rampTimeConstant);\n\t            this._panner.orientationY.setTargetAtTime(y, now, this._rampTimeConstant);\n\t            this._panner.orientationZ.setTargetAtTime(z, now, this._rampTimeConstant);\n\t        } else {\n\t            this._panner.setOrientation(x, y, z);\n\t        }\n\t        this._orientation = Array.prototype.slice.call(arguments);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  The x position of the panner object.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name positionX\n\t\t */\n\t    Object.defineProperty(Tone.Panner3D.prototype, 'positionX', {\n\t        set: function (pos) {\n\t            this._position[0] = pos;\n\t            this.setPosition.apply(this, this._position);\n\t        },\n\t        get: function () {\n\t            return this._position[0];\n\t        }\n\t    });\n\t    /**\n\t\t *  The y position of the panner object.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name positionY\n\t\t */\n\t    Object.defineProperty(Tone.Panner3D.prototype, 'positionY', {\n\t        set: function (pos) {\n\t            this._position[1] = pos;\n\t            this.setPosition.apply(this, this._position);\n\t        },\n\t        get: function () {\n\t            return this._position[1];\n\t        }\n\t    });\n\t    /**\n\t\t *  The z position of the panner object.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name positionZ\n\t\t */\n\t    Object.defineProperty(Tone.Panner3D.prototype, 'positionZ', {\n\t        set: function (pos) {\n\t            this._position[2] = pos;\n\t            this.setPosition.apply(this, this._position);\n\t        },\n\t        get: function () {\n\t            return this._position[2];\n\t        }\n\t    });\n\t    /**\n\t\t *  The x orientation of the panner object.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name orientationX\n\t\t */\n\t    Object.defineProperty(Tone.Panner3D.prototype, 'orientationX', {\n\t        set: function (pos) {\n\t            this._orientation[0] = pos;\n\t            this.setOrientation.apply(this, this._orientation);\n\t        },\n\t        get: function () {\n\t            return this._orientation[0];\n\t        }\n\t    });\n\t    /**\n\t\t *  The y orientation of the panner object.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name orientationY\n\t\t */\n\t    Object.defineProperty(Tone.Panner3D.prototype, 'orientationY', {\n\t        set: function (pos) {\n\t            this._orientation[1] = pos;\n\t            this.setOrientation.apply(this, this._orientation);\n\t        },\n\t        get: function () {\n\t            return this._orientation[1];\n\t        }\n\t    });\n\t    /**\n\t\t *  The z orientation of the panner object.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name orientationZ\n\t\t */\n\t    Object.defineProperty(Tone.Panner3D.prototype, 'orientationZ', {\n\t        set: function (pos) {\n\t            this._orientation[2] = pos;\n\t            this.setOrientation.apply(this, this._orientation);\n\t        },\n\t        get: function () {\n\t            return this._orientation[2];\n\t        }\n\t    });\n\t    /**\n\t\t *  Proxy a property on the panner to an exposed public propery\n\t\t *  @param  {String}  prop\n\t\t *  @private\n\t\t */\n\t    Tone.Panner3D._aliasProperty = function (prop) {\n\t        Object.defineProperty(Tone.Panner3D.prototype, prop, {\n\t            set: function (val) {\n\t                this._panner[prop] = val;\n\t            },\n\t            get: function () {\n\t                return this._panner[prop];\n\t            }\n\t        });\n\t    };\n\t    /**\n\t\t *  The panning model. Either \"equalpower\" or \"HRTF\".\n\t\t *  @type {String}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name panningModel\n\t\t */\n\t    Tone.Panner3D._aliasProperty('panningModel');\n\t    /**\n\t\t *  A reference distance for reducing volume as source move further from the listener\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name refDistance\n\t\t */\n\t    Tone.Panner3D._aliasProperty('refDistance');\n\t    /**\n\t\t *  Describes how quickly the volume is reduced as source moves away from listener.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name rolloffFactor\n\t\t */\n\t    Tone.Panner3D._aliasProperty('rolloffFactor');\n\t    /**\n\t\t *  The distance model used by,  \"linear\", \"inverse\", or \"exponential\".\n\t\t *  @type {String}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name distanceModel\n\t\t */\n\t    Tone.Panner3D._aliasProperty('distanceModel');\n\t    /**\n\t\t *  The angle, in degrees, inside of which there will be no volume reduction\n\t\t *  @type {Degrees}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name coneInnerAngle\n\t\t */\n\t    Tone.Panner3D._aliasProperty('coneInnerAngle');\n\t    /**\n\t\t *  The angle, in degrees, outside of which the volume will be reduced\n\t\t *  to a constant value of coneOuterGain\n\t\t *  @type {Degrees}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name coneOuterAngle\n\t\t */\n\t    Tone.Panner3D._aliasProperty('coneOuterAngle');\n\t    /**\n\t\t *  The gain outside of the coneOuterAngle\n\t\t *  @type {Gain}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name coneOuterGain\n\t\t */\n\t    Tone.Panner3D._aliasProperty('coneOuterGain');\n\t    /**\n\t\t *  The maximum distance between source and listener,\n\t\t *  after which the volume will not be reduced any further.\n\t\t *  @type {Positive}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name maxDistance\n\t\t */\n\t    Tone.Panner3D._aliasProperty('maxDistance');\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Panner3D} this\n\t\t */\n\t    Tone.Panner3D.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._panner.disconnect();\n\t        this._panner = null;\n\t        this._orientation = null;\n\t        this._position = null;\n\t        return this;\n\t    };\n\t    return Tone.Panner3D;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.PanVol is a Tone.Panner and Tone.Volume in one.\n\t\t *\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @constructor\n\t\t *  @param {AudioRange} pan the initial pan\n\t\t *  @param {number} volume The output volume.\n\t\t *  @example\n\t\t * //pan the incoming signal left and drop the volume\n\t\t * var panVol = new Tone.PanVol(-0.25, -12);\n\t\t */\n\t    Tone.PanVol = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'pan',\n\t            'volume'\n\t        ], Tone.PanVol);\n\t        Tone.AudioNode.call(this);\n\t        /**\n\t\t\t *  The panning node\n\t\t\t *  @type {Tone.Panner}\n\t\t\t *  @private\n\t\t\t */\n\t        this._panner = this.input = new Tone.Panner(options.pan);\n\t        /**\n\t\t\t *  The L/R panning control.\n\t\t\t *  @type {AudioRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.pan = this._panner.pan;\n\t        /**\n\t\t\t *  The volume node\n\t\t\t *  @type {Tone.Volume}\n\t\t\t *  @private\n\t\t\t */\n\t        this._volume = this.output = new Tone.Volume(options.volume);\n\t        /**\n\t\t\t *  The volume control in decibels.\n\t\t\t *  @type {Decibels}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.volume = this._volume.volume;\n\t        //connections\n\t        this._panner.connect(this._volume);\n\t        this.mute = options.mute;\n\t        this._readOnly([\n\t            'pan',\n\t            'volume'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.PanVol, Tone.AudioNode);\n\t    /**\n\t\t *  The defaults\n\t\t *  @type  {Object}\n\t\t *  @const\n\t\t *  @static\n\t\t */\n\t    Tone.PanVol.defaults = {\n\t        'pan': 0,\n\t        'volume': 0,\n\t        'mute': false\n\t    };\n\t    /**\n\t\t * Mute/unmute the volume\n\t\t * @memberOf Tone.PanVol#\n\t\t * @name mute\n\t\t * @type {Boolean}\n\t\t */\n\t    Object.defineProperty(Tone.PanVol.prototype, 'mute', {\n\t        get: function () {\n\t            return this._volume.mute;\n\t        },\n\t        set: function (mute) {\n\t            this._volume.mute = mute;\n\t        }\n\t    });\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.PanVol} this\n\t\t */\n\t    Tone.PanVol.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._writable([\n\t            'pan',\n\t            'volume'\n\t        ]);\n\t        this._panner.dispose();\n\t        this._panner = null;\n\t        this.pan = null;\n\t        this._volume.dispose();\n\t        this._volume = null;\n\t        this.volume = null;\n\t        return this;\n\t    };\n\t    return Tone.PanVol;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class Tone.Solo lets you isolate a specific audio stream. When\n\t\t *         an instance is set to `solo=true`, it will mute all other instances.\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @example\n\t\t * var soloA = new Tone.Solo()\n\t\t * var soloB = new Tone.Solo()\n\t\t * soloA.solo = true\n\t\t * //no audio will pass through soloB\n\t\t */\n\t    Tone.Solo = function () {\n\t        var options = Tone.defaults(arguments, ['solo'], Tone.Solo);\n\t        Tone.AudioNode.call(this);\n\t        /**\n\t\t\t *  The input and output node\n\t\t\t *  @type  {Tone.Gain}\n\t\t\t */\n\t        this.input = this.output = new Tone.Gain();\n\t        /**\n\t\t\t *  A bound _soloed method\n\t\t\t *  @type  {Function}\n\t\t\t *  @private\n\t\t\t */\n\t        this._soloBind = this._soloed.bind(this);\n\t        //listen for solo events class-wide.\n\t        this.context.on('solo', this._soloBind);\n\t        //set initially\n\t        this.solo = options.solo;\n\t    };\n\t    Tone.extend(Tone.Solo, Tone.AudioNode);\n\t    /**\n\t\t *  The defaults\n\t\t *  @type  {Object}\n\t\t *  @static\n\t\t */\n\t    Tone.Solo.defaults = { solo: false };\n\t    /**\n\t\t *  Isolates this instance and mutes all other instances of Tone.Solo.\n\t\t *  Only one instance can be soloed at a time. A soloed\n\t\t *  instance will report `solo=false` when another instance is soloed.\n\t\t *  @memberOf Tone.Solo#\n\t\t *  @type {Boolean}\n\t\t *  @name solo\n\t\t */\n\t    Object.defineProperty(Tone.Solo.prototype, 'solo', {\n\t        get: function () {\n\t            return this._isSoloed();\n\t        },\n\t        set: function (solo) {\n\t            if (solo) {\n\t                this._addSolo();\n\t            } else {\n\t                this._removeSolo();\n\t            }\n\t            this.context.emit('solo', this);\n\t        }\n\t    });\n\t    /**\n\t\t *  If the current instance is muted, i.e. another instance is soloed\n\t\t *  @memberOf Tone.Solo#\n\t\t *  @type {Boolean}\n\t\t *  @name muted\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Solo.prototype, 'muted', {\n\t        get: function () {\n\t            return this.input.gain.value === 0;\n\t        }\n\t    });\n\t    /**\n\t\t * Add this to the soloed array\n\t\t * @private\n\t\t */\n\t    Tone.Solo.prototype._addSolo = function () {\n\t        if (!Tone.isArray(this.context._currentSolo)) {\n\t            this.context._currentSolo = [];\n\t        }\n\t        if (!this._isSoloed()) {\n\t            this.context._currentSolo.push(this);\n\t        }\n\t    };\n\t    /**\n\t\t * Remove this from the soloed array\n\t\t * @private\n\t\t */\n\t    Tone.Solo.prototype._removeSolo = function () {\n\t        if (this._isSoloed()) {\n\t            var index = this.context._currentSolo.indexOf(this);\n\t            this.context._currentSolo.splice(index, 1);\n\t        }\n\t    };\n\t    /**\n\t\t * @return {Boolean} Is this on the soloed array\n\t\t * @private\n\t\t */\n\t    Tone.Solo.prototype._isSoloed = function () {\n\t        if (Tone.isArray(this.context._currentSolo)) {\n\t            return this.context._currentSolo.length !== 0 && this.context._currentSolo.indexOf(this) !== -1;\n\t        } else {\n\t            return false;\n\t        }\n\t    };\n\t    /**\n\t\t * @return {Boolean} Returns true if no one is soloed\n\t\t * @private\n\t\t */\n\t    Tone.Solo.prototype._noSolos = function () {\n\t        return !Tone.isArray(this.context._currentSolo) || this.context._currentSolo.length === 0;\n\t    };\n\t    /**\n\t\t *  Solo the current instance and unsolo all other instances.\n\t\t *  @param  {Tone.Solo}  instance  The instance which is being soloed/unsoloed.\n\t\t *  @private\n\t\t */\n\t    Tone.Solo.prototype._soloed = function () {\n\t        if (this._isSoloed()) {\n\t            this.input.gain.value = 1;\n\t        } else if (this._noSolos()) {\n\t            //no one is soloed\n\t            this.input.gain.value = 1;\n\t        } else {\n\t            this.input.gain.value = 0;\n\t        }\n\t    };\n\t    /**\n\t\t *  Clean up\n\t\t *  @return  {Tone.Solo}  this\n\t\t */\n\t    Tone.Solo.prototype.dispose = function () {\n\t        this.context.off('solo', this._soloBind);\n\t        this._removeSolo();\n\t        this._soloBind = null;\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        return this;\n\t    };\n\t    return Tone.Solo;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class  Get the current waveform data of the connected audio source.\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @param {Number=} size The size of the FFT. Value must be a power of\n\t\t *                       two in the range 32 to 32768.\n\t\t */\n\t    Tone.Waveform = function () {\n\t        var options = Tone.defaults(arguments, ['size'], Tone.Waveform);\n\t        options.type = Tone.Analyser.Type.Waveform;\n\t        Tone.AudioNode.call(this);\n\t        /**\n\t\t\t *  The analyser node.\n\t\t\t *  @private\n\t\t\t *  @type {Tone.Analyser}\n\t\t\t */\n\t        this._analyser = this.input = this.output = new Tone.Analyser(options);\n\t    };\n\t    Tone.extend(Tone.Waveform, Tone.AudioNode);\n\t    /**\n\t\t *  The default values.\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.Waveform.defaults = { 'size': 1024 };\n\t    /**\n\t\t *  Gets the waveform of the audio source. Returns the waveform data\n\t\t *  of length [size](#size) as a Float32Array with values between -1 and 1.\n\t\t *  @returns {TypedArray}\n\t\t */\n\t    Tone.Waveform.prototype.getValue = function () {\n\t        return this._analyser.getValue();\n\t    };\n\t    /**\n\t\t *  The size of analysis. This must be a power of two in the range 32 to 32768.\n\t\t *  @memberOf Tone.Waveform#\n\t\t *  @type {Number}\n\t\t *  @name size\n\t\t */\n\t    Object.defineProperty(Tone.Waveform.prototype, 'size', {\n\t        get: function () {\n\t            return this._analyser.size;\n\t        },\n\t        set: function (size) {\n\t            this._analyser.size = size;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return  {Tone.Waveform}  this\n\t\t */\n\t    Tone.Waveform.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._analyser.dispose();\n\t        this._analyser = null;\n\t    };\n\t    return Tone.Waveform;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.CtrlInterpolate will interpolate between given values based\n\t\t *         on the \"index\" property. Passing in an array or object literal\n\t\t *         will interpolate each of the parameters. Note (i.e. \"C3\")\n\t\t *         and Time (i.e. \"4n + 2\") can be interpolated. All other values are\n\t\t *         assumed to be numbers. \n\t\t *  @example\n\t\t * var interp = new Tone.CtrlInterpolate([0, 2, 9, 4]);\n\t\t * interp.index = 0.75;\n\t\t * interp.value; //returns 1.5\n\t\t *\n\t\t *  @example\n\t\t * var interp = new Tone.CtrlInterpolate([\n\t\t * \t[2, 4, 5],\n\t\t * \t[9, 3, 2],\n\t\t * ]);\n\t\t * @param {Array} values The array of values to interpolate over\n\t\t * @param {Positive} index The initial interpolation index.\n\t\t * @extends {Tone}\n\t\t */\n\t    Tone.CtrlInterpolate = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'values',\n\t            'index'\n\t        ], Tone.CtrlInterpolate);\n\t        Tone.call(this);\n\t        /**\n\t\t\t *  The values to interpolate between\n\t\t\t *  @type  {Array}\n\t\t\t */\n\t        this.values = options.values;\n\t        /**\n\t\t\t *  The interpolated index between values. For example: a value of 1.5\n\t\t\t *  would interpolate equally between the value at index 1\n\t\t\t *  and the value at index 2. \n\t\t\t *  @example\n\t\t\t * interp.index = 0; \n\t\t\t * interp.value; //returns the value at 0\n\t\t\t * interp.index = 0.5;\n\t\t\t * interp.value; //returns the value between indices 0 and 1. \n\t\t\t *  @type  {Positive}\n\t\t\t */\n\t        this.index = options.index;\n\t    };\n\t    Tone.extend(Tone.CtrlInterpolate);\n\t    /**\n\t\t *  The defaults\n\t\t *  @const\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.CtrlInterpolate.defaults = {\n\t        'index': 0,\n\t        'values': []\n\t    };\n\t    /**\n\t\t *  The current interpolated value based on the index\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.CtrlInterpolate#\n\t\t *  @type {*}\n\t\t *  @name value\n\t\t */\n\t    Object.defineProperty(Tone.CtrlInterpolate.prototype, 'value', {\n\t        get: function () {\n\t            var index = this.index;\n\t            index = Math.min(index, this.values.length - 1);\n\t            var lowerPosition = Math.floor(index);\n\t            var lower = this.values[lowerPosition];\n\t            var upper = this.values[Math.ceil(index)];\n\t            return this._interpolate(index - lowerPosition, lower, upper);\n\t        }\n\t    });\n\t    /**\n\t\t *  Internal interpolation routine\n\t\t *  @param  {NormalRange}  index  The index between the lower and upper\n\t\t *  @param  {*}  lower \n\t\t *  @param  {*}  upper \n\t\t *  @return  {*}  The interpolated value\n\t\t *  @private\n\t\t */\n\t    Tone.CtrlInterpolate.prototype._interpolate = function (index, lower, upper) {\n\t        if (Tone.isArray(lower)) {\n\t            var retArray = [];\n\t            for (var i = 0; i < lower.length; i++) {\n\t                retArray[i] = this._interpolate(index, lower[i], upper[i]);\n\t            }\n\t            return retArray;\n\t        } else if (Tone.isObject(lower)) {\n\t            var retObj = {};\n\t            for (var attr in lower) {\n\t                retObj[attr] = this._interpolate(index, lower[attr], upper[attr]);\n\t            }\n\t            return retObj;\n\t        } else {\n\t            lower = this._toNumber(lower);\n\t            upper = this._toNumber(upper);\n\t            return (1 - index) * lower + index * upper;\n\t        }\n\t    };\n\t    /**\n\t\t *  Convert from the given type into a number\n\t\t *  @param  {Number|String}  value\n\t\t *  @return  {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.CtrlInterpolate.prototype._toNumber = function (val) {\n\t        if (Tone.isNumber(val)) {\n\t            return val;\n\t        } else {\n\t            //otherwise assume that it's Time...\n\t            return this.toSeconds(val);\n\t        }\n\t    };\n\t    /**\n\t\t *  Clean up\n\t\t *  @return  {Tone.CtrlInterpolate}  this\n\t\t */\n\t    Tone.CtrlInterpolate.prototype.dispose = function () {\n\t        this.values = null;\n\t    };\n\t    return Tone.CtrlInterpolate;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.CtrlMarkov represents a Markov Chain where each call\n\t\t *         to Tone.CtrlMarkov.next will move to the next state. If the next\n\t\t *         state choice is an array, the next state is chosen randomly with\n\t\t *         even probability for all of the choices. For a weighted probability\n\t\t *         of the next choices, pass in an object with \"state\" and \"probability\" attributes. \n\t\t *         The probabilities will be normalized and then chosen. If no next options\n\t\t *         are given for the current state, the state will stay there. \n\t\t *  @extends {Tone}\n\t\t *  @example\n\t\t * var chain = new Tone.CtrlMarkov({\n\t\t * \t\"beginning\" : [\"end\", \"middle\"],\n\t\t * \t\"middle\" : \"end\"\n\t\t * });\n\t\t * chain.value = \"beginning\";\n\t\t * chain.next(); //returns \"end\" or \"middle\" with 50% probability\n\t\t *\n\t\t *  @example\n\t\t * var chain = new Tone.CtrlMarkov({\n\t\t * \t\"beginning\" : [{\"value\" : \"end\", \"probability\" : 0.8}, \n\t\t * \t\t\t\t\t{\"value\" : \"middle\", \"probability\" : 0.2}],\n\t\t * \t\"middle\" : \"end\"\n\t\t * });\n\t\t * chain.value = \"beginning\";\n\t\t * chain.next(); //returns \"end\" with 80% probability or \"middle\" with 20%.\n\t\t *  @param {Object} values An object with the state names as the keys\n\t\t *                         and the next state(s) as the values. \n\t\t */\n\t    Tone.CtrlMarkov = function (values, initial) {\n\t        Tone.call(this);\n\t        /**\n\t\t\t *  The Markov values with states as the keys\n\t\t\t *  and next state(s) as the values. \n\t\t\t *  @type {Object}\n\t\t\t */\n\t        this.values = Tone.defaultArg(values, {});\n\t        /**\n\t\t\t *  The current state of the Markov values. The next\n\t\t\t *  state will be evaluated and returned when Tone.CtrlMarkov.next\n\t\t\t *  is invoked.\n\t\t\t *  @type {String}\n\t\t\t */\n\t        this.value = Tone.defaultArg(initial, Object.keys(this.values)[0]);\n\t    };\n\t    Tone.extend(Tone.CtrlMarkov);\n\t    /**\n\t\t *  Returns the next state of the Markov values. \n\t\t *  @return  {String}\n\t\t */\n\t    Tone.CtrlMarkov.prototype.next = function () {\n\t        if (this.values.hasOwnProperty(this.value)) {\n\t            var next = this.values[this.value];\n\t            if (Tone.isArray(next)) {\n\t                var distribution = this._getProbDistribution(next);\n\t                var rand = Math.random();\n\t                var total = 0;\n\t                for (var i = 0; i < distribution.length; i++) {\n\t                    var dist = distribution[i];\n\t                    if (rand > total && rand < total + dist) {\n\t                        var chosen = next[i];\n\t                        if (Tone.isObject(chosen)) {\n\t                            this.value = chosen.value;\n\t                        } else {\n\t                            this.value = chosen;\n\t                        }\n\t                    }\n\t                    total += dist;\n\t                }\n\t            } else {\n\t                this.value = next;\n\t            }\n\t        }\n\t        return this.value;\n\t    };\n\t    /**\n\t\t *  Choose randomly from an array weighted options in the form \n\t\t *  {\"state\" : string, \"probability\" : number} or an array of values\n\t\t *  @param  {Array}  options \n\t\t *  @return  {Array}  The randomly selected choice\n\t\t *  @private\n\t\t */\n\t    Tone.CtrlMarkov.prototype._getProbDistribution = function (options) {\n\t        var distribution = [];\n\t        var total = 0;\n\t        var needsNormalizing = false;\n\t        for (var i = 0; i < options.length; i++) {\n\t            var option = options[i];\n\t            if (Tone.isObject(option)) {\n\t                needsNormalizing = true;\n\t                distribution[i] = option.probability;\n\t            } else {\n\t                distribution[i] = 1 / options.length;\n\t            }\n\t            total += distribution[i];\n\t        }\n\t        if (needsNormalizing) {\n\t            //normalize the values\n\t            for (var j = 0; j < distribution.length; j++) {\n\t                distribution[j] = distribution[j] / total;\n\t            }\n\t        }\n\t        return distribution;\n\t    };\n\t    /**\n\t\t *  Clean up\n\t\t *  @return  {Tone.CtrlMarkov}  this\n\t\t */\n\t    Tone.CtrlMarkov.prototype.dispose = function () {\n\t        this.values = null;\n\t    };\n\t    return Tone.CtrlMarkov;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Generate patterns from an array of values.\n\t\t *         Has a number of arpeggiation and randomized\n\t\t *         selection patterns. \n\t\t *           <ul>\n\t\t *  \t        <li>\"up\" - cycles upward</li>\n\t\t *  \t\t\t<li>\"down\" - cycles downward</li>\n\t\t *  \t\t\t<li>\"upDown\" - up then and down</li>\n\t\t *  \t\t\t<li>\"downUp\" - cycles down then and up</li>\n\t\t *  \t\t\t<li>\"alternateUp\" - jump up two and down one</li>\n\t\t *  \t\t\t<li>\"alternateDown\" - jump down two and up one</li>\n\t\t *  \t\t\t<li>\"random\" - randomly select an index</li>\n\t\t *  \t\t\t<li>\"randomWalk\" - randomly moves one index away from the current position</li>\n\t\t *  \t\t\t<li>\"randomOnce\" - randomly select an index without repeating until all values have been chosen.</li>\n\t\t *     \t\t</ul>\n\t\t *  @param  {Array}  values   An array of options to choose from.\n\t\t *  @param  {Tone.CtrlPattern.Type=}  type  The name of the pattern.\n\t\t *  @extends {Tone}\n\t\t */\n\t    Tone.CtrlPattern = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'values',\n\t            'type'\n\t        ], Tone.CtrlPattern);\n\t        Tone.call(this);\n\t        /**\n\t\t\t *  The array of values to arpeggiate over\n\t\t\t *  @type {Array}\n\t\t\t */\n\t        this.values = options.values;\n\t        /**\n\t\t\t *  The current position in the values array\n\t\t\t *  @type  {Number}\n\t\t\t */\n\t        this.index = 0;\n\t        /**\n\t\t\t *  The type placeholder\n\t\t\t *  @type {Tone.CtrlPattern.Type}\n\t\t\t *  @private\n\t\t\t */\n\t        this._type = null;\n\t        /**\n\t\t\t *  Shuffled values for the RandomOnce type\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._shuffled = null;\n\t        /**\n\t\t\t *  The direction of the movement\n\t\t\t *  @type {String}\n\t\t\t *  @private\n\t\t\t */\n\t        this._direction = null;\n\t        this.type = options.type;\n\t    };\n\t    Tone.extend(Tone.CtrlPattern);\n\t    /**\n\t\t *  The Control Patterns\n\t\t *  @type  {Object}\n\t\t *  @static\n\t\t */\n\t    Tone.CtrlPattern.Type = {\n\t        Up: 'up',\n\t        Down: 'down',\n\t        UpDown: 'upDown',\n\t        DownUp: 'downUp',\n\t        AlternateUp: 'alternateUp',\n\t        AlternateDown: 'alternateDown',\n\t        Random: 'random',\n\t        RandomWalk: 'randomWalk',\n\t        RandomOnce: 'randomOnce'\n\t    };\n\t    /**\n\t\t *  The default values. \n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.CtrlPattern.defaults = {\n\t        'type': Tone.CtrlPattern.Type.Up,\n\t        'values': []\n\t    };\n\t    /**\n\t\t *  The value at the current index of the pattern.\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.CtrlPattern#\n\t\t *  @type {*}\n\t\t *  @name value\n\t\t */\n\t    Object.defineProperty(Tone.CtrlPattern.prototype, 'value', {\n\t        get: function () {\n\t            //some safeguards\n\t            if (this.values.length === 0) {\n\t                return;\n\t            } else if (this.values.length === 1) {\n\t                return this.values[0];\n\t            }\n\t            this.index = Math.min(this.index, this.values.length - 1);\n\t            var val = this.values[this.index];\n\t            if (this.type === Tone.CtrlPattern.Type.RandomOnce) {\n\t                if (this.values.length !== this._shuffled.length) {\n\t                    this._shuffleValues();\n\t                }\n\t                val = this.values[this._shuffled[this.index]];\n\t            }\n\t            return val;\n\t        }\n\t    });\n\t    /**\n\t\t *  The pattern used to select the next\n\t\t *  item from the values array\n\t\t *  @memberOf Tone.CtrlPattern#\n\t\t *  @type {Tone.CtrlPattern.Type}\n\t\t *  @name type\n\t\t */\n\t    Object.defineProperty(Tone.CtrlPattern.prototype, 'type', {\n\t        get: function () {\n\t            return this._type;\n\t        },\n\t        set: function (type) {\n\t            this._type = type;\n\t            this._shuffled = null;\n\t            //the first index\n\t            if (this._type === Tone.CtrlPattern.Type.Up || this._type === Tone.CtrlPattern.Type.UpDown || this._type === Tone.CtrlPattern.Type.RandomOnce || this._type === Tone.CtrlPattern.Type.AlternateUp) {\n\t                this.index = 0;\n\t            } else if (this._type === Tone.CtrlPattern.Type.Down || this._type === Tone.CtrlPattern.Type.DownUp || this._type === Tone.CtrlPattern.Type.AlternateDown) {\n\t                this.index = this.values.length - 1;\n\t            }\n\t            //the direction\n\t            if (this._type === Tone.CtrlPattern.Type.UpDown || this._type === Tone.CtrlPattern.Type.AlternateUp) {\n\t                this._direction = Tone.CtrlPattern.Type.Up;\n\t            } else if (this._type === Tone.CtrlPattern.Type.DownUp || this._type === Tone.CtrlPattern.Type.AlternateDown) {\n\t                this._direction = Tone.CtrlPattern.Type.Down;\n\t            }\n\t            //randoms\n\t            if (this._type === Tone.CtrlPattern.Type.RandomOnce) {\n\t                this._shuffleValues();\n\t            } else if (this._type === Tone.CtrlPattern.Random) {\n\t                this.index = Math.floor(Math.random() * this.values.length);\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Return the next value given the current position\n\t\t *  and pattern.\n\t\t *  @return {*} The next value\n\t\t */\n\t    Tone.CtrlPattern.prototype.next = function () {\n\t        var type = this.type;\n\t        //choose the next index\n\t        if (type === Tone.CtrlPattern.Type.Up) {\n\t            this.index++;\n\t            if (this.index >= this.values.length) {\n\t                this.index = 0;\n\t            }\n\t        } else if (type === Tone.CtrlPattern.Type.Down) {\n\t            this.index--;\n\t            if (this.index < 0) {\n\t                this.index = this.values.length - 1;\n\t            }\n\t        } else if (type === Tone.CtrlPattern.Type.UpDown || type === Tone.CtrlPattern.Type.DownUp) {\n\t            if (this._direction === Tone.CtrlPattern.Type.Up) {\n\t                this.index++;\n\t            } else {\n\t                this.index--;\n\t            }\n\t            if (this.index < 0) {\n\t                this.index = 1;\n\t                this._direction = Tone.CtrlPattern.Type.Up;\n\t            } else if (this.index >= this.values.length) {\n\t                this.index = this.values.length - 2;\n\t                this._direction = Tone.CtrlPattern.Type.Down;\n\t            }\n\t        } else if (type === Tone.CtrlPattern.Type.Random) {\n\t            this.index = Math.floor(Math.random() * this.values.length);\n\t        } else if (type === Tone.CtrlPattern.Type.RandomWalk) {\n\t            if (Math.random() < 0.5) {\n\t                this.index--;\n\t                this.index = Math.max(this.index, 0);\n\t            } else {\n\t                this.index++;\n\t                this.index = Math.min(this.index, this.values.length - 1);\n\t            }\n\t        } else if (type === Tone.CtrlPattern.Type.RandomOnce) {\n\t            this.index++;\n\t            if (this.index >= this.values.length) {\n\t                this.index = 0;\n\t                //reshuffle the values for next time\n\t                this._shuffleValues();\n\t            }\n\t        } else if (type === Tone.CtrlPattern.Type.AlternateUp) {\n\t            if (this._direction === Tone.CtrlPattern.Type.Up) {\n\t                this.index += 2;\n\t                this._direction = Tone.CtrlPattern.Type.Down;\n\t            } else {\n\t                this.index -= 1;\n\t                this._direction = Tone.CtrlPattern.Type.Up;\n\t            }\n\t            if (this.index >= this.values.length) {\n\t                this.index = 0;\n\t                this._direction = Tone.CtrlPattern.Type.Up;\n\t            }\n\t        } else if (type === Tone.CtrlPattern.Type.AlternateDown) {\n\t            if (this._direction === Tone.CtrlPattern.Type.Up) {\n\t                this.index += 1;\n\t                this._direction = Tone.CtrlPattern.Type.Down;\n\t            } else {\n\t                this.index -= 2;\n\t                this._direction = Tone.CtrlPattern.Type.Up;\n\t            }\n\t            if (this.index < 0) {\n\t                this.index = this.values.length - 1;\n\t                this._direction = Tone.CtrlPattern.Type.Down;\n\t            }\n\t        }\n\t        return this.value;\n\t    };\n\t    /**\n\t\t *  Shuffles the values and places the results into the _shuffled\n\t\t *  @private\n\t\t */\n\t    Tone.CtrlPattern.prototype._shuffleValues = function () {\n\t        var copy = [];\n\t        this._shuffled = [];\n\t        for (var i = 0; i < this.values.length; i++) {\n\t            copy[i] = i;\n\t        }\n\t        while (copy.length > 0) {\n\t            var randVal = copy.splice(Math.floor(copy.length * Math.random()), 1);\n\t            this._shuffled.push(randVal[0]);\n\t        }\n\t    };\n\t    /**\n\t\t *  Clean up\n\t\t *  @returns {Tone.CtrlPattern} this\n\t\t */\n\t    Tone.CtrlPattern.prototype.dispose = function () {\n\t        this._shuffled = null;\n\t        this.values = null;\n\t    };\n\t    return Tone.CtrlPattern;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Choose a random value.\n\t\t *  @extends {Tone}\n\t\t *  @example\n\t\t * var randomWalk = new Tone.CtrlRandom({\n\t\t * \t\"min\" : 0,\n\t\t * \t\"max\" : 10,\n\t\t * \t\"integer\" : true\n\t\t * });\n\t\t * randomWalk.eval();\n\t\t *\n\t\t *  @param {Number|Time=} min The minimum return value.\n\t\t *  @param {Number|Time=} max The maximum return value.\n\t\t */\n\t    Tone.CtrlRandom = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'min',\n\t            'max'\n\t        ], Tone.CtrlRandom);\n\t        Tone.call(this);\n\t        /**\n\t\t\t *  The minimum return value\n\t\t\t *  @type  {Number|Time}\n\t\t\t */\n\t        this.min = options.min;\n\t        /**\n\t\t\t *  The maximum return value\n\t\t\t *  @type  {Number|Time}\n\t\t\t */\n\t        this.max = options.max;\n\t        /**\n\t\t\t *  If the return value should be an integer\n\t\t\t *  @type  {Boolean}\n\t\t\t */\n\t        this.integer = options.integer;\n\t    };\n\t    Tone.extend(Tone.CtrlRandom);\n\t    /**\n\t\t *  The defaults\n\t\t *  @const\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.CtrlRandom.defaults = {\n\t        'min': 0,\n\t        'max': 1,\n\t        'integer': false\n\t    };\n\t    /**\n\t\t *  Return a random value between min and max. \n\t\t *  @readOnly\n\t\t *  @memberOf Tone.CtrlRandom#\n\t\t *  @type {*}\n\t\t *  @name value\n\t\t */\n\t    Object.defineProperty(Tone.CtrlRandom.prototype, 'value', {\n\t        get: function () {\n\t            var min = this.toSeconds(this.min);\n\t            var max = this.toSeconds(this.max);\n\t            var rand = Math.random();\n\t            var val = rand * min + (1 - rand) * max;\n\t            if (this.integer) {\n\t                val = Math.floor(val);\n\t            }\n\t            return val;\n\t        }\n\t    });\n\t    return Tone.CtrlRandom;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  AudioBuffer.copyToChannel polyfill\n\t\t *  @private\n\t\t */\n\t    if (window.AudioBuffer && !AudioBuffer.prototype.copyToChannel) {\n\t        AudioBuffer.prototype.copyToChannel = function (src, chanNum, start) {\n\t            var channel = this.getChannelData(chanNum);\n\t            start = start || 0;\n\t            for (var i = 0; i < channel.length; i++) {\n\t                channel[i + start] = src[i];\n\t            }\n\t        };\n\t        AudioBuffer.prototype.copyFromChannel = function (dest, chanNum, start) {\n\t            var channel = this.getChannelData(chanNum);\n\t            start = start || 0;\n\t            for (var i = 0; i < dest.length; i++) {\n\t                dest[i] = channel[i + start];\n\t            }\n\t        };\n\t    }\n\t    /**\n\t\t *  @class  Buffer loading and storage. Tone.Buffer is used internally by all \n\t\t *          classes that make requests for audio files such as Tone.Player,\n\t\t *          Tone.Sampler and Tone.Convolver.\n\t\t *          \n\t\t *          Aside from load callbacks from individual buffers, Tone.Buffer \n\t\t *  \t\tprovides events which keep track of the loading progress \n\t\t *  \t\tof _all_ of the buffers. These are Tone.Buffer.on(\"load\" / \"progress\" / \"error\")\n\t\t *\n\t\t *  @constructor \n\t\t *  @extends {Tone}\n\t\t *  @param {AudioBuffer|String} url The url to load, or the audio buffer to set. \n\t\t *  @param {Function=} onload A callback which is invoked after the buffer is loaded. \n\t\t *                            It's recommended to use `Tone.Buffer.on('load', callback)` instead \n\t\t *                            since it will give you a callback when _all_ buffers are loaded.\n\t\t *  @param {Function=} onerror The callback to invoke if there is an error\n\t\t *  @example\n\t\t * var buffer = new Tone.Buffer(\"path/to/sound.mp3\", function(){\n\t\t * \t//the buffer is now available.\n\t\t * \tvar buff = buffer.get();\n\t\t * });\n\t\t *  @example\n\t\t * //can load provide fallback extension types if the first type is not supported.\n\t\t * var buffer = new Tone.Buffer(\"path/to/sound.[mp3|ogg|wav]\");\n\t\t */\n\t    Tone.Buffer = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'url',\n\t            'onload',\n\t            'onerror'\n\t        ], Tone.Buffer);\n\t        Tone.call(this);\n\t        /**\n\t\t\t *  stores the loaded AudioBuffer\n\t\t\t *  @type {AudioBuffer}\n\t\t\t *  @private\n\t\t\t */\n\t        this._buffer = null;\n\t        /**\n\t\t\t *  indicates if the buffer should be reversed or not\n\t\t\t *  @type {Boolean}\n\t\t\t *  @private\n\t\t\t */\n\t        this._reversed = options.reverse;\n\t        /**\n\t\t\t *  The XHR\n\t\t\t *  @type  {XMLHttpRequest}\n\t\t\t *  @private\n\t\t\t */\n\t        this._xhr = null;\n\t        if (options.url instanceof AudioBuffer || options.url instanceof Tone.Buffer) {\n\t            this.set(options.url);\n\t            // invoke the onload callback\n\t            if (options.onload) {\n\t                options.onload(this);\n\t            }\n\t        } else if (Tone.isString(options.url)) {\n\t            this.load(options.url, options.onload, options.onerror);\n\t        }\n\t    };\n\t    Tone.extend(Tone.Buffer);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Buffer.defaults = {\n\t        'url': undefined,\n\t        'reverse': false\n\t    };\n\t    /**\n\t\t *  Pass in an AudioBuffer or Tone.Buffer to set the value\n\t\t *  of this buffer.\n\t\t *  @param {AudioBuffer|Tone.Buffer} buffer the buffer\n\t\t *  @returns {Tone.Buffer} this\n\t\t */\n\t    Tone.Buffer.prototype.set = function (buffer) {\n\t        if (buffer instanceof Tone.Buffer) {\n\t            this._buffer = buffer.get();\n\t        } else {\n\t            this._buffer = buffer;\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  @return {AudioBuffer} The audio buffer stored in the object.\n\t\t */\n\t    Tone.Buffer.prototype.get = function () {\n\t        return this._buffer;\n\t    };\n\t    /**\n\t\t *  Makes an xhr reqest for the selected url then decodes\n\t\t *  the file as an audio buffer. Invokes\n\t\t *  the callback once the audio buffer loads.\n\t\t *  @param {String} url The url of the buffer to load.\n\t\t *                      filetype support depends on the\n\t\t *                      browser.\n\t\t *  @returns {Promise} returns a Promise which resolves with the Tone.Buffer\n\t\t */\n\t    Tone.Buffer.prototype.load = function (url, onload, onerror) {\n\t        var promise = new Promise(function (load, error) {\n\t            this._xhr = Tone.Buffer.load(url, //success\n\t            function (buff) {\n\t                this._xhr = null;\n\t                this.set(buff);\n\t                load(this);\n\t                if (onload) {\n\t                    onload(this);\n\t                }\n\t            }.bind(this), //error\n\t            function (err) {\n\t                this._xhr = null;\n\t                error(err);\n\t                if (onerror) {\n\t                    onerror(err);\n\t                }\n\t            }.bind(this));\n\t        }.bind(this));\n\t        return promise;\n\t    };\n\t    /**\n\t\t *  dispose and disconnect\n\t\t *  @returns {Tone.Buffer} this\n\t\t */\n\t    Tone.Buffer.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._buffer = null;\n\t        if (this._xhr) {\n\t            Tone.Buffer._removeFromDownloadQueue(this._xhr);\n\t            this._xhr.abort();\n\t            this._xhr = null;\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t * If the buffer is loaded or not\n\t\t * @memberOf Tone.Buffer#\n\t\t * @type {Boolean}\n\t\t * @name loaded\n\t\t * @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Buffer.prototype, 'loaded', {\n\t        get: function () {\n\t            return this.length > 0;\n\t        }\n\t    });\n\t    /**\n\t\t * The duration of the buffer. \n\t\t * @memberOf Tone.Buffer#\n\t\t * @type {Number}\n\t\t * @name duration\n\t\t * @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Buffer.prototype, 'duration', {\n\t        get: function () {\n\t            if (this._buffer) {\n\t                return this._buffer.duration;\n\t            } else {\n\t                return 0;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The length of the buffer in samples\n\t\t * @memberOf Tone.Buffer#\n\t\t * @type {Number}\n\t\t * @name length\n\t\t * @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Buffer.prototype, 'length', {\n\t        get: function () {\n\t            if (this._buffer) {\n\t                return this._buffer.length;\n\t            } else {\n\t                return 0;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The number of discrete audio channels. Returns 0 if no buffer\n\t\t * is loaded.\n\t\t * @memberOf Tone.Buffer#\n\t\t * @type {Number}\n\t\t * @name numberOfChannels\n\t\t * @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Buffer.prototype, 'numberOfChannels', {\n\t        get: function () {\n\t            if (this._buffer) {\n\t                return this._buffer.numberOfChannels;\n\t            } else {\n\t                return 0;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Set the audio buffer from the array. To create a multichannel AudioBuffer,\n\t\t *  pass in a multidimensional array. \n\t\t *  @param {Float32Array} array The array to fill the audio buffer\n\t\t *  @return {Tone.Buffer} this\n\t\t */\n\t    Tone.Buffer.prototype.fromArray = function (array) {\n\t        var isMultidimensional = array[0].length > 0;\n\t        var channels = isMultidimensional ? array.length : 1;\n\t        var len = isMultidimensional ? array[0].length : array.length;\n\t        var buffer = this.context.createBuffer(channels, len, this.context.sampleRate);\n\t        if (!isMultidimensional && channels === 1) {\n\t            array = [array];\n\t        }\n\t        for (var c = 0; c < channels; c++) {\n\t            buffer.copyToChannel(array[c], c);\n\t        }\n\t        this._buffer = buffer;\n\t        return this;\n\t    };\n\t    /**\n\t\t * \tSums muliple channels into 1 channel\n\t\t *  @param {Number=} channel Optionally only copy a single channel from the array.\n\t\t *  @return {Array}\n\t\t */\n\t    Tone.Buffer.prototype.toMono = function (chanNum) {\n\t        if (Tone.isNumber(chanNum)) {\n\t            this.fromArray(this.toArray(chanNum));\n\t        } else {\n\t            var outputArray = new Float32Array(this.length);\n\t            var numChannels = this.numberOfChannels;\n\t            for (var channel = 0; channel < numChannels; channel++) {\n\t                var channelArray = this.toArray(channel);\n\t                for (var i = 0; i < channelArray.length; i++) {\n\t                    outputArray[i] += channelArray[i];\n\t                }\n\t            }\n\t            //divide by the number of channels\n\t            outputArray = outputArray.map(function (sample) {\n\t                return sample / numChannels;\n\t            });\n\t            this.fromArray(outputArray);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t * \tGet the buffer as an array. Single channel buffers will return a 1-dimensional \n\t\t * \tFloat32Array, and multichannel buffers will return multidimensional arrays.\n\t\t *  @param {Number=} channel Optionally only copy a single channel from the array.\n\t\t *  @return {Array}\n\t\t */\n\t    Tone.Buffer.prototype.toArray = function (channel) {\n\t        if (Tone.isNumber(channel)) {\n\t            return this.getChannelData(channel);\n\t        } else if (this.numberOfChannels === 1) {\n\t            return this.toArray(0);\n\t        } else {\n\t            var ret = [];\n\t            for (var c = 0; c < this.numberOfChannels; c++) {\n\t                ret[c] = this.getChannelData(c);\n\t            }\n\t            return ret;\n\t        }\n\t    };\n\t    /**\n\t\t *  Returns the Float32Array representing the PCM audio data for the specific channel.\n\t\t *  @param  {Number}  channel  The channel number to return\n\t\t *  @return  {Float32Array}  The audio as a TypedArray\n\t\t */\n\t    Tone.Buffer.prototype.getChannelData = function (channel) {\n\t        return this._buffer.getChannelData(channel);\n\t    };\n\t    /**\n\t\t *  Cut a subsection of the array and return a buffer of the\n\t\t *  subsection. Does not modify the original buffer\n\t\t *  @param {Time} start The time to start the slice\n\t\t *  @param {Time=} end The end time to slice. If none is given\n\t\t *                     will default to the end of the buffer\n\t\t *  @return {Tone.Buffer} this\n\t\t */\n\t    Tone.Buffer.prototype.slice = function (start, end) {\n\t        end = Tone.defaultArg(end, this.duration);\n\t        var startSamples = Math.floor(this.context.sampleRate * this.toSeconds(start));\n\t        var endSamples = Math.floor(this.context.sampleRate * this.toSeconds(end));\n\t        var replacement = [];\n\t        for (var i = 0; i < this.numberOfChannels; i++) {\n\t            replacement[i] = this.toArray(i).slice(startSamples, endSamples);\n\t        }\n\t        var retBuffer = new Tone.Buffer().fromArray(replacement);\n\t        return retBuffer;\n\t    };\n\t    /**\n\t\t *  Reverse the buffer.\n\t\t *  @private\n\t\t *  @return {Tone.Buffer} this\n\t\t */\n\t    Tone.Buffer.prototype._reverse = function () {\n\t        if (this.loaded) {\n\t            for (var i = 0; i < this.numberOfChannels; i++) {\n\t                Array.prototype.reverse.call(this.getChannelData(i));\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t * Reverse the buffer.\n\t\t * @memberOf Tone.Buffer#\n\t\t * @type {Boolean}\n\t\t * @name reverse\n\t\t */\n\t    Object.defineProperty(Tone.Buffer.prototype, 'reverse', {\n\t        get: function () {\n\t            return this._reversed;\n\t        },\n\t        set: function (rev) {\n\t            if (this._reversed !== rev) {\n\t                this._reversed = rev;\n\t                this._reverse();\n\t            }\n\t        }\n\t    });\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    // STATIC METHODS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //statically inherits Emitter methods\n\t    Tone.Emitter.mixin(Tone.Buffer);\n\t    /**\n\t\t *  the static queue for all of the xhr requests\n\t\t *  @type {Array}\n\t\t *  @private\n\t\t */\n\t    Tone.Buffer._downloadQueue = [];\n\t    /**\n\t\t *  A path which is prefixed before every url.\n\t\t *  @type  {String}\n\t\t *  @static\n\t\t */\n\t    Tone.Buffer.baseUrl = '';\n\t    /**\n\t\t *  Create a Tone.Buffer from the array. To create a multichannel AudioBuffer,\n\t\t *  pass in a multidimensional array. \n\t\t *  @param {Float32Array} array The array to fill the audio buffer\n\t\t *  @return {Tone.Buffer} A Tone.Buffer created from the array\n\t\t */\n\t    Tone.Buffer.fromArray = function (array) {\n\t        return new Tone.Buffer().fromArray(array);\n\t    };\n\t    /**\n\t\t * Remove an xhr request from the download queue\n\t\t * @private\n\t\t */\n\t    Tone.Buffer._removeFromDownloadQueue = function (request) {\n\t        var index = Tone.Buffer._downloadQueue.indexOf(request);\n\t        if (index !== -1) {\n\t            Tone.Buffer._downloadQueue.splice(index, 1);\n\t        }\n\t    };\n\t    /**\n\t\t *  Loads a url using XMLHttpRequest.\n\t\t *  @param {String} url\n\t\t *  @param {Function} onload\n\t\t *  @param {Function} onerror\n\t\t *  @param {Function} onprogress\n\t\t *  @return {XMLHttpRequest}\n\t\t */\n\t    Tone.Buffer.load = function (url, onload, onerror) {\n\t        //default\n\t        onload = Tone.defaultArg(onload, Tone.noOp);\n\t        // test if the url contains multiple extensions\n\t        var matches = url.match(/\\[(.+\\|?)+\\]$/);\n\t        if (matches) {\n\t            var extensions = matches[1].split('|');\n\t            var extension = extensions[0];\n\t            for (var i = 0; i < extensions.length; i++) {\n\t                if (Tone.Buffer.supportsType(extensions[i])) {\n\t                    extension = extensions[i];\n\t                    break;\n\t                }\n\t            }\n\t            url = url.replace(matches[0], extension);\n\t        }\n\t        function onError(e) {\n\t            Tone.Buffer._removeFromDownloadQueue(request);\n\t            Tone.Buffer.emit('error', e);\n\t            if (onerror) {\n\t                onerror(e);\n\t            } else {\n\t                throw e;\n\t            }\n\t        }\n\t        function onProgress() {\n\t            //calculate the progress\n\t            var totalProgress = 0;\n\t            for (var i = 0; i < Tone.Buffer._downloadQueue.length; i++) {\n\t                totalProgress += Tone.Buffer._downloadQueue[i].progress;\n\t            }\n\t            Tone.Buffer.emit('progress', totalProgress / Tone.Buffer._downloadQueue.length);\n\t        }\n\t        var request = new XMLHttpRequest();\n\t        request.open('GET', Tone.Buffer.baseUrl + url, true);\n\t        request.responseType = 'arraybuffer';\n\t        //start out as 0\n\t        request.progress = 0;\n\t        Tone.Buffer._downloadQueue.push(request);\n\t        request.addEventListener('load', function () {\n\t            if (request.status === 200) {\n\t                Tone.context.decodeAudioData(request.response, function (buff) {\n\t                    request.progress = 1;\n\t                    onProgress();\n\t                    onload(buff);\n\t                    Tone.Buffer._removeFromDownloadQueue(request);\n\t                    if (Tone.Buffer._downloadQueue.length === 0) {\n\t                        //emit the event at the end\n\t                        Tone.Buffer.emit('load');\n\t                    }\n\t                }, function () {\n\t                    Tone.Buffer._removeFromDownloadQueue(request);\n\t                    onError('Tone.Buffer: could not decode audio data: ' + url);\n\t                });\n\t            } else {\n\t                onError('Tone.Buffer: could not locate file: ' + url);\n\t            }\n\t        });\n\t        request.addEventListener('error', onError);\n\t        request.addEventListener('progress', function (event) {\n\t            if (event.lengthComputable) {\n\t                //only go to 95%, the last 5% is when the audio is decoded\n\t                request.progress = event.loaded / event.total * 0.95;\n\t                onProgress();\n\t            }\n\t        });\n\t        request.send();\n\t        return request;\n\t    };\n\t    /**\n\t\t *  Stop all of the downloads in progress\n\t\t *  @return {Tone.Buffer}\n\t\t *  @static\n\t\t */\n\t    Tone.Buffer.cancelDownloads = function () {\n\t        Tone.Buffer._downloadQueue.slice().forEach(function (request) {\n\t            Tone.Buffer._removeFromDownloadQueue(request);\n\t            request.abort();\n\t        });\n\t        return Tone.Buffer;\n\t    };\n\t    /**\n\t\t *  Checks a url's extension to see if the current browser can play that file type.\n\t\t *  @param {String} url The url/extension to test\n\t\t *  @return {Boolean} If the file extension can be played\n\t\t *  @static\n\t\t *  @example\n\t\t * Tone.Buffer.supportsType(\"wav\"); //returns true\n\t\t * Tone.Buffer.supportsType(\"path/to/file.wav\"); //returns true\n\t\t */\n\t    Tone.Buffer.supportsType = function (url) {\n\t        var extension = url.split('.');\n\t        extension = extension[extension.length - 1];\n\t        var response = document.createElement('audio').canPlayType('audio/' + extension);\n\t        return response !== '';\n\t    };\n\t    /**\n\t\t *  Returns a Promise which resolves when all of the buffers have loaded\n\t\t *  @return {Promise}\n\t\t */\n\t    Tone.loaded = function () {\n\t        var onload, onerror;\n\t        function removeEvents() {\n\t            //remove the events when it's resolved\n\t            Tone.Buffer.off('load', onload);\n\t            Tone.Buffer.off('error', onerror);\n\t        }\n\t        return new Promise(function (success, fail) {\n\t            onload = function () {\n\t                success();\n\t            };\n\t            onerror = function () {\n\t                fail();\n\t            };\n\t            //add the event listeners\n\t            Tone.Buffer.on('load', onload);\n\t            Tone.Buffer.on('error', onerror);\n\t        }).then(removeEvents).catch(function (e) {\n\t            removeEvents();\n\t            throw new Error(e);\n\t        });\n\t    };\n\t    return Tone.Buffer;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class A data structure for holding multiple buffers.\n\t\t *  \n\t\t *  @param  {Object|Array}    urls      An object literal or array\n\t\t *                                      of urls to load.\n\t\t *  @param  {Function=}  callback  The callback to invoke when\n\t\t *                                 the buffers are loaded. \n\t\t *  @extends {Tone}\n\t\t *  @example\n\t\t * //load a whole bank of piano samples\n\t\t * var pianoSamples = new Tone.Buffers({\n\t\t * \t\"C4\" : \"path/to/C4.mp3\"\n\t\t * \t\"C#4\" : \"path/to/C#4.mp3\"\n\t\t * \t\"D4\" : \"path/to/D4.mp3\"\n\t\t * \t\"D#4\" : \"path/to/D#4.mp3\"\n\t\t * \t...\n\t\t * }, function(){\n\t\t * \t//play one of the samples when they all load\n\t\t * \tplayer.buffer = pianoSamples.get(\"C4\");\n\t\t * \tplayer.start();\n\t\t * });\n\t\t * \t@example\n\t\t * //To pass in additional parameters in the second parameter\n\t\t * var buffers = new Tone.Buffers(urls, {\n\t\t * \t\"onload\" : callback,\n\t\t * \t\"baseUrl\" : \"../path/to/audio/\"\n\t\t * })\n\t\t */\n\t    Tone.Buffers = function (urls) {\n\t        //remove the urls from the options\n\t        var args = Array.prototype.slice.call(arguments);\n\t        args.shift();\n\t        var options = Tone.defaults(args, [\n\t            'onload',\n\t            'baseUrl'\n\t        ], Tone.Buffers);\n\t        Tone.call(this);\n\t        /**\n\t\t\t *  All of the buffers\n\t\t\t *  @type  {Object}\n\t\t\t *  @private\n\t\t\t */\n\t        this._buffers = {};\n\t        /**\n\t\t\t *  A path which is prefixed before every url.\n\t\t\t *  @type  {String}\n\t\t\t */\n\t        this.baseUrl = options.baseUrl;\n\t        this._loadingCount = 0;\n\t        //add each one\n\t        for (var key in urls) {\n\t            this._loadingCount++;\n\t            this.add(key, urls[key], this._bufferLoaded.bind(this, options.onload));\n\t        }\n\t    };\n\t    Tone.extend(Tone.Buffers);\n\t    /**\n\t\t *  Defaults\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.Buffers.defaults = {\n\t        'onload': Tone.noOp,\n\t        'baseUrl': ''\n\t    };\n\t    /**\n\t\t *  True if the buffers object has a buffer by that name.\n\t\t *  @param  {String|Number}  name  The key or index of the \n\t\t *                                 buffer.\n\t\t *  @return  {Boolean}\n\t\t */\n\t    Tone.Buffers.prototype.has = function (name) {\n\t        return this._buffers.hasOwnProperty(name);\n\t    };\n\t    /**\n\t\t *  Get a buffer by name. If an array was loaded, \n\t\t *  then use the array index.\n\t\t *  @param  {String|Number}  name  The key or index of the \n\t\t *                                 buffer.\n\t\t *  @return  {Tone.Buffer}\n\t\t */\n\t    Tone.Buffers.prototype.get = function (name) {\n\t        if (this.has(name)) {\n\t            return this._buffers[name];\n\t        } else {\n\t            throw new Error('Tone.Buffers: no buffer named ' + name);\n\t        }\n\t    };\n\t    /**\n\t\t *  A buffer was loaded. decrement the counter.\n\t\t *  @param  {Function}  callback \n\t\t *  @private\n\t\t */\n\t    Tone.Buffers.prototype._bufferLoaded = function (callback) {\n\t        this._loadingCount--;\n\t        if (this._loadingCount === 0 && callback) {\n\t            callback(this);\n\t        }\n\t    };\n\t    /**\n\t\t * If the buffers are loaded or not\n\t\t * @memberOf Tone.Buffers#\n\t\t * @type {Boolean}\n\t\t * @name loaded\n\t\t * @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Buffers.prototype, 'loaded', {\n\t        get: function () {\n\t            var isLoaded = true;\n\t            for (var buffName in this._buffers) {\n\t                var buff = this.get(buffName);\n\t                isLoaded = isLoaded && buff.loaded;\n\t            }\n\t            return isLoaded;\n\t        }\n\t    });\n\t    /**\n\t\t *  Add a buffer by name and url to the Buffers\n\t\t *  @param  {String}    name      A unique name to give\n\t\t *                                the buffer\n\t\t *  @param  {String|Tone.Buffer|Audiobuffer}  url  Either the url of the bufer, \n\t\t *                                                 or a buffer which will be added\n\t\t *                                                 with the given name.\n\t\t *  @param  {Function=}  callback  The callback to invoke \n\t\t *                                 when the url is loaded.\n\t\t */\n\t    Tone.Buffers.prototype.add = function (name, url, callback) {\n\t        callback = Tone.defaultArg(callback, Tone.noOp);\n\t        if (url instanceof Tone.Buffer) {\n\t            this._buffers[name] = url;\n\t            callback(this);\n\t        } else if (url instanceof AudioBuffer) {\n\t            this._buffers[name] = new Tone.Buffer(url);\n\t            callback(this);\n\t        } else if (Tone.isString(url)) {\n\t            this._buffers[name] = new Tone.Buffer(this.baseUrl + url, callback);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return  {Tone.Buffers} this\n\t\t */\n\t    Tone.Buffers.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        for (var name in this._buffers) {\n\t            this._buffers[name].dispose();\n\t        }\n\t        this._buffers = null;\n\t        return this;\n\t    };\n\t    return Tone.Buffers;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  buses are another way of routing audio\n\t\t *\n\t\t *  augments Tone.prototype to include send and recieve\n\t\t */\n\t    /**\n\t\t  *  All of the routes\n\t\t  *  \n\t\t  *  @type {Object}\n\t\t  *  @static\n\t\t  *  @private\n\t\t  */\n\t    var Buses = {};\n\t    /**\n\t\t *  Send this signal to the channel name. \n\t\t *  @param  {String} channelName A named channel to send the signal to.\n\t\t *  @param  {Decibels} amount The amount of the source to send to the bus. \n\t\t *  @return {GainNode} The gain node which connects this node to the desired channel. \n\t\t *                     Can be used to adjust the levels of the send.\n\t\t *  @example\n\t\t * source.send(\"reverb\", -12);\n\t\t */\n\t    Tone.prototype.send = function (channelName, amount) {\n\t        if (!Buses.hasOwnProperty(channelName)) {\n\t            Buses[channelName] = this.context.createGain();\n\t        }\n\t        amount = Tone.defaultArg(amount, 0);\n\t        var sendKnob = new Tone.Gain(amount, Tone.Type.Decibels);\n\t        this.output.chain(sendKnob, Buses[channelName]);\n\t        return sendKnob;\n\t    };\n\t    /**\n\t\t *  Recieve the input from the desired channelName to the input\n\t\t *\n\t\t *  @param  {String} channelName A named channel to send the signal to.\n\t\t *  @param  {Number=} channelNumber The channel to connect to\n\t\t *  @returns {Tone} this\n\t\t *  @example\n\t\t * reverbEffect.receive(\"reverb\");\n\t\t */\n\t    Tone.prototype.receive = function (channelName, inputNum) {\n\t        if (!Buses.hasOwnProperty(channelName)) {\n\t            Buses[channelName] = this.context.createGain();\n\t        }\n\t        Buses[channelName].connect(this, 0, inputNum);\n\t        return this;\n\t    };\n\t    //remove all the send/receives when a new audio context is passed in\n\t    Tone.Context.on('init', function (context) {\n\t        if (context.Buses) {\n\t            Buses = context.Buses;\n\t        } else {\n\t            Buses = {};\n\t            context.Buses = Buses;\n\t        }\n\t    });\n\t    return Tone;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Draw is useful for synchronizing visuals and audio events.\n\t\t *         Callbacks from Tone.Transport or any of the Tone.Event classes\n\t\t *         always happen _before_ the scheduled time and are not synchronized\n\t\t *         to the animation frame so they are not good for triggering tightly\n\t\t *         synchronized visuals and sound. Tone.Draw makes it easy to schedule\n\t\t *         callbacks using the AudioContext time and uses requestAnimationFrame.\n\t\t *         \n\t\t *  @singleton\n\t\t *  @extends {Tone}\n\t\t *  @example\n\t\t * Tone.Transport.schedule(function(time){\n\t\t * \t//use the time argument to schedule a callback with Tone.Draw\n\t\t * \tTone.Draw.schedule(function(){\n\t\t * \t\t//do drawing or DOM manipulation here\n\t\t * \t}, time)\n\t\t * }, \"+0.5\")\n\t\t */\n\t    Tone.Draw = function () {\n\t        Tone.call(this);\n\t        /**\n\t\t\t *  All of the events.\n\t\t\t *  @type  {Tone.Timeline}\n\t\t\t *  @private\n\t\t\t */\n\t        this._events = new Tone.Timeline();\n\t        /**\n\t\t\t *  The duration after which events are not invoked.\n\t\t\t *  @type  {Number}\n\t\t\t *  @default 0.25\n\t\t\t */\n\t        this.expiration = 0.25;\n\t        /**\n\t\t\t *  The amount of time before the scheduled time \n\t\t\t *  that the callback can be invoked. Default is\n\t\t\t *  half the time of an animation frame (0.008 seconds).\n\t\t\t *  @type  {Number}\n\t\t\t *  @default 0.008\n\t\t\t */\n\t        this.anticipation = 0.008;\n\t        /**\n\t\t\t *  The draw loop\n\t\t\t *  @type  {Function}\n\t\t\t *  @private\n\t\t\t */\n\t        this._boundDrawLoop = this._drawLoop.bind(this);\n\t    };\n\t    Tone.extend(Tone.Draw);\n\t    /**\n\t\t *  Schedule a function at the given time to be invoked\n\t\t *  on the nearest animation frame.\n\t\t *  @param  {Function}  callback  Callback is invoked at the given time.\n\t\t *  @param  {Time}    time      The time relative to the AudioContext time\n\t\t *                              to invoke the callback.\n\t\t *  @return  {Tone.Draw}    this\n\t\t */\n\t    Tone.Draw.prototype.schedule = function (callback, time) {\n\t        this._events.add({\n\t            callback: callback,\n\t            time: this.toSeconds(time)\n\t        });\n\t        //start the draw loop on the first event\n\t        if (this._events.length === 1) {\n\t            requestAnimationFrame(this._boundDrawLoop);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Cancel events scheduled after the given time\n\t\t *  @param  {Time=}  after  Time after which scheduled events will \n\t\t *                          be removed from the scheduling timeline.\n\t\t *  @return  {Tone.Draw}  this\n\t\t */\n\t    Tone.Draw.prototype.cancel = function (after) {\n\t        this._events.cancel(this.toSeconds(after));\n\t        return this;\n\t    };\n\t    /**\n\t\t *  The draw loop\n\t\t *  @private\n\t\t */\n\t    Tone.Draw.prototype._drawLoop = function () {\n\t        var now = Tone.now();\n\t        while (this._events.length && this._events.peek().time - this.anticipation <= now) {\n\t            var event = this._events.shift();\n\t            if (now - event.time <= this.expiration) {\n\t                event.callback();\n\t            }\n\t        }\n\t        if (this._events.length > 0) {\n\t            requestAnimationFrame(this._boundDrawLoop);\n\t        }\n\t    };\n\t    //make a singleton\n\t    Tone.Draw = new Tone.Draw();\n\t    return Tone.Draw;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Both Tone.Panner3D and Tone.Listener have a position in 3D space \n\t\t *          using a right-handed cartesian coordinate system. \n\t\t *          The units used in the coordinate system are not defined; \n\t\t *          these coordinates are independent/invariant of any particular \n\t\t *          units such as meters or feet. Tone.Panner3D objects have an forward \n\t\t *          vector representing the direction the sound is projecting. Additionally, \n\t\t *          they have a sound cone representing how directional the sound is. \n\t\t *          For example, the sound could be omnidirectional, in which case it would \n\t\t *          be heard anywhere regardless of its forward, or it can be more directional \n\t\t *          and heard only if it is facing the listener. Tone.Listener objects \n\t\t *          (representing a person's ears) have an forward and up vector \n\t\t *          representing in which direction the person is facing. Because both the \n\t\t *          source stream and the listener can be moving, they both have a velocity \n\t\t *          vector representing both the speed and direction of movement. Taken together, \n\t\t *          these two velocities can be used to generate a doppler shift effect which changes the pitch.\n\t\t *          <br><br>\n\t\t *          Note: the position of the Listener will have no effect on nodes not connected to a Tone.Panner3D\n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @singleton\n\t\t */\n\t    Tone.Listener = function () {\n\t        Tone.call(this);\n\t        /**\n\t\t\t *  Holds the current forward orientation\n\t\t\t *  @type  {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._orientation = [\n\t            0,\n\t            0,\n\t            0,\n\t            0,\n\t            0,\n\t            0\n\t        ];\n\t        /**\n\t\t\t *  Holds the current position\n\t\t\t *  @type  {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._position = [\n\t            0,\n\t            0,\n\t            0\n\t        ];\n\t        Tone.getContext(function () {\n\t            // set the default position/forward\n\t            this.set(ListenerConstructor.defaults);\n\t        }.bind(this));\n\t    };\n\t    Tone.extend(Tone.Listener);\n\t    /**\n\t\t *  Defaults according to the specification\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Listener.defaults = {\n\t        'positionX': 0,\n\t        'positionY': 0,\n\t        'positionZ': 0,\n\t        'forwardX': 0,\n\t        'forwardY': 0,\n\t        'forwardZ': 1,\n\t        'upX': 0,\n\t        'upY': 1,\n\t        'upZ': 0\n\t    };\n\t    /**\n\t\t * The ramp time which is applied to the setTargetAtTime\n\t\t * @type {Number}\n\t\t * @private\n\t\t */\n\t    Tone.Listener.prototype._rampTimeConstant = 0.01;\n\t    /**\n\t\t *  Sets the position of the listener in 3d space.\t\n\t\t *  @param  {Number}  x\n\t\t *  @param  {Number}  y\n\t\t *  @param  {Number}  z\n\t\t *  @return {Tone.Listener} this\n\t\t */\n\t    Tone.Listener.prototype.setPosition = function (x, y, z) {\n\t        if (this.context.listener.positionX) {\n\t            var now = this.now();\n\t            this.context.listener.positionX.setTargetAtTime(x, now, this._rampTimeConstant);\n\t            this.context.listener.positionY.setTargetAtTime(y, now, this._rampTimeConstant);\n\t            this.context.listener.positionZ.setTargetAtTime(z, now, this._rampTimeConstant);\n\t        } else {\n\t            this.context.listener.setPosition(x, y, z);\n\t        }\n\t        this._position = Array.prototype.slice.call(arguments);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Sets the orientation of the listener using two vectors, the forward\n\t\t *  vector (which direction the listener is facing) and the up vector \n\t\t *  (which the up direction of the listener). An up vector\n\t\t *  of 0, 0, 1 is equivalent to the listener standing up in the Z direction. \n\t\t *  @param  {Number}  x\n\t\t *  @param  {Number}  y\n\t\t *  @param  {Number}  z\n\t\t *  @param  {Number}  upX\n\t\t *  @param  {Number}  upY\n\t\t *  @param  {Number}  upZ\n\t\t *  @return {Tone.Listener} this\n\t\t */\n\t    Tone.Listener.prototype.setOrientation = function (x, y, z, upX, upY, upZ) {\n\t        if (this.context.listener.forwardX) {\n\t            var now = this.now();\n\t            this.context.listener.forwardX.setTargetAtTime(x, now, this._rampTimeConstant);\n\t            this.context.listener.forwardY.setTargetAtTime(y, now, this._rampTimeConstant);\n\t            this.context.listener.forwardZ.setTargetAtTime(z, now, this._rampTimeConstant);\n\t            this.context.listener.upX.setTargetAtTime(upX, now, this._rampTimeConstant);\n\t            this.context.listener.upY.setTargetAtTime(upY, now, this._rampTimeConstant);\n\t            this.context.listener.upZ.setTargetAtTime(upZ, now, this._rampTimeConstant);\n\t        } else {\n\t            this.context.listener.setOrientation(x, y, z, upX, upY, upZ);\n\t        }\n\t        this._orientation = Array.prototype.slice.call(arguments);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  The x position of the panner object.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Listener#\n\t\t *  @name positionX\n\t\t */\n\t    Object.defineProperty(Tone.Listener.prototype, 'positionX', {\n\t        set: function (pos) {\n\t            this._position[0] = pos;\n\t            this.setPosition.apply(this, this._position);\n\t        },\n\t        get: function () {\n\t            return this._position[0];\n\t        }\n\t    });\n\t    /**\n\t\t *  The y position of the panner object.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Listener#\n\t\t *  @name positionY\n\t\t */\n\t    Object.defineProperty(Tone.Listener.prototype, 'positionY', {\n\t        set: function (pos) {\n\t            this._position[1] = pos;\n\t            this.setPosition.apply(this, this._position);\n\t        },\n\t        get: function () {\n\t            return this._position[1];\n\t        }\n\t    });\n\t    /**\n\t\t *  The z position of the panner object.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Listener#\n\t\t *  @name positionZ\n\t\t */\n\t    Object.defineProperty(Tone.Listener.prototype, 'positionZ', {\n\t        set: function (pos) {\n\t            this._position[2] = pos;\n\t            this.setPosition.apply(this, this._position);\n\t        },\n\t        get: function () {\n\t            return this._position[2];\n\t        }\n\t    });\n\t    /**\n\t\t *  The x coordinate of the listeners front direction. i.e. \n\t\t *  which way they are facing.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Listener#\n\t\t *  @name forwardX\n\t\t */\n\t    Object.defineProperty(Tone.Listener.prototype, 'forwardX', {\n\t        set: function (pos) {\n\t            this._orientation[0] = pos;\n\t            this.setOrientation.apply(this, this._orientation);\n\t        },\n\t        get: function () {\n\t            return this._orientation[0];\n\t        }\n\t    });\n\t    /**\n\t\t *  The y coordinate of the listeners front direction. i.e. \n\t\t *  which way they are facing.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Listener#\n\t\t *  @name forwardY\n\t\t */\n\t    Object.defineProperty(Tone.Listener.prototype, 'forwardY', {\n\t        set: function (pos) {\n\t            this._orientation[1] = pos;\n\t            this.setOrientation.apply(this, this._orientation);\n\t        },\n\t        get: function () {\n\t            return this._orientation[1];\n\t        }\n\t    });\n\t    /**\n\t\t *  The z coordinate of the listeners front direction. i.e. \n\t\t *  which way they are facing.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Listener#\n\t\t *  @name forwardZ\n\t\t */\n\t    Object.defineProperty(Tone.Listener.prototype, 'forwardZ', {\n\t        set: function (pos) {\n\t            this._orientation[2] = pos;\n\t            this.setOrientation.apply(this, this._orientation);\n\t        },\n\t        get: function () {\n\t            return this._orientation[2];\n\t        }\n\t    });\n\t    /**\n\t\t *  The x coordinate of the listener's up direction. i.e.\n\t\t *  the direction the listener is standing in.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Listener#\n\t\t *  @name upX\n\t\t */\n\t    Object.defineProperty(Tone.Listener.prototype, 'upX', {\n\t        set: function (pos) {\n\t            this._orientation[3] = pos;\n\t            this.setOrientation.apply(this, this._orientation);\n\t        },\n\t        get: function () {\n\t            return this._orientation[3];\n\t        }\n\t    });\n\t    /**\n\t\t *  The y coordinate of the listener's up direction. i.e.\n\t\t *  the direction the listener is standing in.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Listener#\n\t\t *  @name upY\n\t\t */\n\t    Object.defineProperty(Tone.Listener.prototype, 'upY', {\n\t        set: function (pos) {\n\t            this._orientation[4] = pos;\n\t            this.setOrientation.apply(this, this._orientation);\n\t        },\n\t        get: function () {\n\t            return this._orientation[4];\n\t        }\n\t    });\n\t    /**\n\t\t *  The z coordinate of the listener's up direction. i.e.\n\t\t *  the direction the listener is standing in.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Listener#\n\t\t *  @name upZ\n\t\t */\n\t    Object.defineProperty(Tone.Listener.prototype, 'upZ', {\n\t        set: function (pos) {\n\t            this._orientation[5] = pos;\n\t            this.setOrientation.apply(this, this._orientation);\n\t        },\n\t        get: function () {\n\t            return this._orientation[5];\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Listener} this\n\t\t */\n\t    Tone.Listener.prototype.dispose = function () {\n\t        this._orientation = null;\n\t        this._position = null;\n\t        return this;\n\t    };\n\t    //SINGLETON SETUP\n\t    var ListenerConstructor = Tone.Listener;\n\t    Tone.Listener = new ListenerConstructor();\n\t    Tone.Context.on('init', function (context) {\n\t        if (context.Listener instanceof ListenerConstructor) {\n\t            //a single listener object\n\t            Tone.Listener = context.Listener;\n\t        } else {\n\t            //make new Listener insides\n\t            Tone.Listener = new ListenerConstructor();\n\t        }\n\t        context.Listener = Tone.Listener;\n\t    });\n\t    //END SINGLETON SETUP\n\t    return Tone.Listener;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  shim\n\t\t *  @private\n\t\t */\n\t    if (!window.hasOwnProperty('OfflineAudioContext') && window.hasOwnProperty('webkitOfflineAudioContext')) {\n\t        window.OfflineAudioContext = window.webkitOfflineAudioContext;\n\t    }\n\t    /**\n\t\t *  @class Wrapper around the OfflineAudioContext\n\t\t *  @extends {Tone.Context}\n\t\t *  @param  {Number}  channels  The number of channels to render\n\t\t *  @param  {Number}  duration  The duration to render in samples\n\t\t *  @param {Number} sampleRate the sample rate to render at\n\t\t */\n\t    Tone.OfflineContext = function (channels, duration, sampleRate) {\n\t        /**\n\t\t\t *  The offline context\n\t\t\t *  @private\n\t\t\t *  @type  {OfflineAudioContext}\n\t\t\t */\n\t        var offlineContext = new OfflineAudioContext(channels, duration * sampleRate, sampleRate);\n\t        //wrap the methods/members\n\t        Tone.Context.call(this, {\n\t            'context': offlineContext,\n\t            'clockSource': 'offline',\n\t            'lookAhead': 0,\n\t            'updateInterval': 128 / sampleRate\n\t        });\n\t        /**\n\t\t\t *  A private reference to the duration\n\t\t\t *  @private\n\t\t\t *  @type  {Number}\n\t\t\t */\n\t        this._duration = duration;\n\t        /**\n\t\t\t *  An artificial clock source\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._currentTime = 0;\n\t    };\n\t    Tone.extend(Tone.OfflineContext, Tone.Context);\n\t    /**\n\t\t *  Override the now method to point to the internal clock time\n\t\t *  @return  {Number}\n\t\t */\n\t    Tone.OfflineContext.prototype.now = function () {\n\t        return this._currentTime;\n\t    };\n\t    /**\n\t\t *  Render the output of the OfflineContext\n\t\t *  @return  {Promise}\n\t\t */\n\t    Tone.OfflineContext.prototype.render = function () {\n\t        while (this._duration - this._currentTime >= 0) {\n\t            //invoke all the callbacks on that time\n\t            this.emit('tick');\n\t            //increment the clock\n\t            this._currentTime += this.blockTime;\n\t        }\n\t        //promise returned is not yet implemented in all browsers\n\t        return new Promise(function (done) {\n\t            this._context.oncomplete = function (e) {\n\t                done(e.renderedBuffer);\n\t            };\n\t            this._context.startRendering();\n\t        }.bind(this));\n\t    };\n\t    /**\n\t\t *  Close the context\n\t\t *  @return  {Number}\n\t\t */\n\t    Tone.OfflineContext.prototype.close = function () {\n\t        this._context = null;\n\t    };\n\t    return Tone.OfflineContext;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  Generate a buffer by rendering all of the Tone.js code within the callback using the OfflineAudioContext. \n\t\t *  The OfflineAudioContext is capable of rendering much faster than real time in many cases. \n\t\t *  The callback function also passes in an offline instance of Tone.Transport which can be used\n\t\t *  to schedule events along the Transport. \n\t\t *  @param  {Function}  callback  All Tone.js nodes which are created and scheduled within this callback are recorded into the output Buffer.\n\t\t *  @param  {Time}  duration     the amount of time to record for.\n\t\t *  @return  {Promise}  The promise which is invoked with the Tone.Buffer of the recorded output.\n\t\t *  @example\n\t\t * //render 2 seconds of the oscillator\n\t\t * Tone.Offline(function(){\n\t\t * \t//only nodes created in this callback will be recorded\n\t\t * \tvar oscillator = new Tone.Oscillator().toMaster().start(0)\n\t\t * \t//schedule their events\n\t\t * }, 2).then(function(buffer){\n\t\t * \t//do something with the output buffer\n\t\t * })\n\t\t * @example\n\t\t * //can also schedule events along the Transport\n\t\t * //using the passed in Offline Transport\n\t\t * Tone.Offline(function(Transport){\n\t\t * \tvar osc = new Tone.Oscillator().toMaster()\n\t\t * \tTransport.schedule(function(time){\n\t\t * \t\tosc.start(time).stop(time + 0.1)\n\t\t * \t}, 1)\n\t\t * \tTransport.start(0.2)\n\t\t * }, 4).then(function(buffer){\n\t\t * \t//do something with the output buffer\n\t\t * })\n\t\t */\n\t    Tone.Offline = function (callback, duration) {\n\t        //set the OfflineAudioContext\n\t        var sampleRate = Tone.context.sampleRate;\n\t        var originalContext = Tone.context;\n\t        var context = new Tone.OfflineContext(2, duration, sampleRate);\n\t        Tone.context = context;\n\t        //invoke the callback/scheduling\n\t        callback(Tone.Transport);\n\t        //process the audio\n\t        var rendered = context.render();\n\t        //return the original AudioContext\n\t        Tone.context = originalContext;\n\t        //return the audio\n\t        return rendered.then(function (buffer) {\n\t            //wrap it in a Tone.Buffer\n\t            return new Tone.Buffer(buffer);\n\t        });\n\t    };\n\t    return Tone.Offline;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t * \t@class  Tone.Effect is the base class for effects. Connect the effect between\n\t\t * \t        the effectSend and effectReturn GainNodes, then control the amount of\n\t\t * \t        effect which goes to the output using the wet control.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @param {NormalRange|Object} [wet] The starting wet value.\n\t\t */\n\t    Tone.Effect = function () {\n\t        var options = Tone.defaults(arguments, ['wet'], Tone.Effect);\n\t        Tone.AudioNode.call(this);\n\t        this.createInsOuts(1, 1);\n\t        /**\n\t\t\t *  the drywet knob to control the amount of effect\n\t\t\t *  @type {Tone.CrossFade}\n\t\t\t *  @private\n\t\t\t */\n\t        this._dryWet = new Tone.CrossFade(options.wet);\n\t        /**\n\t\t\t *  The wet control is how much of the effected\n\t\t\t *  will pass through to the output. 1 = 100% effected\n\t\t\t *  signal, 0 = 100% dry signal.\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.wet = this._dryWet.fade;\n\t        /**\n\t\t\t *  connect the effectSend to the input of hte effect\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this.effectSend = new Tone.Gain();\n\t        /**\n\t\t\t *  connect the output of the effect to the effectReturn\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this.effectReturn = new Tone.Gain();\n\t        //connections\n\t        this.input.connect(this._dryWet.a);\n\t        this.input.connect(this.effectSend);\n\t        this.effectReturn.connect(this._dryWet.b);\n\t        this._dryWet.connect(this.output);\n\t        this._readOnly(['wet']);\n\t    };\n\t    Tone.extend(Tone.Effect, Tone.AudioNode);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Effect.defaults = { 'wet': 1 };\n\t    /**\n\t\t *  chains the effect in between the effectSend and effectReturn\n\t\t *  @param  {Tone} effect\n\t\t *  @private\n\t\t *  @returns {Tone.Effect} this\n\t\t */\n\t    Tone.Effect.prototype.connectEffect = function (effect) {\n\t        this.effectSend.chain(effect, this.effectReturn);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Effect} this\n\t\t */\n\t    Tone.Effect.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._dryWet.dispose();\n\t        this._dryWet = null;\n\t        this.effectSend.dispose();\n\t        this.effectSend = null;\n\t        this.effectReturn.dispose();\n\t        this.effectReturn = null;\n\t        this._writable(['wet']);\n\t        this.wet = null;\n\t        return this;\n\t    };\n\t    return Tone.Effect;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.AutoFilter is a Tone.Filter with a Tone.LFO connected to the filter cutoff frequency.\n\t\t *         Setting the LFO rate and depth allows for control over the filter modulation rate \n\t\t *         and depth.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Effect}\n\t\t *  @param {Time|Object} [frequency] The rate of the LFO.\n\t\t *  @param {Frequency=} baseFrequency The lower value of the LFOs oscillation\n\t \t *  @param {Frequency=} octaves The number of octaves above the baseFrequency\n\t\t *  @example\n\t\t * //create an autofilter and start it's LFO\n\t\t * var autoFilter = new Tone.AutoFilter(\"4n\").toMaster().start();\n\t\t * //route an oscillator through the filter and start it\n\t\t * var oscillator = new Tone.Oscillator().connect(autoFilter).start();\n\t\t */\n\t    Tone.AutoFilter = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'frequency',\n\t            'baseFrequency',\n\t            'octaves'\n\t        ], Tone.AutoFilter);\n\t        Tone.Effect.call(this, options);\n\t        /**\n\t\t\t *  the lfo which drives the filter cutoff\n\t\t\t *  @type {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfo = new Tone.LFO({\n\t            'frequency': options.frequency,\n\t            'amplitude': options.depth\n\t        });\n\t        /**\n\t\t\t * The range of the filter modulating between the min and max frequency. \n\t\t\t * 0 = no modulation. 1 = full modulation.\n\t\t\t * @type {NormalRange}\n\t\t\t * @signal\n\t\t\t */\n\t        this.depth = this._lfo.amplitude;\n\t        /**\n\t\t\t * How fast the filter modulates between min and max. \n\t\t\t * @type {Frequency}\n\t\t\t * @signal\n\t\t\t */\n\t        this.frequency = this._lfo.frequency;\n\t        /**\n\t\t\t *  The filter node\n\t\t\t *  @type {Tone.Filter}\n\t\t\t */\n\t        this.filter = new Tone.Filter(options.filter);\n\t        /**\n\t\t\t *  The octaves placeholder\n\t\t\t *  @type {Positive}\n\t\t\t *  @private\n\t\t\t */\n\t        this._octaves = 0;\n\t        //connections\n\t        this.connectEffect(this.filter);\n\t        this._lfo.connect(this.filter.frequency);\n\t        this.type = options.type;\n\t        this._readOnly([\n\t            'frequency',\n\t            'depth'\n\t        ]);\n\t        this.octaves = options.octaves;\n\t        this.baseFrequency = options.baseFrequency;\n\t    };\n\t    //extend Effect\n\t    Tone.extend(Tone.AutoFilter, Tone.Effect);\n\t    /**\n\t\t *  defaults\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.AutoFilter.defaults = {\n\t        'frequency': 1,\n\t        'type': 'sine',\n\t        'depth': 1,\n\t        'baseFrequency': 200,\n\t        'octaves': 2.6,\n\t        'filter': {\n\t            'type': 'lowpass',\n\t            'rolloff': -12,\n\t            'Q': 1\n\t        }\n\t    };\n\t    /**\n\t\t * Start the effect.\n\t\t * @param {Time} [time=now] When the LFO will start. \n\t\t * @returns {Tone.AutoFilter} this\n\t\t */\n\t    Tone.AutoFilter.prototype.start = function (time) {\n\t        this._lfo.start(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Stop the effect.\n\t\t * @param {Time} [time=now] When the LFO will stop. \n\t\t * @returns {Tone.AutoFilter} this\n\t\t */\n\t    Tone.AutoFilter.prototype.stop = function (time) {\n\t        this._lfo.stop(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Sync the filter to the transport.\n\t\t * @param {Time} [delay=0] Delay time before starting the effect after the\n\t\t *                               Transport has started. \n\t\t * @returns {Tone.AutoFilter} this\n\t\t */\n\t    Tone.AutoFilter.prototype.sync = function (delay) {\n\t        this._lfo.sync(delay);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Unsync the filter from the transport.\n\t\t * @returns {Tone.AutoFilter} this\n\t\t */\n\t    Tone.AutoFilter.prototype.unsync = function () {\n\t        this._lfo.unsync();\n\t        return this;\n\t    };\n\t    /**\n\t\t * Type of oscillator attached to the AutoFilter. \n\t\t * Possible values: \"sine\", \"square\", \"triangle\", \"sawtooth\".\n\t\t * @memberOf Tone.AutoFilter#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.AutoFilter.prototype, 'type', {\n\t        get: function () {\n\t            return this._lfo.type;\n\t        },\n\t        set: function (type) {\n\t            this._lfo.type = type;\n\t        }\n\t    });\n\t    /**\n\t\t * The minimum value of the filter's cutoff frequency.\n\t\t * @memberOf Tone.AutoFilter#\n\t\t * @type {Frequency}\n\t\t * @name min\n\t\t */\n\t    Object.defineProperty(Tone.AutoFilter.prototype, 'baseFrequency', {\n\t        get: function () {\n\t            return this._lfo.min;\n\t        },\n\t        set: function (freq) {\n\t            this._lfo.min = this.toFrequency(freq);\n\t            //and set the max\n\t            this.octaves = this._octaves;\n\t        }\n\t    });\n\t    /**\n\t\t * The maximum value of the filter's cutoff frequency. \n\t\t * @memberOf Tone.AutoFilter#\n\t\t * @type {Positive}\n\t\t * @name octaves\n\t\t */\n\t    Object.defineProperty(Tone.AutoFilter.prototype, 'octaves', {\n\t        get: function () {\n\t            return this._octaves;\n\t        },\n\t        set: function (oct) {\n\t            this._octaves = oct;\n\t            this._lfo.max = this.baseFrequency * Math.pow(2, oct);\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.AutoFilter} this\n\t\t */\n\t    Tone.AutoFilter.prototype.dispose = function () {\n\t        Tone.Effect.prototype.dispose.call(this);\n\t        this._lfo.dispose();\n\t        this._lfo = null;\n\t        this.filter.dispose();\n\t        this.filter = null;\n\t        this._writable([\n\t            'frequency',\n\t            'depth'\n\t        ]);\n\t        this.frequency = null;\n\t        this.depth = null;\n\t        return this;\n\t    };\n\t    return Tone.AutoFilter;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.AutoPanner is a Tone.Panner with an LFO connected to the pan amount. \n\t\t *         More on using autopanners [here](https://www.ableton.com/en/blog/autopan-chopper-effect-and-more-liveschool/).\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Effect}\n\t\t *  @param {Frequency|Object} [frequency] Rate of left-right oscillation. \n\t\t *  @example\n\t\t * //create an autopanner and start it's LFO\n\t\t * var autoPanner = new Tone.AutoPanner(\"4n\").toMaster().start();\n\t\t * //route an oscillator through the panner and start it\n\t\t * var oscillator = new Tone.Oscillator().connect(autoPanner).start();\n\t\t */\n\t    Tone.AutoPanner = function () {\n\t        var options = Tone.defaults(arguments, ['frequency'], Tone.AutoPanner);\n\t        Tone.Effect.call(this, options);\n\t        /**\n\t\t\t *  the lfo which drives the panning\n\t\t\t *  @type {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfo = new Tone.LFO({\n\t            'frequency': options.frequency,\n\t            'amplitude': options.depth,\n\t            'min': -1,\n\t            'max': 1\n\t        });\n\t        /**\n\t\t\t * The amount of panning between left and right. \n\t\t\t * 0 = always center. 1 = full range between left and right. \n\t\t\t * @type {NormalRange}\n\t\t\t * @signal\n\t\t\t */\n\t        this.depth = this._lfo.amplitude;\n\t        /**\n\t\t\t *  the panner node which does the panning\n\t\t\t *  @type {Tone.Panner}\n\t\t\t *  @private\n\t\t\t */\n\t        this._panner = new Tone.Panner();\n\t        /**\n\t\t\t * How fast the panner modulates between left and right. \n\t\t\t * @type {Frequency}\n\t\t\t * @signal\n\t\t\t */\n\t        this.frequency = this._lfo.frequency;\n\t        //connections\n\t        this.connectEffect(this._panner);\n\t        this._lfo.connect(this._panner.pan);\n\t        this.type = options.type;\n\t        this._readOnly([\n\t            'depth',\n\t            'frequency'\n\t        ]);\n\t    };\n\t    //extend Effect\n\t    Tone.extend(Tone.AutoPanner, Tone.Effect);\n\t    /**\n\t\t *  defaults\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.AutoPanner.defaults = {\n\t        'frequency': 1,\n\t        'type': 'sine',\n\t        'depth': 1\n\t    };\n\t    /**\n\t\t * Start the effect.\n\t\t * @param {Time} [time=now] When the LFO will start. \n\t\t * @returns {Tone.AutoPanner} this\n\t\t */\n\t    Tone.AutoPanner.prototype.start = function (time) {\n\t        this._lfo.start(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Stop the effect.\n\t\t * @param {Time} [time=now] When the LFO will stop. \n\t\t * @returns {Tone.AutoPanner} this\n\t\t */\n\t    Tone.AutoPanner.prototype.stop = function (time) {\n\t        this._lfo.stop(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Sync the panner to the transport.\n\t\t * @param {Time} [delay=0] Delay time before starting the effect after the\n\t\t *                               Transport has started. \n\t\t * @returns {Tone.AutoPanner} this\n\t\t */\n\t    Tone.AutoPanner.prototype.sync = function (delay) {\n\t        this._lfo.sync(delay);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Unsync the panner from the transport\n\t\t * @returns {Tone.AutoPanner} this\n\t\t */\n\t    Tone.AutoPanner.prototype.unsync = function () {\n\t        this._lfo.unsync();\n\t        return this;\n\t    };\n\t    /**\n\t\t * Type of oscillator attached to the AutoFilter. \n\t\t * Possible values: \"sine\", \"square\", \"triangle\", \"sawtooth\".\n\t\t * @memberOf Tone.AutoFilter#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.AutoPanner.prototype, 'type', {\n\t        get: function () {\n\t            return this._lfo.type;\n\t        },\n\t        set: function (type) {\n\t            this._lfo.type = type;\n\t        }\n\t    });\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.AutoPanner} this\n\t\t */\n\t    Tone.AutoPanner.prototype.dispose = function () {\n\t        Tone.Effect.prototype.dispose.call(this);\n\t        this._lfo.dispose();\n\t        this._lfo = null;\n\t        this._panner.dispose();\n\t        this._panner = null;\n\t        this._writable([\n\t            'depth',\n\t            'frequency'\n\t        ]);\n\t        this.frequency = null;\n\t        this.depth = null;\n\t        return this;\n\t    };\n\t    return Tone.AutoPanner;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.AutoWah connects a Tone.Follower to a bandpass filter (Tone.Filter).\n\t\t *          The frequency of the filter is adjusted proportionally to the \n\t\t *          incoming signal's amplitude. Inspiration from [Tuna.js](https://github.com/Dinahmoe/tuna).\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Effect}\n\t\t *  @param {Frequency|Object} [baseFrequency] The frequency the filter is set \n\t\t *                                            to at the low point of the wah\n\t\t *  @param {Positive} [octaves] The number of octaves above the baseFrequency\n\t\t *                                the filter will sweep to when fully open\n\t\t *  @param {Decibels} [sensitivity] The decibel threshold sensitivity for \n\t\t *                                   the incoming signal. Normal range of -40 to 0. \n\t\t *  @example\n\t\t * var autoWah = new Tone.AutoWah(50, 6, -30).toMaster();\n\t\t * //initialize the synth and connect to autowah\n\t\t * var synth = new Synth.connect(autoWah);\n\t\t * //Q value influences the effect of the wah - default is 2\n\t\t * autoWah.Q.value = 6;\n\t\t * //more audible on higher notes\n\t\t * synth.triggerAttackRelease(\"C4\", \"8n\")\n\t\t */\n\t    Tone.AutoWah = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'baseFrequency',\n\t            'octaves',\n\t            'sensitivity'\n\t        ], Tone.AutoWah);\n\t        Tone.Effect.call(this, options);\n\t        /**\n\t\t\t *  The envelope follower. Set the attack/release\n\t\t\t *  timing to adjust how the envelope is followed. \n\t\t\t *  @type {Tone.Follower}\n\t\t\t *  @private\n\t\t\t */\n\t        this.follower = new Tone.Follower(options.follower);\n\t        /**\n\t\t\t *  scales the follower value to the frequency domain\n\t\t\t *  @type {Tone}\n\t\t\t *  @private\n\t\t\t */\n\t        this._sweepRange = new Tone.ScaleExp(0, 1, 0.5);\n\t        /**\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._baseFrequency = options.baseFrequency;\n\t        /**\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._octaves = options.octaves;\n\t        /**\n\t\t\t *  the input gain to adjust the sensitivity\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._inputBoost = new Tone.Gain();\n\t        /**\n\t\t\t *  @type {BiquadFilterNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._bandpass = new Tone.Filter({\n\t            'rolloff': -48,\n\t            'frequency': 0,\n\t            'Q': options.Q\n\t        });\n\t        /**\n\t\t\t *  @type {Tone.Filter}\n\t\t\t *  @private\n\t\t\t */\n\t        this._peaking = new Tone.Filter(0, 'peaking');\n\t        this._peaking.gain.value = options.gain;\n\t        /**\n\t\t\t * The gain of the filter.\n\t\t\t * @type {Number}\n\t\t\t * @signal\n\t\t\t */\n\t        this.gain = this._peaking.gain;\n\t        /**\n\t\t\t * The quality of the filter.\n\t\t\t * @type {Positive}\n\t\t\t * @signal\n\t\t\t */\n\t        this.Q = this._bandpass.Q;\n\t        //the control signal path\n\t        this.effectSend.chain(this._inputBoost, this.follower, this._sweepRange);\n\t        this._sweepRange.connect(this._bandpass.frequency);\n\t        this._sweepRange.connect(this._peaking.frequency);\n\t        //the filtered path\n\t        this.effectSend.chain(this._bandpass, this._peaking, this.effectReturn);\n\t        //set the initial value\n\t        this._setSweepRange();\n\t        this.sensitivity = options.sensitivity;\n\t        this._readOnly([\n\t            'gain',\n\t            'Q'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.AutoWah, Tone.Effect);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.AutoWah.defaults = {\n\t        'baseFrequency': 100,\n\t        'octaves': 6,\n\t        'sensitivity': 0,\n\t        'Q': 2,\n\t        'gain': 2,\n\t        'follower': {\n\t            'attack': 0.3,\n\t            'release': 0.5\n\t        }\n\t    };\n\t    /**\n\t\t * The number of octaves that the filter will sweep above the \n\t\t * baseFrequency. \n\t\t * @memberOf Tone.AutoWah#\n\t\t * @type {Number}\n\t\t * @name octaves\n\t\t */\n\t    Object.defineProperty(Tone.AutoWah.prototype, 'octaves', {\n\t        get: function () {\n\t            return this._octaves;\n\t        },\n\t        set: function (octaves) {\n\t            this._octaves = octaves;\n\t            this._setSweepRange();\n\t        }\n\t    });\n\t    /**\n\t\t * The base frequency from which the sweep will start from.\n\t\t * @memberOf Tone.AutoWah#\n\t\t * @type {Frequency}\n\t\t * @name baseFrequency\n\t\t */\n\t    Object.defineProperty(Tone.AutoWah.prototype, 'baseFrequency', {\n\t        get: function () {\n\t            return this._baseFrequency;\n\t        },\n\t        set: function (baseFreq) {\n\t            this._baseFrequency = baseFreq;\n\t            this._setSweepRange();\n\t        }\n\t    });\n\t    /**\n\t\t * The sensitivity to control how responsive to the input signal the filter is. \n\t\t * @memberOf Tone.AutoWah#\n\t\t * @type {Decibels}\n\t\t * @name sensitivity\n\t\t */\n\t    Object.defineProperty(Tone.AutoWah.prototype, 'sensitivity', {\n\t        get: function () {\n\t            return Tone.gainToDb(1 / this._inputBoost.gain.value);\n\t        },\n\t        set: function (sensitivy) {\n\t            this._inputBoost.gain.value = 1 / Tone.dbToGain(sensitivy);\n\t        }\n\t    });\n\t    /**\n\t\t *  sets the sweep range of the scaler\n\t\t *  @private\n\t\t */\n\t    Tone.AutoWah.prototype._setSweepRange = function () {\n\t        this._sweepRange.min = this._baseFrequency;\n\t        this._sweepRange.max = Math.min(this._baseFrequency * Math.pow(2, this._octaves), this.context.sampleRate / 2);\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.AutoWah} this\n\t\t */\n\t    Tone.AutoWah.prototype.dispose = function () {\n\t        Tone.Effect.prototype.dispose.call(this);\n\t        this.follower.dispose();\n\t        this.follower = null;\n\t        this._sweepRange.dispose();\n\t        this._sweepRange = null;\n\t        this._bandpass.dispose();\n\t        this._bandpass = null;\n\t        this._peaking.dispose();\n\t        this._peaking = null;\n\t        this._inputBoost.dispose();\n\t        this._inputBoost = null;\n\t        this._writable([\n\t            'gain',\n\t            'Q'\n\t        ]);\n\t        this.gain = null;\n\t        this.Q = null;\n\t        return this;\n\t    };\n\t    return Tone.AutoWah;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Bitcrusher downsamples the incoming signal to a different bitdepth. \n\t\t *         Lowering the bitdepth of the signal creates distortion. Read more about Bitcrushing\n\t\t *         on [Wikipedia](https://en.wikipedia.org/wiki/Bitcrusher).\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Effect}\n\t\t *  @param {Number} bits The number of bits to downsample the signal. Nominal range\n\t\t *                       of 1 to 8. \n\t\t *  @example\n\t\t * //initialize crusher and route a synth through it\n\t\t * var crusher = new Tone.BitCrusher(4).toMaster();\n\t\t * var synth = new Tone.MonoSynth().connect(crusher);\n\t\t */\n\t    Tone.BitCrusher = function () {\n\t        var options = Tone.defaults(arguments, ['bits'], Tone.BitCrusher);\n\t        Tone.Effect.call(this, options);\n\t        var invStepSize = 1 / Math.pow(2, options.bits - 1);\n\t        /**\n\t\t\t *  Subtract the input signal and the modulus of the input signal\n\t\t\t *  @type {Tone.Subtract}\n\t\t\t *  @private\n\t\t\t */\n\t        this._subtract = new Tone.Subtract();\n\t        /**\n\t\t\t *  The mod function\n\t\t\t *  @type  {Tone.Modulo}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulo = new Tone.Modulo(invStepSize);\n\t        /**\n\t\t\t *  keeps track of the bits\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._bits = options.bits;\n\t        //connect it up\n\t        this.effectSend.fan(this._subtract, this._modulo);\n\t        this._modulo.connect(this._subtract, 0, 1);\n\t        this._subtract.connect(this.effectReturn);\n\t    };\n\t    Tone.extend(Tone.BitCrusher, Tone.Effect);\n\t    /**\n\t\t *  the default values\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.BitCrusher.defaults = { 'bits': 4 };\n\t    /**\n\t\t * The bit depth of the effect. Nominal range of 1-8. \n\t\t * @memberOf Tone.BitCrusher#\n\t\t * @type {number}\n\t\t * @name bits\n\t\t */\n\t    Object.defineProperty(Tone.BitCrusher.prototype, 'bits', {\n\t        get: function () {\n\t            return this._bits;\n\t        },\n\t        set: function (bits) {\n\t            this._bits = bits;\n\t            var invStepSize = 1 / Math.pow(2, bits - 1);\n\t            this._modulo.value = invStepSize;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.BitCrusher} this\n\t\t */\n\t    Tone.BitCrusher.prototype.dispose = function () {\n\t        Tone.Effect.prototype.dispose.call(this);\n\t        this._subtract.dispose();\n\t        this._subtract = null;\n\t        this._modulo.dispose();\n\t        this._modulo = null;\n\t        return this;\n\t    };\n\t    return Tone.BitCrusher;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.ChebyShev is a Chebyshev waveshaper, an effect which is good \n\t\t *         for making different types of distortion sounds.\n\t\t *         Note that odd orders sound very different from even ones, \n\t\t *         and order = 1 is no change. \n\t\t *         Read more at [music.columbia.edu](http://music.columbia.edu/cmc/musicandcomputers/chapter4/04_06.php).\n\t\t *\n\t\t *  @extends {Tone.Effect}\n\t\t *  @constructor\n\t\t *  @param {Positive|Object} [order] The order of the chebyshev polynomial. Normal range between 1-100. \n\t\t *  @example\n\t\t * //create a new cheby\n\t\t * var cheby = new Tone.Chebyshev(50);\n\t\t * //create a monosynth connected to our cheby\n\t\t * synth = new Tone.MonoSynth().connect(cheby);\n\t\t */\n\t    Tone.Chebyshev = function () {\n\t        var options = Tone.defaults(arguments, ['order'], Tone.Chebyshev);\n\t        Tone.Effect.call(this, options);\n\t        /**\n\t\t\t *  @type {WaveShaperNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._shaper = new Tone.WaveShaper(4096);\n\t        /**\n\t\t\t * holds onto the order of the filter\n\t\t\t * @type {number}\n\t\t\t * @private\n\t\t\t */\n\t        this._order = options.order;\n\t        this.connectEffect(this._shaper);\n\t        this.order = options.order;\n\t        this.oversample = options.oversample;\n\t    };\n\t    Tone.extend(Tone.Chebyshev, Tone.Effect);\n\t    /**\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Chebyshev.defaults = {\n\t        'order': 1,\n\t        'oversample': 'none'\n\t    };\n\t    /**\n\t\t *  get the coefficient for that degree\n\t\t *  @param {number} x the x value\n\t\t *  @param   {number} degree \n\t\t *  @param {Object} memo memoize the computed value. \n\t\t *                       this speeds up computation greatly. \n\t\t *  @return  {number}       the coefficient \n\t\t *  @private\n\t\t */\n\t    Tone.Chebyshev.prototype._getCoefficient = function (x, degree, memo) {\n\t        if (memo.hasOwnProperty(degree)) {\n\t            return memo[degree];\n\t        } else if (degree === 0) {\n\t            memo[degree] = 0;\n\t        } else if (degree === 1) {\n\t            memo[degree] = x;\n\t        } else {\n\t            memo[degree] = 2 * x * this._getCoefficient(x, degree - 1, memo) - this._getCoefficient(x, degree - 2, memo);\n\t        }\n\t        return memo[degree];\n\t    };\n\t    /**\n\t\t * The order of the Chebyshev polynomial which creates\n\t\t * the equation which is applied to the incoming \n\t\t * signal through a Tone.WaveShaper. The equations\n\t\t * are in the form:<br>\n\t\t * order 2: 2x^2 + 1<br>\n\t\t * order 3: 4x^3 + 3x <br>\n\t\t * @memberOf Tone.Chebyshev#\n\t\t * @type {Positive}\n\t\t * @name order\n\t\t */\n\t    Object.defineProperty(Tone.Chebyshev.prototype, 'order', {\n\t        get: function () {\n\t            return this._order;\n\t        },\n\t        set: function (order) {\n\t            this._order = order;\n\t            var curve = new Array(4096);\n\t            var len = curve.length;\n\t            for (var i = 0; i < len; ++i) {\n\t                var x = i * 2 / len - 1;\n\t                if (x === 0) {\n\t                    //should output 0 when input is 0\n\t                    curve[i] = 0;\n\t                } else {\n\t                    curve[i] = this._getCoefficient(x, order, {});\n\t                }\n\t            }\n\t            this._shaper.curve = curve;\n\t        }\n\t    });\n\t    /**\n\t\t * The oversampling of the effect. Can either be \"none\", \"2x\" or \"4x\".\n\t\t * @memberOf Tone.Chebyshev#\n\t\t * @type {string}\n\t\t * @name oversample\n\t\t */\n\t    Object.defineProperty(Tone.Chebyshev.prototype, 'oversample', {\n\t        get: function () {\n\t            return this._shaper.oversample;\n\t        },\n\t        set: function (oversampling) {\n\t            this._shaper.oversample = oversampling;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.Chebyshev} this\n\t\t */\n\t    Tone.Chebyshev.prototype.dispose = function () {\n\t        Tone.Effect.prototype.dispose.call(this);\n\t        this._shaper.dispose();\n\t        this._shaper = null;\n\t        return this;\n\t    };\n\t    return Tone.Chebyshev;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Base class for Stereo effects. Provides effectSendL/R and effectReturnL/R.\n\t\t *\n\t\t *\t@constructor\n\t\t *\t@extends {Tone.Effect}\n\t\t */\n\t    Tone.StereoEffect = function () {\n\t        //get the defaults\n\t        Tone.AudioNode.call(this);\n\t        var options = Tone.defaults(arguments, ['wet'], Tone.Effect);\n\t        this.createInsOuts(1, 1);\n\t        /**\n\t\t\t *  the drywet knob to control the amount of effect\n\t\t\t *  @type {Tone.CrossFade}\n\t\t\t *  @private\n\t\t\t */\n\t        this._dryWet = new Tone.CrossFade(options.wet);\n\t        /**\n\t\t\t *  The wet control, i.e. how much of the effected\n\t\t\t *  will pass through to the output.\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.wet = this._dryWet.fade;\n\t        /**\n\t\t\t *  then split it\n\t\t\t *  @type {Tone.Split}\n\t\t\t *  @private\n\t\t\t */\n\t        this._split = new Tone.Split();\n\t        /**\n\t\t\t *  the effects send LEFT\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this.effectSendL = this._split.left;\n\t        /**\n\t\t\t *  the effects send RIGHT\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this.effectSendR = this._split.right;\n\t        /**\n\t\t\t *  the stereo effect merger\n\t\t\t *  @type {Tone.Merge}\n\t\t\t *  @private\n\t\t\t */\n\t        this._merge = new Tone.Merge();\n\t        /**\n\t\t\t *  the effect return LEFT\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this.effectReturnL = this._merge.left;\n\t        /**\n\t\t\t *  the effect return RIGHT\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this.effectReturnR = this._merge.right;\n\t        //connections\n\t        this.input.connect(this._split);\n\t        //dry wet connections\n\t        this.input.connect(this._dryWet, 0, 0);\n\t        this._merge.connect(this._dryWet, 0, 1);\n\t        this._dryWet.connect(this.output);\n\t        this._readOnly(['wet']);\n\t    };\n\t    Tone.extend(Tone.StereoEffect, Tone.Effect);\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.StereoEffect} this\n\t\t */\n\t    Tone.StereoEffect.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._dryWet.dispose();\n\t        this._dryWet = null;\n\t        this._split.dispose();\n\t        this._split = null;\n\t        this._merge.dispose();\n\t        this._merge = null;\n\t        this.effectSendL = null;\n\t        this.effectSendR = null;\n\t        this.effectReturnL = null;\n\t        this.effectReturnR = null;\n\t        this._writable(['wet']);\n\t        this.wet = null;\n\t        return this;\n\t    };\n\t    return Tone.StereoEffect;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t * \t@class  Tone.FeedbackEffect provides a loop between an \n\t\t * \t        audio source and its own output. This is a base-class\n\t\t * \t        for feedback effects. \n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Effect}\n\t\t *  @param {NormalRange|Object} [feedback] The initial feedback value.\n\t\t */\n\t    Tone.FeedbackEffect = function () {\n\t        var options = Tone.defaults(arguments, ['feedback'], Tone.FeedbackEffect);\n\t        Tone.Effect.call(this, options);\n\t        /**\n\t\t\t *  the gain which controls the feedback\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._feedbackGain = new Tone.Gain(options.feedback, Tone.Type.NormalRange);\n\t        /**\n\t\t\t *  The amount of signal which is fed back into the effect input. \n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.feedback = this._feedbackGain.gain;\n\t        //the feedback loop\n\t        this.effectReturn.chain(this._feedbackGain, this.effectSend);\n\t        this._readOnly(['feedback']);\n\t    };\n\t    Tone.extend(Tone.FeedbackEffect, Tone.Effect);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.FeedbackEffect.defaults = { 'feedback': 0.125 };\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.FeedbackEffect} this\n\t\t */\n\t    Tone.FeedbackEffect.prototype.dispose = function () {\n\t        Tone.Effect.prototype.dispose.call(this);\n\t        this._writable(['feedback']);\n\t        this._feedbackGain.dispose();\n\t        this._feedbackGain = null;\n\t        this.feedback = null;\n\t        return this;\n\t    };\n\t    return Tone.FeedbackEffect;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Just like a stereo feedback effect, but the feedback is routed from left to right\n\t\t *         and right to left instead of on the same channel.\n\t\t *\n\t\t *\t@constructor\n\t\t *\t@extends {Tone.StereoEffect}\n\t\t */\n\t    Tone.StereoXFeedbackEffect = function () {\n\t        var options = Tone.defaults(arguments, ['feedback'], Tone.FeedbackEffect);\n\t        Tone.StereoEffect.call(this, options);\n\t        /**\n\t\t\t *  The amount of feedback from the output\n\t\t\t *  back into the input of the effect (routed\n\t\t\t *  across left and right channels).\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.feedback = new Tone.Signal(options.feedback, Tone.Type.NormalRange);\n\t        /**\n\t\t\t *  the left side feeback\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._feedbackLR = new Tone.Gain();\n\t        /**\n\t\t\t *  the right side feeback\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._feedbackRL = new Tone.Gain();\n\t        //connect it up\n\t        this.effectReturnL.chain(this._feedbackLR, this.effectSendR);\n\t        this.effectReturnR.chain(this._feedbackRL, this.effectSendL);\n\t        this.feedback.fan(this._feedbackLR.gain, this._feedbackRL.gain);\n\t        this._readOnly(['feedback']);\n\t    };\n\t    Tone.extend(Tone.StereoXFeedbackEffect, Tone.StereoEffect);\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.StereoXFeedbackEffect} this\n\t\t */\n\t    Tone.StereoXFeedbackEffect.prototype.dispose = function () {\n\t        Tone.StereoEffect.prototype.dispose.call(this);\n\t        this._writable(['feedback']);\n\t        this.feedback.dispose();\n\t        this.feedback = null;\n\t        this._feedbackLR.dispose();\n\t        this._feedbackLR = null;\n\t        this._feedbackRL.dispose();\n\t        this._feedbackRL = null;\n\t        return this;\n\t    };\n\t    return Tone.StereoXFeedbackEffect;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Chorus is a stereo chorus effect with feedback composed of \n\t\t *         a left and right delay with a Tone.LFO applied to the delayTime of each channel. \n\t\t *         Inspiration from [Tuna.js](https://github.com/Dinahmoe/tuna/blob/master/tuna.js).\n\t\t *         Read more on the chorus effect on [SoundOnSound](http://www.soundonsound.com/sos/jun04/articles/synthsecrets.htm).\n\t\t *\n\t\t *\t@constructor\n\t\t *\t@extends {Tone.StereoXFeedbackEffect}\n\t\t *\t@param {Frequency|Object} [frequency] The frequency of the LFO.\n\t\t *\t@param {Milliseconds} [delayTime] The delay of the chorus effect in ms. \n\t\t *\t@param {NormalRange} [depth] The depth of the chorus.\n\t\t *\t@example\n\t\t * var chorus = new Tone.Chorus(4, 2.5, 0.5);\n\t\t * var synth = new Tone.PolySynth(4, Tone.MonoSynth).connect(chorus);\n\t\t * synth.triggerAttackRelease([\"C3\",\"E3\",\"G3\"], \"8n\");\n\t\t */\n\t    Tone.Chorus = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'frequency',\n\t            'delayTime',\n\t            'depth'\n\t        ], Tone.Chorus);\n\t        Tone.StereoXFeedbackEffect.call(this, options);\n\t        /**\n\t\t\t *  the depth of the chorus\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._depth = options.depth;\n\t        /**\n\t\t\t *  the delayTime\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delayTime = options.delayTime / 1000;\n\t        /**\n\t\t\t *  the lfo which controls the delayTime\n\t\t\t *  @type {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfoL = new Tone.LFO({\n\t            'frequency': options.frequency,\n\t            'min': 0,\n\t            'max': 1\n\t        });\n\t        /**\n\t\t\t *  another LFO for the right side with a 180 degree phase diff\n\t\t\t *  @type {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfoR = new Tone.LFO({\n\t            'frequency': options.frequency,\n\t            'min': 0,\n\t            'max': 1,\n\t            'phase': 180\n\t        });\n\t        /**\n\t\t\t *  delay for left\n\t\t\t *  @type {Tone.Delay}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delayNodeL = new Tone.Delay();\n\t        /**\n\t\t\t *  delay for right\n\t\t\t *  @type {Tone.Delay}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delayNodeR = new Tone.Delay();\n\t        /**\n\t\t\t * The frequency of the LFO which modulates the delayTime. \n\t\t\t * @type {Frequency}\n\t\t\t * @signal\n\t\t\t */\n\t        this.frequency = this._lfoL.frequency;\n\t        //connections\n\t        this.effectSendL.chain(this._delayNodeL, this.effectReturnL);\n\t        this.effectSendR.chain(this._delayNodeR, this.effectReturnR);\n\t        //and pass through to make the detune apparent\n\t        this.effectSendL.connect(this.effectReturnL);\n\t        this.effectSendR.connect(this.effectReturnR);\n\t        //lfo setup\n\t        this._lfoL.connect(this._delayNodeL.delayTime);\n\t        this._lfoR.connect(this._delayNodeR.delayTime);\n\t        //start the lfo\n\t        this._lfoL.start();\n\t        this._lfoR.start();\n\t        //have one LFO frequency control the other\n\t        this._lfoL.frequency.connect(this._lfoR.frequency);\n\t        //set the initial values\n\t        this.depth = this._depth;\n\t        this.frequency.value = options.frequency;\n\t        this.type = options.type;\n\t        this._readOnly(['frequency']);\n\t        this.spread = options.spread;\n\t    };\n\t    Tone.extend(Tone.Chorus, Tone.StereoXFeedbackEffect);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Chorus.defaults = {\n\t        'frequency': 1.5,\n\t        'delayTime': 3.5,\n\t        'depth': 0.7,\n\t        'feedback': 0.1,\n\t        'type': 'sine',\n\t        'spread': 180\n\t    };\n\t    /**\n\t\t * The depth of the effect. A depth of 1 makes the delayTime\n\t\t * modulate between 0 and 2*delayTime (centered around the delayTime). \n\t\t * @memberOf Tone.Chorus#\n\t\t * @type {NormalRange}\n\t\t * @name depth\n\t\t */\n\t    Object.defineProperty(Tone.Chorus.prototype, 'depth', {\n\t        get: function () {\n\t            return this._depth;\n\t        },\n\t        set: function (depth) {\n\t            this._depth = depth;\n\t            var deviation = this._delayTime * depth;\n\t            this._lfoL.min = Math.max(this._delayTime - deviation, 0);\n\t            this._lfoL.max = this._delayTime + deviation;\n\t            this._lfoR.min = Math.max(this._delayTime - deviation, 0);\n\t            this._lfoR.max = this._delayTime + deviation;\n\t        }\n\t    });\n\t    /**\n\t\t * The delayTime in milliseconds of the chorus. A larger delayTime\n\t\t * will give a more pronounced effect. Nominal range a delayTime\n\t\t * is between 2 and 20ms. \n\t\t * @memberOf Tone.Chorus#\n\t\t * @type {Milliseconds}\n\t\t * @name delayTime\n\t\t */\n\t    Object.defineProperty(Tone.Chorus.prototype, 'delayTime', {\n\t        get: function () {\n\t            return this._delayTime * 1000;\n\t        },\n\t        set: function (delayTime) {\n\t            this._delayTime = delayTime / 1000;\n\t            this.depth = this._depth;\n\t        }\n\t    });\n\t    /**\n\t\t * The oscillator type of the LFO. \n\t\t * @memberOf Tone.Chorus#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.Chorus.prototype, 'type', {\n\t        get: function () {\n\t            return this._lfoL.type;\n\t        },\n\t        set: function (type) {\n\t            this._lfoL.type = type;\n\t            this._lfoR.type = type;\n\t        }\n\t    });\n\t    /** \n\t\t * Amount of stereo spread. When set to 0, both LFO's will be panned centrally.\n\t\t * When set to 180, LFO's will be panned hard left and right respectively.\n\t\t * @memberOf Tone.Chorus#\n\t\t * @type {Degrees}\n\t\t * @name spread\n\t\t */\n\t    Object.defineProperty(Tone.Chorus.prototype, 'spread', {\n\t        get: function () {\n\t            return this._lfoR.phase - this._lfoL.phase;\n\t        },\n\t        set: function (spread) {\n\t            this._lfoL.phase = 90 - spread / 2;\n\t            this._lfoR.phase = spread / 2 + 90;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.Chorus} this\n\t\t */\n\t    Tone.Chorus.prototype.dispose = function () {\n\t        Tone.StereoXFeedbackEffect.prototype.dispose.call(this);\n\t        this._lfoL.dispose();\n\t        this._lfoL = null;\n\t        this._lfoR.dispose();\n\t        this._lfoR = null;\n\t        this._delayNodeL.dispose();\n\t        this._delayNodeL = null;\n\t        this._delayNodeR.dispose();\n\t        this._delayNodeR = null;\n\t        this._writable('frequency');\n\t        this.frequency = null;\n\t        return this;\n\t    };\n\t    return Tone.Chorus;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Convolver is a wrapper around the Native Web Audio \n\t\t *          [ConvolverNode](http://webaudio.github.io/web-audio-api/#the-convolvernode-interface).\n\t\t *          Convolution is useful for reverb and filter emulation. Read more about convolution reverb on\n\t\t *          [Wikipedia](https://en.wikipedia.org/wiki/Convolution_reverb).\n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone.Effect}\n\t\t *  @param {string|Tone.Buffer|Object} [url] The URL of the impulse response or the Tone.Buffer\n\t\t *                                           contianing the impulse response. \n\t\t *  @param {Function} onload The callback to invoke when the url is loaded.\n\t\t *  @example\n\t\t * //initializing the convolver with an impulse response\n\t\t * var convolver = new Tone.Convolver(\"./path/to/ir.wav\").toMaster();\n\t\t */\n\t    Tone.Convolver = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'url',\n\t            'onload'\n\t        ], Tone.Convolver);\n\t        Tone.Effect.call(this, options);\n\t        /**\n\t\t\t *  convolver node\n\t\t\t *  @type {ConvolverNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._convolver = this.context.createConvolver();\n\t        /**\n\t\t\t *  the convolution buffer\n\t\t\t *  @type {Tone.Buffer}\n\t\t\t *  @private\n\t\t\t */\n\t        this._buffer = new Tone.Buffer();\n\t        if (Tone.isString(options.url)) {\n\t            this._buffer.load(options.url, function (buffer) {\n\t                this.buffer = buffer;\n\t                options.onload();\n\t            }.bind(this));\n\t        } else if (options.url) {\n\t            this.buffer = options.url;\n\t            options.onload();\n\t        }\n\t        this.connectEffect(this._convolver);\n\t    };\n\t    Tone.extend(Tone.Convolver, Tone.Effect);\n\t    /**\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.Convolver.defaults = { 'onload': Tone.noOp };\n\t    /**\n\t\t *  The convolver's buffer\n\t\t *  @memberOf Tone.Convolver#\n\t\t *  @type {AudioBuffer}\n\t\t *  @name buffer\n\t\t */\n\t    Object.defineProperty(Tone.Convolver.prototype, 'buffer', {\n\t        get: function () {\n\t            return this._buffer.get();\n\t        },\n\t        set: function (buffer) {\n\t            this._buffer.set(buffer);\n\t            this._convolver.buffer = this._buffer.get();\n\t        }\n\t    });\n\t    /**\n\t\t *  Load an impulse response url as an audio buffer.\n\t\t *  Decodes the audio asynchronously and invokes\n\t\t *  the callback once the audio buffer loads.\n\t\t *  @param {string} url The url of the buffer to load.\n\t\t *                      filetype support depends on the\n\t\t *                      browser.\n\t\t *  @param  {function=} callback\n\t\t *  @returns {Promise}\n\t\t */\n\t    Tone.Convolver.prototype.load = function (url, callback) {\n\t        return this._buffer.load(url, function (buff) {\n\t            this.buffer = buff;\n\t            if (callback) {\n\t                callback();\n\t            }\n\t        }.bind(this));\n\t    };\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.Convolver} this\n\t\t */\n\t    Tone.Convolver.prototype.dispose = function () {\n\t        Tone.Effect.prototype.dispose.call(this);\n\t        this._convolver.disconnect();\n\t        this._convolver = null;\n\t        this._buffer.dispose();\n\t        this._buffer = null;\n\t        return this;\n\t    };\n\t    return Tone.Convolver;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Distortion is a simple distortion effect using Tone.WaveShaper.\n\t\t *         Algorithm from [a stackoverflow answer](http://stackoverflow.com/a/22313408).\n\t\t *\n\t\t *  @extends {Tone.Effect}\n\t\t *  @constructor\n\t\t *  @param {Number|Object} [distortion] The amount of distortion (nominal range of 0-1)\n\t\t *  @example\n\t\t * var dist = new Tone.Distortion(0.8).toMaster();\n\t\t * var fm = new Tone.SimpleFM().connect(dist);\n\t\t * //this sounds good on bass notes\n\t\t * fm.triggerAttackRelease(\"A1\", \"8n\");\n\t\t */\n\t    Tone.Distortion = function () {\n\t        var options = Tone.defaults(arguments, ['distortion'], Tone.Distortion);\n\t        Tone.Effect.call(this, options);\n\t        /**\n\t\t\t *  @type {Tone.WaveShaper}\n\t\t\t *  @private\n\t\t\t */\n\t        this._shaper = new Tone.WaveShaper(4096);\n\t        /**\n\t\t\t * holds the distortion amount\n\t\t\t * @type {number}\n\t\t\t * @private\n\t\t\t */\n\t        this._distortion = options.distortion;\n\t        this.connectEffect(this._shaper);\n\t        this.distortion = options.distortion;\n\t        this.oversample = options.oversample;\n\t    };\n\t    Tone.extend(Tone.Distortion, Tone.Effect);\n\t    /**\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Distortion.defaults = {\n\t        'distortion': 0.4,\n\t        'oversample': 'none'\n\t    };\n\t    /**\n\t\t * The amount of distortion.\n\t\t * @memberOf Tone.Distortion#\n\t\t * @type {NormalRange}\n\t\t * @name distortion\n\t\t */\n\t    Object.defineProperty(Tone.Distortion.prototype, 'distortion', {\n\t        get: function () {\n\t            return this._distortion;\n\t        },\n\t        set: function (amount) {\n\t            this._distortion = amount;\n\t            var k = amount * 100;\n\t            var deg = Math.PI / 180;\n\t            this._shaper.setMap(function (x) {\n\t                if (Math.abs(x) < 0.001) {\n\t                    //should output 0 when input is 0\n\t                    return 0;\n\t                } else {\n\t                    return (3 + k) * x * 20 * deg / (Math.PI + k * Math.abs(x));\n\t                }\n\t            });\n\t        }\n\t    });\n\t    /**\n\t\t * The oversampling of the effect. Can either be \"none\", \"2x\" or \"4x\".\n\t\t * @memberOf Tone.Distortion#\n\t\t * @type {string}\n\t\t * @name oversample\n\t\t */\n\t    Object.defineProperty(Tone.Distortion.prototype, 'oversample', {\n\t        get: function () {\n\t            return this._shaper.oversample;\n\t        },\n\t        set: function (oversampling) {\n\t            this._shaper.oversample = oversampling;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.Distortion} this\n\t\t */\n\t    Tone.Distortion.prototype.dispose = function () {\n\t        Tone.Effect.prototype.dispose.call(this);\n\t        this._shaper.dispose();\n\t        this._shaper = null;\n\t        return this;\n\t    };\n\t    return Tone.Distortion;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.FeedbackDelay is a DelayNode in which part of output\n\t\t *          signal is fed back into the delay. \n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.FeedbackEffect}\n\t\t *  @param {Time|Object} [delayTime] The delay applied to the incoming signal. \n\t\t *  @param {NormalRange=} feedback The amount of the effected signal which \n\t\t *                            is fed back through the delay.\n\t\t *  @example\n\t\t * var feedbackDelay = new Tone.FeedbackDelay(\"8n\", 0.5).toMaster();\n\t\t * var tom = new Tone.DrumSynth({\n\t\t * \t\"octaves\" : 4,\n\t\t * \t\"pitchDecay\" : 0.1\n\t\t * }).connect(feedbackDelay);\n\t\t * tom.triggerAttackRelease(\"A2\",\"32n\");\n\t\t */\n\t    Tone.FeedbackDelay = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'delayTime',\n\t            'feedback'\n\t        ], Tone.FeedbackDelay);\n\t        Tone.FeedbackEffect.call(this, options);\n\t        /**\n\t\t\t *  the delay node\n\t\t\t *  @type {Tone.Delay}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delayNode = new Tone.Delay(options.delayTime);\n\t        /**\n\t\t\t *  The delayTime of the DelayNode. \n\t\t\t *  @type {Time}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.delayTime = this._delayNode.delayTime;\n\t        // connect it up\n\t        this.connectEffect(this._delayNode);\n\t        this._readOnly(['delayTime']);\n\t    };\n\t    Tone.extend(Tone.FeedbackDelay, Tone.FeedbackEffect);\n\t    /**\n\t\t *  The default values. \n\t\t *  @const\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.FeedbackDelay.defaults = { 'delayTime': 0.25 };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.FeedbackDelay} this\n\t\t */\n\t    Tone.FeedbackDelay.prototype.dispose = function () {\n\t        Tone.FeedbackEffect.prototype.dispose.call(this);\n\t        this._delayNode.dispose();\n\t        this._delayNode = null;\n\t        this._writable(['delayTime']);\n\t        this.delayTime = null;\n\t        return this;\n\t    };\n\t    return Tone.FeedbackDelay;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  an array of comb filter delay values from Freeverb implementation\n\t\t *  @static\n\t\t *  @private\n\t\t *  @type {Array}\n\t\t */\n\t    var combFilterTunings = [\n\t        1557 / 44100,\n\t        1617 / 44100,\n\t        1491 / 44100,\n\t        1422 / 44100,\n\t        1277 / 44100,\n\t        1356 / 44100,\n\t        1188 / 44100,\n\t        1116 / 44100\n\t    ];\n\t    /**\n\t\t *  an array of allpass filter frequency values from Freeverb implementation\n\t\t *  @private\n\t\t *  @static\n\t\t *  @type {Array}\n\t\t */\n\t    var allpassFilterFrequencies = [\n\t        225,\n\t        556,\n\t        441,\n\t        341\n\t    ];\n\t    /**\n\t\t *  @class Tone.Freeverb is a reverb based on [Freeverb](https://ccrma.stanford.edu/~jos/pasp/Freeverb.html).\n\t\t *         Read more on reverb on [Sound On Sound](https://web.archive.org/web/20160404083902/http://www.soundonsound.com:80/sos/feb01/articles/synthsecrets.asp).\n\t\t *\n\t\t *  @extends {Tone.Effect}\n\t\t *  @constructor\n\t\t *  @param {NormalRange|Object} [roomSize] Correlated to the decay time.\n\t\t *  @param {Frequency} [dampening] The cutoff frequency of a lowpass filter as part\n\t\t *                                 of the reverb.\n\t\t *  @example\n\t\t * var freeverb = new Tone.Freeverb().toMaster();\n\t\t * freeverb.dampening.value = 1000;\n\t\t * //routing synth through the reverb\n\t\t * var synth = new Tone.AMSynth().connect(freeverb);\n\t\t */\n\t    Tone.Freeverb = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'roomSize',\n\t            'dampening'\n\t        ], Tone.Freeverb);\n\t        Tone.StereoEffect.call(this, options);\n\t        /**\n\t\t\t *  The roomSize value between. A larger roomSize\n\t\t\t *  will result in a longer decay.\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.roomSize = new Tone.Signal(options.roomSize, Tone.Type.NormalRange);\n\t        /**\n\t\t\t *  The amount of dampening of the reverberant signal.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.dampening = new Tone.Signal(options.dampening, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  the comb filters\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._combFilters = [];\n\t        /**\n\t\t\t *  the allpass filters on the left\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._allpassFiltersL = [];\n\t        /**\n\t\t\t *  the allpass filters on the right\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._allpassFiltersR = [];\n\t        //make the allpass filters on the right\n\t        for (var l = 0; l < allpassFilterFrequencies.length; l++) {\n\t            var allpassL = this.context.createBiquadFilter();\n\t            allpassL.type = 'allpass';\n\t            allpassL.frequency.value = allpassFilterFrequencies[l];\n\t            this._allpassFiltersL.push(allpassL);\n\t        }\n\t        //make the allpass filters on the left\n\t        for (var r = 0; r < allpassFilterFrequencies.length; r++) {\n\t            var allpassR = this.context.createBiquadFilter();\n\t            allpassR.type = 'allpass';\n\t            allpassR.frequency.value = allpassFilterFrequencies[r];\n\t            this._allpassFiltersR.push(allpassR);\n\t        }\n\t        //make the comb filters\n\t        for (var c = 0; c < combFilterTunings.length; c++) {\n\t            var lfpf = new Tone.LowpassCombFilter(combFilterTunings[c]);\n\t            if (c < combFilterTunings.length / 2) {\n\t                this.effectSendL.chain(lfpf, this._allpassFiltersL[0]);\n\t            } else {\n\t                this.effectSendR.chain(lfpf, this._allpassFiltersR[0]);\n\t            }\n\t            this.roomSize.connect(lfpf.resonance);\n\t            this.dampening.connect(lfpf.dampening);\n\t            this._combFilters.push(lfpf);\n\t        }\n\t        //chain the allpass filters togetehr\n\t        Tone.connectSeries.apply(Tone, this._allpassFiltersL);\n\t        Tone.connectSeries.apply(Tone, this._allpassFiltersR);\n\t        this._allpassFiltersL[this._allpassFiltersL.length - 1].connect(this.effectReturnL);\n\t        this._allpassFiltersR[this._allpassFiltersR.length - 1].connect(this.effectReturnR);\n\t        this._readOnly([\n\t            'roomSize',\n\t            'dampening'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.Freeverb, Tone.StereoEffect);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Freeverb.defaults = {\n\t        'roomSize': 0.7,\n\t        'dampening': 3000\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Freeverb} this\n\t\t */\n\t    Tone.Freeverb.prototype.dispose = function () {\n\t        Tone.StereoEffect.prototype.dispose.call(this);\n\t        for (var al = 0; al < this._allpassFiltersL.length; al++) {\n\t            this._allpassFiltersL[al].disconnect();\n\t            this._allpassFiltersL[al] = null;\n\t        }\n\t        this._allpassFiltersL = null;\n\t        for (var ar = 0; ar < this._allpassFiltersR.length; ar++) {\n\t            this._allpassFiltersR[ar].disconnect();\n\t            this._allpassFiltersR[ar] = null;\n\t        }\n\t        this._allpassFiltersR = null;\n\t        for (var cf = 0; cf < this._combFilters.length; cf++) {\n\t            this._combFilters[cf].dispose();\n\t            this._combFilters[cf] = null;\n\t        }\n\t        this._combFilters = null;\n\t        this._writable([\n\t            'roomSize',\n\t            'dampening'\n\t        ]);\n\t        this.roomSize.dispose();\n\t        this.roomSize = null;\n\t        this.dampening.dispose();\n\t        this.dampening = null;\n\t        return this;\n\t    };\n\t    return Tone.Freeverb;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  an array of the comb filter delay time values\n\t\t *  @private\n\t\t *  @static\n\t\t *  @type {Array}\n\t\t */\n\t    var combFilterDelayTimes = [\n\t        1687 / 25000,\n\t        1601 / 25000,\n\t        2053 / 25000,\n\t        2251 / 25000\n\t    ];\n\t    /**\n\t\t *  the resonances of each of the comb filters\n\t\t *  @private\n\t\t *  @static\n\t\t *  @type {Array}\n\t\t */\n\t    var combFilterResonances = [\n\t        0.773,\n\t        0.802,\n\t        0.753,\n\t        0.733\n\t    ];\n\t    /**\n\t\t *  the allpass filter frequencies\n\t\t *  @private\n\t\t *  @static\n\t\t *  @type {Array}\n\t\t */\n\t    var allpassFilterFreqs = [\n\t        347,\n\t        113,\n\t        37\n\t    ];\n\t    /**\n\t\t *  @class Tone.JCReverb is a simple [Schroeder Reverberator](https://ccrma.stanford.edu/~jos/pasp/Schroeder_Reverberators.html)\n\t\t *         tuned by John Chowning in 1970.\n\t\t *         It is made up of three allpass filters and four Tone.FeedbackCombFilter. \n\t\t *         \n\t\t *\n\t\t *  @extends {Tone.Effect}\n\t\t *  @constructor\n\t\t *  @param {NormalRange|Object} [roomSize] Coorelates to the decay time.\n\t\t *  @example\n\t\t * var reverb = new Tone.JCReverb(0.4).connect(Tone.Master);\n\t\t * var delay = new Tone.FeedbackDelay(0.5); \n\t\t * //connecting the synth to reverb through delay\n\t\t * var synth = new Tone.DuoSynth().chain(delay, reverb);\n\t\t * synth.triggerAttackRelease(\"A4\",\"8n\");\n\t\t */\n\t    Tone.JCReverb = function () {\n\t        var options = Tone.defaults(arguments, ['roomSize'], Tone.JCReverb);\n\t        Tone.StereoEffect.call(this, options);\n\t        /**\n\t\t\t *  room size control values between [0,1]\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.roomSize = new Tone.Signal(options.roomSize, Tone.Type.NormalRange);\n\t        /**\n\t\t\t *  scale the room size\n\t\t\t *  @type {Tone.Scale}\n\t\t\t *  @private\n\t\t\t */\n\t        this._scaleRoomSize = new Tone.Scale(-0.733, 0.197);\n\t        /**\n\t\t\t *  a series of allpass filters\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._allpassFilters = [];\n\t        /**\n\t\t\t *  parallel feedback comb filters\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._feedbackCombFilters = [];\n\t        //make the allpass filters\n\t        for (var af = 0; af < allpassFilterFreqs.length; af++) {\n\t            var allpass = this.context.createBiquadFilter();\n\t            allpass.type = 'allpass';\n\t            allpass.frequency.value = allpassFilterFreqs[af];\n\t            this._allpassFilters.push(allpass);\n\t        }\n\t        //and the comb filters\n\t        for (var cf = 0; cf < combFilterDelayTimes.length; cf++) {\n\t            var fbcf = new Tone.FeedbackCombFilter(combFilterDelayTimes[cf], 0.1);\n\t            this._scaleRoomSize.connect(fbcf.resonance);\n\t            fbcf.resonance.value = combFilterResonances[cf];\n\t            this._allpassFilters[this._allpassFilters.length - 1].connect(fbcf);\n\t            if (cf < combFilterDelayTimes.length / 2) {\n\t                fbcf.connect(this.effectReturnL);\n\t            } else {\n\t                fbcf.connect(this.effectReturnR);\n\t            }\n\t            this._feedbackCombFilters.push(fbcf);\n\t        }\n\t        //chain the allpass filters together\n\t        this.roomSize.connect(this._scaleRoomSize);\n\t        Tone.connectSeries.apply(Tone, this._allpassFilters);\n\t        this.effectSendL.connect(this._allpassFilters[0]);\n\t        this.effectSendR.connect(this._allpassFilters[0]);\n\t        this._readOnly(['roomSize']);\n\t    };\n\t    Tone.extend(Tone.JCReverb, Tone.StereoEffect);\n\t    /**\n\t\t *  the default values\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.JCReverb.defaults = { 'roomSize': 0.5 };\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.JCReverb} this\n\t\t */\n\t    Tone.JCReverb.prototype.dispose = function () {\n\t        Tone.StereoEffect.prototype.dispose.call(this);\n\t        for (var apf = 0; apf < this._allpassFilters.length; apf++) {\n\t            this._allpassFilters[apf].disconnect();\n\t            this._allpassFilters[apf] = null;\n\t        }\n\t        this._allpassFilters = null;\n\t        for (var fbcf = 0; fbcf < this._feedbackCombFilters.length; fbcf++) {\n\t            this._feedbackCombFilters[fbcf].dispose();\n\t            this._feedbackCombFilters[fbcf] = null;\n\t        }\n\t        this._feedbackCombFilters = null;\n\t        this._writable(['roomSize']);\n\t        this.roomSize.dispose();\n\t        this.roomSize = null;\n\t        this._scaleRoomSize.dispose();\n\t        this._scaleRoomSize = null;\n\t        return this;\n\t    };\n\t    return Tone.JCReverb;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Mid/Side processing separates the the 'mid' signal \n\t\t *         (which comes out of both the left and the right channel) \n\t\t *         and the 'side' (which only comes out of the the side channels) \n\t\t *         and effects them separately before being recombined.\n\t\t *         Applies a Mid/Side seperation and recombination.\n\t\t *         Algorithm found in [kvraudio forums](http://www.kvraudio.com/forum/viewtopic.php?t=212587).\n\t\t *         <br><br>\n\t\t *         This is a base-class for Mid/Side Effects. \n\t\t *\n\t\t *  @extends {Tone.Effect}\n\t\t *  @constructor\n\t\t */\n\t    Tone.MidSideEffect = function () {\n\t        Tone.Effect.apply(this, arguments);\n\t        /**\n\t\t\t *  The mid/side split\n\t\t\t *  @type  {Tone.MidSideSplit}\n\t\t\t *  @private\n\t\t\t */\n\t        this._midSideSplit = new Tone.MidSideSplit();\n\t        /**\n\t\t\t *  The mid/side merge\n\t\t\t *  @type  {Tone.MidSideMerge}\n\t\t\t *  @private\n\t\t\t */\n\t        this._midSideMerge = new Tone.MidSideMerge();\n\t        /**\n\t\t\t *  The mid send. Connect to mid processing\n\t\t\t *  @type {Tone.Expr}\n\t\t\t *  @private\n\t\t\t */\n\t        this.midSend = this._midSideSplit.mid;\n\t        /**\n\t\t\t *  The side send. Connect to side processing\n\t\t\t *  @type {Tone.Expr}\n\t\t\t *  @private\n\t\t\t */\n\t        this.sideSend = this._midSideSplit.side;\n\t        /**\n\t\t\t *  The mid return connection\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this.midReturn = this._midSideMerge.mid;\n\t        /**\n\t\t\t *  The side return connection\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this.sideReturn = this._midSideMerge.side;\n\t        //the connections\n\t        this.effectSend.connect(this._midSideSplit);\n\t        this._midSideMerge.connect(this.effectReturn);\n\t    };\n\t    Tone.extend(Tone.MidSideEffect, Tone.Effect);\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.MidSideEffect} this\n\t\t */\n\t    Tone.MidSideEffect.prototype.dispose = function () {\n\t        Tone.Effect.prototype.dispose.call(this);\n\t        this._midSideSplit.dispose();\n\t        this._midSideSplit = null;\n\t        this._midSideMerge.dispose();\n\t        this._midSideMerge = null;\n\t        this.midSend = null;\n\t        this.sideSend = null;\n\t        this.midReturn = null;\n\t        this.sideReturn = null;\n\t        return this;\n\t    };\n\t    return Tone.MidSideEffect;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Phaser is a phaser effect. Phasers work by changing the phase\n\t\t *         of different frequency components of an incoming signal. Read more on \n\t\t *         [Wikipedia](https://en.wikipedia.org/wiki/Phaser_(effect)). \n\t\t *         Inspiration for this phaser comes from [Tuna.js](https://github.com/Dinahmoe/tuna/).\n\t\t *\n\t\t *\t@extends {Tone.StereoEffect}\n\t\t *\t@constructor\n\t\t *\t@param {Frequency|Object} [frequency] The speed of the phasing. \n\t\t *\t@param {number} [octaves] The octaves of the effect. \n\t\t *\t@param {Frequency} [baseFrequency] The base frequency of the filters. \n\t\t *\t@example\n\t\t * var phaser = new Tone.Phaser({\n\t\t * \t\"frequency\" : 15, \n\t\t * \t\"octaves\" : 5, \n\t\t * \t\"baseFrequency\" : 1000\n\t\t * }).toMaster();\n\t\t * var synth = new Tone.FMSynth().connect(phaser);\n\t\t * synth.triggerAttackRelease(\"E3\", \"2n\");\n\t\t */\n\t    Tone.Phaser = function () {\n\t        //set the defaults\n\t        var options = Tone.defaults(arguments, [\n\t            'frequency',\n\t            'octaves',\n\t            'baseFrequency'\n\t        ], Tone.Phaser);\n\t        Tone.StereoEffect.call(this, options);\n\t        /**\n\t\t\t *  the lfo which controls the frequency on the left side\n\t\t\t *  @type {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfoL = new Tone.LFO(options.frequency, 0, 1);\n\t        /**\n\t\t\t *  the lfo which controls the frequency on the right side\n\t\t\t *  @type {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfoR = new Tone.LFO(options.frequency, 0, 1);\n\t        this._lfoR.phase = 180;\n\t        /**\n\t\t\t *  the base modulation frequency\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._baseFrequency = options.baseFrequency;\n\t        /**\n\t\t\t *  the octaves of the phasing\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._octaves = options.octaves;\n\t        /**\n\t\t\t *  The quality factor of the filters\n\t\t\t *  @type {Positive}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.Q = new Tone.Signal(options.Q, Tone.Type.Positive);\n\t        /**\n\t\t\t *  the array of filters for the left side\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._filtersL = this._makeFilters(options.stages, this._lfoL, this.Q);\n\t        /**\n\t\t\t *  the array of filters for the left side\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._filtersR = this._makeFilters(options.stages, this._lfoR, this.Q);\n\t        /**\n\t\t\t * the frequency of the effect\n\t\t\t * @type {Tone.Signal}\n\t\t\t */\n\t        this.frequency = this._lfoL.frequency;\n\t        this.frequency.value = options.frequency;\n\t        //connect them up\n\t        this.effectSendL.connect(this._filtersL[0]);\n\t        this.effectSendR.connect(this._filtersR[0]);\n\t        this._filtersL[options.stages - 1].connect(this.effectReturnL);\n\t        this._filtersR[options.stages - 1].connect(this.effectReturnR);\n\t        //control the frequency with one LFO\n\t        this._lfoL.frequency.connect(this._lfoR.frequency);\n\t        //set the options\n\t        this.baseFrequency = options.baseFrequency;\n\t        this.octaves = options.octaves;\n\t        //start the lfo\n\t        this._lfoL.start();\n\t        this._lfoR.start();\n\t        this._readOnly([\n\t            'frequency',\n\t            'Q'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.Phaser, Tone.StereoEffect);\n\t    /**\n\t\t *  defaults\n\t\t *  @static\n\t\t *  @type {object}\n\t\t */\n\t    Tone.Phaser.defaults = {\n\t        'frequency': 0.5,\n\t        'octaves': 3,\n\t        'stages': 10,\n\t        'Q': 10,\n\t        'baseFrequency': 350\n\t    };\n\t    /**\n\t\t *  @param {number} stages\n\t\t *  @returns {Array} the number of filters all connected together\n\t\t *  @private\n\t\t */\n\t    Tone.Phaser.prototype._makeFilters = function (stages, connectToFreq, Q) {\n\t        var filters = new Array(stages);\n\t        //make all the filters\n\t        for (var i = 0; i < stages; i++) {\n\t            var filter = this.context.createBiquadFilter();\n\t            filter.type = 'allpass';\n\t            Q.connect(filter.Q);\n\t            connectToFreq.connect(filter.frequency);\n\t            filters[i] = filter;\n\t        }\n\t        Tone.connectSeries.apply(Tone, filters);\n\t        return filters;\n\t    };\n\t    /**\n\t\t * The number of octaves the phase goes above\n\t\t * the baseFrequency\n\t\t * @memberOf Tone.Phaser#\n\t\t * @type {Positive}\n\t\t * @name octaves\n\t\t */\n\t    Object.defineProperty(Tone.Phaser.prototype, 'octaves', {\n\t        get: function () {\n\t            return this._octaves;\n\t        },\n\t        set: function (octaves) {\n\t            this._octaves = octaves;\n\t            var max = this._baseFrequency * Math.pow(2, octaves);\n\t            this._lfoL.max = max;\n\t            this._lfoR.max = max;\n\t        }\n\t    });\n\t    /**\n\t\t * The the base frequency of the filters. \n\t\t * @memberOf Tone.Phaser#\n\t\t * @type {number}\n\t\t * @name baseFrequency\n\t\t */\n\t    Object.defineProperty(Tone.Phaser.prototype, 'baseFrequency', {\n\t        get: function () {\n\t            return this._baseFrequency;\n\t        },\n\t        set: function (freq) {\n\t            this._baseFrequency = freq;\n\t            this._lfoL.min = freq;\n\t            this._lfoR.min = freq;\n\t            this.octaves = this._octaves;\n\t        }\n\t    });\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.Phaser} this\n\t\t */\n\t    Tone.Phaser.prototype.dispose = function () {\n\t        Tone.StereoEffect.prototype.dispose.call(this);\n\t        this._writable([\n\t            'frequency',\n\t            'Q'\n\t        ]);\n\t        this.Q.dispose();\n\t        this.Q = null;\n\t        this._lfoL.dispose();\n\t        this._lfoL = null;\n\t        this._lfoR.dispose();\n\t        this._lfoR = null;\n\t        for (var i = 0; i < this._filtersL.length; i++) {\n\t            this._filtersL[i].disconnect();\n\t            this._filtersL[i] = null;\n\t        }\n\t        this._filtersL = null;\n\t        for (var j = 0; j < this._filtersR.length; j++) {\n\t            this._filtersR[j].disconnect();\n\t            this._filtersR[j] = null;\n\t        }\n\t        this._filtersR = null;\n\t        this.frequency = null;\n\t        return this;\n\t    };\n\t    return Tone.Phaser;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.PingPongDelay is a feedback delay effect where the echo is heard\n\t\t *          first in one channel and next in the opposite channel. In a stereo\n\t\t *          system these are the right and left channels.\n\t\t *          PingPongDelay in more simplified terms is two Tone.FeedbackDelays \n\t\t *          with independent delay values. Each delay is routed to one channel\n\t\t *          (left or right), and the channel triggered second will always \n\t\t *          trigger at the same interval after the first.\n\t\t *\n\t\t * \t@constructor\n\t\t * \t@extends {Tone.StereoXFeedbackEffect}\n\t\t *  @param {Time|Object} [delayTime] The delayTime between consecutive echos.\n\t\t *  @param {NormalRange=} feedback The amount of the effected signal which \n\t\t *                                 is fed back through the delay.\n\t\t *  @example\n\t\t * var pingPong = new Tone.PingPongDelay(\"4n\", 0.2).toMaster();\n\t\t * var drum = new Tone.DrumSynth().connect(pingPong);\n\t\t * drum.triggerAttackRelease(\"C4\", \"32n\");\n\t\t */\n\t    Tone.PingPongDelay = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'delayTime',\n\t            'feedback'\n\t        ], Tone.PingPongDelay);\n\t        Tone.StereoXFeedbackEffect.call(this, options);\n\t        /**\n\t\t\t *  the delay node on the left side\n\t\t\t *  @type {Tone.Delay}\n\t\t\t *  @private\n\t\t\t */\n\t        this._leftDelay = new Tone.Delay(0, options.maxDelayTime);\n\t        /**\n\t\t\t *  the delay node on the right side\n\t\t\t *  @type {Tone.Delay}\n\t\t\t *  @private\n\t\t\t */\n\t        this._rightDelay = new Tone.Delay(0, options.maxDelayTime);\n\t        /**\n\t\t\t *  the predelay on the right side\n\t\t\t *  @type {Tone.Delay}\n\t\t\t *  @private\n\t\t\t */\n\t        this._rightPreDelay = new Tone.Delay(0, options.maxDelayTime);\n\t        /**\n\t\t\t *  the delay time signal\n\t\t\t *  @type {Time}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.delayTime = new Tone.Signal(options.delayTime, Tone.Type.Time);\n\t        //connect it up\n\t        this.effectSendL.chain(this._leftDelay, this.effectReturnL);\n\t        this.effectSendR.chain(this._rightPreDelay, this._rightDelay, this.effectReturnR);\n\t        this.delayTime.fan(this._leftDelay.delayTime, this._rightDelay.delayTime, this._rightPreDelay.delayTime);\n\t        //rearranged the feedback to be after the rightPreDelay\n\t        this._feedbackLR.disconnect();\n\t        this._feedbackLR.connect(this._rightDelay);\n\t        this._readOnly(['delayTime']);\n\t    };\n\t    Tone.extend(Tone.PingPongDelay, Tone.StereoXFeedbackEffect);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.PingPongDelay.defaults = {\n\t        'delayTime': 0.25,\n\t        'maxDelayTime': 1\n\t    };\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.PingPongDelay} this\n\t\t */\n\t    Tone.PingPongDelay.prototype.dispose = function () {\n\t        Tone.StereoXFeedbackEffect.prototype.dispose.call(this);\n\t        this._leftDelay.dispose();\n\t        this._leftDelay = null;\n\t        this._rightDelay.dispose();\n\t        this._rightDelay = null;\n\t        this._rightPreDelay.dispose();\n\t        this._rightPreDelay = null;\n\t        this._writable(['delayTime']);\n\t        this.delayTime.dispose();\n\t        this.delayTime = null;\n\t        return this;\n\t    };\n\t    return Tone.PingPongDelay;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.PitchShift does near-realtime pitch shifting to the incoming signal. \n\t\t *         The effect is achieved by speeding up or slowing down the delayTime\n\t\t *         of a DelayNode using a sawtooth wave. \n\t\t *         Algorithm found in [this pdf](http://dsp-book.narod.ru/soundproc.pdf).\n\t\t *         Additional reference by [Miller Pucket](http://msp.ucsd.edu/techniques/v0.11/book-html/node115.html).\n\t\t *         \n\t\t *  @extends {Tone.FeedbackEffect}\n\t\t *  @param {Interval=} pitch The interval to transpose the incoming signal by. \n\t\t */\n\t    Tone.PitchShift = function () {\n\t        var options = Tone.defaults(arguments, ['pitch'], Tone.PitchShift);\n\t        Tone.FeedbackEffect.call(this, options);\n\t        /**\n\t\t\t *  The pitch signal\n\t\t\t *  @type  {Tone.Signal}\n\t\t\t *  @private\n\t\t\t */\n\t        this._frequency = new Tone.Signal(0);\n\t        /**\n\t\t\t *  Uses two DelayNodes to cover up the jump in\n\t\t\t *  the sawtooth wave. \n\t\t\t *  @type  {DelayNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delayA = new Tone.Delay(0, 1);\n\t        /**\n\t\t\t *  The first LFO.\n\t\t\t *  @type  {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfoA = new Tone.LFO({\n\t            'min': 0,\n\t            'max': 0.1,\n\t            'type': 'sawtooth'\n\t        }).connect(this._delayA.delayTime);\n\t        /**\n\t\t\t *  The second DelayNode\n\t\t\t *  @type  {DelayNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delayB = new Tone.Delay(0, 1);\n\t        /**\n\t\t\t *  The first LFO.\n\t\t\t *  @type  {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfoB = new Tone.LFO({\n\t            'min': 0,\n\t            'max': 0.1,\n\t            'type': 'sawtooth',\n\t            'phase': 180\n\t        }).connect(this._delayB.delayTime);\n\t        /**\n\t\t\t *  Crossfade quickly between the two delay lines\n\t\t\t *  to cover up the jump in the sawtooth wave\n\t\t\t *  @type  {Tone.CrossFade}\n\t\t\t *  @private\n\t\t\t */\n\t        this._crossFade = new Tone.CrossFade();\n\t        /**\n\t\t\t *  LFO which alternates between the two\n\t\t\t *  delay lines to cover up the disparity in the\n\t\t\t *  sawtooth wave. \n\t\t\t *  @type  {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._crossFadeLFO = new Tone.LFO({\n\t            'min': 0,\n\t            'max': 1,\n\t            'type': 'triangle',\n\t            'phase': 90\n\t        }).connect(this._crossFade.fade);\n\t        /**\n\t\t\t *  The delay node\n\t\t\t *  @type {Tone.Delay}\n\t\t\t *  @private\n\t\t\t */\n\t        this._feedbackDelay = new Tone.Delay(options.delayTime);\n\t        /**\n\t\t\t *  The amount of delay on the input signal\n\t\t\t *  @type {Time}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.delayTime = this._feedbackDelay.delayTime;\n\t        this._readOnly('delayTime');\n\t        /**\n\t\t\t *  Hold the current pitch\n\t\t\t *  @type {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._pitch = options.pitch;\n\t        /**\n\t\t\t *  Hold the current windowSize\n\t\t\t *  @type {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._windowSize = options.windowSize;\n\t        //connect the two delay lines up\n\t        this._delayA.connect(this._crossFade.a);\n\t        this._delayB.connect(this._crossFade.b);\n\t        //connect the frequency\n\t        this._frequency.fan(this._lfoA.frequency, this._lfoB.frequency, this._crossFadeLFO.frequency);\n\t        //route the input\n\t        this.effectSend.fan(this._delayA, this._delayB);\n\t        this._crossFade.chain(this._feedbackDelay, this.effectReturn);\n\t        //start the LFOs at the same time\n\t        var now = this.now();\n\t        this._lfoA.start(now);\n\t        this._lfoB.start(now);\n\t        this._crossFadeLFO.start(now);\n\t        //set the initial value\n\t        this.windowSize = this._windowSize;\n\t    };\n\t    Tone.extend(Tone.PitchShift, Tone.FeedbackEffect);\n\t    /**\n\t\t *  default values\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.PitchShift.defaults = {\n\t        'pitch': 0,\n\t        'windowSize': 0.1,\n\t        'delayTime': 0,\n\t        'feedback': 0\n\t    };\n\t    /**\n\t\t * Repitch the incoming signal by some interval (measured\n\t\t * in semi-tones). \n\t\t * @memberOf Tone.PitchShift#\n\t\t * @type {Interval}\n\t\t * @name pitch\n\t\t * @example\n\t\t * pitchShift.pitch = -12; //down one octave\n\t\t * pitchShift.pitch = 7; //up a fifth\n\t\t */\n\t    Object.defineProperty(Tone.PitchShift.prototype, 'pitch', {\n\t        get: function () {\n\t            return this._pitch;\n\t        },\n\t        set: function (interval) {\n\t            this._pitch = interval;\n\t            var factor = 0;\n\t            if (interval < 0) {\n\t                this._lfoA.min = 0;\n\t                this._lfoA.max = this._windowSize;\n\t                this._lfoB.min = 0;\n\t                this._lfoB.max = this._windowSize;\n\t                factor = Tone.intervalToFrequencyRatio(interval - 1) + 1;\n\t            } else {\n\t                this._lfoA.min = this._windowSize;\n\t                this._lfoA.max = 0;\n\t                this._lfoB.min = this._windowSize;\n\t                this._lfoB.max = 0;\n\t                factor = Tone.intervalToFrequencyRatio(interval) - 1;\n\t            }\n\t            this._frequency.value = factor * (1.2 / this._windowSize);\n\t        }\n\t    });\n\t    /**\n\t\t * The window size corresponds roughly to the sample length in a looping sampler. \n\t\t * Smaller values are desirable for a less noticeable delay time of the pitch shifted\n\t\t * signal, but larger values will result in smoother pitch shifting for larger intervals. \n\t\t * A nominal range of 0.03 to 0.1 is recommended. \n\t\t * @memberOf Tone.PitchShift#\n\t\t * @type {Time}\n\t\t * @name windowSize\n\t\t * @example\n\t\t * pitchShift.windowSize = 0.1;\n\t\t */\n\t    Object.defineProperty(Tone.PitchShift.prototype, 'windowSize', {\n\t        get: function () {\n\t            return this._windowSize;\n\t        },\n\t        set: function (size) {\n\t            this._windowSize = this.toSeconds(size);\n\t            this.pitch = this._pitch;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return  {Tone.PitchShift}  this\n\t\t */\n\t    Tone.PitchShift.prototype.dispose = function () {\n\t        Tone.FeedbackEffect.prototype.dispose.call(this);\n\t        this._frequency.dispose();\n\t        this._frequency = null;\n\t        this._delayA.disconnect();\n\t        this._delayA = null;\n\t        this._delayB.disconnect();\n\t        this._delayB = null;\n\t        this._lfoA.dispose();\n\t        this._lfoA = null;\n\t        this._lfoB.dispose();\n\t        this._lfoB = null;\n\t        this._crossFade.dispose();\n\t        this._crossFade = null;\n\t        this._crossFadeLFO.dispose();\n\t        this._crossFadeLFO = null;\n\t        this._writable('delayTime');\n\t        this._feedbackDelay.dispose();\n\t        this._feedbackDelay = null;\n\t        this.delayTime = null;\n\t        return this;\n\t    };\n\t    return Tone.PitchShift;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Base class for stereo feedback effects where the effectReturn\n\t\t *         is fed back into the same channel. \n\t\t *\n\t\t *\t@constructor\n\t\t *\t@extends {Tone.StereoEffect}\n\t\t */\n\t    Tone.StereoFeedbackEffect = function () {\n\t        var options = Tone.defaults(arguments, ['feedback'], Tone.FeedbackEffect);\n\t        Tone.StereoEffect.call(this, options);\n\t        /**\n\t\t\t *  controls the amount of feedback\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.feedback = new Tone.Signal(options.feedback, Tone.Type.NormalRange);\n\t        /**\n\t\t\t *  the left side feeback\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._feedbackL = new Tone.Gain();\n\t        /**\n\t\t\t *  the right side feeback\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._feedbackR = new Tone.Gain();\n\t        //connect it up\n\t        this.effectReturnL.chain(this._feedbackL, this.effectSendL);\n\t        this.effectReturnR.chain(this._feedbackR, this.effectSendR);\n\t        this.feedback.fan(this._feedbackL.gain, this._feedbackR.gain);\n\t        this._readOnly(['feedback']);\n\t    };\n\t    Tone.extend(Tone.StereoFeedbackEffect, Tone.StereoEffect);\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.StereoFeedbackEffect} this\n\t\t */\n\t    Tone.StereoFeedbackEffect.prototype.dispose = function () {\n\t        Tone.StereoEffect.prototype.dispose.call(this);\n\t        this._writable(['feedback']);\n\t        this.feedback.dispose();\n\t        this.feedback = null;\n\t        this._feedbackL.dispose();\n\t        this._feedbackL = null;\n\t        this._feedbackR.dispose();\n\t        this._feedbackR = null;\n\t        return this;\n\t    };\n\t    return Tone.StereoFeedbackEffect;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Applies a width factor to the mid/side seperation. \n\t\t *         0 is all mid and 1 is all side.\n\t\t *         Algorithm found in [kvraudio forums](http://www.kvraudio.com/forum/viewtopic.php?t=212587).\n\t\t *         <br><br>\n\t\t *         <code>\n\t\t *         Mid *= 2*(1-width)<br>\n\t\t *         Side *= 2*width\n\t\t *         </code>\n\t\t *\n\t\t *  @extends {Tone.MidSideEffect}\n\t\t *  @constructor\n\t\t *  @param {NormalRange|Object} [width] The stereo width. A width of 0 is mono and 1 is stereo. 0.5 is no change.\n\t\t */\n\t    Tone.StereoWidener = function () {\n\t        var options = Tone.defaults(arguments, ['width'], Tone.StereoWidener);\n\t        Tone.MidSideEffect.call(this, options);\n\t        /**\n\t\t\t *  The width control. 0 = 100% mid. 1 = 100% side. 0.5 = no change. \n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.width = new Tone.Signal(options.width, Tone.Type.NormalRange);\n\t        /**\n\t\t\t *  Mid multiplier\n\t\t\t *  @type {Tone.Expr}\n\t\t\t *  @private\n\t\t\t */\n\t        this._midMult = new Tone.Expr('$0 * ($1 * (1 - $2))');\n\t        /**\n\t\t\t *  Side multiplier\n\t\t\t *  @type {Tone.Expr}\n\t\t\t *  @private\n\t\t\t */\n\t        this._sideMult = new Tone.Expr('$0 * ($1 * $2)');\n\t        /**\n\t\t\t *  constant output of 2\n\t\t\t *  @type {Tone}\n\t\t\t *  @private\n\t\t\t */\n\t        this._two = new Tone.Signal(2);\n\t        //the mid chain\n\t        this._two.connect(this._midMult, 0, 1);\n\t        this.width.connect(this._midMult, 0, 2);\n\t        //the side chain\n\t        this._two.connect(this._sideMult, 0, 1);\n\t        this.width.connect(this._sideMult, 0, 2);\n\t        //connect it to the effect send/return\n\t        this.midSend.chain(this._midMult, this.midReturn);\n\t        this.sideSend.chain(this._sideMult, this.sideReturn);\n\t        this._readOnly(['width']);\n\t    };\n\t    Tone.extend(Tone.StereoWidener, Tone.MidSideEffect);\n\t    /**\n\t\t *  the default values\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.StereoWidener.defaults = { 'width': 0.5 };\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.StereoWidener} this\n\t\t */\n\t    Tone.StereoWidener.prototype.dispose = function () {\n\t        Tone.MidSideEffect.prototype.dispose.call(this);\n\t        this._writable(['width']);\n\t        this.width.dispose();\n\t        this.width = null;\n\t        this._midMult.dispose();\n\t        this._midMult = null;\n\t        this._sideMult.dispose();\n\t        this._sideMult = null;\n\t        this._two.dispose();\n\t        this._two = null;\n\t        return this;\n\t    };\n\t    return Tone.StereoWidener;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Tremolo modulates the amplitude of an incoming signal using a Tone.LFO.\n\t\t *         The type, frequency, and depth of the LFO is controllable.\n\t\t *\n\t\t *  @extends {Tone.StereoEffect}\n\t\t *  @constructor\n\t\t *  @param {Frequency} [frequency] The rate of the effect.\n\t\t *  @param {NormalRange} [depth] The depth of the effect.\n\t\t *  @example\n\t\t * //create a tremolo and start it's LFO\n\t\t * var tremolo = new Tone.Tremolo(9, 0.75).toMaster().start();\n\t\t * //route an oscillator through the tremolo and start it\n\t\t * var oscillator = new Tone.Oscillator().connect(tremolo).start();\n\t\t */\n\t    Tone.Tremolo = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'frequency',\n\t            'depth'\n\t        ], Tone.Tremolo);\n\t        Tone.StereoEffect.call(this, options);\n\t        /**\n\t\t\t *  The tremelo LFO in the left channel\n\t\t\t *  @type  {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfoL = new Tone.LFO({\n\t            'phase': options.spread,\n\t            'min': 1,\n\t            'max': 0\n\t        });\n\t        /**\n\t\t\t *  The tremelo LFO in the left channel\n\t\t\t *  @type  {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfoR = new Tone.LFO({\n\t            'phase': options.spread,\n\t            'min': 1,\n\t            'max': 0\n\t        });\n\t        /**\n\t\t\t *  Where the gain is multiplied\n\t\t\t *  @type  {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._amplitudeL = new Tone.Gain();\n\t        /**\n\t\t\t *  Where the gain is multiplied\n\t\t\t *  @type  {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._amplitudeR = new Tone.Gain();\n\t        /**\n\t\t\t *  The frequency of the tremolo.\n\t\t\t *  @type  {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The depth of the effect. A depth of 0, has no effect\n\t\t\t *  on the amplitude, and a depth of 1 makes the amplitude\n\t\t\t *  modulate fully between 0 and 1.\n\t\t\t *  @type  {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.depth = new Tone.Signal(options.depth, Tone.Type.NormalRange);\n\t        this._readOnly([\n\t            'frequency',\n\t            'depth'\n\t        ]);\n\t        this.effectSendL.chain(this._amplitudeL, this.effectReturnL);\n\t        this.effectSendR.chain(this._amplitudeR, this.effectReturnR);\n\t        this._lfoL.connect(this._amplitudeL.gain);\n\t        this._lfoR.connect(this._amplitudeR.gain);\n\t        this.frequency.fan(this._lfoL.frequency, this._lfoR.frequency);\n\t        this.depth.fan(this._lfoR.amplitude, this._lfoL.amplitude);\n\t        this.type = options.type;\n\t        this.spread = options.spread;\n\t    };\n\t    Tone.extend(Tone.Tremolo, Tone.StereoEffect);\n\t    /**\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Tremolo.defaults = {\n\t        'frequency': 10,\n\t        'type': 'sine',\n\t        'depth': 0.5,\n\t        'spread': 180\n\t    };\n\t    /**\n\t\t * Start the tremolo.\n\t\t * @param {Time} [time=now] When the tremolo begins.\n\t\t * @returns {Tone.Tremolo} this\n\t\t */\n\t    Tone.Tremolo.prototype.start = function (time) {\n\t        this._lfoL.start(time);\n\t        this._lfoR.start(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Stop the tremolo.\n\t\t * @param {Time} [time=now] When the tremolo stops.\n\t\t * @returns {Tone.Tremolo} this\n\t\t */\n\t    Tone.Tremolo.prototype.stop = function (time) {\n\t        this._lfoL.stop(time);\n\t        this._lfoR.stop(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Sync the effect to the transport.\n\t\t * @param {Time} [delay=0] Delay time before starting the effect after the\n\t\t *                              Transport has started.\n\t\t * @returns {Tone.AutoFilter} this\n\t\t */\n\t    Tone.Tremolo.prototype.sync = function (delay) {\n\t        this._lfoL.sync(delay);\n\t        this._lfoR.sync(delay);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Unsync the filter from the transport\n\t\t * @returns {Tone.Tremolo} this\n\t\t */\n\t    Tone.Tremolo.prototype.unsync = function () {\n\t        this._lfoL.unsync();\n\t        this._lfoR.unsync();\n\t        return this;\n\t    };\n\t    /**\n\t\t * The Tremolo's oscillator type.\n\t\t * @memberOf Tone.Tremolo#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.Tremolo.prototype, 'type', {\n\t        get: function () {\n\t            return this._lfoL.type;\n\t        },\n\t        set: function (type) {\n\t            this._lfoL.type = type;\n\t            this._lfoR.type = type;\n\t        }\n\t    });\n\t    /** \n\t\t * Amount of stereo spread. When set to 0, both LFO's will be panned centrally.\n\t\t * When set to 180, LFO's will be panned hard left and right respectively.\n\t\t * @memberOf Tone.Tremolo#\n\t\t * @type {Degrees}\n\t\t * @name spread\n\t\t */\n\t    Object.defineProperty(Tone.Tremolo.prototype, 'spread', {\n\t        get: function () {\n\t            return this._lfoR.phase - this._lfoL.phase;    //180\n\t        },\n\t        set: function (spread) {\n\t            this._lfoL.phase = 90 - spread / 2;\n\t            this._lfoR.phase = spread / 2 + 90;\n\t        }\n\t    });\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.Tremolo} this\n\t\t */\n\t    Tone.Tremolo.prototype.dispose = function () {\n\t        Tone.StereoEffect.prototype.dispose.call(this);\n\t        this._writable([\n\t            'frequency',\n\t            'depth'\n\t        ]);\n\t        this._lfoL.dispose();\n\t        this._lfoL = null;\n\t        this._lfoR.dispose();\n\t        this._lfoR = null;\n\t        this._amplitudeL.dispose();\n\t        this._amplitudeL = null;\n\t        this._amplitudeR.dispose();\n\t        this._amplitudeR = null;\n\t        this.frequency = null;\n\t        this.depth = null;\n\t        return this;\n\t    };\n\t    return Tone.Tremolo;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class A Vibrato effect composed of a Tone.Delay and a Tone.LFO. The LFO\n\t\t *         modulates the delayTime of the delay, causing the pitch to rise\n\t\t *         and fall. \n\t\t *  @extends {Tone.Effect}\n\t\t *  @param {Frequency} frequency The frequency of the vibrato.\n\t\t *  @param {NormalRange} depth The amount the pitch is modulated.\n\t\t */\n\t    Tone.Vibrato = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'frequency',\n\t            'depth'\n\t        ], Tone.Vibrato);\n\t        Tone.Effect.call(this, options);\n\t        /**\n\t\t\t *  The delay node used for the vibrato effect\n\t\t\t *  @type {Tone.Delay}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delayNode = new Tone.Delay(0, options.maxDelay);\n\t        /**\n\t\t\t *  The LFO used to control the vibrato\n\t\t\t *  @type {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfo = new Tone.LFO({\n\t            'type': options.type,\n\t            'min': 0,\n\t            'max': options.maxDelay,\n\t            'frequency': options.frequency,\n\t            'phase': -90    //offse the phase so the resting position is in the center\n\t        }).start().connect(this._delayNode.delayTime);\n\t        /**\n\t\t\t *  The frequency of the vibrato\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = this._lfo.frequency;\n\t        /**\n\t\t\t *  The depth of the vibrato. \n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.depth = this._lfo.amplitude;\n\t        this.depth.value = options.depth;\n\t        this._readOnly([\n\t            'frequency',\n\t            'depth'\n\t        ]);\n\t        this.effectSend.chain(this._delayNode, this.effectReturn);\n\t    };\n\t    Tone.extend(Tone.Vibrato, Tone.Effect);\n\t    /**\n\t\t *  The defaults\n\t\t *  @type  {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.Vibrato.defaults = {\n\t        'maxDelay': 0.005,\n\t        'frequency': 5,\n\t        'depth': 0.1,\n\t        'type': 'sine'\n\t    };\n\t    /**\n\t\t * Type of oscillator attached to the Vibrato.\n\t\t * @memberOf Tone.Vibrato#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.Vibrato.prototype, 'type', {\n\t        get: function () {\n\t            return this._lfo.type;\n\t        },\n\t        set: function (type) {\n\t            this._lfo.type = type;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Vibrato} this\n\t\t */\n\t    Tone.Vibrato.prototype.dispose = function () {\n\t        Tone.Effect.prototype.dispose.call(this);\n\t        this._delayNode.dispose();\n\t        this._delayNode = null;\n\t        this._lfo.dispose();\n\t        this._lfo = null;\n\t        this._writable([\n\t            'frequency',\n\t            'depth'\n\t        ]);\n\t        this.frequency = null;\n\t        this.depth = null;\n\t    };\n\t    return Tone.Vibrato;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Event abstracts away Tone.Transport.schedule and provides a schedulable\n\t\t *          callback for a single or repeatable events along the timeline. \n\t\t *\n\t\t *  @extends {Tone}\n\t\t *  @param {function} callback The callback to invoke at the time. \n\t\t *  @param {*} value The value or values which should be passed to\n\t\t *                      the callback function on invocation.  \n\t\t *  @example\n\t\t * var chord = new Tone.Event(function(time, chord){\n\t\t * \t//the chord as well as the exact time of the event\n\t\t * \t//are passed in as arguments to the callback function\n\t\t * }, [\"D4\", \"E4\", \"F4\"]);\n\t\t * //start the chord at the beginning of the transport timeline\n\t\t * chord.start();\n\t\t * //loop it every measure for 8 measures\n\t\t * chord.loop = 8;\n\t\t * chord.loopEnd = \"1m\";\n\t\t */\n\t    Tone.Event = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'callback',\n\t            'value'\n\t        ], Tone.Event);\n\t        Tone.call(this);\n\t        /**\n\t\t\t *  Loop value\n\t\t\t *  @type  {Boolean|Positive}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loop = options.loop;\n\t        /**\n\t\t\t *  The callback to invoke. \n\t\t\t *  @type  {Function}\n\t\t\t */\n\t        this.callback = options.callback;\n\t        /**\n\t\t\t *  The value which is passed to the\n\t\t\t *  callback function.\n\t\t\t *  @type  {*}\n\t\t\t *  @private\n\t\t\t */\n\t        this.value = options.value;\n\t        /**\n\t\t\t *  When the note is scheduled to start.\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loopStart = this.toTicks(options.loopStart);\n\t        /**\n\t\t\t *  When the note is scheduled to start.\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loopEnd = this.toTicks(options.loopEnd);\n\t        /**\n\t\t\t *  Tracks the scheduled events\n\t\t\t *  @type {Tone.TimelineState}\n\t\t\t *  @private\n\t\t\t */\n\t        this._state = new Tone.TimelineState(Tone.State.Stopped);\n\t        /**\n\t\t\t *  The playback speed of the note. A speed of 1\n\t\t\t *  is no change. \n\t\t\t *  @private\n\t\t\t *  @type {Positive}\n\t\t\t */\n\t        this._playbackRate = 1;\n\t        /**\n\t\t\t *  A delay time from when the event is scheduled to start\n\t\t\t *  @type {Ticks}\n\t\t\t *  @private\n\t\t\t */\n\t        this._startOffset = 0;\n\t        /**\n\t\t\t *  private holder of probability value\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @private\n\t\t\t */\n\t        this._probability = options.probability;\n\t        /**\n\t\t\t *  the amount of variation from the\n\t\t\t *  given time. \n\t\t\t *  @type {Boolean|Time}\n\t\t\t *  @private\n\t\t\t */\n\t        this._humanize = options.humanize;\n\t        /**\n\t\t\t *  If mute is true, the callback won't be\n\t\t\t *  invoked.\n\t\t\t *  @type {Boolean}\n\t\t\t */\n\t        this.mute = options.mute;\n\t        //set the initial values\n\t        this.playbackRate = options.playbackRate;\n\t    };\n\t    Tone.extend(Tone.Event);\n\t    /**\n\t\t *  The default values\n\t\t *  @type  {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.Event.defaults = {\n\t        'callback': Tone.noOp,\n\t        'loop': false,\n\t        'loopEnd': '1m',\n\t        'loopStart': 0,\n\t        'playbackRate': 1,\n\t        'value': null,\n\t        'probability': 1,\n\t        'mute': false,\n\t        'humanize': false\n\t    };\n\t    /**\n\t\t *  Reschedule all of the events along the timeline\n\t\t *  with the updated values.\n\t\t *  @param {Time} after Only reschedules events after the given time.\n\t\t *  @return  {Tone.Event}  this\n\t\t *  @private\n\t\t */\n\t    Tone.Event.prototype._rescheduleEvents = function (after) {\n\t        //if no argument is given, schedules all of the events\n\t        after = Tone.defaultArg(after, -1);\n\t        this._state.forEachFrom(after, function (event) {\n\t            var duration;\n\t            if (event.state === Tone.State.Started) {\n\t                if (!Tone.isUndef(event.id)) {\n\t                    Tone.Transport.clear(event.id);\n\t                }\n\t                var startTick = event.time + Math.round(this.startOffset / this._playbackRate);\n\t                if (this._loop) {\n\t                    duration = Infinity;\n\t                    if (Tone.isNumber(this._loop)) {\n\t                        duration = this._loop * this._getLoopDuration();\n\t                    }\n\t                    var nextEvent = this._state.getAfter(startTick);\n\t                    if (nextEvent !== null) {\n\t                        duration = Math.min(duration, nextEvent.time - startTick);\n\t                    }\n\t                    if (duration !== Infinity) {\n\t                        //schedule a stop since it's finite duration\n\t                        this._state.setStateAtTime(Tone.State.Stopped, startTick + duration + 1);\n\t                        duration = Tone.Time(duration, 'i');\n\t                    }\n\t                    var interval = Tone.Time(this._getLoopDuration(), 'i');\n\t                    event.id = Tone.Transport.scheduleRepeat(this._tick.bind(this), interval, Tone.TransportTime(startTick, 'i'), duration);\n\t                } else {\n\t                    event.id = Tone.Transport.schedule(this._tick.bind(this), startTick + 'i');\n\t                }\n\t            }\n\t        }.bind(this));\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Returns the playback state of the note, either \"started\" or \"stopped\".\n\t\t *  @type {String}\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.Event#\n\t\t *  @name state\n\t\t */\n\t    Object.defineProperty(Tone.Event.prototype, 'state', {\n\t        get: function () {\n\t            return this._state.getValueAtTime(Tone.Transport.ticks);\n\t        }\n\t    });\n\t    /**\n\t\t *  The start from the scheduled start time\n\t\t *  @type {Ticks}\n\t\t *  @memberOf Tone.Event#\n\t\t *  @name startOffset\n\t\t *  @private\n\t\t */\n\t    Object.defineProperty(Tone.Event.prototype, 'startOffset', {\n\t        get: function () {\n\t            return this._startOffset;\n\t        },\n\t        set: function (offset) {\n\t            this._startOffset = offset;\n\t        }\n\t    });\n\t    /**\n\t\t *  The probability of the notes being triggered.\n\t\t *  @memberOf Tone.Event#\n\t\t *  @type {NormalRange}\n\t\t *  @name probability\n\t\t */\n\t    Object.defineProperty(Tone.Event.prototype, 'probability', {\n\t        get: function () {\n\t            return this._probability;\n\t        },\n\t        set: function (prob) {\n\t            this._probability = prob;\n\t        }\n\t    });\n\t    /**\n\t\t *  If set to true, will apply small random variation\n\t\t *  to the callback time. If the value is given as a time, it will randomize\n\t\t *  by that amount.\n\t\t *  @example\n\t\t * event.humanize = true;\n\t\t *  @type {Boolean|Time}\n\t\t *  @name humanize\n\t\t */\n\t    Object.defineProperty(Tone.Event.prototype, 'humanize', {\n\t        get: function () {\n\t            return this._humanize;\n\t        },\n\t        set: function (variation) {\n\t            this._humanize = variation;\n\t        }\n\t    });\n\t    /**\n\t\t *  Start the note at the given time. \n\t\t *  @param  {TimelinePosition}  time  When the note should start.\n\t\t *  @return  {Tone.Event}  this\n\t\t */\n\t    Tone.Event.prototype.start = function (time) {\n\t        time = this.toTicks(time);\n\t        if (this._state.getValueAtTime(time) === Tone.State.Stopped) {\n\t            this._state.add({\n\t                'state': Tone.State.Started,\n\t                'time': time,\n\t                'id': undefined\n\t            });\n\t            this._rescheduleEvents(time);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Stop the Event at the given time.\n\t\t *  @param  {TimelinePosition}  time  When the note should stop.\n\t\t *  @return  {Tone.Event}  this\n\t\t */\n\t    Tone.Event.prototype.stop = function (time) {\n\t        this.cancel(time);\n\t        time = this.toTicks(time);\n\t        if (this._state.getValueAtTime(time) === Tone.State.Started) {\n\t            this._state.setStateAtTime(Tone.State.Stopped, time);\n\t            var previousEvent = this._state.getBefore(time);\n\t            var reschedulTime = time;\n\t            if (previousEvent !== null) {\n\t                reschedulTime = previousEvent.time;\n\t            }\n\t            this._rescheduleEvents(reschedulTime);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Cancel all scheduled events greater than or equal to the given time\n\t\t *  @param  {TimelinePosition}  [time=0]  The time after which events will be cancel.\n\t\t *  @return  {Tone.Event}  this\n\t\t */\n\t    Tone.Event.prototype.cancel = function (time) {\n\t        time = Tone.defaultArg(time, -Infinity);\n\t        time = this.toTicks(time);\n\t        this._state.forEachFrom(time, function (event) {\n\t            Tone.Transport.clear(event.id);\n\t        });\n\t        this._state.cancel(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  The callback function invoker. Also \n\t\t *  checks if the Event is done playing\n\t\t *  @param  {Number}  time  The time of the event in seconds\n\t\t *  @private\n\t\t */\n\t    Tone.Event.prototype._tick = function (time) {\n\t        if (!this.mute && this._state.getValueAtTime(Tone.Transport.ticks) === Tone.State.Started) {\n\t            if (this.probability < 1 && Math.random() > this.probability) {\n\t                return;\n\t            }\n\t            if (this.humanize) {\n\t                var variation = 0.02;\n\t                if (!Tone.isBoolean(this.humanize)) {\n\t                    variation = this.toSeconds(this.humanize);\n\t                }\n\t                time += (Math.random() * 2 - 1) * variation;\n\t            }\n\t            this.callback(time, this.value);\n\t        }\n\t    };\n\t    /**\n\t\t *  Get the duration of the loop.\n\t\t *  @return  {Ticks}\n\t\t *  @private\n\t\t */\n\t    Tone.Event.prototype._getLoopDuration = function () {\n\t        return Math.round((this._loopEnd - this._loopStart) / this._playbackRate);\n\t    };\n\t    /**\n\t\t *  If the note should loop or not\n\t\t *  between Tone.Event.loopStart and \n\t\t *  Tone.Event.loopEnd. An integer\n\t\t *  value corresponds to the number of\n\t\t *  loops the Event does after it starts.\n\t\t *  @memberOf Tone.Event#\n\t\t *  @type {Boolean|Positive}\n\t\t *  @name loop\n\t\t */\n\t    Object.defineProperty(Tone.Event.prototype, 'loop', {\n\t        get: function () {\n\t            return this._loop;\n\t        },\n\t        set: function (loop) {\n\t            this._loop = loop;\n\t            this._rescheduleEvents();\n\t        }\n\t    });\n\t    /**\n\t\t * \tThe playback rate of the note. Defaults to 1.\n\t\t *  @memberOf Tone.Event#\n\t\t *  @type {Positive}\n\t\t *  @name playbackRate\n\t\t *  @example\n\t\t * note.loop = true;\n\t\t * //repeat the note twice as fast\n\t\t * note.playbackRate = 2;\n\t\t */\n\t    Object.defineProperty(Tone.Event.prototype, 'playbackRate', {\n\t        get: function () {\n\t            return this._playbackRate;\n\t        },\n\t        set: function (rate) {\n\t            this._playbackRate = rate;\n\t            this._rescheduleEvents();\n\t        }\n\t    });\n\t    /**\n\t\t *  The loopEnd point is the time the event will loop\n\t\t *  if Tone.Event.loop is true.\n\t\t *  @memberOf Tone.Event#\n\t\t *  @type {TransportTime}\n\t\t *  @name loopEnd\n\t\t */\n\t    Object.defineProperty(Tone.Event.prototype, 'loopEnd', {\n\t        get: function () {\n\t            return Tone.TransportTime(this._loopEnd, 'i').toNotation();\n\t        },\n\t        set: function (loopEnd) {\n\t            this._loopEnd = this.toTicks(loopEnd);\n\t            if (this._loop) {\n\t                this._rescheduleEvents();\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  The time when the loop should start. \n\t\t *  @memberOf Tone.Event#\n\t\t *  @type {TransportTime}\n\t\t *  @name loopStart\n\t\t */\n\t    Object.defineProperty(Tone.Event.prototype, 'loopStart', {\n\t        get: function () {\n\t            return Tone.TransportTime(this._loopStart, 'i').toNotation();\n\t        },\n\t        set: function (loopStart) {\n\t            this._loopStart = this.toTicks(loopStart);\n\t            if (this._loop) {\n\t                this._rescheduleEvents();\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  The current progress of the loop interval.\n\t\t *  Returns 0 if the event is not started yet or\n\t\t *  it is not set to loop.\n\t\t *  @memberOf Tone.Event#\n\t\t *  @type {NormalRange}\n\t\t *  @name progress\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Event.prototype, 'progress', {\n\t        get: function () {\n\t            if (this._loop) {\n\t                var ticks = Tone.Transport.ticks;\n\t                var lastEvent = this._state.get(ticks);\n\t                if (lastEvent !== null && lastEvent.state === Tone.State.Started) {\n\t                    var loopDuration = this._getLoopDuration();\n\t                    var progress = (ticks - lastEvent.time) % loopDuration;\n\t                    return progress / loopDuration;\n\t                } else {\n\t                    return 0;\n\t                }\n\t            } else {\n\t                return 0;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up\n\t\t *  @return  {Tone.Event}  this\n\t\t */\n\t    Tone.Event.prototype.dispose = function () {\n\t        this.cancel();\n\t        this._state.dispose();\n\t        this._state = null;\n\t        this.callback = null;\n\t        this.value = null;\n\t    };\n\t    return Tone.Event;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class Tone.Loop creates a looped callback at the \n\t\t *         specified interval. The callback can be \n\t\t *         started, stopped and scheduled along\n\t\t *         the Transport's timeline. \n\t\t *  @example\n\t\t * var loop = new Tone.Loop(function(time){\n\t\t * \t//triggered every eighth note. \n\t\t * \tconsole.log(time);\n\t\t * }, \"8n\").start(0);\n\t\t * Tone.Transport.start();\n\t\t *  @extends {Tone}\n\t\t *  @param {Function} callback The callback to invoke with the event.\n\t\t *  @param {Time} interval The time between successive callback calls. \n\t\t */\n\t    Tone.Loop = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'callback',\n\t            'interval'\n\t        ], Tone.Loop);\n\t        Tone.call(this);\n\t        /**\n\t\t\t *  The event which produces the callbacks\n\t\t\t */\n\t        this._event = new Tone.Event({\n\t            'callback': this._tick.bind(this),\n\t            'loop': true,\n\t            'loopEnd': options.interval,\n\t            'playbackRate': options.playbackRate,\n\t            'probability': options.probability\n\t        });\n\t        /**\n\t\t\t *  The callback to invoke with the next event in the pattern\n\t\t\t *  @type {Function}\n\t\t\t */\n\t        this.callback = options.callback;\n\t        //set the iterations\n\t        this.iterations = options.iterations;\n\t    };\n\t    Tone.extend(Tone.Loop);\n\t    /**\n\t\t *  The defaults\n\t\t *  @const\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.Loop.defaults = {\n\t        'interval': '4n',\n\t        'callback': Tone.noOp,\n\t        'playbackRate': 1,\n\t        'iterations': Infinity,\n\t        'probability': true,\n\t        'mute': false\n\t    };\n\t    /**\n\t\t *  Start the loop at the specified time along the Transport's\n\t\t *  timeline.\n\t\t *  @param  {TimelinePosition=}  time  When to start the Loop.\n\t\t *  @return  {Tone.Loop}  this\n\t\t */\n\t    Tone.Loop.prototype.start = function (time) {\n\t        this._event.start(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Stop the loop at the given time.\n\t\t *  @param  {TimelinePosition=}  time  When to stop the Arpeggio\n\t\t *  @return  {Tone.Loop}  this\n\t\t */\n\t    Tone.Loop.prototype.stop = function (time) {\n\t        this._event.stop(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Cancel all scheduled events greater than or equal to the given time\n\t\t *  @param  {TimelinePosition}  [time=0]  The time after which events will be cancel.\n\t\t *  @return  {Tone.Loop}  this\n\t\t */\n\t    Tone.Loop.prototype.cancel = function (time) {\n\t        this._event.cancel(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Internal function called when the notes should be called\n\t\t *  @param  {Number}  time  The time the event occurs\n\t\t *  @private\n\t\t */\n\t    Tone.Loop.prototype._tick = function (time) {\n\t        this.callback(time);\n\t    };\n\t    /**\n\t\t *  The state of the Loop, either started or stopped.\n\t\t *  @memberOf Tone.Loop#\n\t\t *  @type {String}\n\t\t *  @name state\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Loop.prototype, 'state', {\n\t        get: function () {\n\t            return this._event.state;\n\t        }\n\t    });\n\t    /**\n\t\t *  The progress of the loop as a value between 0-1. 0, when\n\t\t *  the loop is stopped or done iterating. \n\t\t *  @memberOf Tone.Loop#\n\t\t *  @type {NormalRange}\n\t\t *  @name progress\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Loop.prototype, 'progress', {\n\t        get: function () {\n\t            return this._event.progress;\n\t        }\n\t    });\n\t    /**\n\t\t *  The time between successive callbacks. \n\t\t *  @example\n\t\t * loop.interval = \"8n\"; //loop every 8n\n\t\t *  @memberOf Tone.Loop#\n\t\t *  @type {Time}\n\t\t *  @name interval\n\t\t */\n\t    Object.defineProperty(Tone.Loop.prototype, 'interval', {\n\t        get: function () {\n\t            return this._event.loopEnd;\n\t        },\n\t        set: function (interval) {\n\t            this._event.loopEnd = interval;\n\t        }\n\t    });\n\t    /**\n\t\t *  The playback rate of the loop. The normal playback rate is 1 (no change). \n\t\t *  A `playbackRate` of 2 would be twice as fast. \n\t\t *  @memberOf Tone.Loop#\n\t\t *  @type {Time}\n\t\t *  @name playbackRate\n\t\t */\n\t    Object.defineProperty(Tone.Loop.prototype, 'playbackRate', {\n\t        get: function () {\n\t            return this._event.playbackRate;\n\t        },\n\t        set: function (rate) {\n\t            this._event.playbackRate = rate;\n\t        }\n\t    });\n\t    /**\n\t\t *  Random variation +/-0.01s to the scheduled time. \n\t\t *  Or give it a time value which it will randomize by.\n\t\t *  @type {Boolean|Time}\n\t\t *  @memberOf Tone.Loop#\n\t\t *  @name humanize\n\t\t */\n\t    Object.defineProperty(Tone.Loop.prototype, 'humanize', {\n\t        get: function () {\n\t            return this._event.humanize;\n\t        },\n\t        set: function (variation) {\n\t            this._event.humanize = variation;\n\t        }\n\t    });\n\t    /**\n\t\t *  The probably of the callback being invoked.\n\t\t *  @memberOf Tone.Loop#\n\t\t *  @type {NormalRange}\n\t\t *  @name probability\n\t\t */\n\t    Object.defineProperty(Tone.Loop.prototype, 'probability', {\n\t        get: function () {\n\t            return this._event.probability;\n\t        },\n\t        set: function (prob) {\n\t            this._event.probability = prob;\n\t        }\n\t    });\n\t    /**\n\t\t *  Muting the Loop means that no callbacks are invoked.\n\t\t *  @memberOf Tone.Loop#\n\t\t *  @type {Boolean}\n\t\t *  @name mute\n\t\t */\n\t    Object.defineProperty(Tone.Loop.prototype, 'mute', {\n\t        get: function () {\n\t            return this._event.mute;\n\t        },\n\t        set: function (mute) {\n\t            this._event.mute = mute;\n\t        }\n\t    });\n\t    /**\n\t\t *  The number of iterations of the loop. The default\n\t\t *  value is Infinity (loop forever).\n\t\t *  @memberOf Tone.Loop#\n\t\t *  @type {Positive}\n\t\t *  @name iterations\n\t\t */\n\t    Object.defineProperty(Tone.Loop.prototype, 'iterations', {\n\t        get: function () {\n\t            if (this._event.loop === true) {\n\t                return Infinity;\n\t            } else {\n\t                return this._event.loop;\n\t            }\n\t        },\n\t        set: function (iters) {\n\t            if (iters === Infinity) {\n\t                this._event.loop = true;\n\t            } else {\n\t                this._event.loop = iters;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up\n\t\t *  @return  {Tone.Loop}  this\n\t\t */\n\t    Tone.Loop.prototype.dispose = function () {\n\t        this._event.dispose();\n\t        this._event = null;\n\t        this.callback = null;\n\t    };\n\t    return Tone.Loop;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Part is a collection Tone.Events which can be\n\t\t *         started/stopped and looped as a single unit.\n\t\t *\n\t\t *  @extends {Tone.Event}\n\t\t *  @param {Function} callback The callback to invoke on each event\n\t\t *  @param {Array} events the array of events\n\t\t *  @example\n\t\t * var part = new Tone.Part(function(time, note){\n\t\t * \t//the notes given as the second element in the array\n\t\t * \t//will be passed in as the second argument\n\t\t * \tsynth.triggerAttackRelease(note, \"8n\", time);\n\t\t * }, [[0, \"C2\"], [\"0:2\", \"C3\"], [\"0:3:2\", \"G2\"]]);\n\t\t *  @example\n\t\t * //use an array of objects as long as the object has a \"time\" attribute\n\t\t * var part = new Tone.Part(function(time, value){\n\t\t * \t//the value is an object which contains both the note and the velocity\n\t\t * \tsynth.triggerAttackRelease(value.note, \"8n\", time, value.velocity);\n\t\t * }, [{\"time\" : 0, \"note\" : \"C3\", \"velocity\": 0.9}, \n\t\t * \t   {\"time\" : \"0:2\", \"note\" : \"C4\", \"velocity\": 0.5}\n\t\t * ]).start(0);\n\t\t */\n\t    Tone.Part = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'callback',\n\t            'events'\n\t        ], Tone.Part);\n\t        Tone.Event.call(this, options);\n\t        /**\n\t\t\t *  An array of Objects. \n\t\t\t *  @type  {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._events = [];\n\t        //add the events\n\t        for (var i = 0; i < options.events.length; i++) {\n\t            if (Array.isArray(options.events[i])) {\n\t                this.add(options.events[i][0], options.events[i][1]);\n\t            } else {\n\t                this.add(options.events[i]);\n\t            }\n\t        }\n\t    };\n\t    Tone.extend(Tone.Part, Tone.Event);\n\t    /**\n\t\t *  The default values\n\t\t *  @type  {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.Part.defaults = {\n\t        'callback': Tone.noOp,\n\t        'loop': false,\n\t        'loopEnd': '1m',\n\t        'loopStart': 0,\n\t        'playbackRate': 1,\n\t        'probability': 1,\n\t        'humanize': false,\n\t        'mute': false,\n\t        'events': []\n\t    };\n\t    /**\n\t\t *  Start the part at the given time. \n\t\t *  @param  {TransportTime}  time    When to start the part.\n\t\t *  @param  {Time=}  offset  The offset from the start of the part\n\t\t *                           to begin playing at.\n\t\t *  @return  {Tone.Part}  this\n\t\t */\n\t    Tone.Part.prototype.start = function (time, offset) {\n\t        var ticks = this.toTicks(time);\n\t        if (this._state.getValueAtTime(ticks) !== Tone.State.Started) {\n\t            if (this._loop) {\n\t                offset = Tone.defaultArg(offset, this._loopStart);\n\t            } else {\n\t                offset = Tone.defaultArg(offset, 0);\n\t            }\n\t            offset = this.toTicks(offset);\n\t            this._state.add({\n\t                'state': Tone.State.Started,\n\t                'time': ticks,\n\t                'offset': offset\n\t            });\n\t            this._forEach(function (event) {\n\t                this._startNote(event, ticks, offset);\n\t            });\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Start the event in the given event at the correct time given\n\t\t *  the ticks and offset and looping.\n\t\t *  @param  {Tone.Event}  event \n\t\t *  @param  {Ticks}  ticks\n\t\t *  @param  {Ticks}  offset\n\t\t *  @private\n\t\t */\n\t    Tone.Part.prototype._startNote = function (event, ticks, offset) {\n\t        ticks -= offset;\n\t        if (this._loop) {\n\t            if (event.startOffset >= this._loopStart && event.startOffset < this._loopEnd) {\n\t                if (event.startOffset < offset) {\n\t                    //start it on the next loop\n\t                    ticks += this._getLoopDuration();\n\t                }\n\t                event.start(Tone.TransportTime(ticks, 'i'));\n\t            } else if (event.startOffset < this._loopStart && event.startOffset >= offset) {\n\t                event.loop = false;\n\t                event.start(Tone.TransportTime(ticks, 'i'));\n\t            }\n\t        } else {\n\t            if (event.startOffset >= offset) {\n\t                event.start(Tone.TransportTime(ticks, 'i'));\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  The start from the scheduled start time\n\t\t *  @type {Ticks}\n\t\t *  @memberOf Tone.Part#\n\t\t *  @name startOffset\n\t\t *  @private\n\t\t */\n\t    Object.defineProperty(Tone.Part.prototype, 'startOffset', {\n\t        get: function () {\n\t            return this._startOffset;\n\t        },\n\t        set: function (offset) {\n\t            this._startOffset = offset;\n\t            this._forEach(function (event) {\n\t                event.startOffset += this._startOffset;\n\t            });\n\t        }\n\t    });\n\t    /**\n\t\t *  Stop the part at the given time.\n\t\t *  @param  {TimelinePosition}  time  When to stop the part.\n\t\t *  @return  {Tone.Part}  this\n\t\t */\n\t    Tone.Part.prototype.stop = function (time) {\n\t        var ticks = this.toTicks(time);\n\t        this._state.cancel(ticks);\n\t        this._state.setStateAtTime(Tone.State.Stopped, ticks);\n\t        this._forEach(function (event) {\n\t            event.stop(time);\n\t        });\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Get/Set an Event's value at the given time. \n\t\t *  If a value is passed in and no event exists at\n\t\t *  the given time, one will be created with that value. \n\t\t *  If two events are at the same time, the first one will\n\t\t *  be returned.\n\t\t *  @example\n\t\t * part.at(\"1m\"); //returns the part at the first measure\n\t\t *\n\t\t * part.at(\"2m\", \"C2\"); //set the value at \"2m\" to C2. \n\t\t * //if an event didn't exist at that time, it will be created.\n\t\t *  @param {TransportTime} time The time of the event to get or set.\n\t\t *  @param {*=} value If a value is passed in, the value of the\n\t\t *                    event at the given time will be set to it.\n\t\t *  @return {Tone.Event} the event at the time\n\t\t */\n\t    Tone.Part.prototype.at = function (time, value) {\n\t        time = Tone.TransportTime(time);\n\t        var tickTime = Tone.Time(1, 'i').toSeconds();\n\t        for (var i = 0; i < this._events.length; i++) {\n\t            var event = this._events[i];\n\t            if (Math.abs(time.toTicks() - event.startOffset) < tickTime) {\n\t                if (!Tone.isUndef(value)) {\n\t                    event.value = value;\n\t                }\n\t                return event;\n\t            }\n\t        }\n\t        //if there was no event at that time, create one\n\t        if (!Tone.isUndef(value)) {\n\t            this.add(time, value);\n\t            //return the new event\n\t            return this._events[this._events.length - 1];\n\t        } else {\n\t            return null;\n\t        }\n\t    };\n\t    /**\n\t\t *  Add a an event to the part. \n\t\t *  @param {Time} time The time the note should start.\n\t\t *                            If an object is passed in, it should\n\t\t *                            have a 'time' attribute and the rest\n\t\t *                            of the object will be used as the 'value'.\n\t\t *  @param  {Tone.Event|*}  value \n\t\t *  @returns {Tone.Part} this\n\t\t *  @example\n\t\t * part.add(\"1m\", \"C#+11\");\n\t\t */\n\t    Tone.Part.prototype.add = function (time, value) {\n\t        //extract the parameters\n\t        if (time.hasOwnProperty('time')) {\n\t            value = time;\n\t            time = value.time;\n\t        }\n\t        time = this.toTicks(time);\n\t        var event;\n\t        if (value instanceof Tone.Event) {\n\t            event = value;\n\t            event.callback = this._tick.bind(this);\n\t        } else {\n\t            event = new Tone.Event({\n\t                'callback': this._tick.bind(this),\n\t                'value': value\n\t            });\n\t        }\n\t        //the start offset\n\t        event.startOffset = time;\n\t        //initialize the values\n\t        event.set({\n\t            'loopEnd': this.loopEnd,\n\t            'loopStart': this.loopStart,\n\t            'loop': this.loop,\n\t            'humanize': this.humanize,\n\t            'playbackRate': this.playbackRate,\n\t            'probability': this.probability\n\t        });\n\t        this._events.push(event);\n\t        //start the note if it should be played right now\n\t        this._restartEvent(event);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Restart the given event\n\t\t *  @param  {Tone.Event}  event \n\t\t *  @private\n\t\t */\n\t    Tone.Part.prototype._restartEvent = function (event) {\n\t        this._state.forEach(function (stateEvent) {\n\t            if (stateEvent.state === Tone.State.Started) {\n\t                this._startNote(event, stateEvent.time, stateEvent.offset);\n\t            } else {\n\t                //stop the note\n\t                event.stop(Tone.TransportTime(stateEvent.time, 'i'));\n\t            }\n\t        }.bind(this));\n\t    };\n\t    /**\n\t\t *  Remove an event from the part. Will recursively iterate\n\t\t *  into nested parts to find the event.\n\t\t *  @param {Time} time The time of the event\n\t\t *  @param {*} value Optionally select only a specific event value\n\t\t *  @return  {Tone.Part}  this\n\t\t */\n\t    Tone.Part.prototype.remove = function (time, value) {\n\t        //extract the parameters\n\t        if (time.hasOwnProperty('time')) {\n\t            value = time;\n\t            time = value.time;\n\t        }\n\t        time = this.toTicks(time);\n\t        for (var i = this._events.length - 1; i >= 0; i--) {\n\t            var event = this._events[i];\n\t            if (event instanceof Tone.Part) {\n\t                event.remove(time, value);\n\t            } else {\n\t                if (event.startOffset === time) {\n\t                    if (Tone.isUndef(value) || !Tone.isUndef(value) && event.value === value) {\n\t                        this._events.splice(i, 1);\n\t                        event.dispose();\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Remove all of the notes from the group. \n\t\t *  @return  {Tone.Part}  this\n\t\t */\n\t    Tone.Part.prototype.removeAll = function () {\n\t        this._forEach(function (event) {\n\t            event.dispose();\n\t        });\n\t        this._events = [];\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Cancel scheduled state change events: i.e. \"start\" and \"stop\".\n\t\t *  @param {TimelinePosition} after The time after which to cancel the scheduled events.\n\t\t *  @return  {Tone.Part}  this\n\t\t */\n\t    Tone.Part.prototype.cancel = function (after) {\n\t        this._forEach(function (event) {\n\t            event.cancel(after);\n\t        });\n\t        this._state.cancel(this.toTicks(after));\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Iterate over all of the events\n\t\t *  @param {Function} callback\n\t\t *  @param {Object} ctx The context\n\t\t *  @private\n\t\t */\n\t    Tone.Part.prototype._forEach = function (callback, ctx) {\n\t        if (this._events) {\n\t            ctx = Tone.defaultArg(ctx, this);\n\t            for (var i = this._events.length - 1; i >= 0; i--) {\n\t                var e = this._events[i];\n\t                if (e instanceof Tone.Part) {\n\t                    e._forEach(callback, ctx);\n\t                } else {\n\t                    callback.call(ctx, e);\n\t                }\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Set the attribute of all of the events\n\t\t *  @param  {String}  attr  the attribute to set\n\t\t *  @param  {*}  value      The value to set it to\n\t\t *  @private\n\t\t */\n\t    Tone.Part.prototype._setAll = function (attr, value) {\n\t        this._forEach(function (event) {\n\t            event[attr] = value;\n\t        });\n\t    };\n\t    /**\n\t\t *  Internal tick method\n\t\t *  @param  {Number}  time  The time of the event in seconds\n\t\t *  @private\n\t\t */\n\t    Tone.Part.prototype._tick = function (time, value) {\n\t        if (!this.mute) {\n\t            this.callback(time, value);\n\t        }\n\t    };\n\t    /**\n\t\t *  Determine if the event should be currently looping\n\t\t *  given the loop boundries of this Part.\n\t\t *  @param  {Tone.Event}  event  The event to test\n\t\t *  @private\n\t\t */\n\t    Tone.Part.prototype._testLoopBoundries = function (event) {\n\t        if (event.startOffset < this._loopStart || event.startOffset >= this._loopEnd) {\n\t            event.cancel(0);\n\t        } else {\n\t            //reschedule it if it's stopped\n\t            if (event.state === Tone.State.Stopped) {\n\t                this._restartEvent(event);\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  The probability of the notes being triggered.\n\t\t *  @memberOf Tone.Part#\n\t\t *  @type {NormalRange}\n\t\t *  @name probability\n\t\t */\n\t    Object.defineProperty(Tone.Part.prototype, 'probability', {\n\t        get: function () {\n\t            return this._probability;\n\t        },\n\t        set: function (prob) {\n\t            this._probability = prob;\n\t            this._setAll('probability', prob);\n\t        }\n\t    });\n\t    /**\n\t\t *  If set to true, will apply small random variation\n\t\t *  to the callback time. If the value is given as a time, it will randomize\n\t\t *  by that amount.\n\t\t *  @example\n\t\t * event.humanize = true;\n\t\t *  @type {Boolean|Time}\n\t\t *  @name humanize\n\t\t */\n\t    Object.defineProperty(Tone.Part.prototype, 'humanize', {\n\t        get: function () {\n\t            return this._humanize;\n\t        },\n\t        set: function (variation) {\n\t            this._humanize = variation;\n\t            this._setAll('humanize', variation);\n\t        }\n\t    });\n\t    /**\n\t\t *  If the part should loop or not\n\t\t *  between Tone.Part.loopStart and \n\t\t *  Tone.Part.loopEnd. An integer\n\t\t *  value corresponds to the number of\n\t\t *  loops the Part does after it starts.\n\t\t *  @memberOf Tone.Part#\n\t\t *  @type {Boolean|Positive}\n\t\t *  @name loop\n\t\t *  @example\n\t\t * //loop the part 8 times\n\t\t * part.loop = 8;\n\t\t */\n\t    Object.defineProperty(Tone.Part.prototype, 'loop', {\n\t        get: function () {\n\t            return this._loop;\n\t        },\n\t        set: function (loop) {\n\t            this._loop = loop;\n\t            this._forEach(function (event) {\n\t                event._loopStart = this._loopStart;\n\t                event._loopEnd = this._loopEnd;\n\t                event.loop = loop;\n\t                this._testLoopBoundries(event);\n\t            });\n\t        }\n\t    });\n\t    /**\n\t\t *  The loopEnd point determines when it will \n\t\t *  loop if Tone.Part.loop is true.\n\t\t *  @memberOf Tone.Part#\n\t\t *  @type {TransportTime}\n\t\t *  @name loopEnd\n\t\t */\n\t    Object.defineProperty(Tone.Part.prototype, 'loopEnd', {\n\t        get: function () {\n\t            return Tone.TransportTime(this._loopEnd, 'i').toNotation();\n\t        },\n\t        set: function (loopEnd) {\n\t            this._loopEnd = this.toTicks(loopEnd);\n\t            if (this._loop) {\n\t                this._forEach(function (event) {\n\t                    event.loopEnd = loopEnd;\n\t                    this._testLoopBoundries(event);\n\t                });\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  The loopStart point determines when it will \n\t\t *  loop if Tone.Part.loop is true.\n\t\t *  @memberOf Tone.Part#\n\t\t *  @type {TransportTime}\n\t\t *  @name loopStart\n\t\t */\n\t    Object.defineProperty(Tone.Part.prototype, 'loopStart', {\n\t        get: function () {\n\t            return Tone.TransportTime(this._loopStart, 'i').toNotation();\n\t        },\n\t        set: function (loopStart) {\n\t            this._loopStart = this.toTicks(loopStart);\n\t            if (this._loop) {\n\t                this._forEach(function (event) {\n\t                    event.loopStart = this.loopStart;\n\t                    this._testLoopBoundries(event);\n\t                });\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * \tThe playback rate of the part\n\t\t *  @memberOf Tone.Part#\n\t\t *  @type {Positive}\n\t\t *  @name playbackRate\n\t\t */\n\t    Object.defineProperty(Tone.Part.prototype, 'playbackRate', {\n\t        get: function () {\n\t            return this._playbackRate;\n\t        },\n\t        set: function (rate) {\n\t            this._playbackRate = rate;\n\t            this._setAll('playbackRate', rate);\n\t        }\n\t    });\n\t    /**\n\t\t * \tThe number of scheduled notes in the part. \n\t\t *  @memberOf Tone.Part#\n\t\t *  @type {Positive}\n\t\t *  @name length\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Part.prototype, 'length', {\n\t        get: function () {\n\t            return this._events.length;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up\n\t\t *  @return  {Tone.Part}  this\n\t\t */\n\t    Tone.Part.prototype.dispose = function () {\n\t        this.removeAll();\n\t        this._state.dispose();\n\t        this._state = null;\n\t        this.callback = null;\n\t        this._events = null;\n\t        return this;\n\t    };\n\t    return Tone.Part;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class Tone.Pattern arpeggiates between the given notes\n\t\t *         in a number of patterns. See Tone.CtrlPattern for\n\t\t *         a full list of patterns.\n\t\t *  @example\n\t\t * var pattern = new Tone.Pattern(function(time, note){\n\t\t *   //the order of the notes passed in depends on the pattern\n\t\t * }, [\"C2\", \"D4\", \"E5\", \"A6\"], \"upDown\");\n\t\t *  @extends {Tone.Loop}\n\t\t *  @param {Function} callback The callback to invoke with the\n\t\t *                             event.\n\t\t *  @param {Array} values The values to arpeggiate over.\n\t\t */\n\t    Tone.Pattern = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'callback',\n\t            'values',\n\t            'pattern'\n\t        ], Tone.Pattern);\n\t        Tone.Loop.call(this, options);\n\t        /**\n\t\t\t *  The pattern manager\n\t\t\t *  @type {Tone.CtrlPattern}\n\t\t\t *  @private\n\t\t\t */\n\t        this._pattern = new Tone.CtrlPattern({\n\t            'values': options.values,\n\t            'type': options.pattern,\n\t            'index': options.index\n\t        });\n\t    };\n\t    Tone.extend(Tone.Pattern, Tone.Loop);\n\t    /**\n\t\t *  The defaults\n\t\t *  @const\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.Pattern.defaults = {\n\t        'pattern': Tone.CtrlPattern.Type.Up,\n\t        'callback': Tone.noOp,\n\t        'values': []\n\t    };\n\t    /**\n\t\t *  Internal function called when the notes should be called\n\t\t *  @param  {Number}  time  The time the event occurs\n\t\t *  @private\n\t\t */\n\t    Tone.Pattern.prototype._tick = function (time) {\n\t        this.callback(time, this._pattern.value);\n\t        this._pattern.next();\n\t    };\n\t    /**\n\t\t *  The current index in the values array.\n\t\t *  @memberOf Tone.Pattern#\n\t\t *  @type {Positive}\n\t\t *  @name index\n\t\t */\n\t    Object.defineProperty(Tone.Pattern.prototype, 'index', {\n\t        get: function () {\n\t            return this._pattern.index;\n\t        },\n\t        set: function (i) {\n\t            this._pattern.index = i;\n\t        }\n\t    });\n\t    /**\n\t\t *  The array of events.\n\t\t *  @memberOf Tone.Pattern#\n\t\t *  @type {Array}\n\t\t *  @name values\n\t\t */\n\t    Object.defineProperty(Tone.Pattern.prototype, 'values', {\n\t        get: function () {\n\t            return this._pattern.values;\n\t        },\n\t        set: function (vals) {\n\t            this._pattern.values = vals;\n\t        }\n\t    });\n\t    /**\n\t\t *  The current value of the pattern.\n\t\t *  @memberOf Tone.Pattern#\n\t\t *  @type {*}\n\t\t *  @name value\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Pattern.prototype, 'value', {\n\t        get: function () {\n\t            return this._pattern.value;\n\t        }\n\t    });\n\t    /**\n\t\t *  The pattern type. See Tone.CtrlPattern for the full list of patterns.\n\t\t *  @memberOf Tone.Pattern#\n\t\t *  @type {String}\n\t\t *  @name pattern\n\t\t */\n\t    Object.defineProperty(Tone.Pattern.prototype, 'pattern', {\n\t        get: function () {\n\t            return this._pattern.type;\n\t        },\n\t        set: function (pattern) {\n\t            this._pattern.type = pattern;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up\n\t\t *  @return  {Tone.Pattern}  this\n\t\t */\n\t    Tone.Pattern.prototype.dispose = function () {\n\t        Tone.Loop.prototype.dispose.call(this);\n\t        this._pattern.dispose();\n\t        this._pattern = null;\n\t    };\n\t    return Tone.Pattern;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class A sequence is an alternate notation of a part. Instead\n\t\t *         of passing in an array of [time, event] pairs, pass\n\t\t *         in an array of events which will be spaced at the\n\t\t *         given subdivision. Sub-arrays will subdivide that beat\n\t\t *         by the number of items are in the array. \n\t\t *         Sequence notation inspiration from [Tidal](http://yaxu.org/tidal/)\n\t\t *  @param  {Function}  callback  The callback to invoke with every note\n\t\t *  @param  {Array}    events  The sequence\n\t\t *  @param  {Time} subdivision  The subdivision between which events are placed. \n\t\t *  @extends {Tone.Part}\n\t\t *  @example\n\t\t * var seq = new Tone.Sequence(function(time, note){\n\t\t * \tconsole.log(note);\n\t\t * //straight quater notes\n\t\t * }, [\"C4\", \"E4\", \"G4\", \"A4\"], \"4n\");\n\t\t *  @example\n\t\t * var seq = new Tone.Sequence(function(time, note){\n\t\t * \tconsole.log(note);\n\t\t * //subdivisions are given as subarrays\n\t\t * }, [\"C4\", [\"E4\", \"D4\", \"E4\"], \"G4\", [\"A4\", \"G4\"]]);\n\t\t */\n\t    Tone.Sequence = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'callback',\n\t            'events',\n\t            'subdivision'\n\t        ], Tone.Sequence);\n\t        //remove the events\n\t        var events = options.events;\n\t        delete options.events;\n\t        Tone.Part.call(this, options);\n\t        /**\n\t\t\t *  The subdivison of each note\n\t\t\t *  @type  {Ticks}\n\t\t\t *  @private\n\t\t\t */\n\t        this._subdivision = this.toTicks(options.subdivision);\n\t        //if no time was passed in, the loop end is the end of the cycle\n\t        if (Tone.isUndef(options.loopEnd) && !Tone.isUndef(events)) {\n\t            this._loopEnd = events.length * this._subdivision;\n\t        }\n\t        //defaults to looping\n\t        this._loop = true;\n\t        //add all of the events\n\t        if (!Tone.isUndef(events)) {\n\t            for (var i = 0; i < events.length; i++) {\n\t                this.add(i, events[i]);\n\t            }\n\t        }\n\t    };\n\t    Tone.extend(Tone.Sequence, Tone.Part);\n\t    /**\n\t\t *  The default values.\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.Sequence.defaults = { 'subdivision': '4n' };\n\t    /**\n\t\t *  The subdivision of the sequence. This can only be \n\t\t *  set in the constructor. The subdivision is the \n\t\t *  interval between successive steps. \n\t\t *  @type {Time}\n\t\t *  @memberOf Tone.Sequence#\n\t\t *  @name subdivision\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Sequence.prototype, 'subdivision', {\n\t        get: function () {\n\t            return Tone.Time(this._subdivision, 'i').toNotation();\n\t        }\n\t    });\n\t    /**\n\t\t *  Get/Set an index of the sequence. If the index contains a subarray, \n\t\t *  a Tone.Sequence representing that sub-array will be returned. \n\t\t *  @example\n\t\t * var sequence = new Tone.Sequence(playNote, [\"E4\", \"C4\", \"F#4\", [\"A4\", \"Bb3\"]])\n\t\t * sequence.at(0)// => returns \"E4\"\n\t\t * //set a value\n\t\t * sequence.at(0, \"G3\");\n\t\t * //get a nested sequence\n\t\t * sequence.at(3).at(1)// => returns \"Bb3\"\n\t\t * @param {Positive} index The index to get or set\n\t\t * @param {*} value Optionally pass in the value to set at the given index.\n\t\t */\n\t    Tone.Sequence.prototype.at = function (index, value) {\n\t        //if the value is an array, \n\t        if (Tone.isArray(value)) {\n\t            //remove the current event at that index\n\t            this.remove(index);\n\t        }\n\t        //call the parent's method\n\t        return Tone.Part.prototype.at.call(this, this._indexTime(index), value);\n\t    };\n\t    /**\n\t\t *  Add an event at an index, if there's already something\n\t\t *  at that index, overwrite it. If `value` is an array, \n\t\t *  it will be parsed as a subsequence.\n\t\t *  @param {Number} index The index to add the event to\n\t\t *  @param {*} value The value to add at that index\n\t\t *  @returns {Tone.Sequence} this\n\t\t */\n\t    Tone.Sequence.prototype.add = function (index, value) {\n\t        if (value === null) {\n\t            return this;\n\t        }\n\t        if (Tone.isArray(value)) {\n\t            //make a subsequence and add that to the sequence\n\t            var subSubdivision = Math.round(this._subdivision / value.length);\n\t            value = new Tone.Sequence(this._tick.bind(this), value, Tone.Time(subSubdivision, 'i'));\n\t        }\n\t        Tone.Part.prototype.add.call(this, this._indexTime(index), value);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Remove a value from the sequence by index\n\t\t *  @param {Number} index The index of the event to remove\n\t\t *  @returns {Tone.Sequence} this\n\t\t */\n\t    Tone.Sequence.prototype.remove = function (index, value) {\n\t        Tone.Part.prototype.remove.call(this, this._indexTime(index), value);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Get the time of the index given the Sequence's subdivision\n\t\t *  @param  {Number}  index \n\t\t *  @return  {Time}  The time of that index\n\t\t *  @private\n\t\t */\n\t    Tone.Sequence.prototype._indexTime = function (index) {\n\t        if (index instanceof Tone.TransportTime) {\n\t            return index;\n\t        } else {\n\t            return Tone.TransportTime(index * this._subdivision + this.startOffset, 'i');\n\t        }\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return {Tone.Sequence} this\n\t\t */\n\t    Tone.Sequence.prototype.dispose = function () {\n\t        Tone.Part.prototype.dispose.call(this);\n\t        return this;\n\t    };\n\t    return Tone.Sequence;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.PulseOscillator is a pulse oscillator with control over pulse width,\n\t\t *         also known as the duty cycle. At 50% duty cycle (width = 0.5) the wave is \n\t\t *         a square and only odd-numbered harmonics are present. At all other widths \n\t\t *         even-numbered harmonics are present. Read more \n\t\t *         [here](https://wigglewave.wordpress.com/2014/08/16/pulse-waveforms-and-harmonics/).\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Source}\n\t\t *  @param {Frequency} [frequency] The frequency of the oscillator\n\t\t *  @param {NormalRange} [width] The width of the pulse\n\t\t *  @example\n\t\t * var pulse = new Tone.PulseOscillator(\"E5\", 0.4).toMaster().start();\n\t\t */\n\t    Tone.PulseOscillator = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'frequency',\n\t            'width'\n\t        ], Tone.Oscillator);\n\t        Tone.Source.call(this, options);\n\t        /**\n\t\t\t *  The width of the pulse. \n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.width = new Tone.Signal(options.width, Tone.Type.NormalRange);\n\t        /**\n\t\t\t *  gate the width amount\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._widthGate = new Tone.Gain();\n\t        /**\n\t\t\t *  the sawtooth oscillator\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t *  @private\n\t\t\t */\n\t        this._sawtooth = new Tone.Oscillator({\n\t            frequency: options.frequency,\n\t            detune: options.detune,\n\t            type: 'sawtooth',\n\t            phase: options.phase\n\t        });\n\t        /**\n\t\t\t *  The frequency control.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = this._sawtooth.frequency;\n\t        /**\n\t\t\t *  The detune in cents. \n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = this._sawtooth.detune;\n\t        /**\n\t\t\t *  Threshold the signal to turn it into a square\n\t\t\t *  @type {Tone.WaveShaper}\n\t\t\t *  @private\n\t\t\t */\n\t        this._thresh = new Tone.WaveShaper(function (val) {\n\t            if (val < 0) {\n\t                return -1;\n\t            } else {\n\t                return 1;\n\t            }\n\t        });\n\t        //connections\n\t        this._sawtooth.chain(this._thresh, this.output);\n\t        this.width.chain(this._widthGate, this._thresh);\n\t        this._readOnly([\n\t            'width',\n\t            'frequency',\n\t            'detune'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.PulseOscillator, Tone.Source);\n\t    /**\n\t\t *  The default parameters.\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.PulseOscillator.defaults = {\n\t        'frequency': 440,\n\t        'detune': 0,\n\t        'phase': 0,\n\t        'width': 0.2\n\t    };\n\t    /**\n\t\t *  start the oscillator\n\t\t *  @param  {Time} time \n\t\t *  @private\n\t\t */\n\t    Tone.PulseOscillator.prototype._start = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._sawtooth.start(time);\n\t        this._widthGate.gain.setValueAtTime(1, time);\n\t    };\n\t    /**\n\t\t *  stop the oscillator\n\t\t *  @param  {Time} time \n\t\t *  @private\n\t\t */\n\t    Tone.PulseOscillator.prototype._stop = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._sawtooth.stop(time);\n\t        //the width is still connected to the output. \n\t        //that needs to be stopped also\n\t        this._widthGate.gain.setValueAtTime(0, time);\n\t    };\n\t    /**\n\t\t * The phase of the oscillator in degrees.\n\t\t * @memberOf Tone.PulseOscillator#\n\t\t * @type {Degrees}\n\t\t * @name phase\n\t\t */\n\t    Object.defineProperty(Tone.PulseOscillator.prototype, 'phase', {\n\t        get: function () {\n\t            return this._sawtooth.phase;\n\t        },\n\t        set: function (phase) {\n\t            this._sawtooth.phase = phase;\n\t        }\n\t    });\n\t    /**\n\t\t * The type of the oscillator. Always returns \"pulse\".\n\t\t * @readOnly\n\t\t * @memberOf Tone.PulseOscillator#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.PulseOscillator.prototype, 'type', {\n\t        get: function () {\n\t            return 'pulse';\n\t        }\n\t    });\n\t    /**\n\t\t * The partials of the waveform. Cannot set partials for this waveform type\n\t\t * @memberOf Tone.PulseOscillator#\n\t\t * @type {Array}\n\t\t * @name partials\n\t\t * @private\n\t\t */\n\t    Object.defineProperty(Tone.PulseOscillator.prototype, 'partials', {\n\t        get: function () {\n\t            return [];\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up method.\n\t\t *  @return {Tone.PulseOscillator} this\n\t\t */\n\t    Tone.PulseOscillator.prototype.dispose = function () {\n\t        Tone.Source.prototype.dispose.call(this);\n\t        this._sawtooth.dispose();\n\t        this._sawtooth = null;\n\t        this._writable([\n\t            'width',\n\t            'frequency',\n\t            'detune'\n\t        ]);\n\t        this.width.dispose();\n\t        this.width = null;\n\t        this._widthGate.dispose();\n\t        this._widthGate = null;\n\t        this._thresh.dispose();\n\t        this._thresh = null;\n\t        this.frequency = null;\n\t        this.detune = null;\n\t        return this;\n\t    };\n\t    return Tone.PulseOscillator;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.PWMOscillator modulates the width of a Tone.PulseOscillator \n\t\t *         at the modulationFrequency. This has the effect of continuously\n\t\t *         changing the timbre of the oscillator by altering the harmonics \n\t\t *         generated.\n\t\t *\n\t\t *  @extends {Tone.Source}\n\t\t *  @constructor\n\t\t *  @param {Frequency} frequency The starting frequency of the oscillator. \n\t\t *  @param {Frequency} modulationFrequency The modulation frequency of the width of the pulse. \n\t\t *  @example\n\t\t *  var pwm = new Tone.PWMOscillator(\"Ab3\", 0.3).toMaster().start();\n\t\t */\n\t    Tone.PWMOscillator = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'frequency',\n\t            'modulationFrequency'\n\t        ], Tone.PWMOscillator);\n\t        Tone.Source.call(this, options);\n\t        /**\n\t\t\t *  the pulse oscillator\n\t\t\t *  @type {Tone.PulseOscillator}\n\t\t\t *  @private\n\t\t\t */\n\t        this._pulse = new Tone.PulseOscillator(options.modulationFrequency);\n\t        //change the pulse oscillator type\n\t        this._pulse._sawtooth.type = 'sine';\n\t        /**\n\t\t\t *  the modulator\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulator = new Tone.Oscillator({\n\t            'frequency': options.frequency,\n\t            'detune': options.detune,\n\t            'phase': options.phase\n\t        });\n\t        /**\n\t\t\t *  Scale the oscillator so it doesn't go silent \n\t\t\t *  at the extreme values.\n\t\t\t *  @type {Tone.Multiply}\n\t\t\t *  @private\n\t\t\t */\n\t        this._scale = new Tone.Multiply(2);\n\t        /**\n\t\t\t *  The frequency control.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = this._modulator.frequency;\n\t        /**\n\t\t\t *  The detune of the oscillator.\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = this._modulator.detune;\n\t        /**\n\t\t\t *  The modulation rate of the oscillator. \n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.modulationFrequency = this._pulse.frequency;\n\t        //connections\n\t        this._modulator.chain(this._scale, this._pulse.width);\n\t        this._pulse.connect(this.output);\n\t        this._readOnly([\n\t            'modulationFrequency',\n\t            'frequency',\n\t            'detune'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.PWMOscillator, Tone.Source);\n\t    /**\n\t\t *  default values\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.PWMOscillator.defaults = {\n\t        'frequency': 440,\n\t        'detune': 0,\n\t        'phase': 0,\n\t        'modulationFrequency': 0.4\n\t    };\n\t    /**\n\t\t *  start the oscillator\n\t\t *  @param  {Time} [time=now]\n\t\t *  @private\n\t\t */\n\t    Tone.PWMOscillator.prototype._start = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._modulator.start(time);\n\t        this._pulse.start(time);\n\t    };\n\t    /**\n\t\t *  stop the oscillator\n\t\t *  @param  {Time} time (optional) timing parameter\n\t\t *  @private\n\t\t */\n\t    Tone.PWMOscillator.prototype._stop = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._modulator.stop(time);\n\t        this._pulse.stop(time);\n\t    };\n\t    /**\n\t\t * The type of the oscillator. Always returns \"pwm\".\n\t\t * @readOnly\n\t\t * @memberOf Tone.PWMOscillator#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.PWMOscillator.prototype, 'type', {\n\t        get: function () {\n\t            return 'pwm';\n\t        }\n\t    });\n\t    /**\n\t\t * The partials of the waveform. Cannot set partials for this waveform type\n\t\t * @memberOf Tone.PWMOscillator#\n\t\t * @type {Array}\n\t\t * @name partials\n\t\t * @private\n\t\t */\n\t    Object.defineProperty(Tone.PWMOscillator.prototype, 'partials', {\n\t        get: function () {\n\t            return [];\n\t        }\n\t    });\n\t    /**\n\t\t * The phase of the oscillator in degrees.\n\t\t * @memberOf Tone.PWMOscillator#\n\t\t * @type {number}\n\t\t * @name phase\n\t\t */\n\t    Object.defineProperty(Tone.PWMOscillator.prototype, 'phase', {\n\t        get: function () {\n\t            return this._modulator.phase;\n\t        },\n\t        set: function (phase) {\n\t            this._modulator.phase = phase;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return {Tone.PWMOscillator} this\n\t\t */\n\t    Tone.PWMOscillator.prototype.dispose = function () {\n\t        Tone.Source.prototype.dispose.call(this);\n\t        this._pulse.dispose();\n\t        this._pulse = null;\n\t        this._scale.dispose();\n\t        this._scale = null;\n\t        this._modulator.dispose();\n\t        this._modulator = null;\n\t        this._writable([\n\t            'modulationFrequency',\n\t            'frequency',\n\t            'detune'\n\t        ]);\n\t        this.frequency = null;\n\t        this.detune = null;\n\t        this.modulationFrequency = null;\n\t        return this;\n\t    };\n\t    return Tone.PWMOscillator;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.FMOscillator \n\t\t *\n\t\t *  @extends {Tone.Source}\n\t\t *  @constructor\n\t\t *  @param {Frequency} frequency The starting frequency of the oscillator. \n\t\t *  @param {String} type The type of the carrier oscillator.\n\t\t *  @param {String} modulationType The type of the modulator oscillator.\n\t\t *  @example\n\t\t * //a sine oscillator frequency-modulated by a square wave\n\t\t * var fmOsc = new Tone.FMOscillator(\"Ab3\", \"sine\", \"square\").toMaster().start();\n\t\t */\n\t    Tone.FMOscillator = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'frequency',\n\t            'type',\n\t            'modulationType'\n\t        ], Tone.FMOscillator);\n\t        Tone.Source.call(this, options);\n\t        /**\n\t\t\t *  The carrier oscillator\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t *  @private\n\t\t\t */\n\t        this._carrier = new Tone.Oscillator(options.frequency, options.type);\n\t        /**\n\t\t\t *  The oscillator's frequency\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The detune control signal.\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = this._carrier.detune;\n\t        this.detune.value = options.detune;\n\t        /**\n\t\t\t *  The modulation index which is in essence the depth or amount of the modulation. In other terms it is the \n\t\t\t *  ratio of the frequency of the modulating signal (mf) to the amplitude of the \n\t\t\t *  modulating signal (ma) -- as in ma/mf. \n\t\t\t *\t@type {Positive}\n\t\t\t *\t@signal\n\t\t\t */\n\t        this.modulationIndex = new Tone.Multiply(options.modulationIndex);\n\t        this.modulationIndex.units = Tone.Type.Positive;\n\t        /**\n\t\t\t *  The modulating oscillator\n\t\t\t *  @type  {Tone.Oscillator}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulator = new Tone.Oscillator(options.frequency, options.modulationType);\n\t        /**\n\t\t\t *  Harmonicity is the frequency ratio between the carrier and the modulator oscillators. \n\t\t\t *  A harmonicity of 1 gives both oscillators the same frequency. \n\t\t\t *  Harmonicity = 2 means a change of an octave. \n\t\t\t *  @type {Positive}\n\t\t\t *  @signal\n\t\t\t *  @example\n\t\t\t * //pitch the modulator an octave below carrier\n\t\t\t * synth.harmonicity.value = 0.5;\n\t\t\t */\n\t        this.harmonicity = new Tone.Multiply(options.harmonicity);\n\t        this.harmonicity.units = Tone.Type.Positive;\n\t        /**\n\t\t\t *  the node where the modulation happens\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulationNode = new Tone.Gain(0);\n\t        //connections\n\t        this.frequency.connect(this._carrier.frequency);\n\t        this.frequency.chain(this.harmonicity, this._modulator.frequency);\n\t        this.frequency.chain(this.modulationIndex, this._modulationNode);\n\t        this._modulator.connect(this._modulationNode.gain);\n\t        this._modulationNode.connect(this._carrier.frequency);\n\t        this._carrier.connect(this.output);\n\t        this.detune.connect(this._modulator.detune);\n\t        this.phase = options.phase;\n\t        this._readOnly([\n\t            'modulationIndex',\n\t            'frequency',\n\t            'detune',\n\t            'harmonicity'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.FMOscillator, Tone.Source);\n\t    /**\n\t\t *  default values\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.FMOscillator.defaults = {\n\t        'frequency': 440,\n\t        'detune': 0,\n\t        'phase': 0,\n\t        'modulationIndex': 2,\n\t        'modulationType': 'square',\n\t        'harmonicity': 1\n\t    };\n\t    /**\n\t\t *  start the oscillator\n\t\t *  @param  {Time} [time=now]\n\t\t *  @private\n\t\t */\n\t    Tone.FMOscillator.prototype._start = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._modulator.start(time);\n\t        this._carrier.start(time);\n\t    };\n\t    /**\n\t\t *  stop the oscillator\n\t\t *  @param  {Time} time (optional) timing parameter\n\t\t *  @private\n\t\t */\n\t    Tone.FMOscillator.prototype._stop = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._modulator.stop(time);\n\t        this._carrier.stop(time);\n\t    };\n\t    /**\n\t\t * The type of the carrier oscillator\n\t\t * @memberOf Tone.FMOscillator#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.FMOscillator.prototype, 'type', {\n\t        get: function () {\n\t            return this._carrier.type;\n\t        },\n\t        set: function (type) {\n\t            this._carrier.type = type;\n\t        }\n\t    });\n\t    /**\n\t\t * The type of the modulator oscillator\n\t\t * @memberOf Tone.FMOscillator#\n\t\t * @type {String}\n\t\t * @name modulationType\n\t\t */\n\t    Object.defineProperty(Tone.FMOscillator.prototype, 'modulationType', {\n\t        get: function () {\n\t            return this._modulator.type;\n\t        },\n\t        set: function (type) {\n\t            this._modulator.type = type;\n\t        }\n\t    });\n\t    /**\n\t\t * The phase of the oscillator in degrees.\n\t\t * @memberOf Tone.FMOscillator#\n\t\t * @type {number}\n\t\t * @name phase\n\t\t */\n\t    Object.defineProperty(Tone.FMOscillator.prototype, 'phase', {\n\t        get: function () {\n\t            return this._carrier.phase;\n\t        },\n\t        set: function (phase) {\n\t            this._carrier.phase = phase;\n\t            this._modulator.phase = phase;\n\t        }\n\t    });\n\t    /**\n\t\t * The partials of the carrier waveform. A partial represents \n\t\t * the amplitude at a harmonic. The first harmonic is the \n\t\t * fundamental frequency, the second is the octave and so on\n\t\t * following the harmonic series. \n\t\t * Setting this value will automatically set the type to \"custom\". \n\t\t * The value is an empty array when the type is not \"custom\". \n\t\t * @memberOf Tone.FMOscillator#\n\t\t * @type {Array}\n\t\t * @name partials\n\t\t * @example\n\t\t * osc.partials = [1, 0.2, 0.01];\n\t\t */\n\t    Object.defineProperty(Tone.FMOscillator.prototype, 'partials', {\n\t        get: function () {\n\t            return this._carrier.partials;\n\t        },\n\t        set: function (partials) {\n\t            this._carrier.partials = partials;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return {Tone.FMOscillator} this\n\t\t */\n\t    Tone.FMOscillator.prototype.dispose = function () {\n\t        Tone.Source.prototype.dispose.call(this);\n\t        this._writable([\n\t            'modulationIndex',\n\t            'frequency',\n\t            'detune',\n\t            'harmonicity'\n\t        ]);\n\t        this.frequency.dispose();\n\t        this.frequency = null;\n\t        this.detune = null;\n\t        this.harmonicity.dispose();\n\t        this.harmonicity = null;\n\t        this._carrier.dispose();\n\t        this._carrier = null;\n\t        this._modulator.dispose();\n\t        this._modulator = null;\n\t        this._modulationNode.dispose();\n\t        this._modulationNode = null;\n\t        this.modulationIndex.dispose();\n\t        this.modulationIndex = null;\n\t        return this;\n\t    };\n\t    return Tone.FMOscillator;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.AMOscillator \n\t\t *\n\t\t *  @extends {Tone.Oscillator}\n\t\t *  @constructor\n\t\t *  @param {Frequency} frequency The starting frequency of the oscillator. \n\t\t *  @param {String} type The type of the carrier oscillator.\n\t\t *  @param {String} modulationType The type of the modulator oscillator.\n\t\t *  @example\n\t\t * //a sine oscillator frequency-modulated by a square wave\n\t\t * var fmOsc = new Tone.AMOscillator(\"Ab3\", \"sine\", \"square\").toMaster().start();\n\t\t */\n\t    Tone.AMOscillator = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'frequency',\n\t            'type',\n\t            'modulationType'\n\t        ], Tone.AMOscillator);\n\t        Tone.Source.call(this, options);\n\t        /**\n\t\t\t *  The carrier oscillator\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t *  @private\n\t\t\t */\n\t        this._carrier = new Tone.Oscillator(options.frequency, options.type);\n\t        /**\n\t\t\t *  The oscillator's frequency\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = this._carrier.frequency;\n\t        /**\n\t\t\t *  The detune control signal.\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = this._carrier.detune;\n\t        this.detune.value = options.detune;\n\t        /**\n\t\t\t *  The modulating oscillator\n\t\t\t *  @type  {Tone.Oscillator}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulator = new Tone.Oscillator(options.frequency, options.modulationType);\n\t        /**\n\t\t\t *  convert the -1,1 output to 0,1\n\t\t\t *  @type {Tone.AudioToGain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulationScale = new Tone.AudioToGain();\n\t        /**\n\t\t\t *  Harmonicity is the frequency ratio between the carrier and the modulator oscillators. \n\t\t\t *  A harmonicity of 1 gives both oscillators the same frequency. \n\t\t\t *  Harmonicity = 2 means a change of an octave. \n\t\t\t *  @type {Positive}\n\t\t\t *  @signal\n\t\t\t *  @example\n\t\t\t * //pitch the modulator an octave below carrier\n\t\t\t * synth.harmonicity.value = 0.5;\n\t\t\t */\n\t        this.harmonicity = new Tone.Multiply(options.harmonicity);\n\t        this.harmonicity.units = Tone.Type.Positive;\n\t        /**\n\t\t\t *  the node where the modulation happens\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulationNode = new Tone.Gain(0);\n\t        //connections\n\t        this.frequency.chain(this.harmonicity, this._modulator.frequency);\n\t        this.detune.connect(this._modulator.detune);\n\t        this._modulator.chain(this._modulationScale, this._modulationNode.gain);\n\t        this._carrier.chain(this._modulationNode, this.output);\n\t        this.phase = options.phase;\n\t        this._readOnly([\n\t            'frequency',\n\t            'detune',\n\t            'harmonicity'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.AMOscillator, Tone.Oscillator);\n\t    /**\n\t\t *  default values\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.AMOscillator.defaults = {\n\t        'frequency': 440,\n\t        'detune': 0,\n\t        'phase': 0,\n\t        'modulationType': 'square',\n\t        'harmonicity': 1\n\t    };\n\t    /**\n\t\t *  start the oscillator\n\t\t *  @param  {Time} [time=now]\n\t\t *  @private\n\t\t */\n\t    Tone.AMOscillator.prototype._start = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._modulator.start(time);\n\t        this._carrier.start(time);\n\t    };\n\t    /**\n\t\t *  stop the oscillator\n\t\t *  @param  {Time} time (optional) timing parameter\n\t\t *  @private\n\t\t */\n\t    Tone.AMOscillator.prototype._stop = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._modulator.stop(time);\n\t        this._carrier.stop(time);\n\t    };\n\t    /**\n\t\t * The type of the carrier oscillator\n\t\t * @memberOf Tone.AMOscillator#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.AMOscillator.prototype, 'type', {\n\t        get: function () {\n\t            return this._carrier.type;\n\t        },\n\t        set: function (type) {\n\t            this._carrier.type = type;\n\t        }\n\t    });\n\t    /**\n\t\t * The type of the modulator oscillator\n\t\t * @memberOf Tone.AMOscillator#\n\t\t * @type {string}\n\t\t * @name modulationType\n\t\t */\n\t    Object.defineProperty(Tone.AMOscillator.prototype, 'modulationType', {\n\t        get: function () {\n\t            return this._modulator.type;\n\t        },\n\t        set: function (type) {\n\t            this._modulator.type = type;\n\t        }\n\t    });\n\t    /**\n\t\t * The phase of the oscillator in degrees.\n\t\t * @memberOf Tone.AMOscillator#\n\t\t * @type {number}\n\t\t * @name phase\n\t\t */\n\t    Object.defineProperty(Tone.AMOscillator.prototype, 'phase', {\n\t        get: function () {\n\t            return this._carrier.phase;\n\t        },\n\t        set: function (phase) {\n\t            this._carrier.phase = phase;\n\t            this._modulator.phase = phase;\n\t        }\n\t    });\n\t    /**\n\t\t * The partials of the carrier waveform. A partial represents \n\t\t * the amplitude at a harmonic. The first harmonic is the \n\t\t * fundamental frequency, the second is the octave and so on\n\t\t * following the harmonic series. \n\t\t * Setting this value will automatically set the type to \"custom\". \n\t\t * The value is an empty array when the type is not \"custom\". \n\t\t * @memberOf Tone.AMOscillator#\n\t\t * @type {Array}\n\t\t * @name partials\n\t\t * @example\n\t\t * osc.partials = [1, 0.2, 0.01];\n\t\t */\n\t    Object.defineProperty(Tone.AMOscillator.prototype, 'partials', {\n\t        get: function () {\n\t            return this._carrier.partials;\n\t        },\n\t        set: function (partials) {\n\t            this._carrier.partials = partials;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return {Tone.AMOscillator} this\n\t\t */\n\t    Tone.AMOscillator.prototype.dispose = function () {\n\t        Tone.Source.prototype.dispose.call(this);\n\t        this._writable([\n\t            'frequency',\n\t            'detune',\n\t            'harmonicity'\n\t        ]);\n\t        this.frequency = null;\n\t        this.detune = null;\n\t        this.harmonicity.dispose();\n\t        this.harmonicity = null;\n\t        this._carrier.dispose();\n\t        this._carrier = null;\n\t        this._modulator.dispose();\n\t        this._modulator = null;\n\t        this._modulationNode.dispose();\n\t        this._modulationNode = null;\n\t        this._modulationScale.dispose();\n\t        this._modulationScale = null;\n\t        return this;\n\t    };\n\t    return Tone.AMOscillator;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.FatOscillator \n\t\t *\n\t\t *  @extends {Tone.Source}\n\t\t *  @constructor\n\t\t *  @param {Frequency} frequency The starting frequency of the oscillator. \n\t\t *  @param {String} type The type of the carrier oscillator.\n\t\t *  @param {String} modulationType The type of the modulator oscillator.\n\t\t *  @example\n\t\t * //a sine oscillator frequency-modulated by a square wave\n\t\t * var fmOsc = new Tone.FatOscillator(\"Ab3\", \"sine\", \"square\").toMaster().start();\n\t\t */\n\t    Tone.FatOscillator = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'frequency',\n\t            'type',\n\t            'spread'\n\t        ], Tone.FatOscillator);\n\t        Tone.Source.call(this, options);\n\t        /**\n\t\t\t *  The oscillator's frequency\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The detune control signal.\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\t        /**\n\t\t\t *  The array of oscillators\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._oscillators = [];\n\t        /**\n\t\t\t *  The total spread of the oscillators\n\t\t\t *  @type  {Cents}\n\t\t\t *  @private\n\t\t\t */\n\t        this._spread = options.spread;\n\t        /**\n\t\t\t *  The type of the oscillator\n\t\t\t *  @type {String}\n\t\t\t *  @private\n\t\t\t */\n\t        this._type = options.type;\n\t        /**\n\t\t\t *  The phase of the oscillators\n\t\t\t *  @type {Degrees}\n\t\t\t *  @private\n\t\t\t */\n\t        this._phase = options.phase;\n\t        /**\n\t\t\t *  The partials array\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._partials = Tone.defaultArg(options.partials, []);\n\t        //set the count initially\n\t        this.count = options.count;\n\t        this._readOnly([\n\t            'frequency',\n\t            'detune'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.FatOscillator, Tone.Source);\n\t    /**\n\t\t *  default values\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.FatOscillator.defaults = {\n\t        'frequency': 440,\n\t        'detune': 0,\n\t        'phase': 0,\n\t        'spread': 20,\n\t        'count': 3,\n\t        'type': 'sawtooth'\n\t    };\n\t    /**\n\t\t *  start the oscillator\n\t\t *  @param  {Time} [time=now]\n\t\t *  @private\n\t\t */\n\t    Tone.FatOscillator.prototype._start = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._forEach(function (osc) {\n\t            osc.start(time);\n\t        });\n\t    };\n\t    /**\n\t\t *  stop the oscillator\n\t\t *  @param  {Time} time (optional) timing parameter\n\t\t *  @private\n\t\t */\n\t    Tone.FatOscillator.prototype._stop = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._forEach(function (osc) {\n\t            osc.stop(time);\n\t        });\n\t    };\n\t    /**\n\t\t *  Iterate over all of the oscillators\n\t\t *  @param  {Function}  iterator  The iterator function\n\t\t *  @private\n\t\t */\n\t    Tone.FatOscillator.prototype._forEach = function (iterator) {\n\t        for (var i = 0; i < this._oscillators.length; i++) {\n\t            iterator.call(this, this._oscillators[i], i);\n\t        }\n\t    };\n\t    /**\n\t\t * The type of the carrier oscillator\n\t\t * @memberOf Tone.FatOscillator#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.FatOscillator.prototype, 'type', {\n\t        get: function () {\n\t            return this._type;\n\t        },\n\t        set: function (type) {\n\t            this._type = type;\n\t            this._forEach(function (osc) {\n\t                osc.type = type;\n\t            });\n\t        }\n\t    });\n\t    /**\n\t\t * The detune spread between the oscillators. If \"count\" is\n\t\t * set to 3 oscillators and the \"spread\" is set to 40,\n\t\t * the three oscillators would be detuned like this: [-20, 0, 20]\n\t\t * for a total detune spread of 40 cents.\n\t\t * @memberOf Tone.FatOscillator#\n\t\t * @type {Cents}\n\t\t * @name spread\n\t\t */\n\t    Object.defineProperty(Tone.FatOscillator.prototype, 'spread', {\n\t        get: function () {\n\t            return this._spread;\n\t        },\n\t        set: function (spread) {\n\t            this._spread = spread;\n\t            if (this._oscillators.length > 1) {\n\t                var start = -spread / 2;\n\t                var step = spread / (this._oscillators.length - 1);\n\t                this._forEach(function (osc, i) {\n\t                    osc.detune.value = start + step * i;\n\t                });\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The number of detuned oscillators\n\t\t * @memberOf Tone.FatOscillator#\n\t\t * @type {Number}\n\t\t * @name count\n\t\t */\n\t    Object.defineProperty(Tone.FatOscillator.prototype, 'count', {\n\t        get: function () {\n\t            return this._oscillators.length;\n\t        },\n\t        set: function (count) {\n\t            count = Math.max(count, 1);\n\t            if (this._oscillators.length !== count) {\n\t                // var partials = this.partials;\n\t                // var type = this.type;\n\t                //dispose the previous oscillators\n\t                this._forEach(function (osc) {\n\t                    osc.dispose();\n\t                });\n\t                this._oscillators = [];\n\t                for (var i = 0; i < count; i++) {\n\t                    var osc = new Tone.Oscillator();\n\t                    if (this.type === Tone.Oscillator.Type.Custom) {\n\t                        osc.partials = this._partials;\n\t                    } else {\n\t                        osc.type = this._type;\n\t                    }\n\t                    osc.phase = this._phase;\n\t                    osc.volume.value = -6 - count;\n\t                    this.frequency.connect(osc.frequency);\n\t                    this.detune.connect(osc.detune);\n\t                    osc.connect(this.output);\n\t                    this._oscillators[i] = osc;\n\t                }\n\t                //set the spread\n\t                this.spread = this._spread;\n\t                if (this.state === Tone.State.Started) {\n\t                    this._forEach(function (osc) {\n\t                        osc.start();\n\t                    });\n\t                }\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The phase of the oscillator in degrees.\n\t\t * @memberOf Tone.FatOscillator#\n\t\t * @type {Number}\n\t\t * @name phase\n\t\t */\n\t    Object.defineProperty(Tone.FatOscillator.prototype, 'phase', {\n\t        get: function () {\n\t            return this._phase;\n\t        },\n\t        set: function (phase) {\n\t            this._phase = phase;\n\t            this._forEach(function (osc) {\n\t                osc.phase = phase;\n\t            });\n\t        }\n\t    });\n\t    /**\n\t\t * The partials of the carrier waveform. A partial represents \n\t\t * the amplitude at a harmonic. The first harmonic is the \n\t\t * fundamental frequency, the second is the octave and so on\n\t\t * following the harmonic series. \n\t\t * Setting this value will automatically set the type to \"custom\". \n\t\t * The value is an empty array when the type is not \"custom\". \n\t\t * @memberOf Tone.FatOscillator#\n\t\t * @type {Array}\n\t\t * @name partials\n\t\t * @example\n\t\t * osc.partials = [1, 0.2, 0.01];\n\t\t */\n\t    Object.defineProperty(Tone.FatOscillator.prototype, 'partials', {\n\t        get: function () {\n\t            return this._partials;\n\t        },\n\t        set: function (partials) {\n\t            this._partials = partials;\n\t            this._type = Tone.Oscillator.Type.Custom;\n\t            this._forEach(function (osc) {\n\t                osc.partials = partials;\n\t            });\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return {Tone.FatOscillator} this\n\t\t */\n\t    Tone.FatOscillator.prototype.dispose = function () {\n\t        Tone.Source.prototype.dispose.call(this);\n\t        this._writable([\n\t            'frequency',\n\t            'detune'\n\t        ]);\n\t        this.frequency.dispose();\n\t        this.frequency = null;\n\t        this.detune.dispose();\n\t        this.detune = null;\n\t        this._forEach(function (osc) {\n\t            osc.dispose();\n\t        });\n\t        this._oscillators = null;\n\t        this._partials = null;\n\t        return this;\n\t    };\n\t    return Tone.FatOscillator;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.OmniOscillator aggregates Tone.Oscillator, Tone.PulseOscillator,\n\t\t *         Tone.PWMOscillator, Tone.FMOscillator, Tone.AMOscillator, and Tone.FatOscillator\n\t\t *         into one class. The oscillator class can be changed by setting the `type`. \n\t\t *         `omniOsc.type = \"pwm\"` will set it to the Tone.PWMOscillator. Prefixing\n\t\t *         any of the basic types (\"sine\", \"square4\", etc.) with \"fm\", \"am\", or \"fat\"\n\t\t *         will use the FMOscillator, AMOscillator or FatOscillator respectively. \n\t\t *         For example: `omniOsc.type = \"fatsawtooth\"` will create set the oscillator\n\t\t *         to a FatOscillator of type \"sawtooth\". \n\t\t *\n\t\t *  @extends {Tone.Source}\n\t\t *  @constructor\n\t\t *  @param {Frequency} frequency The initial frequency of the oscillator.\n\t\t *  @param {String} type The type of the oscillator.\n\t\t *  @example\n\t\t *  var omniOsc = new Tone.OmniOscillator(\"C#4\", \"pwm\");\n\t\t */\n\t    Tone.OmniOscillator = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'frequency',\n\t            'type'\n\t        ], Tone.OmniOscillator);\n\t        Tone.Source.call(this, options);\n\t        /**\n\t\t\t *  The frequency control.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The detune control\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\t        /**\n\t\t\t *  the type of the oscillator source\n\t\t\t *  @type {String}\n\t\t\t *  @private\n\t\t\t */\n\t        this._sourceType = undefined;\n\t        /**\n\t\t\t *  the oscillator\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t *  @private\n\t\t\t */\n\t        this._oscillator = null;\n\t        //set the oscillator\n\t        this.type = options.type;\n\t        this._readOnly([\n\t            'frequency',\n\t            'detune'\n\t        ]);\n\t        //set the options\n\t        this.set(options);\n\t    };\n\t    Tone.extend(Tone.OmniOscillator, Tone.Source);\n\t    /**\n\t\t *  default values\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.OmniOscillator.defaults = {\n\t        'frequency': 440,\n\t        'detune': 0,\n\t        'type': 'sine',\n\t        'phase': 0\n\t    };\n\t    /**\n\t\t *  @enum {String}\n\t\t *  @private\n\t\t */\n\t    var OmniOscType = {\n\t        Pulse: 'PulseOscillator',\n\t        PWM: 'PWMOscillator',\n\t        Osc: 'Oscillator',\n\t        FM: 'FMOscillator',\n\t        AM: 'AMOscillator',\n\t        Fat: 'FatOscillator'\n\t    };\n\t    /**\n\t\t *  start the oscillator\n\t\t *  @param {Time} [time=now] the time to start the oscillator\n\t\t *  @private\n\t\t */\n\t    Tone.OmniOscillator.prototype._start = function (time) {\n\t        this._oscillator.start(time);\n\t    };\n\t    /**\n\t\t *  start the oscillator\n\t\t *  @param {Time} [time=now] the time to start the oscillator\n\t\t *  @private\n\t\t */\n\t    Tone.OmniOscillator.prototype._stop = function (time) {\n\t        this._oscillator.stop(time);\n\t    };\n\t    /**\n\t\t * The type of the oscillator. Can be any of the basic types: sine, square, triangle, sawtooth. Or\n\t\t * prefix the basic types with \"fm\", \"am\", or \"fat\" to use the FMOscillator, AMOscillator or FatOscillator\n\t\t * types. The oscillator could also be set to \"pwm\" or \"pulse\". All of the parameters of the\n\t\t * oscillator's class are accessible when the oscillator is set to that type, but throws an error \n\t\t * when it's not.\n\t\t * \n\t\t * @memberOf Tone.OmniOscillator#\n\t\t * @type {String}\n\t\t * @name type\n\t\t * @example\n\t\t * omniOsc.type = \"pwm\";\n\t\t * //modulationFrequency is parameter which is available\n\t\t * //only when the type is \"pwm\". \n\t\t * omniOsc.modulationFrequency.value = 0.5;\n\t\t * @example\n\t\t * //an square wave frequency modulated by a sawtooth\n\t\t * omniOsc.type = \"fmsquare\";\n\t\t * omniOsc.modulationType = \"sawtooth\";\n\t\t */\n\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'type', {\n\t        get: function () {\n\t            var prefix = '';\n\t            if (this._sourceType === OmniOscType.FM) {\n\t                prefix = 'fm';\n\t            } else if (this._sourceType === OmniOscType.AM) {\n\t                prefix = 'am';\n\t            } else if (this._sourceType === OmniOscType.Fat) {\n\t                prefix = 'fat';\n\t            }\n\t            return prefix + this._oscillator.type;\n\t        },\n\t        set: function (type) {\n\t            if (type.substr(0, 2) === 'fm') {\n\t                this._createNewOscillator(OmniOscType.FM);\n\t                this._oscillator.type = type.substr(2);\n\t            } else if (type.substr(0, 2) === 'am') {\n\t                this._createNewOscillator(OmniOscType.AM);\n\t                this._oscillator.type = type.substr(2);\n\t            } else if (type.substr(0, 3) === 'fat') {\n\t                this._createNewOscillator(OmniOscType.Fat);\n\t                this._oscillator.type = type.substr(3);\n\t            } else if (type === 'pwm') {\n\t                this._createNewOscillator(OmniOscType.PWM);\n\t            } else if (type === 'pulse') {\n\t                this._createNewOscillator(OmniOscType.Pulse);\n\t            } else {\n\t                this._createNewOscillator(OmniOscType.Osc);\n\t                this._oscillator.type = type;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The partials of the waveform. A partial represents \n\t\t * the amplitude at a harmonic. The first harmonic is the \n\t\t * fundamental frequency, the second is the octave and so on\n\t\t * following the harmonic series. \n\t\t * Setting this value will automatically set the type to \"custom\". \n\t\t * The value is an empty array when the type is not \"custom\". \n\t\t * This is not available on \"pwm\" and \"pulse\" oscillator types.\n\t\t * @memberOf Tone.OmniOscillator#\n\t\t * @type {Array}\n\t\t * @name partials\n\t\t * @example\n\t\t * osc.partials = [1, 0.2, 0.01];\n\t\t */\n\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'partials', {\n\t        get: function () {\n\t            return this._oscillator.partials;\n\t        },\n\t        set: function (partials) {\n\t            this._oscillator.partials = partials;\n\t        }\n\t    });\n\t    /**\n\t\t *  Set a member/attribute of the oscillator. \n\t\t *  @param {Object|String} params\n\t\t *  @param {number=} value\n\t\t *  @param {Time=} rampTime\n\t\t *  @returns {Tone.OmniOscillator} this\n\t\t */\n\t    Tone.OmniOscillator.prototype.set = function (params, value) {\n\t        //make sure the type is set first\n\t        if (params === 'type') {\n\t            this.type = value;\n\t        } else if (Tone.isObject(params) && params.hasOwnProperty('type')) {\n\t            this.type = params.type;\n\t        }\n\t        //then set the rest\n\t        Tone.prototype.set.apply(this, arguments);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  connect the oscillator to the frequency and detune signals\n\t\t *  @private\n\t\t */\n\t    Tone.OmniOscillator.prototype._createNewOscillator = function (oscType) {\n\t        if (oscType !== this._sourceType) {\n\t            this._sourceType = oscType;\n\t            var OscillatorConstructor = Tone[oscType];\n\t            //short delay to avoid clicks on the change\n\t            var now = this.now();\n\t            if (this._oscillator !== null) {\n\t                var oldOsc = this._oscillator;\n\t                oldOsc.stop(now);\n\t                //dispose the old one\n\t                this.context.setTimeout(function () {\n\t                    oldOsc.dispose();\n\t                    oldOsc = null;\n\t                }, this.blockTime);\n\t            }\n\t            this._oscillator = new OscillatorConstructor();\n\t            this.frequency.connect(this._oscillator.frequency);\n\t            this.detune.connect(this._oscillator.detune);\n\t            this._oscillator.connect(this.output);\n\t            if (this.state === Tone.State.Started) {\n\t                this._oscillator.start(now);\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t * The phase of the oscillator in degrees. \n\t\t * @memberOf Tone.OmniOscillator#\n\t\t * @type {Degrees}\n\t\t * @name phase\n\t\t */\n\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'phase', {\n\t        get: function () {\n\t            return this._oscillator.phase;\n\t        },\n\t        set: function (phase) {\n\t            this._oscillator.phase = phase;\n\t        }\n\t    });\n\t    /**\n\t\t * The width of the oscillator (only if the oscillator is set to \"pulse\")\n\t\t * @memberOf Tone.OmniOscillator#\n\t\t * @type {NormalRange}\n\t\t * @signal\n\t\t * @name width\n\t\t * @example\n\t\t * var omniOsc = new Tone.OmniOscillator(440, \"pulse\");\n\t\t * //can access the width attribute only if type === \"pulse\"\n\t\t * omniOsc.width.value = 0.2; \n\t\t */\n\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'width', {\n\t        get: function () {\n\t            if (this._sourceType === OmniOscType.Pulse) {\n\t                return this._oscillator.width;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The number of detuned oscillators\n\t\t * @memberOf Tone.OmniOscillator#\n\t\t * @type {Number}\n\t\t * @name count\n\t\t */\n\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'count', {\n\t        get: function () {\n\t            if (this._sourceType === OmniOscType.Fat) {\n\t                return this._oscillator.count;\n\t            }\n\t        },\n\t        set: function (count) {\n\t            if (this._sourceType === OmniOscType.Fat) {\n\t                this._oscillator.count = count;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The detune spread between the oscillators. If \"count\" is\n\t\t * set to 3 oscillators and the \"spread\" is set to 40,\n\t\t * the three oscillators would be detuned like this: [-20, 0, 20]\n\t\t * for a total detune spread of 40 cents. See Tone.FatOscillator\n\t\t * for more info.\n\t\t * @memberOf Tone.OmniOscillator#\n\t\t * @type {Cents}\n\t\t * @name spread\n\t\t */\n\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'spread', {\n\t        get: function () {\n\t            if (this._sourceType === OmniOscType.Fat) {\n\t                return this._oscillator.spread;\n\t            }\n\t        },\n\t        set: function (spread) {\n\t            if (this._sourceType === OmniOscType.Fat) {\n\t                this._oscillator.spread = spread;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The type of the modulator oscillator. Only if the oscillator\n\t\t * is set to \"am\" or \"fm\" types. see. Tone.AMOscillator or Tone.FMOscillator\n\t\t * for more info. \n\t\t * @memberOf Tone.OmniOscillator#\n\t\t * @type {String}\n\t\t * @name modulationType\n\t\t */\n\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'modulationType', {\n\t        get: function () {\n\t            if (this._sourceType === OmniOscType.FM || this._sourceType === OmniOscType.AM) {\n\t                return this._oscillator.modulationType;\n\t            }\n\t        },\n\t        set: function (mType) {\n\t            if (this._sourceType === OmniOscType.FM || this._sourceType === OmniOscType.AM) {\n\t                this._oscillator.modulationType = mType;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The modulation index which is in essence the depth or amount of the modulation. In other terms it is the \n\t\t * ratio of the frequency of the modulating signal (mf) to the amplitude of the \n\t\t * modulating signal (ma) -- as in ma/mf. \n\t\t * See Tone.FMOscillator for more info. \n\t\t * @type {Positive}\n\t\t * @signal\n\t\t * @name modulationIndex\n\t\t */\n\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'modulationIndex', {\n\t        get: function () {\n\t            if (this._sourceType === OmniOscType.FM) {\n\t                return this._oscillator.modulationIndex;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Harmonicity is the frequency ratio between the carrier and the modulator oscillators. \n\t\t *  A harmonicity of 1 gives both oscillators the same frequency. \n\t\t *  Harmonicity = 2 means a change of an octave. See Tone.AMOscillator or Tone.FMOscillator\n\t\t *  for more info. \n\t\t *  @memberOf Tone.OmniOscillator#\n\t\t *  @signal\n\t\t *  @type {Positive}\n\t\t *  @name harmonicity\n\t\t */\n\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'harmonicity', {\n\t        get: function () {\n\t            if (this._sourceType === OmniOscType.FM || this._sourceType === OmniOscType.AM) {\n\t                return this._oscillator.harmonicity;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The modulationFrequency Signal of the oscillator \n\t\t * (only if the oscillator type is set to pwm). See \n\t\t * Tone.PWMOscillator for more info. \n\t\t * @memberOf Tone.OmniOscillator#\n\t\t * @type {Frequency}\n\t\t * @signal\n\t\t * @name modulationFrequency\n\t\t * @example\n\t\t * var omniOsc = new Tone.OmniOscillator(440, \"pwm\");\n\t\t * //can access the modulationFrequency attribute only if type === \"pwm\"\n\t\t * omniOsc.modulationFrequency.value = 0.2; \n\t\t */\n\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'modulationFrequency', {\n\t        get: function () {\n\t            if (this._sourceType === OmniOscType.PWM) {\n\t                return this._oscillator.modulationFrequency;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return {Tone.OmniOscillator} this\n\t\t */\n\t    Tone.OmniOscillator.prototype.dispose = function () {\n\t        Tone.Source.prototype.dispose.call(this);\n\t        this._writable([\n\t            'frequency',\n\t            'detune'\n\t        ]);\n\t        this.detune.dispose();\n\t        this.detune = null;\n\t        this.frequency.dispose();\n\t        this.frequency = null;\n\t        this._oscillator.dispose();\n\t        this._oscillator = null;\n\t        this._sourceType = null;\n\t        return this;\n\t    };\n\t    return Tone.OmniOscillator;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Base-class for all instruments\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.AudioNode}\n\t\t */\n\t    Tone.Instrument = function (options) {\n\t        //get the defaults\n\t        options = Tone.defaultArg(options, Tone.Instrument.defaults);\n\t        Tone.AudioNode.call(this);\n\t        /**\n\t\t\t *  The output and volume triming node\n\t\t\t *  @type  {Tone.Volume}\n\t\t\t *  @private\n\t\t\t */\n\t        this._volume = this.output = new Tone.Volume(options.volume);\n\t        /**\n\t\t\t * The volume of the output in decibels.\n\t\t\t * @type {Decibels}\n\t\t\t * @signal\n\t\t\t * @example\n\t\t\t * source.volume.value = -6;\n\t\t\t */\n\t        this.volume = this._volume.volume;\n\t        this._readOnly('volume');\n\t    };\n\t    Tone.extend(Tone.Instrument, Tone.AudioNode);\n\t    /**\n\t\t *  the default attributes\n\t\t *  @type {object}\n\t\t */\n\t    Tone.Instrument.defaults = {\n\t        /** the volume of the output in decibels */\n\t        'volume': 0\n\t    };\n\t    /**\n\t\t *  @abstract\n\t\t *  @param {string|number} note the note to trigger\n\t\t *  @param {Time} [time=now] the time to trigger the ntoe\n\t\t *  @param {number} [velocity=1] the velocity to trigger the note\n\t\t */\n\t    Tone.Instrument.prototype.triggerAttack = Tone.noOp;\n\t    /**\n\t\t *  @abstract\n\t\t *  @param {Time} [time=now] when to trigger the release\n\t\t */\n\t    Tone.Instrument.prototype.triggerRelease = Tone.noOp;\n\t    /**\n\t\t *  Trigger the attack and then the release after the duration.\n\t\t *  @param  {Frequency} note     The note to trigger.\n\t\t *  @param  {Time} duration How long the note should be held for before\n\t\t *                          triggering the release. This value must be greater than 0.\n\t\t *  @param {Time} [time=now]  When the note should be triggered.\n\t\t *  @param  {NormalRange} [velocity=1] The velocity the note should be triggered at.\n\t\t *  @returns {Tone.Instrument} this\n\t\t *  @example\n\t\t * //trigger \"C4\" for the duration of an 8th note\n\t\t * synth.triggerAttackRelease(\"C4\", \"8n\");\n\t\t */\n\t    Tone.Instrument.prototype.triggerAttackRelease = function (note, duration, time, velocity) {\n\t        time = this.toSeconds(time);\n\t        duration = this.toSeconds(duration);\n\t        this.triggerAttack(note, time, velocity);\n\t        this.triggerRelease(time + duration);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.Instrument} this\n\t\t */\n\t    Tone.Instrument.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._volume.dispose();\n\t        this._volume = null;\n\t        this._writable(['volume']);\n\t        this.volume = null;\n\t        return this;\n\t    };\n\t    return Tone.Instrument;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  This is an abstract base class for other monophonic instruments to \n\t\t *          extend. IMPORTANT: It does not make any sound on its own and\n\t\t *          shouldn't be directly instantiated.\n\t\t *\n\t\t *  @constructor\n\t\t *  @abstract\n\t\t *  @extends {Tone.Instrument}\n\t\t */\n\t    Tone.Monophonic = function (options) {\n\t        //get the defaults\n\t        options = Tone.defaultArg(options, Tone.Monophonic.defaults);\n\t        Tone.Instrument.call(this, options);\n\t        /**\n\t\t\t *  The glide time between notes. \n\t\t\t *  @type {Time}\n\t\t\t */\n\t        this.portamento = options.portamento;\n\t    };\n\t    Tone.extend(Tone.Monophonic, Tone.Instrument);\n\t    /**\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Monophonic.defaults = { 'portamento': 0 };\n\t    /**\n\t\t *  Trigger the attack of the note optionally with a given velocity. \n\t\t *  \n\t\t *  \n\t\t *  @param  {Frequency} note     The note to trigger.\n\t\t *  @param  {Time} [time=now]     When the note should start.\n\t\t *  @param  {number} [velocity=1] velocity The velocity scaler \n\t\t *                                determines how \"loud\" the note \n\t\t *                                will be triggered.\n\t\t *  @returns {Tone.Monophonic} this\n\t\t *  @example\n\t\t * synth.triggerAttack(\"C4\");\n\t\t *  @example\n\t\t * //trigger the note a half second from now at half velocity\n\t\t * synth.triggerAttack(\"C4\", \"+0.5\", 0.5);\n\t\t */\n\t    Tone.Monophonic.prototype.triggerAttack = function (note, time, velocity) {\n\t        time = this.toSeconds(time);\n\t        this._triggerEnvelopeAttack(time, velocity);\n\t        this.setNote(note, time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Trigger the release portion of the envelope\n\t\t *  @param  {Time} [time=now] If no time is given, the release happens immediatly\n\t\t *  @returns {Tone.Monophonic} this\n\t\t *  @example\n\t\t * synth.triggerRelease();\n\t\t */\n\t    Tone.Monophonic.prototype.triggerRelease = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._triggerEnvelopeRelease(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  override this method with the actual method\n\t\t *  @abstract\n\t\t *  @private\n\t\t */\n\t    Tone.Monophonic.prototype._triggerEnvelopeAttack = function () {\n\t    };\n\t    /**\n\t\t *  override this method with the actual method\n\t\t *  @abstract\n\t\t *  @private\n\t\t */\n\t    Tone.Monophonic.prototype._triggerEnvelopeRelease = function () {\n\t    };\n\t    /**\n\t\t *  Set the note at the given time. If no time is given, the note\n\t\t *  will set immediately. \n\t\t *  @param {Frequency} note The note to change to.\n\t\t *  @param  {Time} [time=now] The time when the note should be set. \n\t\t *  @returns {Tone.Monophonic} this\n\t\t * @example\n\t\t * //change to F#6 in one quarter note from now.\n\t\t * synth.setNote(\"F#6\", \"+4n\");\n\t\t * @example\n\t\t * //change to Bb4 right now\n\t\t * synth.setNote(\"Bb4\");\n\t\t */\n\t    Tone.Monophonic.prototype.setNote = function (note, time) {\n\t        time = this.toSeconds(time);\n\t        if (this.portamento > 0) {\n\t            var currentNote = this.frequency.value;\n\t            this.frequency.setValueAtTime(currentNote, time);\n\t            var portTime = this.toSeconds(this.portamento);\n\t            this.frequency.exponentialRampToValueAtTime(note, time + portTime);\n\t        } else {\n\t            this.frequency.setValueAtTime(note, time);\n\t        }\n\t        return this;\n\t    };\n\t    return Tone.Monophonic;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Synth is composed simply of a Tone.OmniOscillator\n\t\t *          routed through a Tone.AmplitudeEnvelope. \n\t\t *          <img src=\"https://docs.google.com/drawings/d/1-1_0YW2Z1J2EPI36P8fNCMcZG7N1w1GZluPs4og4evo/pub?w=1163&h=231\">\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Monophonic}\n\t\t *  @param {Object} [options] the options available for the synth \n\t\t *                          see defaults below\n\t\t *  @example\n\t\t * var synth = new Tone.Synth().toMaster();\n\t\t * synth.triggerAttackRelease(\"C4\", \"8n\");\n\t\t */\n\t    Tone.Synth = function (options) {\n\t        //get the defaults\n\t        options = Tone.defaultArg(options, Tone.Synth.defaults);\n\t        Tone.Monophonic.call(this, options);\n\t        /**\n\t\t\t *  The oscillator.\n\t\t\t *  @type {Tone.OmniOscillator}\n\t\t\t */\n\t        this.oscillator = new Tone.OmniOscillator(options.oscillator);\n\t        /**\n\t\t\t *  The frequency control.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = this.oscillator.frequency;\n\t        /**\n\t\t\t *  The detune control.\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = this.oscillator.detune;\n\t        /**\n\t\t\t *  The amplitude envelope.\n\t\t\t *  @type {Tone.AmplitudeEnvelope}\n\t\t\t */\n\t        this.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\t        //connect the oscillators to the output\n\t        this.oscillator.chain(this.envelope, this.output);\n\t        //start the oscillators\n\t        this.oscillator.start();\n\t        this._readOnly([\n\t            'oscillator',\n\t            'frequency',\n\t            'detune',\n\t            'envelope'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.Synth, Tone.Monophonic);\n\t    /**\n\t\t *  @const\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Synth.defaults = {\n\t        'oscillator': { 'type': 'triangle' },\n\t        'envelope': {\n\t            'attack': 0.005,\n\t            'decay': 0.1,\n\t            'sustain': 0.3,\n\t            'release': 1\n\t        }\n\t    };\n\t    /**\n\t\t *  start the attack portion of the envelope\n\t\t *  @param {Time} [time=now] the time the attack should start\n\t\t *  @param {number} [velocity=1] the velocity of the note (0-1)\n\t\t *  @returns {Tone.Synth} this\n\t\t *  @private\n\t\t */\n\t    Tone.Synth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n\t        //the envelopes\n\t        this.envelope.triggerAttack(time, velocity);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  start the release portion of the envelope\n\t\t *  @param {Time} [time=now] the time the release should start\n\t\t *  @returns {Tone.Synth} this\n\t\t *  @private\n\t\t */\n\t    Tone.Synth.prototype._triggerEnvelopeRelease = function (time) {\n\t        this.envelope.triggerRelease(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.Synth} this\n\t\t */\n\t    Tone.Synth.prototype.dispose = function () {\n\t        Tone.Monophonic.prototype.dispose.call(this);\n\t        this._writable([\n\t            'oscillator',\n\t            'frequency',\n\t            'detune',\n\t            'envelope'\n\t        ]);\n\t        this.oscillator.dispose();\n\t        this.oscillator = null;\n\t        this.envelope.dispose();\n\t        this.envelope = null;\n\t        this.frequency = null;\n\t        this.detune = null;\n\t        return this;\n\t    };\n\t    return Tone.Synth;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  AMSynth uses the output of one Tone.Synth to modulate the\n\t\t *          amplitude of another Tone.Synth. The harmonicity (the ratio between\n\t\t *          the two signals) affects the timbre of the output signal greatly.\n\t\t *          Read more about Amplitude Modulation Synthesis on\n\t\t *          [SoundOnSound](https://web.archive.org/web/20160404103653/http://www.soundonsound.com:80/sos/mar00/articles/synthsecrets.htm).\n\t\t *          <img src=\"https://docs.google.com/drawings/d/1TQu8Ed4iFr1YTLKpB3U1_hur-UwBrh5gdBXc8BxfGKw/pub?w=1009&h=457\">\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Monophonic}\n\t\t *  @param {Object} [options] the options available for the synth\n\t\t *                            see defaults below\n\t\t *  @example\n\t\t * var synth = new Tone.AMSynth().toMaster();\n\t\t * synth.triggerAttackRelease(\"C4\", \"4n\");\n\t\t */\n\t    Tone.AMSynth = function (options) {\n\t        options = Tone.defaultArg(options, Tone.AMSynth.defaults);\n\t        Tone.Monophonic.call(this, options);\n\t        /**\n\t\t\t *  The carrier voice.\n\t\t\t *  @type {Tone.Synth}\n\t\t\t *  @private\n\t\t\t */\n\t        this._carrier = new Tone.Synth();\n\t        this._carrier.volume.value = -10;\n\t        /**\n\t\t\t *  The carrier's oscillator\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t */\n\t        this.oscillator = this._carrier.oscillator;\n\t        /**\n\t\t\t *  The carrier's envelope\n\t\t\t *  @type {Tone.AmplitudeEnvelope}\n\t\t\t */\n\t        this.envelope = this._carrier.envelope.set(options.envelope);\n\t        /**\n\t\t\t *  The modulator voice.\n\t\t\t *  @type {Tone.Synth}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulator = new Tone.Synth();\n\t        this._modulator.volume.value = -10;\n\t        /**\n\t\t\t *  The modulator's oscillator which is applied\n\t\t\t *  to the amplitude of the oscillator\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t */\n\t        this.modulation = this._modulator.oscillator.set(options.modulation);\n\t        /**\n\t\t\t *  The modulator's envelope\n\t\t\t *  @type {Tone.AmplitudeEnvelope}\n\t\t\t */\n\t        this.modulationEnvelope = this._modulator.envelope.set(options.modulationEnvelope);\n\t        /**\n\t\t\t *  The frequency.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.Signal(440, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The detune in cents\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\t        /**\n\t\t\t *  Harmonicity is the ratio between the two voices. A harmonicity of\n\t\t\t *  1 is no change. Harmonicity = 2 means a change of an octave.\n\t\t\t *  @type {Positive}\n\t\t\t *  @signal\n\t\t\t *  @example\n\t\t\t * //pitch voice1 an octave below voice0\n\t\t\t * synth.harmonicity.value = 0.5;\n\t\t\t */\n\t        this.harmonicity = new Tone.Multiply(options.harmonicity);\n\t        this.harmonicity.units = Tone.Type.Positive;\n\t        /**\n\t\t\t *  convert the -1,1 output to 0,1\n\t\t\t *  @type {Tone.AudioToGain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulationScale = new Tone.AudioToGain();\n\t        /**\n\t\t\t *  the node where the modulation happens\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulationNode = new Tone.Gain();\n\t        //control the two voices frequency\n\t        this.frequency.connect(this._carrier.frequency);\n\t        this.frequency.chain(this.harmonicity, this._modulator.frequency);\n\t        this.detune.fan(this._carrier.detune, this._modulator.detune);\n\t        this._modulator.chain(this._modulationScale, this._modulationNode.gain);\n\t        this._carrier.chain(this._modulationNode, this.output);\n\t        this._readOnly([\n\t            'frequency',\n\t            'harmonicity',\n\t            'oscillator',\n\t            'envelope',\n\t            'modulation',\n\t            'modulationEnvelope',\n\t            'detune'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.AMSynth, Tone.Monophonic);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.AMSynth.defaults = {\n\t        'harmonicity': 3,\n\t        'detune': 0,\n\t        'oscillator': { 'type': 'sine' },\n\t        'envelope': {\n\t            'attack': 0.01,\n\t            'decay': 0.01,\n\t            'sustain': 1,\n\t            'release': 0.5\n\t        },\n\t        'modulation': { 'type': 'square' },\n\t        'modulationEnvelope': {\n\t            'attack': 0.5,\n\t            'decay': 0,\n\t            'sustain': 1,\n\t            'release': 0.5\n\t        }\n\t    };\n\t    /**\n\t\t *  trigger the attack portion of the note\n\t\t *\n\t\t *  @param  {Time} [time=now] the time the note will occur\n\t\t *  @param {NormalRange} [velocity=1] the velocity of the note\n\t\t *  @private\n\t\t *  @returns {Tone.AMSynth} this\n\t\t */\n\t    Tone.AMSynth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n\t        //the port glide\n\t        time = this.toSeconds(time);\n\t        //the envelopes\n\t        this.envelope.triggerAttack(time, velocity);\n\t        this.modulationEnvelope.triggerAttack(time, velocity);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  trigger the release portion of the note\n\t\t *\n\t\t *  @param  {Time} [time=now] the time the note will release\n\t\t *  @private\n\t\t *  @returns {Tone.AMSynth} this\n\t\t */\n\t    Tone.AMSynth.prototype._triggerEnvelopeRelease = function (time) {\n\t        this.envelope.triggerRelease(time);\n\t        this.modulationEnvelope.triggerRelease(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.AMSynth} this\n\t\t */\n\t    Tone.AMSynth.prototype.dispose = function () {\n\t        Tone.Monophonic.prototype.dispose.call(this);\n\t        this._writable([\n\t            'frequency',\n\t            'harmonicity',\n\t            'oscillator',\n\t            'envelope',\n\t            'modulation',\n\t            'modulationEnvelope',\n\t            'detune'\n\t        ]);\n\t        this._carrier.dispose();\n\t        this._carrier = null;\n\t        this._modulator.dispose();\n\t        this._modulator = null;\n\t        this.frequency.dispose();\n\t        this.frequency = null;\n\t        this.detune.dispose();\n\t        this.detune = null;\n\t        this.harmonicity.dispose();\n\t        this.harmonicity = null;\n\t        this._modulationScale.dispose();\n\t        this._modulationScale = null;\n\t        this._modulationNode.dispose();\n\t        this._modulationNode = null;\n\t        this.oscillator = null;\n\t        this.envelope = null;\n\t        this.modulationEnvelope = null;\n\t        this.modulation = null;\n\t        return this;\n\t    };\n\t    return Tone.AMSynth;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.MonoSynth is composed of one oscillator, one filter, and two envelopes.\n\t\t *          The amplitude of the Tone.Oscillator and the cutoff frequency of the \n\t\t *          Tone.Filter are controlled by Tone.Envelopes. \n\t\t *          <img src=\"https://docs.google.com/drawings/d/1gaY1DF9_Hzkodqf8JI1Cg2VZfwSElpFQfI94IQwad38/pub?w=924&h=240\">\n\t\t *          \n\t\t *  @constructor\n\t\t *  @extends {Tone.Monophonic}\n\t\t *  @param {Object} [options] the options available for the synth \n\t\t *                          see defaults below\n\t\t *  @example\n\t\t * var synth = new Tone.MonoSynth({\n\t\t * \t\"oscillator\" : {\n\t\t * \t\t\"type\" : \"square\"\n\t\t *  },\n\t\t *  \"envelope\" : {\n\t\t *  \t\"attack\" : 0.1\n\t\t *  }\n\t\t * }).toMaster();\n\t\t * synth.triggerAttackRelease(\"C4\", \"8n\");\n\t\t */\n\t    Tone.MonoSynth = function (options) {\n\t        //get the defaults\n\t        options = Tone.defaultArg(options, Tone.MonoSynth.defaults);\n\t        Tone.Monophonic.call(this, options);\n\t        /**\n\t\t\t *  The oscillator.\n\t\t\t *  @type {Tone.OmniOscillator}\n\t\t\t */\n\t        this.oscillator = new Tone.OmniOscillator(options.oscillator);\n\t        /**\n\t\t\t *  The frequency control.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = this.oscillator.frequency;\n\t        /**\n\t\t\t *  The detune control.\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = this.oscillator.detune;\n\t        /**\n\t\t\t *  The filter.\n\t\t\t *  @type {Tone.Filter}\n\t\t\t */\n\t        this.filter = new Tone.Filter(options.filter);\n\t        /**\n\t\t\t *  The filter envelope.\n\t\t\t *  @type {Tone.FrequencyEnvelope}\n\t\t\t */\n\t        this.filterEnvelope = new Tone.FrequencyEnvelope(options.filterEnvelope);\n\t        /**\n\t\t\t *  The amplitude envelope.\n\t\t\t *  @type {Tone.AmplitudeEnvelope}\n\t\t\t */\n\t        this.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\t        //connect the oscillators to the output\n\t        this.oscillator.chain(this.filter, this.envelope, this.output);\n\t        //start the oscillators\n\t        this.oscillator.start();\n\t        //connect the filter envelope\n\t        this.filterEnvelope.connect(this.filter.frequency);\n\t        this._readOnly([\n\t            'oscillator',\n\t            'frequency',\n\t            'detune',\n\t            'filter',\n\t            'filterEnvelope',\n\t            'envelope'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.MonoSynth, Tone.Monophonic);\n\t    /**\n\t\t *  @const\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.MonoSynth.defaults = {\n\t        'frequency': 'C4',\n\t        'detune': 0,\n\t        'oscillator': { 'type': 'square' },\n\t        'filter': {\n\t            'Q': 6,\n\t            'type': 'lowpass',\n\t            'rolloff': -24\n\t        },\n\t        'envelope': {\n\t            'attack': 0.005,\n\t            'decay': 0.1,\n\t            'sustain': 0.9,\n\t            'release': 1\n\t        },\n\t        'filterEnvelope': {\n\t            'attack': 0.06,\n\t            'decay': 0.2,\n\t            'sustain': 0.5,\n\t            'release': 2,\n\t            'baseFrequency': 200,\n\t            'octaves': 7,\n\t            'exponent': 2\n\t        }\n\t    };\n\t    /**\n\t\t *  start the attack portion of the envelope\n\t\t *  @param {Time} [time=now] the time the attack should start\n\t\t *  @param {NormalRange} [velocity=1] the velocity of the note (0-1)\n\t\t *  @returns {Tone.MonoSynth} this\n\t\t *  @private\n\t\t */\n\t    Tone.MonoSynth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n\t        //the envelopes\n\t        this.envelope.triggerAttack(time, velocity);\n\t        this.filterEnvelope.triggerAttack(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  start the release portion of the envelope\n\t\t *  @param {Time} [time=now] the time the release should start\n\t\t *  @returns {Tone.MonoSynth} this\n\t\t *  @private\n\t\t */\n\t    Tone.MonoSynth.prototype._triggerEnvelopeRelease = function (time) {\n\t        this.envelope.triggerRelease(time);\n\t        this.filterEnvelope.triggerRelease(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.MonoSynth} this\n\t\t */\n\t    Tone.MonoSynth.prototype.dispose = function () {\n\t        Tone.Monophonic.prototype.dispose.call(this);\n\t        this._writable([\n\t            'oscillator',\n\t            'frequency',\n\t            'detune',\n\t            'filter',\n\t            'filterEnvelope',\n\t            'envelope'\n\t        ]);\n\t        this.oscillator.dispose();\n\t        this.oscillator = null;\n\t        this.envelope.dispose();\n\t        this.envelope = null;\n\t        this.filterEnvelope.dispose();\n\t        this.filterEnvelope = null;\n\t        this.filter.dispose();\n\t        this.filter = null;\n\t        this.frequency = null;\n\t        this.detune = null;\n\t        return this;\n\t    };\n\t    return Tone.MonoSynth;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.DuoSynth is a monophonic synth composed of two \n\t\t *          MonoSynths run in parallel with control over the \n\t\t *          frequency ratio between the two voices and vibrato effect.\n\t\t *          <img src=\"https://docs.google.com/drawings/d/1bL4GXvfRMMlqS7XyBm9CjL9KJPSUKbcdBNpqOlkFLxk/pub?w=1012&h=448\">\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Monophonic}\n\t\t *  @param {Object} [options] the options available for the synth \n\t\t *                          see defaults below\n\t\t *  @example\n\t\t * var duoSynth = new Tone.DuoSynth().toMaster();\n\t\t * duoSynth.triggerAttackRelease(\"C4\", \"2n\");\n\t\t */\n\t    Tone.DuoSynth = function (options) {\n\t        options = Tone.defaultArg(options, Tone.DuoSynth.defaults);\n\t        Tone.Monophonic.call(this, options);\n\t        /**\n\t\t\t *  the first voice\n\t\t\t *  @type {Tone.MonoSynth}\n\t\t\t */\n\t        this.voice0 = new Tone.MonoSynth(options.voice0);\n\t        this.voice0.volume.value = -10;\n\t        /**\n\t\t\t *  the second voice\n\t\t\t *  @type {Tone.MonoSynth}\n\t\t\t */\n\t        this.voice1 = new Tone.MonoSynth(options.voice1);\n\t        this.voice1.volume.value = -10;\n\t        /**\n\t\t\t *  The vibrato LFO. \n\t\t\t *  @type {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._vibrato = new Tone.LFO(options.vibratoRate, -50, 50);\n\t        this._vibrato.start();\n\t        /**\n\t\t\t * the vibrato frequency\n\t\t\t * @type {Frequency}\n\t\t\t * @signal\n\t\t\t */\n\t        this.vibratoRate = this._vibrato.frequency;\n\t        /**\n\t\t\t *  the vibrato gain\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._vibratoGain = new Tone.Gain(options.vibratoAmount, Tone.Type.Positive);\n\t        /**\n\t\t\t * The amount of vibrato\n\t\t\t * @type {Positive}\n\t\t\t * @signal\n\t\t\t */\n\t        this.vibratoAmount = this._vibratoGain.gain;\n\t        /**\n\t\t\t *  the frequency control\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.Signal(440, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  Harmonicity is the ratio between the two voices. A harmonicity of\n\t\t\t *  1 is no change. Harmonicity = 2 means a change of an octave. \n\t\t\t *  @type {Positive}\n\t\t\t *  @signal\n\t\t\t *  @example\n\t\t\t * //pitch voice1 an octave below voice0\n\t\t\t * duoSynth.harmonicity.value = 0.5;\n\t\t\t */\n\t        this.harmonicity = new Tone.Multiply(options.harmonicity);\n\t        this.harmonicity.units = Tone.Type.Positive;\n\t        //control the two voices frequency\n\t        this.frequency.connect(this.voice0.frequency);\n\t        this.frequency.chain(this.harmonicity, this.voice1.frequency);\n\t        this._vibrato.connect(this._vibratoGain);\n\t        this._vibratoGain.fan(this.voice0.detune, this.voice1.detune);\n\t        this.voice0.connect(this.output);\n\t        this.voice1.connect(this.output);\n\t        this._readOnly([\n\t            'voice0',\n\t            'voice1',\n\t            'frequency',\n\t            'vibratoAmount',\n\t            'vibratoRate'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.DuoSynth, Tone.Monophonic);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.DuoSynth.defaults = {\n\t        'vibratoAmount': 0.5,\n\t        'vibratoRate': 5,\n\t        'harmonicity': 1.5,\n\t        'voice0': {\n\t            'volume': -10,\n\t            'portamento': 0,\n\t            'oscillator': { 'type': 'sine' },\n\t            'filterEnvelope': {\n\t                'attack': 0.01,\n\t                'decay': 0,\n\t                'sustain': 1,\n\t                'release': 0.5\n\t            },\n\t            'envelope': {\n\t                'attack': 0.01,\n\t                'decay': 0,\n\t                'sustain': 1,\n\t                'release': 0.5\n\t            }\n\t        },\n\t        'voice1': {\n\t            'volume': -10,\n\t            'portamento': 0,\n\t            'oscillator': { 'type': 'sine' },\n\t            'filterEnvelope': {\n\t                'attack': 0.01,\n\t                'decay': 0,\n\t                'sustain': 1,\n\t                'release': 0.5\n\t            },\n\t            'envelope': {\n\t                'attack': 0.01,\n\t                'decay': 0,\n\t                'sustain': 1,\n\t                'release': 0.5\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  start the attack portion of the envelopes\n\t\t *  \n\t\t *  @param {Time} [time=now] the time the attack should start\n\t\t *  @param {NormalRange} [velocity=1] the velocity of the note (0-1)\n\t\t *  @returns {Tone.DuoSynth} this\n\t\t *  @private\n\t\t */\n\t    Tone.DuoSynth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n\t        time = this.toSeconds(time);\n\t        this.voice0.envelope.triggerAttack(time, velocity);\n\t        this.voice1.envelope.triggerAttack(time, velocity);\n\t        this.voice0.filterEnvelope.triggerAttack(time);\n\t        this.voice1.filterEnvelope.triggerAttack(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  start the release portion of the envelopes\n\t\t *  \n\t\t *  @param {Time} [time=now] the time the release should start\n\t\t *  @returns {Tone.DuoSynth} this\n\t\t *  @private\n\t\t */\n\t    Tone.DuoSynth.prototype._triggerEnvelopeRelease = function (time) {\n\t        this.voice0.triggerRelease(time);\n\t        this.voice1.triggerRelease(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.DuoSynth} this\n\t\t */\n\t    Tone.DuoSynth.prototype.dispose = function () {\n\t        Tone.Monophonic.prototype.dispose.call(this);\n\t        this._writable([\n\t            'voice0',\n\t            'voice1',\n\t            'frequency',\n\t            'vibratoAmount',\n\t            'vibratoRate'\n\t        ]);\n\t        this.voice0.dispose();\n\t        this.voice0 = null;\n\t        this.voice1.dispose();\n\t        this.voice1 = null;\n\t        this.frequency.dispose();\n\t        this.frequency = null;\n\t        this._vibratoGain.dispose();\n\t        this._vibratoGain = null;\n\t        this._vibrato = null;\n\t        this.harmonicity.dispose();\n\t        this.harmonicity = null;\n\t        this.vibratoAmount.dispose();\n\t        this.vibratoAmount = null;\n\t        this.vibratoRate = null;\n\t        return this;\n\t    };\n\t    return Tone.DuoSynth;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  FMSynth is composed of two Tone.Synths where one Tone.Synth modulates\n\t\t *          the frequency of a second Tone.Synth. A lot of spectral content \n\t\t *          can be explored using the modulationIndex parameter. Read more about\n\t\t *          frequency modulation synthesis on Sound On Sound: [Part 1](https://web.archive.org/web/20160403123704/http://www.soundonsound.com/sos/apr00/articles/synthsecrets.htm), [Part 2](https://web.archive.org/web/20160403115835/http://www.soundonsound.com/sos/may00/articles/synth.htm).\n\t\t *          <img src=\"https://docs.google.com/drawings/d/1h0PUDZXPgi4Ikx6bVT6oncrYPLluFKy7lj53puxj-DM/pub?w=902&h=462\">\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Monophonic}\n\t\t *  @param {Object} [options] the options available for the synth\n\t\t *                          see defaults below\n\t\t *  @example\n\t\t * var fmSynth = new Tone.FMSynth().toMaster();\n\t\t * fmSynth.triggerAttackRelease(\"C5\", \"4n\");\n\t\t */\n\t    Tone.FMSynth = function (options) {\n\t        options = Tone.defaultArg(options, Tone.FMSynth.defaults);\n\t        Tone.Monophonic.call(this, options);\n\t        /**\n\t\t\t *  The carrier voice.\n\t\t\t *  @type {Tone.Synth}\n\t\t\t *  @private\n\t\t\t */\n\t        this._carrier = new Tone.Synth(options.carrier);\n\t        this._carrier.volume.value = -10;\n\t        /**\n\t\t\t *  The carrier's oscillator\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t */\n\t        this.oscillator = this._carrier.oscillator;\n\t        /**\n\t\t\t *  The carrier's envelope\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t */\n\t        this.envelope = this._carrier.envelope.set(options.envelope);\n\t        /**\n\t\t\t *  The modulator voice.\n\t\t\t *  @type {Tone.Synth}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulator = new Tone.Synth(options.modulator);\n\t        this._modulator.volume.value = -10;\n\t        /**\n\t\t\t *  The modulator's oscillator which is applied\n\t\t\t *  to the amplitude of the oscillator\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t */\n\t        this.modulation = this._modulator.oscillator.set(options.modulation);\n\t        /**\n\t\t\t *  The modulator's envelope\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t */\n\t        this.modulationEnvelope = this._modulator.envelope.set(options.modulationEnvelope);\n\t        /**\n\t\t\t *  The frequency control.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.Signal(440, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The detune in cents\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\t        /**\n\t\t\t *  Harmonicity is the ratio between the two voices. A harmonicity of\n\t\t\t *  1 is no change. Harmonicity = 2 means a change of an octave.\n\t\t\t *  @type {Positive}\n\t\t\t *  @signal\n\t\t\t *  @example\n\t\t\t * //pitch voice1 an octave below voice0\n\t\t\t * synth.harmonicity.value = 0.5;\n\t\t\t */\n\t        this.harmonicity = new Tone.Multiply(options.harmonicity);\n\t        this.harmonicity.units = Tone.Type.Positive;\n\t        /**\n\t\t\t *  The modulation index which essentially the depth or amount of the modulation. It is the\n\t\t\t *  ratio of the frequency of the modulating signal (mf) to the amplitude of the\n\t\t\t *  modulating signal (ma) -- as in ma/mf.\n\t\t\t *\t@type {Positive}\n\t\t\t *\t@signal\n\t\t\t */\n\t        this.modulationIndex = new Tone.Multiply(options.modulationIndex);\n\t        this.modulationIndex.units = Tone.Type.Positive;\n\t        /**\n\t\t\t *  the node where the modulation happens\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulationNode = new Tone.Gain(0);\n\t        //control the two voices frequency\n\t        this.frequency.connect(this._carrier.frequency);\n\t        this.frequency.chain(this.harmonicity, this._modulator.frequency);\n\t        this.frequency.chain(this.modulationIndex, this._modulationNode);\n\t        this.detune.fan(this._carrier.detune, this._modulator.detune);\n\t        this._modulator.connect(this._modulationNode.gain);\n\t        this._modulationNode.connect(this._carrier.frequency);\n\t        this._carrier.connect(this.output);\n\t        this._readOnly([\n\t            'frequency',\n\t            'harmonicity',\n\t            'modulationIndex',\n\t            'oscillator',\n\t            'envelope',\n\t            'modulation',\n\t            'modulationEnvelope',\n\t            'detune'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.FMSynth, Tone.Monophonic);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.FMSynth.defaults = {\n\t        'harmonicity': 3,\n\t        'modulationIndex': 10,\n\t        'detune': 0,\n\t        'oscillator': { 'type': 'sine' },\n\t        'envelope': {\n\t            'attack': 0.01,\n\t            'decay': 0.01,\n\t            'sustain': 1,\n\t            'release': 0.5\n\t        },\n\t        'modulation': { 'type': 'square' },\n\t        'modulationEnvelope': {\n\t            'attack': 0.5,\n\t            'decay': 0,\n\t            'sustain': 1,\n\t            'release': 0.5\n\t        }\n\t    };\n\t    /**\n\t\t * \ttrigger the attack portion of the note\n\t\t *\n\t\t *  @param  {Time} [time=now] the time the note will occur\n\t\t *  @param {number} [velocity=1] the velocity of the note\n\t\t *  @returns {Tone.FMSynth} this\n\t\t *  @private\n\t\t */\n\t    Tone.FMSynth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n\t        time = this.toSeconds(time);\n\t        //the envelopes\n\t        this.envelope.triggerAttack(time, velocity);\n\t        this.modulationEnvelope.triggerAttack(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  trigger the release portion of the note\n\t\t *\n\t\t *  @param  {Time} [time=now] the time the note will release\n\t\t *  @returns {Tone.FMSynth} this\n\t\t *  @private\n\t\t */\n\t    Tone.FMSynth.prototype._triggerEnvelopeRelease = function (time) {\n\t        time = this.toSeconds(time);\n\t        this.envelope.triggerRelease(time);\n\t        this.modulationEnvelope.triggerRelease(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.FMSynth} this\n\t\t */\n\t    Tone.FMSynth.prototype.dispose = function () {\n\t        Tone.Monophonic.prototype.dispose.call(this);\n\t        this._writable([\n\t            'frequency',\n\t            'harmonicity',\n\t            'modulationIndex',\n\t            'oscillator',\n\t            'envelope',\n\t            'modulation',\n\t            'modulationEnvelope',\n\t            'detune'\n\t        ]);\n\t        this._carrier.dispose();\n\t        this._carrier = null;\n\t        this._modulator.dispose();\n\t        this._modulator = null;\n\t        this.frequency.dispose();\n\t        this.frequency = null;\n\t        this.detune.dispose();\n\t        this.detune = null;\n\t        this.modulationIndex.dispose();\n\t        this.modulationIndex = null;\n\t        this.harmonicity.dispose();\n\t        this.harmonicity = null;\n\t        this._modulationNode.dispose();\n\t        this._modulationNode = null;\n\t        this.oscillator = null;\n\t        this.envelope = null;\n\t        this.modulationEnvelope = null;\n\t        this.modulation = null;\n\t        return this;\n\t    };\n\t    return Tone.FMSynth;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.MembraneSynth makes kick and tom sounds using a single oscillator\n\t\t *          with an amplitude envelope and frequency ramp. A Tone.OmniOscillator\n\t\t *          is routed through a Tone.AmplitudeEnvelope to the output. The drum\n\t\t *          quality of the sound comes from the frequency envelope applied\n\t\t *          during during Tone.MembraneSynth.triggerAttack(note). The frequency\n\t\t *          envelope starts at <code>note * .octaves</code> and ramps to \n\t\t *          <code>note</code> over the duration of <code>.pitchDecay</code>. \n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Instrument}\n\t\t *  @param {Object} [options] the options available for the synth \n\t\t *                          see defaults below\n\t\t *  @example\n\t\t * var synth = new Tone.MembraneSynth().toMaster();\n\t\t * synth.triggerAttackRelease(\"C2\", \"8n\");\n\t\t */\n\t    Tone.MembraneSynth = function (options) {\n\t        options = Tone.defaultArg(options, Tone.MembraneSynth.defaults);\n\t        Tone.Instrument.call(this, options);\n\t        /**\n\t\t\t *  The oscillator.\n\t\t\t *  @type {Tone.OmniOscillator}\n\t\t\t */\n\t        this.oscillator = new Tone.OmniOscillator(options.oscillator).start();\n\t        /**\n\t\t\t *  The amplitude envelope.\n\t\t\t *  @type {Tone.AmplitudeEnvelope}\n\t\t\t */\n\t        this.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\t        /**\n\t\t\t *  The number of octaves the pitch envelope ramps.\n\t\t\t *  @type {Positive}\n\t\t\t */\n\t        this.octaves = options.octaves;\n\t        /**\n\t\t\t *  The amount of time the frequency envelope takes. \n\t\t\t *  @type {Time}\n\t\t\t */\n\t        this.pitchDecay = options.pitchDecay;\n\t        this.oscillator.chain(this.envelope, this.output);\n\t        this._readOnly([\n\t            'oscillator',\n\t            'envelope'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.MembraneSynth, Tone.Instrument);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.MembraneSynth.defaults = {\n\t        'pitchDecay': 0.05,\n\t        'octaves': 10,\n\t        'oscillator': { 'type': 'sine' },\n\t        'envelope': {\n\t            'attack': 0.001,\n\t            'decay': 0.4,\n\t            'sustain': 0.01,\n\t            'release': 1.4,\n\t            'attackCurve': 'exponential'\n\t        }\n\t    };\n\t    /**\n\t\t *  Trigger the note at the given time with the given velocity. \n\t\t *  \n\t\t *  @param  {Frequency} note     the note\n\t\t *  @param  {Time} [time=now]     the time, if not given is now\n\t\t *  @param  {number} [velocity=1] velocity defaults to 1\n\t\t *  @returns {Tone.MembraneSynth} this\n\t\t *  @example\n\t\t *  kick.triggerAttack(60);\n\t\t */\n\t    Tone.MembraneSynth.prototype.triggerAttack = function (note, time, velocity) {\n\t        time = this.toSeconds(time);\n\t        note = this.toFrequency(note);\n\t        var maxNote = note * this.octaves;\n\t        this.oscillator.frequency.setValueAtTime(maxNote, time);\n\t        this.oscillator.frequency.exponentialRampToValueAtTime(note, time + this.toSeconds(this.pitchDecay));\n\t        this.envelope.triggerAttack(time, velocity);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Trigger the release portion of the note.\n\t\t *  \n\t\t *  @param  {Time} [time=now] the time the note will release\n\t\t *  @returns {Tone.MembraneSynth} this\n\t\t */\n\t    Tone.MembraneSynth.prototype.triggerRelease = function (time) {\n\t        this.envelope.triggerRelease(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.MembraneSynth} this\n\t\t */\n\t    Tone.MembraneSynth.prototype.dispose = function () {\n\t        Tone.Instrument.prototype.dispose.call(this);\n\t        this._writable([\n\t            'oscillator',\n\t            'envelope'\n\t        ]);\n\t        this.oscillator.dispose();\n\t        this.oscillator = null;\n\t        this.envelope.dispose();\n\t        this.envelope = null;\n\t        return this;\n\t    };\n\t    return Tone.MembraneSynth;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  Inharmonic ratio of frequencies based on the Roland TR-808\n\t\t *  Taken from https://ccrma.stanford.edu/papers/tr-808-cymbal-physically-informed-circuit-bendable-digital-model\n\t\t *  @private\n\t\t *  @static\n\t\t *  @type {Array}\n\t\t */\n\t    var inharmRatios = [\n\t        1,\n\t        1.483,\n\t        1.932,\n\t        2.546,\n\t        2.63,\n\t        3.897\n\t    ];\n\t    /**\n\t\t *  @class  A highly inharmonic and spectrally complex source with a highpass filter\n\t\t *          and amplitude envelope which is good for making metalophone sounds. Based\n\t\t *          on CymbalSynth by [@polyrhythmatic](https://github.com/polyrhythmatic).\n\t\t *          Inspiration from [Sound on Sound](https://web.archive.org/web/20160610143924/https://www.soundonsound.com/sos/jul02/articles/synthsecrets0702.asp).\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Instrument}\n\t\t *  @param {Object} [options] The options availble for the synth\n\t\t *                             see defaults below\n\t\t */\n\t    Tone.MetalSynth = function (options) {\n\t        options = Tone.defaultArg(options, Tone.MetalSynth.defaults);\n\t        Tone.Instrument.call(this, options);\n\t        /**\n\t\t\t *  The frequency of the cymbal\n\t\t\t *  @type  {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The array of FMOscillators\n\t\t\t *  @type  {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._oscillators = [];\n\t        /**\n\t\t\t *  The frequency multipliers\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._freqMultipliers = [];\n\t        /**\n\t\t\t *  The amplitude for the body\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._amplitue = new Tone.Gain(0).connect(this.output);\n\t        /**\n\t\t\t *  highpass the output\n\t\t\t *  @type {Tone.Filter}\n\t\t\t *  @private\n\t\t\t */\n\t        this._highpass = new Tone.Filter({\n\t            'type': 'highpass',\n\t            'Q': -3.0102999566398125\n\t        }).connect(this._amplitue);\n\t        /**\n\t\t\t *  The number of octaves the highpass\n\t\t\t *  filter frequency ramps\n\t\t\t *  @type {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._octaves = options.octaves;\n\t        /**\n\t\t\t *  Scale the body envelope\n\t\t\t *  for the bandpass\n\t\t\t *  @type {Tone.Scale}\n\t\t\t *  @private\n\t\t\t */\n\t        this._filterFreqScaler = new Tone.Scale(options.resonance, 7000);\n\t        /**\n\t\t\t *  The envelope which is connected both to the\n\t\t\t *  amplitude and highpass filter's cutoff frequency\n\t\t\t *  @type  {Tone.Envelope}\n\t\t\t */\n\t        this.envelope = new Tone.Envelope({\n\t            'attack': options.envelope.attack,\n\t            'attackCurve': 'linear',\n\t            'decay': options.envelope.decay,\n\t            'sustain': 0,\n\t            'release': options.envelope.release\n\t        }).chain(this._filterFreqScaler, this._highpass.frequency);\n\t        this.envelope.connect(this._amplitue.gain);\n\t        for (var i = 0; i < inharmRatios.length; i++) {\n\t            var osc = new Tone.FMOscillator({\n\t                'type': 'square',\n\t                'modulationType': 'square',\n\t                'harmonicity': options.harmonicity,\n\t                'modulationIndex': options.modulationIndex\n\t            });\n\t            osc.connect(this._highpass).start();\n\t            this._oscillators[i] = osc;\n\t            var mult = new Tone.Multiply(inharmRatios[i]);\n\t            this._freqMultipliers[i] = mult;\n\t            this.frequency.chain(mult, osc.frequency);\n\t        }\n\t        //set the octaves\n\t        this.octaves = options.octaves;\n\t    };\n\t    Tone.extend(Tone.MetalSynth, Tone.Instrument);\n\t    /**\n\t\t *  default values\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.MetalSynth.defaults = {\n\t        'frequency': 200,\n\t        'envelope': {\n\t            'attack': 0.001,\n\t            'decay': 1.4,\n\t            'release': 0.2\n\t        },\n\t        'harmonicity': 5.1,\n\t        'modulationIndex': 32,\n\t        'resonance': 4000,\n\t        'octaves': 1.5\n\t    };\n\t    /**\n\t\t *  Trigger the attack.\n\t\t *  @param  {Time}  time      When the attack should be triggered.\n\t\t *  @param  {NormalRange}  [velocity=1]  The velocity that the envelope should be triggered at.\n\t\t *  @return  {Tone.MetalSynth}  this\n\t\t */\n\t    Tone.MetalSynth.prototype.triggerAttack = function (time, vel) {\n\t        time = this.toSeconds(time);\n\t        vel = Tone.defaultArg(vel, 1);\n\t        this.envelope.triggerAttack(time, vel);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Trigger the release of the envelope.\n\t\t *  @param  {Time}  time      When the release should be triggered.\n\t\t *  @return  {Tone.MetalSynth}  this\n\t\t */\n\t    Tone.MetalSynth.prototype.triggerRelease = function (time) {\n\t        time = this.toSeconds(time);\n\t        this.envelope.triggerRelease(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Trigger the attack and release of the envelope after the given\n\t\t *  duration.\n\t\t *  @param  {Time}  duration  The duration before triggering the release\n\t\t *  @param  {Time}  time      When the attack should be triggered.\n\t\t *  @param  {NormalRange}  [velocity=1]  The velocity that the envelope should be triggered at.\n\t\t *  @return  {Tone.MetalSynth}  this\n\t\t */\n\t    Tone.MetalSynth.prototype.triggerAttackRelease = function (duration, time, velocity) {\n\t        time = this.toSeconds(time);\n\t        duration = this.toSeconds(duration);\n\t        this.triggerAttack(time, velocity);\n\t        this.triggerRelease(time + duration);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  The modulationIndex of the oscillators which make up the source.\n\t\t *  see Tone.FMOscillator.modulationIndex\n\t\t *  @memberOf Tone.MetalSynth#\n\t\t *  @type {Positive}\n\t\t *  @name  modulationIndex\n\t\t */\n\t    Object.defineProperty(Tone.MetalSynth.prototype, 'modulationIndex', {\n\t        get: function () {\n\t            return this._oscillators[0].modulationIndex.value;\n\t        },\n\t        set: function (val) {\n\t            for (var i = 0; i < this._oscillators.length; i++) {\n\t                this._oscillators[i].modulationIndex.value = val;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  The harmonicity of the oscillators which make up the source.\n\t\t *  see Tone.FMOscillator.harmonicity\n\t\t *  @memberOf Tone.MetalSynth#\n\t\t *  @type {Positive}\n\t\t *  @name  harmonicity\n\t\t */\n\t    Object.defineProperty(Tone.MetalSynth.prototype, 'harmonicity', {\n\t        get: function () {\n\t            return this._oscillators[0].harmonicity.value;\n\t        },\n\t        set: function (val) {\n\t            for (var i = 0; i < this._oscillators.length; i++) {\n\t                this._oscillators[i].harmonicity.value = val;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  The frequency of the highpass filter attached to the envelope\n\t\t *  @memberOf Tone.MetalSynth#\n\t\t *  @type {Frequency}\n\t\t *  @name  resonance\n\t\t */\n\t    Object.defineProperty(Tone.MetalSynth.prototype, 'resonance', {\n\t        get: function () {\n\t            return this._filterFreqScaler.min;\n\t        },\n\t        set: function (val) {\n\t            this._filterFreqScaler.min = val;\n\t            this.octaves = this._octaves;\n\t        }\n\t    });\n\t    /**\n\t\t *  The number of octaves above the \"resonance\" frequency\n\t\t *  that the filter ramps during the attack/decay envelope\n\t\t *  @memberOf Tone.MetalSynth#\n\t\t *  @type {Number}\n\t\t *  @name  octaves\n\t\t */\n\t    Object.defineProperty(Tone.MetalSynth.prototype, 'octaves', {\n\t        get: function () {\n\t            return this._octaves;\n\t        },\n\t        set: function (octs) {\n\t            this._octaves = octs;\n\t            this._filterFreqScaler.max = this._filterFreqScaler.min * Math.pow(2, octs);\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up\n\t\t *  @returns {Tone.MetalSynth} this\n\t\t */\n\t    Tone.MetalSynth.prototype.dispose = function () {\n\t        Tone.Instrument.prototype.dispose.call(this);\n\t        for (var i = 0; i < this._oscillators.length; i++) {\n\t            this._oscillators[i].dispose();\n\t            this._freqMultipliers[i].dispose();\n\t        }\n\t        this._oscillators = null;\n\t        this._freqMultipliers = null;\n\t        this.frequency.dispose();\n\t        this.frequency = null;\n\t        this._filterFreqScaler.dispose();\n\t        this._filterFreqScaler = null;\n\t        this._amplitue.dispose();\n\t        this._amplitue = null;\n\t        this.envelope.dispose();\n\t        this.envelope = null;\n\t        this._highpass.dispose();\n\t        this._highpass = null;\n\t    };\n\t    return Tone.MetalSynth;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  BufferSource polyfill\n\t\t */\n\t    if (window.AudioBufferSourceNode && !AudioBufferSourceNode.prototype.start) {\n\t        AudioBufferSourceNode.prototype.start = AudioBufferSourceNode.prototype.noteGrainOn;\n\t        AudioBufferSourceNode.prototype.stop = AudioBufferSourceNode.prototype.noteOff;\n\t    }\n\t    /**\n\t\t *  @class Wrapper around the native BufferSourceNode.\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @param  {AudioBuffer|Tone.Buffer}  buffer   The buffer to play\n\t\t *  @param  {Function}  onload  The callback to invoke when the\n\t\t *                               buffer is done playing.\n\t\t */\n\t    Tone.BufferSource = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'buffer',\n\t            'onload'\n\t        ], Tone.BufferSource);\n\t        Tone.AudioNode.call(this);\n\t        /**\n\t\t\t *  The callback to invoke after the\n\t\t\t *  buffer source is done playing.\n\t\t\t *  @type  {Function}\n\t\t\t */\n\t        this.onended = options.onended;\n\t        /**\n\t\t\t *  The time that the buffer was started.\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._startTime = -1;\n\t        /**\n\t\t\t *  The time that the buffer is scheduled to stop.\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._stopTime = -1;\n\t        /**\n\t\t\t *  The gain node which envelopes the BufferSource\n\t\t\t *  @type  {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._gainNode = this.output = new Tone.Gain();\n\t        /**\n\t\t\t *  The buffer source\n\t\t\t *  @type  {AudioBufferSourceNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._source = this.context.createBufferSource();\n\t        this._source.connect(this._gainNode);\n\t        /**\n\t\t\t * The private buffer instance\n\t\t\t * @type {Tone.Buffer}\n\t\t\t * @private\n\t\t\t */\n\t        this._buffer = new Tone.Buffer(options.buffer, options.onload);\n\t        /**\n\t\t\t *  The playbackRate of the buffer\n\t\t\t *  @type {Positive}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.playbackRate = new Tone.Param(this._source.playbackRate, Tone.Type.Positive);\n\t        /**\n\t\t\t *  The fadeIn time of the amplitude envelope.\n\t\t\t *  @type {Time}\n\t\t\t */\n\t        this.fadeIn = options.fadeIn;\n\t        /**\n\t\t\t *  The fadeOut time of the amplitude envelope.\n\t\t\t *  @type {Time}\n\t\t\t */\n\t        this.fadeOut = options.fadeOut;\n\t        /**\n\t\t\t * The curve applied to the fades, either \"linear\" or \"exponential\"\n\t\t\t * @type {String}\n\t\t\t */\n\t        this.curve = options.curve;\n\t        /**\n\t\t\t *  The value that the buffer ramps to\n\t\t\t *  @type {Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._gain = 1;\n\t        /**\n\t\t\t * The onended timeout\n\t\t\t * @type {Number}\n\t\t\t * @private\n\t\t\t */\n\t        this._onendedTimeout = -1;\n\t        //set some values initially\n\t        this.loop = options.loop;\n\t        this.loopStart = options.loopStart;\n\t        this.loopEnd = options.loopEnd;\n\t        this.playbackRate.value = options.playbackRate;\n\t    };\n\t    Tone.extend(Tone.BufferSource, Tone.AudioNode);\n\t    /**\n\t\t *  The defaults\n\t\t *  @const\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.BufferSource.defaults = {\n\t        'onended': Tone.noOp,\n\t        'onload': Tone.noOp,\n\t        'loop': false,\n\t        'loopStart': 0,\n\t        'loopEnd': 0,\n\t        'fadeIn': 0,\n\t        'fadeOut': 0,\n\t        'curve': 'linear',\n\t        'playbackRate': 1\n\t    };\n\t    /**\n\t\t *  Returns the playback state of the source, either \"started\" or \"stopped\".\n\t\t *  @type {Tone.State}\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.BufferSource#\n\t\t *  @name state\n\t\t */\n\t    Object.defineProperty(Tone.BufferSource.prototype, 'state', {\n\t        get: function () {\n\t            var now = this.now();\n\t            if (this._startTime !== -1 && now >= this._startTime && now < this._stopTime) {\n\t                return Tone.State.Started;\n\t            } else {\n\t                return Tone.State.Stopped;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Start the buffer\n\t\t *  @param  {Time} [startTime=now] When the player should start.\n\t\t *  @param  {Time} [offset=0] The offset from the beginning of the sample\n\t\t *                                 to start at.\n\t\t *  @param  {Time=} duration How long the sample should play. If no duration\n\t\t *                                is given, it will default to the full length\n\t\t *                                of the sample (minus any offset)\n\t\t *  @param  {Gain}  [gain=1]  The gain to play the buffer back at.\n\t\t *  @param  {Time=}  fadeInTime  The optional fadeIn ramp time.\n\t\t *  @return  {Tone.BufferSource}  this\n\t\t */\n\t    Tone.BufferSource.prototype.start = function (time, offset, duration, gain, fadeInTime) {\n\t        if (this._startTime !== -1) {\n\t            throw new Error('Tone.BufferSource can only be started once.');\n\t        }\n\t        if (this.buffer.loaded) {\n\t            time = this.toSeconds(time);\n\t            //if it's a loop the default offset is the loopstart point\n\t            if (this.loop) {\n\t                offset = Tone.defaultArg(offset, this.loopStart);\n\t            } else {\n\t                //otherwise the default offset is 0\n\t                offset = Tone.defaultArg(offset, 0);\n\t            }\n\t            offset = this.toSeconds(offset);\n\t            gain = Tone.defaultArg(gain, 1);\n\t            this._gain = gain;\n\t            fadeInTime = this.toSeconds(Tone.defaultArg(fadeInTime, this.fadeIn));\n\t            this.fadeIn = fadeInTime;\n\t            if (fadeInTime > 0) {\n\t                this._gainNode.gain.setValueAtTime(0, time);\n\t                if (this.curve === 'linear') {\n\t                    this._gainNode.gain.linearRampToValueAtTime(this._gain, time + fadeInTime);\n\t                } else {\n\t                    this._gainNode.gain.setTargetAtTime(this._gain, time, this._gainNode.gain.getTimeConstant(fadeInTime));\n\t                }\n\t            } else {\n\t                this._gainNode.gain.setValueAtTime(gain, time);\n\t            }\n\t            this._startTime = time;\n\t            var computedDur = this.toSeconds(Tone.defaultArg(duration, this.buffer.duration - offset));\n\t            computedDur = Math.max(computedDur, 0);\n\t            if (!this.loop || this.loop && !Tone.isUndef(duration)) {\n\t                //clip the duration when not looping\n\t                if (!this.loop) {\n\t                    computedDur = Math.min(computedDur, this.buffer.duration - offset);\n\t                }\n\t                this.stop(time + computedDur, this.fadeOut);\n\t            }\n\t            //start the buffer source\n\t            if (this.loop) {\n\t                //modify the offset if it's greater than the loop time\n\t                var loopEnd = this.loopEnd || this.buffer.duration;\n\t                var loopStart = this.loopStart;\n\t                var loopDuration = loopEnd - loopStart;\n\t                //move the offset back\n\t                if (offset > loopEnd) {\n\t                    offset = (offset - loopStart) % loopDuration + loopStart;\n\t                }\n\t            }\n\t            this._source.buffer = this.buffer.get();\n\t            this._source.loopEnd = this.loopEnd || this.buffer.duration;\n\t            Tone.isPast(time);\n\t            this._source.start(time, offset);\n\t        } else {\n\t            throw new Error('Tone.BufferSource: buffer is either not set or not loaded.');\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Stop the buffer. Optionally add a ramp time to fade the\n\t\t *  buffer out.\n\t\t *  @param  {Time=}  time         The time the buffer should stop.\n\t\t *  @param  {Time=}  fadeOutTime  How long the gain should fade out for\n\t\t *  @return  {Tone.BufferSource}  this\n\t\t */\n\t    Tone.BufferSource.prototype.stop = function (time, fadeOutTime) {\n\t        if (this.buffer.loaded) {\n\t            time = this.toSeconds(time);\n\t            //if this is before the previous stop\n\t            if (this._stopTime === -1 || this._stopTime > time) {\n\t                //stop if it's schedule before the start time\n\t                if (time <= this._startTime) {\n\t                    this._gainNode.gain.cancelScheduledValues(time);\n\t                    this._gainNode.gain.value = 0;\n\t                    return this;\n\t                }\n\t                time = Math.max(this._startTime + this.fadeIn + this.sampleTime, time);\n\t                //cancel the previous curve\n\t                this._gainNode.gain.cancelScheduledValues(time);\n\t                this._stopTime = time;\n\t                //the fadeOut time\n\t                fadeOutTime = this.toSeconds(Tone.defaultArg(fadeOutTime, this.fadeOut));\n\t                //set a new one\n\t                var heldDuration = Math.min(time - this._startTime - this.fadeIn - this.sampleTime, this.buffer.duration);\n\t                fadeOutTime = Math.min(heldDuration, fadeOutTime);\n\t                var startFade = time - fadeOutTime;\n\t                if (fadeOutTime > this.sampleTime) {\n\t                    this._gainNode.gain.setValueAtTime(this._gain, startFade);\n\t                    if (this.curve === 'linear') {\n\t                        this._gainNode.gain.linearRampToValueAtTime(0, time);\n\t                    } else {\n\t                        this._gainNode.gain.setTargetAtTime(0, startFade, this._gainNode.gain.getTimeConstant(fadeOutTime));\n\t                    }\n\t                } else {\n\t                    this._gainNode.gain.setValueAtTime(0, time);\n\t                }\n\t                Tone.context.clearTimeout(this._onendedTimeout);\n\t                this._onendedTimeout = Tone.context.setTimeout(this._onended.bind(this), this._stopTime - this.now());\n\t            }\n\t        } else {\n\t            throw new Error('Tone.BufferSource: buffer is either not set or not loaded.');\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Internal callback when the buffer is ended.\n\t\t *  Invokes `onended` and disposes the node.\n\t\t *  @private\n\t\t */\n\t    Tone.BufferSource.prototype._onended = function () {\n\t        this.onended(this);\n\t    };\n\t    /**\n\t\t * If loop is true, the loop will start at this position.\n\t\t * @memberOf Tone.BufferSource#\n\t\t * @type {Time}\n\t\t * @name loopStart\n\t\t */\n\t    Object.defineProperty(Tone.BufferSource.prototype, 'loopStart', {\n\t        get: function () {\n\t            return this._source.loopStart;\n\t        },\n\t        set: function (loopStart) {\n\t            this._source.loopStart = this.toSeconds(loopStart);\n\t        }\n\t    });\n\t    /**\n\t\t * If loop is true, the loop will end at this position.\n\t\t * @memberOf Tone.BufferSource#\n\t\t * @type {Time}\n\t\t * @name loopEnd\n\t\t */\n\t    Object.defineProperty(Tone.BufferSource.prototype, 'loopEnd', {\n\t        get: function () {\n\t            return this._source.loopEnd;\n\t        },\n\t        set: function (loopEnd) {\n\t            this._source.loopEnd = this.toSeconds(loopEnd);\n\t        }\n\t    });\n\t    /**\n\t\t * The audio buffer belonging to the player.\n\t\t * @memberOf Tone.BufferSource#\n\t\t * @type {Tone.Buffer}\n\t\t * @name buffer\n\t\t */\n\t    Object.defineProperty(Tone.BufferSource.prototype, 'buffer', {\n\t        get: function () {\n\t            return this._buffer;\n\t        },\n\t        set: function (buffer) {\n\t            this._buffer.set(buffer);\n\t        }\n\t    });\n\t    /**\n\t\t * If the buffer should loop once it's over.\n\t\t * @memberOf Tone.BufferSource#\n\t\t * @type {Boolean}\n\t\t * @name loop\n\t\t */\n\t    Object.defineProperty(Tone.BufferSource.prototype, 'loop', {\n\t        get: function () {\n\t            return this._source.loop;\n\t        },\n\t        set: function (loop) {\n\t            this._source.loop = loop;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return  {Tone.BufferSource}  this\n\t\t */\n\t    Tone.BufferSource.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this.onended = null;\n\t        this._source.disconnect();\n\t        this._source = null;\n\t        this._gainNode.dispose();\n\t        this._gainNode = null;\n\t        this._buffer.dispose();\n\t        this._buffer = null;\n\t        this._startTime = -1;\n\t        this.playbackRate = null;\n\t        Tone.context.clearTimeout(this._onendedTimeout);\n\t        return this;\n\t    };\n\t    return Tone.BufferSource;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Noise is a noise generator. It uses looped noise buffers to save on performance.\n\t\t *          Tone.Noise supports the noise types: \"pink\", \"white\", and \"brown\". Read more about\n\t\t *          colors of noise on [Wikipedia](https://en.wikipedia.org/wiki/Colors_of_noise).\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Source}\n\t\t *  @param {string} type the noise type (white|pink|brown)\n\t\t *  @example\n\t\t * //initialize the noise and start\n\t\t * var noise = new Tone.Noise(\"pink\").start();\n\t\t * \n\t\t * //make an autofilter to shape the noise\n\t\t * var autoFilter = new Tone.AutoFilter({\n\t\t * \t\"frequency\" : \"8m\", \n\t\t * \t\"min\" : 800, \n\t\t * \t\"max\" : 15000\n\t\t * }).connect(Tone.Master);\n\t\t * \n\t\t * //connect the noise\n\t\t * noise.connect(autoFilter);\n\t\t * //start the autofilter LFO\n\t\t * autoFilter.start()\n\t\t */\n\t    Tone.Noise = function () {\n\t        var options = Tone.defaults(arguments, ['type'], Tone.Noise);\n\t        Tone.Source.call(this, options);\n\t        /**\n\t\t\t *  @private\n\t\t\t *  @type {AudioBufferSourceNode}\n\t\t\t */\n\t        this._source = null;\n\t        /**\n\t\t\t *  the buffer\n\t\t\t *  @private\n\t\t\t *  @type {AudioBuffer}\n\t\t\t */\n\t        this._type = options.type;\n\t        /**\n\t\t\t *  The playback rate of the noise. Affects\n\t\t\t *  the \"frequency\" of the noise.\n\t\t\t *  @type {Positive}\n\t\t\t *  @signal\n\t\t\t */\n\t        this._playbackRate = options.playbackRate;\n\t    };\n\t    Tone.extend(Tone.Noise, Tone.Source);\n\t    /**\n\t\t *  the default parameters\n\t\t *\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Noise.defaults = {\n\t        'type': 'white',\n\t        'playbackRate': 1\n\t    };\n\t    /**\n\t\t * The type of the noise. Can be \"white\", \"brown\", or \"pink\". \n\t\t * @memberOf Tone.Noise#\n\t\t * @type {string}\n\t\t * @name type\n\t\t * @example\n\t\t * noise.type = \"white\";\n\t\t */\n\t    Object.defineProperty(Tone.Noise.prototype, 'type', {\n\t        get: function () {\n\t            return this._type;\n\t        },\n\t        set: function (type) {\n\t            if (this._type !== type) {\n\t                if (type in _noiseBuffers) {\n\t                    this._type = type;\n\t                    //if it's playing, stop and restart it\n\t                    if (this.state === Tone.State.Started) {\n\t                        var now = this.now();\n\t                        this._stop(now);\n\t                        this._start(now);\n\t                    }\n\t                } else {\n\t                    throw new TypeError('Tone.Noise: invalid type: ' + type);\n\t                }\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  The playback rate of the noise. Affects\n\t\t *  the \"frequency\" of the noise.\n\t\t *  @type {Positive}\n\t\t *  @signal\n\t\t */\n\t    Object.defineProperty(Tone.Noise.prototype, 'playbackRate', {\n\t        get: function () {\n\t            return this._playbackRate;\n\t        },\n\t        set: function (rate) {\n\t            this._playbackRate = rate;\n\t            if (this._source) {\n\t                this._source.playbackRate.value = rate;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  internal start method\n\t\t *\n\t\t *  @param {Time} time\n\t\t *  @private\n\t\t */\n\t    Tone.Noise.prototype._start = function (time) {\n\t        var buffer = _noiseBuffers[this._type];\n\t        this._source = new Tone.BufferSource(buffer).connect(this.output);\n\t        this._source.loop = true;\n\t        this._source.playbackRate.value = this._playbackRate;\n\t        this._source.start(this.toSeconds(time), Math.random() * (buffer.duration - 0.001));\n\t    };\n\t    /**\n\t\t *  internal stop method\n\t\t *\n\t\t *  @param {Time} time\n\t\t *  @private\n\t\t */\n\t    Tone.Noise.prototype._stop = function (time) {\n\t        if (this._source) {\n\t            this._source.stop(this.toSeconds(time));\n\t            this._source = null;\n\t        }\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Noise} this\n\t\t */\n\t    Tone.Noise.prototype.dispose = function () {\n\t        Tone.Source.prototype.dispose.call(this);\n\t        if (this._source !== null) {\n\t            this._source.disconnect();\n\t            this._source = null;\n\t        }\n\t        this._buffer = null;\n\t        return this;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    // THE BUFFERS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //Noise buffer stats\n\t    var bufferLength = 44100 * 5;\n\t    var channels = 2;\n\t    /**\n\t\t *\tThe noise arrays. Generated on initialization.\n\t\t *  borrowed heavily from https://github.com/zacharydenton/noise.js \n\t\t *  (c) 2013 Zach Denton (MIT)\n\t\t *  @static\n\t\t *  @private\n\t\t *  @type {Array}\n\t\t */\n\t    var _noiseArrays = {\n\t        'pink': function () {\n\t            var buffer = [];\n\t            for (var channelNum = 0; channelNum < channels; channelNum++) {\n\t                var channel = new Float32Array(bufferLength);\n\t                buffer[channelNum] = channel;\n\t                var b0, b1, b2, b3, b4, b5, b6;\n\t                b0 = b1 = b2 = b3 = b4 = b5 = b6 = 0;\n\t                for (var i = 0; i < bufferLength; i++) {\n\t                    var white = Math.random() * 2 - 1;\n\t                    b0 = 0.99886 * b0 + white * 0.0555179;\n\t                    b1 = 0.99332 * b1 + white * 0.0750759;\n\t                    b2 = 0.969 * b2 + white * 0.153852;\n\t                    b3 = 0.8665 * b3 + white * 0.3104856;\n\t                    b4 = 0.55 * b4 + white * 0.5329522;\n\t                    b5 = -0.7616 * b5 - white * 0.016898;\n\t                    channel[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;\n\t                    channel[i] *= 0.11;\n\t                    // (roughly) compensate for gain\n\t                    b6 = white * 0.115926;\n\t                }\n\t            }\n\t            return buffer;\n\t        }(),\n\t        'brown': function () {\n\t            var buffer = [];\n\t            for (var channelNum = 0; channelNum < channels; channelNum++) {\n\t                var channel = new Float32Array(bufferLength);\n\t                buffer[channelNum] = channel;\n\t                var lastOut = 0;\n\t                for (var i = 0; i < bufferLength; i++) {\n\t                    var white = Math.random() * 2 - 1;\n\t                    channel[i] = (lastOut + 0.02 * white) / 1.02;\n\t                    lastOut = channel[i];\n\t                    channel[i] *= 3.5;    // (roughly) compensate for gain\n\t                }\n\t            }\n\t            return buffer;\n\t        }(),\n\t        'white': function () {\n\t            var buffer = [];\n\t            for (var channelNum = 0; channelNum < channels; channelNum++) {\n\t                var channel = new Float32Array(bufferLength);\n\t                buffer[channelNum] = channel;\n\t                for (var i = 0; i < bufferLength; i++) {\n\t                    channel[i] = Math.random() * 2 - 1;\n\t                }\n\t            }\n\t            return buffer;\n\t        }()\n\t    };\n\t    /**\n\t\t *\tstatic noise buffers\n\t\t *  @static\n\t\t *  @private\n\t\t *  @type {Tone.Buffer}\n\t\t */\n\t    var _noiseBuffers = {};\n\t    //create the Tone.Buffers\n\t    function createBuffers() {\n\t        for (var type in _noiseArrays) {\n\t            _noiseBuffers[type] = new Tone.Buffer().fromArray(_noiseArrays[type]);\n\t        }\n\t    }\n\t    //create the noise buffers\n\t    Tone.getContext(createBuffers);\n\t    Tone.Context.on('init', createBuffers);\n\t    return Tone.Noise;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.NoiseSynth is composed of a noise generator (Tone.Noise), one filter (Tone.Filter), \n\t\t *          and two envelopes (Tone.Envelop). One envelope controls the amplitude\n\t\t *          of the noise and the other is controls the cutoff frequency of the filter. \n\t\t *          <img src=\"https://docs.google.com/drawings/d/1rqzuX9rBlhT50MRvD2TKml9bnZhcZmzXF1rf_o7vdnE/pub?w=918&h=242\">\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Instrument}\n\t\t *  @param {Object} [options] the options available for the synth \n\t\t *                          see defaults below\n\t\t * @example\n\t\t * var noiseSynth = new Tone.NoiseSynth().toMaster();\n\t\t * noiseSynth.triggerAttackRelease(\"8n\");\n\t\t */\n\t    Tone.NoiseSynth = function (options) {\n\t        //get the defaults\n\t        options = Tone.defaultArg(options, Tone.NoiseSynth.defaults);\n\t        Tone.Instrument.call(this, options);\n\t        /**\n\t\t\t *  The noise source.\n\t\t\t *  @type {Tone.Noise}\n\t\t\t *  @example\n\t\t\t * noiseSynth.set(\"noise.type\", \"brown\");\n\t\t\t */\n\t        this.noise = new Tone.Noise();\n\t        /**\n\t\t\t *  The amplitude envelope. \n\t\t\t *  @type {Tone.AmplitudeEnvelope}\n\t\t\t */\n\t        this.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\t        //connect the noise to the output\n\t        this.noise.chain(this.envelope, this.output);\n\t        //start the noise\n\t        this.noise.start();\n\t        this._readOnly([\n\t            'noise',\n\t            'envelope'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.NoiseSynth, Tone.Instrument);\n\t    /**\n\t\t *  @const\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.NoiseSynth.defaults = {\n\t        'noise': { 'type': 'white' },\n\t        'envelope': {\n\t            'attack': 0.005,\n\t            'decay': 0.1,\n\t            'sustain': 0\n\t        }\n\t    };\n\t    /**\n\t\t *  Start the attack portion of the envelopes. Unlike other \n\t\t *  instruments, Tone.NoiseSynth doesn't have a note. \n\t\t *  @param {Time} [time=now] the time the attack should start\n\t\t *  @param {number} [velocity=1] the velocity of the note (0-1)\n\t\t *  @returns {Tone.NoiseSynth} this\n\t\t *  @example\n\t\t * noiseSynth.triggerAttack();\n\t\t */\n\t    Tone.NoiseSynth.prototype.triggerAttack = function (time, velocity) {\n\t        //the envelopes\n\t        this.envelope.triggerAttack(time, velocity);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Start the release portion of the envelopes.\n\t\t *  @param {Time} [time=now] the time the release should start\n\t\t *  @returns {Tone.NoiseSynth} this\n\t\t */\n\t    Tone.NoiseSynth.prototype.triggerRelease = function (time) {\n\t        this.envelope.triggerRelease(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Trigger the attack and then the release. \n\t\t *  @param  {Time} duration the duration of the note\n\t\t *  @param  {Time} [time=now]     the time of the attack\n\t\t *  @param  {number} [velocity=1] the velocity\n\t\t *  @returns {Tone.NoiseSynth} this\n\t\t */\n\t    Tone.NoiseSynth.prototype.triggerAttackRelease = function (duration, time, velocity) {\n\t        time = this.toSeconds(time);\n\t        duration = this.toSeconds(duration);\n\t        this.triggerAttack(time, velocity);\n\t        this.triggerRelease(time + duration);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.NoiseSynth} this\n\t\t */\n\t    Tone.NoiseSynth.prototype.dispose = function () {\n\t        Tone.Instrument.prototype.dispose.call(this);\n\t        this._writable([\n\t            'noise',\n\t            'envelope'\n\t        ]);\n\t        this.noise.dispose();\n\t        this.noise = null;\n\t        this.envelope.dispose();\n\t        this.envelope = null;\n\t        return this;\n\t    };\n\t    return Tone.NoiseSynth;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Karplus-String string synthesis. Often out of tune. \n\t\t *         Will change when the AudioWorkerNode is available across\n\t\t *         browsers. \n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone.Instrument}\n\t\t *  @param {Object} [options] see the defaults\n\t\t *  @example\n\t\t * var plucky = new Tone.PluckSynth().toMaster();\n\t\t * plucky.triggerAttack(\"C4\");\n\t\t */\n\t    Tone.PluckSynth = function (options) {\n\t        options = Tone.defaultArg(options, Tone.PluckSynth.defaults);\n\t        Tone.Instrument.call(this, options);\n\t        /**\n\t\t\t *  @type {Tone.Noise}\n\t\t\t *  @private\n\t\t\t */\n\t        this._noise = new Tone.Noise('pink');\n\t        /**\n\t\t\t *  The amount of noise at the attack. \n\t\t\t *  Nominal range of [0.1, 20]\n\t\t\t *  @type {number}\n\t\t\t */\n\t        this.attackNoise = options.attackNoise;\n\t        /**\n\t\t\t *  the LFCF\n\t\t\t *  @type {Tone.LowpassCombFilter}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfcf = new Tone.LowpassCombFilter({\n\t            'resonance': options.resonance,\n\t            'dampening': options.dampening\n\t        });\n\t        /**\n\t\t\t *  The resonance control. \n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.resonance = this._lfcf.resonance;\n\t        /**\n\t\t\t *  The dampening control. i.e. the lowpass filter frequency of the comb filter\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.dampening = this._lfcf.dampening;\n\t        //connections\n\t        this._noise.connect(this._lfcf);\n\t        this._lfcf.connect(this.output);\n\t        this._readOnly([\n\t            'resonance',\n\t            'dampening'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.PluckSynth, Tone.Instrument);\n\t    /**\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.PluckSynth.defaults = {\n\t        'attackNoise': 1,\n\t        'dampening': 4000,\n\t        'resonance': 0.9\n\t    };\n\t    /**\n\t\t *  Trigger the note. \n\t\t *  @param {Frequency} note The note to trigger.\n\t\t *  @param {Time} [time=now] When the note should be triggered.\n\t\t *  @returns {Tone.PluckSynth} this\n\t\t */\n\t    Tone.PluckSynth.prototype.triggerAttack = function (note, time) {\n\t        note = this.toFrequency(note);\n\t        time = this.toSeconds(time);\n\t        var delayAmount = 1 / note;\n\t        this._lfcf.delayTime.setValueAtTime(delayAmount, time);\n\t        this._noise.start(time);\n\t        this._noise.stop(time + delayAmount * this.attackNoise);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.PluckSynth} this\n\t\t */\n\t    Tone.PluckSynth.prototype.dispose = function () {\n\t        Tone.Instrument.prototype.dispose.call(this);\n\t        this._noise.dispose();\n\t        this._lfcf.dispose();\n\t        this._noise = null;\n\t        this._lfcf = null;\n\t        this._writable([\n\t            'resonance',\n\t            'dampening'\n\t        ]);\n\t        this.dampening = null;\n\t        this.resonance = null;\n\t        return this;\n\t    };\n\t    return Tone.PluckSynth;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.PolySynth handles voice creation and allocation for any\n\t\t *          instruments passed in as the second paramter. PolySynth is \n\t\t *          not a synthesizer by itself, it merely manages voices of \n\t\t *          one of the other types of synths, allowing any of the \n\t\t *          monophonic synthesizers to be polyphonic. \n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Instrument}\n\t\t *  @param {number|Object} [polyphony=4] The number of voices to create\n\t\t *  @param {function} [voice=Tone.Synth] The constructor of the voices\n\t\t *                                            uses Tone.Synth by default. \n\t\t *  @example\n\t\t * //a polysynth composed of 6 Voices of Synth\n\t\t * var synth = new Tone.PolySynth(6, Tone.Synth).toMaster();\n\t\t * //set the attributes using the set interface\n\t\t * synth.set(\"detune\", -1200);\n\t\t * //play a chord\n\t\t * synth.triggerAttackRelease([\"C4\", \"E4\", \"A4\"], \"4n\");\n\t\t */\n\t    Tone.PolySynth = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'polyphony',\n\t            'voice'\n\t        ], Tone.PolySynth);\n\t        Tone.Instrument.call(this, options);\n\t        options = Tone.defaultArg(options, Tone.Instrument.defaults);\n\t        //max polyphony\n\t        options.polyphony = Math.min(Tone.PolySynth.MAX_POLYPHONY, options.polyphony);\n\t        /**\n\t\t\t *  the array of voices\n\t\t\t *  @type {Array}\n\t\t\t */\n\t        this.voices = new Array(options.polyphony);\n\t        /**\n\t\t\t *  The queue of voices with data about last trigger\n\t\t\t *  and the triggered note\n\t\t\t *  @private\n\t\t\t *  @type {Array}\n\t\t\t */\n\t        this._triggers = new Array(options.polyphony);\n\t        /**\n\t\t\t *  The detune in cents\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\t        this._readOnly('detune');\n\t        //create the voices\n\t        for (var i = 0; i < options.polyphony; i++) {\n\t            var v = new options.voice(arguments[2], arguments[3]);\n\t            this.voices[i] = v;\n\t            v.connect(this.output);\n\t            if (v.hasOwnProperty('detune')) {\n\t                this.detune.connect(v.detune);\n\t            }\n\t            this._triggers[i] = {\n\t                release: -1,\n\t                note: null,\n\t                voice: v\n\t            };\n\t        }\n\t    };\n\t    Tone.extend(Tone.PolySynth, Tone.Instrument);\n\t    /**\n\t\t *  the defaults\n\t\t *  @const\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.PolySynth.defaults = {\n\t        'polyphony': 4,\n\t        'volume': 0,\n\t        'detune': 0,\n\t        'voice': Tone.Synth\n\t    };\n\t    /**\n\t\t *  Trigger the attack portion of the note\n\t\t *  @param  {Frequency|Array} notes The notes to play. Accepts a single\n\t\t *                                  Frequency or an array of frequencies.\n\t\t *  @param  {Time} [time=now]  The start time of the note.\n\t\t *  @param {number} [velocity=1] The velocity of the note.\n\t\t *  @returns {Tone.PolySynth} this\n\t\t *  @example\n\t\t * //trigger a chord immediately with a velocity of 0.2\n\t\t * poly.triggerAttack([\"Ab3\", \"C4\", \"F5\"], undefined, 0.2);\n\t\t */\n\t    Tone.PolySynth.prototype.triggerAttack = function (notes, time, velocity) {\n\t        if (!Array.isArray(notes)) {\n\t            notes = [notes];\n\t        }\n\t        time = this.toSeconds(time);\n\t        for (var i = 0; i < notes.length; i++) {\n\t            var val = notes[i];\n\t            //trigger the oldest voice\n\t            var oldest = this._triggers[0];\n\t            var oldestIndex = 0;\n\t            for (var j = 1; j < this._triggers.length; j++) {\n\t                if (this._triggers[j].release < oldest.release) {\n\t                    oldest = this._triggers[j];\n\t                    oldestIndex = j;\n\t                }\n\t            }\n\t            oldest.release = Infinity;\n\t            oldest.note = JSON.stringify(val);\n\t            oldest.voice.triggerAttack(val, time, velocity);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Trigger the attack and release after the specified duration\n\t\t *  \n\t\t *  @param  {Frequency|Array} notes The notes to play. Accepts a single\n\t\t *                                  Frequency or an array of frequencies.\n\t\t *  @param  {Time} duration the duration of the note\n\t\t *  @param  {Time} [time=now]     if no time is given, defaults to now\n\t\t *  @param  {number} [velocity=1] the velocity of the attack (0-1)\n\t\t *  @returns {Tone.PolySynth} this\n\t\t *  @example\n\t\t * //trigger a chord for a duration of a half note \n\t\t * poly.triggerAttackRelease([\"Eb3\", \"G4\", \"C5\"], \"2n\");\n\t\t *  @example\n\t\t * //can pass in an array of durations as well\n\t\t * poly.triggerAttackRelease([\"Eb3\", \"G4\", \"C5\"], [\"2n\", \"4n\", \"4n\"]);\n\t\t */\n\t    Tone.PolySynth.prototype.triggerAttackRelease = function (notes, duration, time, velocity) {\n\t        time = this.toSeconds(time);\n\t        this.triggerAttack(notes, time, velocity);\n\t        if (Tone.isArray(duration) && Tone.isArray(notes)) {\n\t            for (var i = 0; i < notes.length; i++) {\n\t                var d = duration[Math.min(i, duration.length - 1)];\n\t                this.triggerRelease(notes[i], time + this.toSeconds(d));\n\t            }\n\t        } else {\n\t            this.triggerRelease(notes, time + this.toSeconds(duration));\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Trigger the release of the note. Unlike monophonic instruments, \n\t\t *  a note (or array of notes) needs to be passed in as the first argument.\n\t\t *  @param  {Frequency|Array} notes The notes to play. Accepts a single\n\t\t *                                  Frequency or an array of frequencies.\n\t\t *  @param  {Time} [time=now]  When the release will be triggered. \n\t\t *  @returns {Tone.PolySynth} this\n\t\t *  @example\n\t\t * poly.triggerRelease([\"Ab3\", \"C4\", \"F5\"], \"+2n\");\n\t\t */\n\t    Tone.PolySynth.prototype.triggerRelease = function (notes, time) {\n\t        if (!Array.isArray(notes)) {\n\t            notes = [notes];\n\t        }\n\t        time = this.toSeconds(time);\n\t        for (var i = 0; i < notes.length; i++) {\n\t            //get the voice\n\t            var stringified = JSON.stringify(notes[i]);\n\t            for (var v = 0; v < this._triggers.length; v++) {\n\t                var desc = this._triggers[v];\n\t                if (desc.note === stringified && desc.release > time) {\n\t                    desc.voice.triggerRelease(time);\n\t                    desc.release = time;\n\t                }\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Set a member/attribute of the voices. \n\t\t *  @param {Object|string} params\n\t\t *  @param {number=} value\n\t\t *  @param {Time=} rampTime\n\t\t *  @returns {Tone.PolySynth} this\n\t\t *  @example\n\t\t * poly.set({\n\t\t * \t\"filter\" : {\n\t\t * \t\t\"type\" : \"highpass\"\n\t\t * \t},\n\t\t * \t\"envelope\" : {\n\t\t * \t\t\"attack\" : 0.25\n\t\t * \t}\n\t\t * });\n\t\t */\n\t    Tone.PolySynth.prototype.set = function (params, value, rampTime) {\n\t        for (var i = 0; i < this.voices.length; i++) {\n\t            this.voices[i].set(params, value, rampTime);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Get the synth's attributes. Given no arguments get\n\t\t *  will return all available object properties and their corresponding\n\t\t *  values. Pass in a single attribute to retrieve or an array\n\t\t *  of attributes. The attribute strings can also include a \".\"\n\t\t *  to access deeper properties.\n\t\t *  @param {Array=} params the parameters to get, otherwise will return \n\t\t *  \t\t\t\t\t   all available.\n\t\t */\n\t    Tone.PolySynth.prototype.get = function (params) {\n\t        return this.voices[0].get(params);\n\t    };\n\t    /**\n\t\t *  Trigger the release portion of all the currently active voices.\n\t\t *  @param {Time} [time=now] When the notes should be released.\n\t\t *  @return {Tone.PolySynth} this\n\t\t */\n\t    Tone.PolySynth.prototype.releaseAll = function (time) {\n\t        time = this.toSeconds(time);\n\t        for (var i = 0; i < this._triggers.length; i++) {\n\t            var desc = this._triggers[i];\n\t            if (desc.release > time) {\n\t                desc.release = time;\n\t                desc.voice.triggerRelease(time);\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.PolySynth} this\n\t\t */\n\t    Tone.PolySynth.prototype.dispose = function () {\n\t        Tone.Instrument.prototype.dispose.call(this);\n\t        for (var i = 0; i < this.voices.length; i++) {\n\t            this.voices[i].dispose();\n\t            this.voices[i] = null;\n\t        }\n\t        this._writable('detune');\n\t        this.detune.dispose();\n\t        this.detune = null;\n\t        this.voices = null;\n\t        this._triggers = null;\n\t        return this;\n\t    };\n\t    /**\n\t\t *  The maximum number of notes that can be allocated \n\t\t *  to a polysynth. \n\t\t *  @type  {Number}\n\t\t *  @static\n\t\t */\n\t    Tone.PolySynth.MAX_POLYPHONY = 20;\n\t    return Tone.PolySynth;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t * @class Automatically interpolates between a set of pitched samples. Pass in an object which maps the note's pitch or midi value to the url, then you can trigger the attack and release of that note like other instruments. By automatically repitching the samples, it is possible to play pitches which were not explicitly included which can save loading time.\n\t\t *        For sample or buffer playback where repitching is not necessary, use [Tone.Player](https://tonejs.github.io/docs/Player).\n\t\t * @param {Object} samples An object of samples mapping either Midi\n\t\t *                         Note Numbers or Scientific Pitch Notation\n\t\t *                         to the url of that sample.\n\t\t * @example\n\t\t * var sampler = new Tone.Sampler({\n\t\t * \t\"C3\" : \"path/to/C3.mp3\",\n\t\t * \t\"D#3\" : \"path/to/Dsharp3.mp3\",\n\t\t * \t\"F#3\" : \"path/to/Fsharp3.mp3\",\n\t\t * \t\"A3\" : \"path/to/A3.mp3\",\n\t\t * }, function(){\n\t\t * \t//sampler will repitch the closest sample\n\t\t * \tsampler.triggerAttack(\"D3\")\n\t\t * })\n\t\t * @extends {Tone.Instrument}\n\t\t */\n\t    Tone.Sampler = function (urls) {\n\t        // shift arguments over one. Those are the remainder of the options\n\t        var args = Array.prototype.slice.call(arguments);\n\t        args.shift();\n\t        var options = Tone.defaults(args, [\n\t            'onload',\n\t            'baseUrl'\n\t        ], Tone.Sampler);\n\t        Tone.Instrument.call(this, options);\n\t        var urlMap = {};\n\t        for (var note in urls) {\n\t            if (Tone.isNote(note)) {\n\t                //convert the note name to MIDI\n\t                var mid = Tone.Frequency(note).toMidi();\n\t                urlMap[mid] = urls[note];\n\t            } else if (!isNaN(parseFloat(note))) {\n\t                //otherwise if it's numbers assume it's midi\n\t                urlMap[note] = urls[note];\n\t            } else {\n\t                throw new Error('Tone.Sampler: url keys must be the note\\'s pitch');\n\t            }\n\t        }\n\t        /**\n\t\t\t * The stored and loaded buffers\n\t\t\t * @type {Tone.Buffers}\n\t\t\t * @private\n\t\t\t */\n\t        this._buffers = new Tone.Buffers(urlMap, options.onload, options.baseUrl);\n\t        /**\n\t\t\t * The object of all currently playing BufferSources\n\t\t\t * @type {Object}\n\t\t\t * @private\n\t\t\t */\n\t        this._activeSources = {};\n\t        /**\n\t\t\t * The envelope applied to the beginning of the sample.\n\t\t\t * @type {Time}\n\t\t\t */\n\t        this.attack = options.attack;\n\t        /**\n\t\t\t * The envelope applied to the end of the envelope.\n\t\t\t * @type {Time}\n\t\t\t */\n\t        this.release = options.release;\n\t    };\n\t    Tone.extend(Tone.Sampler, Tone.Instrument);\n\t    /**\n\t\t * The defaults\n\t\t * @const\n\t\t * @type {Object}\n\t\t */\n\t    Tone.Sampler.defaults = {\n\t        attack: 0,\n\t        release: 0.1,\n\t        onload: Tone.noOp,\n\t        baseUrl: ''\n\t    };\n\t    /**\n\t\t * Returns the difference in steps between the given midi note at the closets sample.\n\t\t * @param  {Midi} midi\n\t\t * @return {Interval}\n\t\t * @private\n\t\t */\n\t    Tone.Sampler.prototype._findClosest = function (midi) {\n\t        var MAX_INTERVAL = 24;\n\t        var interval = 0;\n\t        while (interval < MAX_INTERVAL) {\n\t            // check above and below\n\t            if (this._buffers.has(midi + interval)) {\n\t                return -interval;\n\t            } else if (this._buffers.has(midi - interval)) {\n\t                return interval;\n\t            }\n\t            interval++;\n\t        }\n\t        return null;\n\t    };\n\t    /**\n\t\t * @param  {Frequency} note     The note to play\n\t\t * @param  {Time=} time     When to play the note\n\t\t * @param  {NormalRange=} velocity The velocity to play the sample back.\n\t\t * @return {Tone.Sampler}          this\n\t\t */\n\t    Tone.Sampler.prototype.triggerAttack = function (note, time, velocity) {\n\t        var midi = Tone.Frequency(note).toMidi();\n\t        // find the closest note pitch\n\t        var difference = this._findClosest(midi);\n\t        if (difference !== null) {\n\t            var closestNote = midi - difference;\n\t            var buffer = this._buffers.get(closestNote);\n\t            // play that note\n\t            var source = new Tone.BufferSource({\n\t                'buffer': buffer,\n\t                'playbackRate': Tone.intervalToFrequencyRatio(difference),\n\t                'fadeIn': this.attack,\n\t                'fadeOut': this.release,\n\t                'curve': 'exponential'\n\t            }).connect(this.output);\n\t            source.start(time, 0, buffer.duration, velocity);\n\t            // add it to the active sources\n\t            if (!Tone.isArray(this._activeSources[midi])) {\n\t                this._activeSources[midi] = [];\n\t            }\n\t            this._activeSources[midi].push({\n\t                note: midi,\n\t                source: source\n\t            });\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t * @param  {Frequency} note     The note to release.\n\t\t * @param  {Time=} time     \tWhen to release the note.\n\t\t * @return {Tone.Sampler}\tthis\n\t\t */\n\t    Tone.Sampler.prototype.triggerRelease = function (note, time) {\n\t        var midi = Tone.Frequency(note).toMidi();\n\t        // find the note\n\t        if (this._activeSources[midi] && this._activeSources[midi].length) {\n\t            var source = this._activeSources[midi].shift().source;\n\t            time = this.toSeconds(time);\n\t            source.stop(time + this.release, this.release);\n\t        }\n\t    };\n\t    /**\n\t\t * Invoke the attack phase, then after the duration, invoke the release.\n\t\t * @param  {Frequency} note     The note to play\n\t\t * @param  {Time} duration The time the note should be held\n\t\t * @param  {Time=} time     When to start the attack\n\t\t * @param  {NormalRange} [velocity=1] The velocity of the attack\n\t\t * @return {Tone.Sampler}          this\n\t\t */\n\t    Tone.Sampler.prototype.triggerAttackRelease = function (note, duration, time, velocity) {\n\t        time = this.toSeconds(time);\n\t        duration = this.toSeconds(duration);\n\t        this.triggerAttack(note, time, velocity);\n\t        this.triggerRelease(note, time + duration);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Add a note to the sampler.\n\t\t *  @param  {Note|Midi}   note      The buffer's pitch.\n\t\t *  @param  {String|Tone.Buffer|Audiobuffer}  url  Either the url of the bufer,\n\t\t *                                                 or a buffer which will be added\n\t\t *                                                 with the given name.\n\t\t *  @param  {Function=}  callback  The callback to invoke\n\t\t *                                 when the url is loaded.\n\t\t */\n\t    Tone.Sampler.prototype.add = function (note, url, callback) {\n\t        if (Tone.isNote(note)) {\n\t            //convert the note name to MIDI\n\t            var mid = Tone.Frequency(note).toMidi();\n\t            this._buffers.add(mid, url, callback);\n\t        } else if (!isNaN(parseFloat(note))) {\n\t            //otherwise if it's numbers assume it's midi\n\t            this._buffers.add(note, url, callback);\n\t        } else {\n\t            throw new Error('Tone.Sampler: note must be the note\\'s pitch. Instead got ' + note);\n\t        }\n\t    };\n\t    /**\n\t\t * If the buffers are loaded or not\n\t\t * @memberOf Tone.Sampler#\n\t\t * @type {Boolean}\n\t\t * @name loaded\n\t\t * @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Sampler.prototype, 'loaded', {\n\t        get: function () {\n\t            return this._buffers.loaded;\n\t        }\n\t    });\n\t    /**\n\t\t * Clean up\n\t\t * @return {Tone.Sampler} this\n\t\t */\n\t    Tone.Sampler.prototype.dispose = function () {\n\t        Tone.Instrument.prototype.dispose.call(this);\n\t        this._buffers.dispose();\n\t        this._buffers = null;\n\t        for (var midi in this._activeSources) {\n\t            this._activeSources[midi].forEach(function (event) {\n\t                event.source.dispose();\n\t            });\n\t        }\n\t        this._activeSources = null;\n\t        return this;\n\t    };\n\t    return Tone.Sampler;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Maps a NormalRange [0, 1] to an AudioRange [-1, 1]. \n\t\t *         See also Tone.AudioToGain. \n\t\t *\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @constructor\n\t\t *  @example\n\t\t * var g2a = new Tone.GainToAudio();\n\t\t */\n\t    Tone.GainToAudio = function () {\n\t        Tone.SignalBase.call(this);\n\t        /**\n\t\t\t *  @type {WaveShaperNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._norm = this.input = this.output = new Tone.WaveShaper(function (x) {\n\t            return Math.abs(x) * 2 - 1;\n\t        });\n\t    };\n\t    Tone.extend(Tone.GainToAudio, Tone.SignalBase);\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.GainToAudio} this\n\t\t */\n\t    Tone.GainToAudio.prototype.dispose = function () {\n\t        Tone.SignalBase.prototype.dispose.call(this);\n\t        this._norm.dispose();\n\t        this._norm = null;\n\t        return this;\n\t    };\n\t    return Tone.GainToAudio;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Normalize takes an input min and max and maps it linearly to NormalRange [0,1]\n\t\t *\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @constructor\n\t\t *  @param {number} inputMin the min input value\n\t\t *  @param {number} inputMax the max input value\n\t\t *  @example\n\t\t * var norm = new Tone.Normalize(2, 4);\n\t\t * var sig = new Tone.Signal(3).connect(norm);\n\t\t * //output of norm is 0.5. \n\t\t */\n\t    Tone.Normalize = function (inputMin, inputMax) {\n\t        Tone.SignalBase.call(this);\n\t        /**\n\t\t\t *  the min input value\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._inputMin = Tone.defaultArg(inputMin, 0);\n\t        /**\n\t\t\t *  the max input value\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._inputMax = Tone.defaultArg(inputMax, 1);\n\t        /**\n\t\t\t *  subtract the min from the input\n\t\t\t *  @type {Tone.Add}\n\t\t\t *  @private\n\t\t\t */\n\t        this._sub = this.input = new Tone.Add(0);\n\t        /**\n\t\t\t *  divide by the difference between the input and output\n\t\t\t *  @type {Tone.Multiply}\n\t\t\t *  @private\n\t\t\t */\n\t        this._div = this.output = new Tone.Multiply(1);\n\t        this._sub.connect(this._div);\n\t        this._setRange();\n\t    };\n\t    Tone.extend(Tone.Normalize, Tone.SignalBase);\n\t    /**\n\t\t * The minimum value the input signal will reach.\n\t\t * @memberOf Tone.Normalize#\n\t\t * @type {number}\n\t\t * @name min\n\t\t */\n\t    Object.defineProperty(Tone.Normalize.prototype, 'min', {\n\t        get: function () {\n\t            return this._inputMin;\n\t        },\n\t        set: function (min) {\n\t            this._inputMin = min;\n\t            this._setRange();\n\t        }\n\t    });\n\t    /**\n\t\t * The maximum value the input signal will reach.\n\t\t * @memberOf Tone.Normalize#\n\t\t * @type {number}\n\t\t * @name max\n\t\t */\n\t    Object.defineProperty(Tone.Normalize.prototype, 'max', {\n\t        get: function () {\n\t            return this._inputMax;\n\t        },\n\t        set: function (max) {\n\t            this._inputMax = max;\n\t            this._setRange();\n\t        }\n\t    });\n\t    /**\n\t\t *  set the values\n\t\t *  @private\n\t\t */\n\t    Tone.Normalize.prototype._setRange = function () {\n\t        this._sub.value = -this._inputMin;\n\t        this._div.value = 1 / (this._inputMax - this._inputMin);\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.Normalize} this\n\t\t */\n\t    Tone.Normalize.prototype.dispose = function () {\n\t        Tone.SignalBase.prototype.dispose.call(this);\n\t        this._sub.dispose();\n\t        this._sub = null;\n\t        this._div.dispose();\n\t        this._div = null;\n\t        return this;\n\t    };\n\t    return Tone.Normalize;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t * @class Tone.TransportTimelineSignal extends Tone.TimelineSignal, but adds the ability to synchronize the signal to the signal to the Tone.Transport\n\t\t * @extends {Tone.TimelineSignal}\n\t\t */\n\t    Tone.TransportTimelineSignal = function () {\n\t        Tone.TimelineSignal.apply(this, arguments);\n\t        /**\n\t\t\t * The real signal output\n\t\t\t * @type {Tone.Signal}\n\t\t\t * @private\n\t\t\t */\n\t        this.output = this._outputSig = new Tone.Signal(this._initial);\n\t        /**\n\t\t\t * Keep track of the last value. (small optimization)\n\t\t\t * @private\n\t\t\t * @type {Number}\n\t\t\t */\n\t        this._lastVal = this.value;\n\t        /**\n\t\t\t * The event id of the tick update loop\n\t\t\t * @private\n\t\t\t * @type {Number}\n\t\t\t */\n\t        this._synced = Tone.Transport.scheduleRepeat(this._onTick.bind(this), '1i');\n\t        /**\n\t\t\t * A bound version of the anchor value methods\n\t\t\t * @type {Function}\n\t\t\t * @private\n\t\t\t */\n\t        this._bindAnchorValue = this._anchorValue.bind(this);\n\t        Tone.Transport.on('start stop pause', this._bindAnchorValue);\n\t        this._events.memory = Infinity;\n\t    };\n\t    Tone.extend(Tone.TransportTimelineSignal, Tone.TimelineSignal);\n\t    /**\n\t\t * Callback which is invoked every tick.\n\t\t * @private\n\t\t * @param  {Number} time\n\t\t * @return {Tone.TransportTimelineSignal}      this\n\t\t */\n\t    Tone.TransportTimelineSignal.prototype._onTick = function (time) {\n\t        var val = this.getValueAtTime(Tone.Transport.seconds);\n\t        if (this._lastVal !== val) {\n\t            this._lastVal = val;\n\t            //approximate ramp curves with linear ramps\n\t            this._outputSig.linearRampToValueAtTime(val, time);\n\t        }\n\t    };\n\t    /**\n\t\t * Anchor the value at the start and stop of the Transport\n\t\t * @param  {Number} time The time of the event\n\t\t * @return {Tone.TransportTimelineSignal}      this\n\t\t * @private\n\t\t */\n\t    Tone.TransportTimelineSignal.prototype._anchorValue = function (time) {\n\t        var val = this.getValueAtTime(Tone.Transport.ticks);\n\t        this._lastVal = val;\n\t        this._outputSig.cancelScheduledValues(time);\n\t        this._outputSig.setValueAtTime(val, time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Get the scheduled value at the given time. This will\n\t\t *  return the unconverted (raw) value.\n\t\t *  @param  {TransportTime}  time  The time in seconds.\n\t\t *  @return  {Number}  The scheduled value at the given time.\n\t\t */\n\t    Tone.TransportTimelineSignal.prototype.getValueAtTime = function (time) {\n\t        time = this.toTicks(time);\n\t        return Tone.TimelineSignal.prototype.getValueAtTime.call(this, time);\n\t    };\n\t    /**\n\t\t * Set the output of the signal at the given time\n\t\t * @param  {Number} value The value to change to at the given time\n\t\t * @param  {TransportTime} time  The time to change the signal\n\t\t * @return {Tone.TransportTimelineSignal}       this\n\t\t */\n\t    Tone.TransportTimelineSignal.prototype.setValueAtTime = function (value, time) {\n\t        time = this.toTicks(time);\n\t        Tone.TimelineSignal.prototype.setValueAtTime.call(this, value, time);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Linear ramp to the given value from the previous scheduled point to the given value\n\t\t * @param  {Number} value The value to change to at the given time\n\t\t * @param  {TransportTime} time  The time to change the signal\n\t\t * @return {Tone.TransportTimelineSignal}       this\n\t\t */\n\t    Tone.TransportTimelineSignal.prototype.linearRampToValueAtTime = function (value, time) {\n\t        time = this.toTicks(time);\n\t        Tone.TimelineSignal.prototype.linearRampToValueAtTime.call(this, value, time);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Exponential ramp to the given value from the previous scheduled point to the given value\n\t\t * @param  {Number} value The value to change to at the given time\n\t\t * @param  {TransportTime} time  The time to change the signal\n\t\t * @return {Tone.TransportTimelineSignal}       this\n\t\t */\n\t    Tone.TransportTimelineSignal.prototype.exponentialRampToValueAtTime = function (value, time) {\n\t        time = this.toTicks(time);\n\t        Tone.TimelineSignal.prototype.exponentialRampToValueAtTime.call(this, value, time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Start exponentially approaching the target value at the given time with\n\t\t *  a rate having the given time constant.\n\t\t *  @param {number} value\n\t\t *  @param {TransportTime} startTime\n\t\t *  @param {number} timeConstant\n\t\t * @return {Tone.TransportTimelineSignal}       this\n\t\t */\n\t    Tone.TransportTimelineSignal.prototype.setTargetAtTime = function (value, startTime, timeConstant) {\n\t        startTime = this.toTicks(startTime);\n\t        Tone.TimelineSignal.prototype.setTargetAtTime.call(this, value, startTime, timeConstant);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Cancels all scheduled parameter changes with times greater than or\n\t\t *  equal to startTime.\n\t\t *  @param  {TransportTime} startTime\n\t\t *  @returns {Tone.Param} this\n\t\t */\n\t    Tone.TransportTimelineSignal.prototype.cancelScheduledValues = function (startTime) {\n\t        startTime = this.toTicks(startTime);\n\t        Tone.TimelineSignal.prototype.cancelScheduledValues.call(this, startTime);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Set an array of arbitrary values starting at the given time for the given duration.\n\t\t *  @param {Float32Array} values\n\t\t *  @param {Time} startTime\n\t\t *  @param {Time} duration\n\t\t *  @param {NormalRange} [scaling=1] If the values in the curve should be scaled by some value\n\t\t *  @returns {Tone.TimelineSignal} this\n\t\t */\n\t    Tone.TransportTimelineSignal.prototype.setValueCurveAtTime = function (values, startTime, duration, scaling) {\n\t        startTime = this.toTicks(startTime);\n\t        duration = this.toTicks(duration);\n\t        Tone.TimelineSignal.prototype.setValueCurveAtTime.call(this, values, startTime, duration, scaling);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Dispose and disconnect\n\t\t * @return {Tone.TransportTimelineSignal} this\n\t\t */\n\t    Tone.TransportTimelineSignal.prototype.dispose = function () {\n\t        Tone.Transport.clear(this._synced);\n\t        Tone.Transport.off('start stop pause', this._syncedCallback);\n\t        this._events.cancel(0);\n\t        Tone.TimelineSignal.prototype.dispose.call(this);\n\t        this._outputSig.dispose();\n\t        this._outputSig = null;\n\t    };\n\t    return Tone.TransportTimelineSignal;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t * @class Tone.GrainPlayer implements [granular synthesis](https://en.wikipedia.org/wiki/Granular_synthesis).\n\t\t *        Granular Synthesis enables you to adjust pitch and playback rate independently. The grainSize is the\n\t\t *        amount of time each small chunk of audio is played for and the overlap is the\n\t\t *        amount of crossfading transition time between successive grains.\n\t\t * @extends {Tone.Source}\n\t\t * @param {String|Tone.Buffer} url\tThe url to load, or the Tone.Buffer to play.\n\t\t * @param {Function=} callback The callback to invoke after the url is loaded.\n\t\t */\n\t    Tone.GrainPlayer = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'url',\n\t            'onload'\n\t        ], Tone.GrainPlayer);\n\t        Tone.Source.call(this, options);\n\t        /**\n\t\t\t *  The audio buffer belonging to the player.\n\t\t\t *  @type  {Tone.Buffer}\n\t\t\t */\n\t        this.buffer = new Tone.Buffer(options.url, options.onload);\n\t        /**\n\t\t\t *  Create a repeating tick to schedule\n\t\t\t *  the grains.\n\t\t\t *  @type  {Tone.Clock}\n\t\t\t *  @private\n\t\t\t */\n\t        this._clock = new Tone.Clock(this._tick.bind(this), options.grainSize);\n\t        /**\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loopStart = 0;\n\t        /**\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loopEnd = 0;\n\t        /**\n\t\t\t * All of the currently playing BufferSources\n\t\t\t * @type {Array}\n\t\t\t * @private\n\t\t\t */\n\t        this._activeSources = [];\n\t        /**\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._playbackRate = options.playbackRate;\n\t        /**\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._grainSize = options.grainSize;\n\t        /**\n\t\t\t *  @private\n\t\t\t *  @type {Number}\n\t\t\t */\n\t        this._overlap = options.overlap;\n\t        /**\n\t\t\t *  Adjust the pitch independently of the playbackRate.\n\t\t\t *  @type  {Cents}\n\t\t\t */\n\t        this.detune = options.detune;\n\t        //setup\n\t        this.overlap = options.overlap;\n\t        this.loop = options.loop;\n\t        this.playbackRate = options.playbackRate;\n\t        this.grainSize = options.grainSize;\n\t        this.loopStart = options.loopStart;\n\t        this.loopEnd = options.loopEnd;\n\t        this.reverse = options.reverse;\n\t        this._clock.on('stop', this._onstop.bind(this));\n\t    };\n\t    Tone.extend(Tone.GrainPlayer, Tone.Source);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.GrainPlayer.defaults = {\n\t        'onload': Tone.noOp,\n\t        'overlap': 0.1,\n\t        'grainSize': 0.2,\n\t        'playbackRate': 1,\n\t        'detune': 0,\n\t        'loop': false,\n\t        'loopStart': 0,\n\t        'loopEnd': 0,\n\t        'reverse': false\n\t    };\n\t    /**\n\t\t *  Play the buffer at the given startTime. Optionally add an offset\n\t\t *  and/or duration which will play the buffer from a position\n\t\t *  within the buffer for the given duration.\n\t\t *\n\t\t *  @param  {Time} [startTime=now] When the player should start.\n\t\t *  @param  {Time} [offset=0] The offset from the beginning of the sample\n\t\t *                                 to start at.\n\t\t *  @param  {Time=} duration How long the sample should play. If no duration\n\t\t *                                is given, it will default to the full length\n\t\t *                                of the sample (minus any offset)\n\t\t *  @returns {Tone.GrainPlayer} this\n\t\t *  @memberOf Tone.GrainPlayer#\n\t\t *  @method start\n\t\t *  @name start\n\t\t */\n\t    /**\n\t\t *  Internal start method\n\t\t *  @param {Time} time\n\t\t *  @param {Time} offset\n\t\t *  @private\n\t\t */\n\t    Tone.GrainPlayer.prototype._start = function (time, offset, duration) {\n\t        offset = Tone.defaultArg(offset, 0);\n\t        offset = this.toSeconds(offset);\n\t        time = this.toSeconds(time);\n\t        this._offset = offset;\n\t        this._clock.start(time);\n\t        if (duration) {\n\t            this.stop(time + this.toSeconds(duration));\n\t        }\n\t    };\n\t    /**\n\t\t *  Internal start method\n\t\t *  @param {Time} time\n\t\t *  @private\n\t\t */\n\t    Tone.GrainPlayer.prototype._stop = function (time) {\n\t        this._clock.stop(time);\n\t    };\n\t    /**\n\t\t * Invoked when the clock is stopped\n\t\t * @param  {Number} time\n\t\t * @private\n\t\t */\n\t    Tone.GrainPlayer.prototype._onstop = function (time) {\n\t        //stop the players\n\t        this._activeSources.forEach(function (source) {\n\t            source.stop(time, 0);\n\t        });\n\t    };\n\t    /**\n\t\t *  Invoked on each clock tick. scheduled a new\n\t\t *  grain at this time.\n\t\t *  @param  {Time}  time\n\t\t *  @private\n\t\t */\n\t    Tone.GrainPlayer.prototype._tick = function (time) {\n\t        var fadeIn = this._offset < this._overlap ? 0 : this._overlap;\n\t        var source = new Tone.BufferSource({\n\t            'buffer': this.buffer,\n\t            'fadeIn': fadeIn,\n\t            'fadeOut': this._overlap,\n\t            'loop': this.loop,\n\t            'loopStart': this._loopStart,\n\t            'loopEnd': this._loopEnd,\n\t            'playbackRate': Tone.intervalToFrequencyRatio(this.detune / 100)\n\t        }).connect(this.output);\n\t        source.start(time, this._offset);\n\t        this._offset += this.grainSize;\n\t        source.stop(time + this.grainSize);\n\t        //add it to the active sources\n\t        this._activeSources.push(source);\n\t        //remove it when it's done\n\t        source.onended = function () {\n\t            var index = this._activeSources.indexOf(source);\n\t            if (index !== -1) {\n\t                this._activeSources.splice(index, 1);\n\t            }\n\t        }.bind(this);\n\t    };\n\t    /**\n\t\t *  Jump to a specific time and play it.\n\t\t *  @param  {Time}  offset  The offset to jump to.\n\t\t *  @param {Time=} time When to make the jump.\n\t\t *  @return  {Tone.GrainPlayer}  this\n\t\t */\n\t    Tone.GrainPlayer.prototype.seek = function (offset, time) {\n\t        this._offset = this.toSeconds(offset);\n\t        this._tick(this.toSeconds(time));\n\t        return this;\n\t    };\n\t    /**\n\t\t * The playback rate of the sample\n\t\t * @memberOf Tone.GrainPlayer#\n\t\t * @type {Positive}\n\t\t * @name playbackRate\n\t\t */\n\t    Object.defineProperty(Tone.GrainPlayer.prototype, 'playbackRate', {\n\t        get: function () {\n\t            return this._playbackRate;\n\t        },\n\t        set: function (rate) {\n\t            this._playbackRate = rate;\n\t            this.grainSize = this._grainSize;\n\t        }\n\t    });\n\t    /**\n\t\t * The loop start time.\n\t\t * @memberOf Tone.GrainPlayer#\n\t\t * @type {Time}\n\t\t * @name loopStart\n\t\t */\n\t    Object.defineProperty(Tone.GrainPlayer.prototype, 'loopStart', {\n\t        get: function () {\n\t            return this._loopStart;\n\t        },\n\t        set: function (time) {\n\t            this._loopStart = this.toSeconds(time);\n\t        }\n\t    });\n\t    /**\n\t\t * The loop end time.\n\t\t * @memberOf Tone.GrainPlayer#\n\t\t * @type {Time}\n\t\t * @name loopEnd\n\t\t */\n\t    Object.defineProperty(Tone.GrainPlayer.prototype, 'loopEnd', {\n\t        get: function () {\n\t            return this._loopEnd;\n\t        },\n\t        set: function (time) {\n\t            this._loopEnd = this.toSeconds(time);\n\t        }\n\t    });\n\t    /**\n\t\t * The direction the buffer should play in\n\t\t * @memberOf Tone.GrainPlayer#\n\t\t * @type {boolean}\n\t\t * @name reverse\n\t\t */\n\t    Object.defineProperty(Tone.GrainPlayer.prototype, 'reverse', {\n\t        get: function () {\n\t            return this.buffer.reverse;\n\t        },\n\t        set: function (rev) {\n\t            this.buffer.reverse = rev;\n\t        }\n\t    });\n\t    /**\n\t\t * The size of each chunk of audio that the\n\t\t * buffer is chopped into and played back at.\n\t\t * @memberOf Tone.GrainPlayer#\n\t\t * @type {Time}\n\t\t * @name grainSize\n\t\t */\n\t    Object.defineProperty(Tone.GrainPlayer.prototype, 'grainSize', {\n\t        get: function () {\n\t            return this._grainSize;\n\t        },\n\t        set: function (size) {\n\t            this._grainSize = this.toSeconds(size);\n\t            this._clock.frequency.value = this._playbackRate / this._grainSize;\n\t        }\n\t    });\n\t    /**\n\t\t * This is the duration of the cross-fade between\n\t\t * sucessive grains.\n\t\t * @memberOf Tone.GrainPlayer#\n\t\t * @type {Time}\n\t\t * @name overlap\n\t\t */\n\t    Object.defineProperty(Tone.GrainPlayer.prototype, 'overlap', {\n\t        get: function () {\n\t            return this._overlap;\n\t        },\n\t        set: function (time) {\n\t            this._overlap = this.toSeconds(time);\n\t        }\n\t    });\n\t    /**\n\t\t * Clean up\n\t\t * @return {Tone.GrainPlayer} this\n\t\t */\n\t    Tone.GrainPlayer.prototype.dispose = function () {\n\t        Tone.Source.prototype.dispose.call(this);\n\t        this.buffer.dispose();\n\t        this.buffer = null;\n\t        this._clock.dispose();\n\t        this._clock = null;\n\t        this._activeSources.forEach(function (source) {\n\t            source.dispose();\n\t        });\n\t        this._activeSources = null;\n\t        return this;\n\t    };\n\t    return Tone.GrainPlayer;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Player is an audio file player with start, loop, and stop functions.\n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone.Source} \n\t\t *  @param {string|AudioBuffer} url Either the AudioBuffer or the url from\n\t\t *                                  which to load the AudioBuffer\n\t\t *  @param {function=} onload The function to invoke when the buffer is loaded. \n\t\t *                            Recommended to use Tone.Buffer.on('load') instead.\n\t\t *  @example\n\t\t * var player = new Tone.Player(\"./path/to/sample.mp3\").toMaster();\n\t\t * //play as soon as the buffer is loaded\n\t\t * player.autostart = true;\n\t\t */\n\t    Tone.Player = function (url) {\n\t        var options;\n\t        if (url instanceof Tone.Buffer) {\n\t            url = url.get();\n\t            options = Tone.Player.defaults;\n\t        } else {\n\t            options = Tone.defaults(arguments, [\n\t                'url',\n\t                'onload'\n\t            ], Tone.Player);\n\t        }\n\t        Tone.Source.call(this, options);\n\t        /**\n\t\t\t *  @private\n\t\t\t *  @type {AudioBufferSourceNode}\n\t\t\t */\n\t        this._source = null;\n\t        /**\n\t\t\t *  If the file should play as soon\n\t\t\t *  as the buffer is loaded. \n\t\t\t *  @type {boolean}\n\t\t\t *  @example\n\t\t\t * //will play as soon as it's loaded\n\t\t\t * var player = new Tone.Player({\n\t\t\t * \t\"url\" : \"./path/to/sample.mp3\",\n\t\t\t * \t\"autostart\" : true,\n\t\t\t * }).toMaster();\n\t\t\t */\n\t        this.autostart = options.autostart;\n\t        /**\n\t\t\t *  the buffer\n\t\t\t *  @private\n\t\t\t *  @type {Tone.Buffer}\n\t\t\t */\n\t        this._buffer = new Tone.Buffer({\n\t            'url': options.url,\n\t            'onload': this._onload.bind(this, options.onload),\n\t            'reverse': options.reverse\n\t        });\n\t        if (url instanceof AudioBuffer) {\n\t            this._buffer.set(url);\n\t        }\n\t        /**\n\t\t\t *  if the buffer should loop once it's over\n\t\t\t *  @type {boolean}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loop = options.loop;\n\t        /**\n\t\t\t *  if 'loop' is true, the loop will start at this position\n\t\t\t *  @type {Time}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loopStart = options.loopStart;\n\t        /**\n\t\t\t *  if 'loop' is true, the loop will end at this position\n\t\t\t *  @type {Time}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loopEnd = options.loopEnd;\n\t        /**\n\t\t\t *  the playback rate\n\t\t\t *  @private\n\t\t\t *  @type {number}\n\t\t\t */\n\t        this._playbackRate = options.playbackRate;\n\t        /**\n\t\t\t *  Enabling retrigger will allow a player to be restarted\n\t\t\t *  before the the previous 'start' is done playing. Otherwise, \n\t\t\t *  successive calls to Tone.Player.start will only start\n\t\t\t *  the sample if it had played all the way through. \n\t\t\t *  @type {boolean}\n\t\t\t */\n\t        this.retrigger = options.retrigger;\n\t        /**\n\t\t\t *  The fadeIn time of the amplitude envelope.\n\t\t\t *  @type {Time}\n\t\t\t */\n\t        this.fadeIn = options.fadeIn;\n\t        /**\n\t\t\t *  The fadeOut time of the amplitude envelope.\n\t\t\t *  @type {Time}\n\t\t\t */\n\t        this.fadeOut = options.fadeOut;\n\t    };\n\t    Tone.extend(Tone.Player, Tone.Source);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Player.defaults = {\n\t        'onload': Tone.noOp,\n\t        'playbackRate': 1,\n\t        'loop': false,\n\t        'autostart': false,\n\t        'loopStart': 0,\n\t        'loopEnd': 0,\n\t        'retrigger': false,\n\t        'reverse': false,\n\t        'fadeIn': 0,\n\t        'fadeOut': 0\n\t    };\n\t    /**\n\t\t *  Load the audio file as an audio buffer.\n\t\t *  Decodes the audio asynchronously and invokes\n\t\t *  the callback once the audio buffer loads. \n\t\t *  Note: this does not need to be called if a url\n\t\t *  was passed in to the constructor. Only use this\n\t\t *  if you want to manually load a new url. \n\t\t * @param {string} url The url of the buffer to load.\n\t\t *                     Filetype support depends on the\n\t\t *                     browser.\n\t\t *  @param  {function=} callback The function to invoke once\n\t\t *                               the sample is loaded.\n\t\t *  @returns {Promise}\n\t\t */\n\t    Tone.Player.prototype.load = function (url, callback) {\n\t        return this._buffer.load(url, this._onload.bind(this, callback));\n\t    };\n\t    /**\n\t\t * Internal callback when the buffer is loaded.\n\t\t * @private\n\t\t */\n\t    Tone.Player.prototype._onload = function (callback) {\n\t        callback = Tone.defaultArg(callback, Tone.noOp);\n\t        callback(this);\n\t        if (this.autostart) {\n\t            this.start();\n\t        }\n\t    };\n\t    /**\n\t\t *  Play the buffer at the given startTime. Optionally add an offset\n\t\t *  and/or duration which will play the buffer from a position\n\t\t *  within the buffer for the given duration. \n\t\t *  \n\t\t *  @param  {Time} [startTime=now] When the player should start.\n\t\t *  @param  {Time} [offset=0] The offset from the beginning of the sample\n\t\t *                                 to start at. \n\t\t *  @param  {Time=} duration How long the sample should play. If no duration\n\t\t *                                is given, it will default to the full length \n\t\t *                                of the sample (minus any offset)\n\t\t *  @returns {Tone.Player} this\n\t\t *  @memberOf Tone.Player#\n\t\t *  @method start\n\t\t *  @name start\n\t\t */\n\t    /**\n\t\t *  Internal start method\n\t\t *  @private\n\t\t */\n\t    Tone.Player.prototype._start = function (startTime, offset, duration) {\n\t        //if it's a loop the default offset is the loopstart point\n\t        if (this._loop) {\n\t            offset = Tone.defaultArg(offset, this._loopStart);\n\t        } else {\n\t            //otherwise the default offset is 0\n\t            offset = Tone.defaultArg(offset, 0);\n\t        }\n\t        //compute the values in seconds\n\t        offset = this.toSeconds(offset);\n\t        duration = Tone.defaultArg(duration, Math.max(this._buffer.duration - offset, 0));\n\t        duration = this.toSeconds(duration);\n\t        startTime = this.toSeconds(startTime);\n\t        // //make the source\n\t        this._source = new Tone.BufferSource({\n\t            'buffer': this._buffer,\n\t            'loop': this._loop,\n\t            'loopStart': this._loopStart,\n\t            'loopEnd': this._loopEnd,\n\t            'playbackRate': this._playbackRate,\n\t            'fadeIn': this.fadeIn,\n\t            'fadeOut': this.fadeOut\n\t        }).connect(this.output);\n\t        //set the looping properties\n\t        if (!this._loop && !this._synced) {\n\t            //if it's not looping, set the state change at the end of the sample\n\t            this._state.setStateAtTime(Tone.State.Stopped, startTime + duration);\n\t        }\n\t        //start it\n\t        if (this._loop) {\n\t            this._source.start(startTime, offset);\n\t        } else {\n\t            this._source.start(startTime, offset, duration);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Stop playback.\n\t\t *  @private\n\t\t *  @param  {Time} [time=now]\n\t\t *  @returns {Tone.Player} this\n\t\t */\n\t    Tone.Player.prototype._stop = function (time) {\n\t        if (this._source) {\n\t            this._source.stop(this.toSeconds(time));\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Seek to a specific time in the player's buffer. If the \n\t\t *  source is no longer playing at that time, it will stop.\n\t\t *  If you seek to a time that \n\t\t *  @param {Time} offset The time to seek to.\n\t\t *  @param {Time=} time The time for the seek event to occur.\n\t\t *  @return {Tone.Player} this\n\t\t *  @example\n\t\t * source.start(0.2);\n\t\t * source.stop(0.4);\n\t\t */\n\t    Tone.Player.prototype.seek = function (offset, time) {\n\t        time = this.toSeconds(time);\n\t        if (this._state.getValueAtTime(time) === Tone.State.Started) {\n\t            offset = this.toSeconds(offset);\n\t            // if it's currently playing, stop it\n\t            this._stop(time);\n\t            //restart it at the given time\n\t            this._start(time, offset);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Set the loop start and end. Will only loop if loop is \n\t\t *  set to true. \n\t\t *  @param {Time} loopStart The loop end time\n\t\t *  @param {Time} loopEnd The loop end time\n\t\t *  @returns {Tone.Player} this\n\t\t *  @example\n\t\t * //loop 0.1 seconds of the file. \n\t\t * player.setLoopPoints(0.2, 0.3);\n\t\t * player.loop = true;\n\t\t */\n\t    Tone.Player.prototype.setLoopPoints = function (loopStart, loopEnd) {\n\t        this.loopStart = loopStart;\n\t        this.loopEnd = loopEnd;\n\t        return this;\n\t    };\n\t    /**\n\t\t * If loop is true, the loop will start at this position. \n\t\t * @memberOf Tone.Player#\n\t\t * @type {Time}\n\t\t * @name loopStart\n\t\t */\n\t    Object.defineProperty(Tone.Player.prototype, 'loopStart', {\n\t        get: function () {\n\t            return this._loopStart;\n\t        },\n\t        set: function (loopStart) {\n\t            this._loopStart = loopStart;\n\t            if (this._source) {\n\t                this._source.loopStart = this.toSeconds(loopStart);\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * If loop is true, the loop will end at this position.\n\t\t * @memberOf Tone.Player#\n\t\t * @type {Time}\n\t\t * @name loopEnd\n\t\t */\n\t    Object.defineProperty(Tone.Player.prototype, 'loopEnd', {\n\t        get: function () {\n\t            return this._loopEnd;\n\t        },\n\t        set: function (loopEnd) {\n\t            this._loopEnd = loopEnd;\n\t            if (this._source) {\n\t                this._source.loopEnd = this.toSeconds(loopEnd);\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The audio buffer belonging to the player. \n\t\t * @memberOf Tone.Player#\n\t\t * @type {Tone.Buffer}\n\t\t * @name buffer\n\t\t */\n\t    Object.defineProperty(Tone.Player.prototype, 'buffer', {\n\t        get: function () {\n\t            return this._buffer;\n\t        },\n\t        set: function (buffer) {\n\t            this._buffer.set(buffer);\n\t        }\n\t    });\n\t    /**\n\t\t * If the buffer should loop once it's over. \n\t\t * @memberOf Tone.Player#\n\t\t * @type {boolean}\n\t\t * @name loop\n\t\t */\n\t    Object.defineProperty(Tone.Player.prototype, 'loop', {\n\t        get: function () {\n\t            return this._loop;\n\t        },\n\t        set: function (loop) {\n\t            this._loop = loop;\n\t            if (this._source) {\n\t                this._source.loop = loop;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The playback speed. 1 is normal speed. This is not a signal because\n\t\t * Safari and iOS currently don't support playbackRate as a signal.\n\t\t * @memberOf Tone.Player#\n\t\t * @type {number}\n\t\t * @name playbackRate\n\t\t */\n\t    Object.defineProperty(Tone.Player.prototype, 'playbackRate', {\n\t        get: function () {\n\t            return this._playbackRate;\n\t        },\n\t        set: function (rate) {\n\t            this._playbackRate = rate;\n\t            if (this._source) {\n\t                this._source.playbackRate.value = rate;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The direction the buffer should play in\n\t\t * @memberOf Tone.Player#\n\t\t * @type {boolean}\n\t\t * @name reverse\n\t\t */\n\t    Object.defineProperty(Tone.Player.prototype, 'reverse', {\n\t        get: function () {\n\t            return this._buffer.reverse;\n\t        },\n\t        set: function (rev) {\n\t            this._buffer.reverse = rev;\n\t        }\n\t    });\n\t    /**\n\t\t * If all the buffer is loaded\n\t\t * @memberOf Tone.Player#\n\t\t * @type {Boolean}\n\t\t * @name loaded\n\t\t * @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Player.prototype, 'loaded', {\n\t        get: function () {\n\t            return this._buffer.loaded;\n\t        }\n\t    });\n\t    /**\n\t\t *  Dispose and disconnect.\n\t\t *  @return {Tone.Player} this\n\t\t */\n\t    Tone.Player.prototype.dispose = function () {\n\t        Tone.Source.prototype.dispose.call(this);\n\t        if (this._source !== null) {\n\t            this._source.disconnect();\n\t            this._source = null;\n\t        }\n\t        this._buffer.dispose();\n\t        this._buffer = null;\n\t        return this;\n\t    };\n\t    return Tone.Player;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Players combines multiple [Tone.Player](Player) objects.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @param {Object} urls An object mapping a name to a url.\n\t\t *  @param {function=} onload The function to invoke when the buffer is loaded.\n\t\t */\n\t    Tone.Players = function (urls) {\n\t        var args = Array.prototype.slice.call(arguments);\n\t        args.shift();\n\t        var options = Tone.defaults(args, ['onload'], Tone.Players);\n\t        Tone.call(this);\n\t        /**\n\t\t\t *  The output volume node\n\t\t\t *  @type  {Tone.Volume}\n\t\t\t *  @private\n\t\t\t */\n\t        this._volume = this.output = new Tone.Volume(options.volume);\n\t        /**\n\t\t\t * The volume of the output in decibels.\n\t\t\t * @type {Decibels}\n\t\t\t * @signal\n\t\t\t * @example\n\t\t\t * source.volume.value = -6;\n\t\t\t */\n\t        this.volume = this._volume.volume;\n\t        this._readOnly('volume');\n\t        //make the output explicitly stereo\n\t        this._volume.output.output.channelCount = 2;\n\t        this._volume.output.output.channelCountMode = 'explicit';\n\t        //mute initially\n\t        this.mute = options.mute;\n\t        /**\n\t\t\t * The container of all of the players\n\t\t\t * @type {Object}\n\t\t\t * @private\n\t\t\t */\n\t        this._players = {};\n\t        /**\n\t\t\t * The loading count\n\t\t\t * @type {Number}\n\t\t\t * @private\n\t\t\t */\n\t        this._loadingCount = 0;\n\t        /**\n\t\t\t * private holder of the fadeIn time\n\t\t\t * @type {Time}\n\t\t\t * @private\n\t\t\t */\n\t        this._fadeIn = options.fadeIn;\n\t        /**\n\t\t\t * private holder of the fadeOut time\n\t\t\t * @type {Time}\n\t\t\t * @private\n\t\t\t */\n\t        this._fadeOut = options.fadeOut;\n\t        //add all of the players\n\t        for (var name in urls) {\n\t            this._loadingCount++;\n\t            this.add(name, urls[name], this._bufferLoaded.bind(this, options.onload));\n\t        }\n\t    };\n\t    Tone.extend(Tone.Players, Tone.AudioNode);\n\t    /**\n\t\t * The default values\n\t\t * @type {Object}\n\t\t */\n\t    Tone.Players.defaults = {\n\t        'volume': 0,\n\t        'mute': false,\n\t        'onload': Tone.noOp,\n\t        'fadeIn': 0,\n\t        'fadeOut': 0\n\t    };\n\t    /**\n\t\t *  A buffer was loaded. decrement the counter.\n\t\t *  @param  {Function}  callback\n\t\t *  @private\n\t\t */\n\t    Tone.Players.prototype._bufferLoaded = function (callback) {\n\t        this._loadingCount--;\n\t        if (this._loadingCount === 0 && callback) {\n\t            callback(this);\n\t        }\n\t    };\n\t    /**\n\t\t * Mute the output.\n\t\t * @memberOf Tone.Source#\n\t\t * @type {boolean}\n\t\t * @name mute\n\t\t * @example\n\t\t * //mute the output\n\t\t * source.mute = true;\n\t\t */\n\t    Object.defineProperty(Tone.Players.prototype, 'mute', {\n\t        get: function () {\n\t            return this._volume.mute;\n\t        },\n\t        set: function (mute) {\n\t            this._volume.mute = mute;\n\t        }\n\t    });\n\t    /**\n\t\t * The fadeIn time of the amplitude envelope.\n\t\t * @memberOf Tone.Source#\n\t\t * @type {Time}\n\t\t * @name fadeIn\n\t\t */\n\t    Object.defineProperty(Tone.Players.prototype, 'fadeIn', {\n\t        get: function () {\n\t            return this._fadeIn;\n\t        },\n\t        set: function (fadeIn) {\n\t            this._fadeIn = fadeIn;\n\t            this._forEach(function (player) {\n\t                player.fadeIn = fadeIn;\n\t            });\n\t        }\n\t    });\n\t    /**\n\t\t * The fadeOut time of the amplitude envelope.\n\t\t * @memberOf Tone.Source#\n\t\t * @type {Time}\n\t\t * @name fadeOut\n\t\t */\n\t    Object.defineProperty(Tone.Players.prototype, 'fadeOut', {\n\t        get: function () {\n\t            return this._fadeOut;\n\t        },\n\t        set: function (fadeOut) {\n\t            this._fadeOut = fadeOut;\n\t            this._forEach(function (player) {\n\t                player.fadeOut = fadeOut;\n\t            });\n\t        }\n\t    });\n\t    /**\n\t\t * The state of the players object. Returns \"started\" if any of the players are playing.\n\t\t * @memberOf Tone.Players#\n\t\t * @type {String}\n\t\t * @name state\n\t\t * @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Players.prototype, 'state', {\n\t        get: function () {\n\t            var playing = false;\n\t            this._forEach(function (player) {\n\t                playing = playing || player.state === Tone.State.Started;\n\t            });\n\t            return playing ? Tone.State.Started : Tone.State.Stopped;\n\t        }\n\t    });\n\t    /**\n\t\t *  True if the buffers object has a buffer by that name.\n\t\t *  @param  {String|Number}  name  The key or index of the\n\t\t *                                 buffer.\n\t\t *  @return  {Boolean}\n\t\t */\n\t    Tone.Players.prototype.has = function (name) {\n\t        return this._players.hasOwnProperty(name);\n\t    };\n\t    /**\n\t\t *  Get a player by name.\n\t\t *  @param  {String}  name  The players name as defined in\n\t\t *                          the constructor object or `add` method.\n\t\t *  @return  {Tone.Player}\n\t\t */\n\t    Tone.Players.prototype.get = function (name) {\n\t        if (this.has(name)) {\n\t            return this._players[name];\n\t        } else {\n\t            throw new Error('Tone.Players: no player named ' + name);\n\t        }\n\t    };\n\t    /**\n\t\t * Iterate over all of the players\n\t\t * @param  {Function} callback\n\t\t * @return {Tone.Players}            this\n\t\t * @private\n\t\t */\n\t    Tone.Players.prototype._forEach = function (callback) {\n\t        for (var playerName in this._players) {\n\t            callback(this._players[playerName], playerName);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t * If all the buffers are loaded or not\n\t\t * @memberOf Tone.Players#\n\t\t * @type {Boolean}\n\t\t * @name loaded\n\t\t * @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Players.prototype, 'loaded', {\n\t        get: function () {\n\t            var isLoaded = true;\n\t            this._forEach(function (player) {\n\t                isLoaded = isLoaded && player.loaded;\n\t            });\n\t            return isLoaded;\n\t        }\n\t    });\n\t    /**\n\t\t *  Add a player by name and url to the Players\n\t\t *  @param  {String}    name      A unique name to give the player\n\t\t *  @param  {String|Tone.Buffer|Audiobuffer}  url  Either the url of the bufer,\n\t\t *                                                 or a buffer which will be added\n\t\t *                                                 with the given name.\n\t\t *  @param  {Function=}  callback  The callback to invoke\n\t\t *                                 when the url is loaded.\n\t\t */\n\t    Tone.Players.prototype.add = function (name, url, callback) {\n\t        this._players[name] = new Tone.Player(url, callback).connect(this.output);\n\t        this._players[name].fadeIn = this._fadeIn;\n\t        this._players[name].fadeOut = this._fadeOut;\n\t        return this;\n\t    };\n\t    /**\n\t\t * Stop all of the players at the given time\n\t\t * @param {Time} time The time to stop all of the players.\n\t\t * @return {Tone.Players} this\n\t\t */\n\t    Tone.Players.prototype.stopAll = function (time) {\n\t        this._forEach(function (player) {\n\t            player.stop(time);\n\t        });\n\t    };\n\t    /**\n\t\t *  Dispose and disconnect.\n\t\t *  @return {Tone.Players} this\n\t\t */\n\t    Tone.Players.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._volume.dispose();\n\t        this._volume = null;\n\t        this._writable('volume');\n\t        this.volume = null;\n\t        this.output = null;\n\t        this._forEach(function (player) {\n\t            player.dispose();\n\t        });\n\t        this._players = null;\n\t        return this;\n\t    };\n\t    return Tone.Players;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.UserMedia uses MediaDevices.getUserMedia to open up\n\t\t *          and external microphone or audio input. Check\n\t\t *          [MediaDevices API Support](https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia)\n\t\t *          to see which browsers are supported. Access to an external input\n\t\t *          is limited to secure (HTTPS) connections.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @param {Decibels=} volume The level of the input\n\t\t *  @example\n\t\t * //list the inputs and open the third one\n\t\t * var motu = new Tone.UserMedia();\n\t\t *\n\t\t * //opening the input asks the user to activate their mic\n\t\t * motu.open().then(function(){\n\t\t * \t//opening is activates the microphone\n\t\t * \t//starting lets audio through\n\t\t * \tmotu.start(10);\n\t\t * });\n\t\t */\n\t    Tone.UserMedia = function () {\n\t        var options = Tone.defaults(arguments, ['volume'], Tone.UserMedia);\n\t        Tone.AudioNode.call(this);\n\t        /**\n\t\t\t *  The MediaStreamNode\n\t\t\t *  @type {MediaStreamAudioSourceNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._mediaStream = null;\n\t        /**\n\t\t\t *  The media stream created by getUserMedia.\n\t\t\t *  @type {LocalMediaStream}\n\t\t\t *  @private\n\t\t\t */\n\t        this._stream = null;\n\t        /**\n\t\t\t *  The open device\n\t\t\t *  @type  {MediaDeviceInfo}\n\t\t\t *  @private\n\t\t\t */\n\t        this._device = null;\n\t        /**\n\t\t\t *  The output volume node\n\t\t\t *  @type  {Tone.Volume}\n\t\t\t *  @private\n\t\t\t */\n\t        this._volume = this.output = new Tone.Volume(options.volume);\n\t        /**\n\t\t\t * The volume of the output in decibels.\n\t\t\t * @type {Decibels}\n\t\t\t * @signal\n\t\t\t * @example\n\t\t\t * input.volume.value = -6;\n\t\t\t */\n\t        this.volume = this._volume.volume;\n\t        this._readOnly('volume');\n\t        this.mute = options.mute;\n\t    };\n\t    Tone.extend(Tone.UserMedia, Tone.AudioNode);\n\t    /**\n\t\t * the default parameters\n\t\t * @type {Object}\n\t\t */\n\t    Tone.UserMedia.defaults = {\n\t        'volume': 0,\n\t        'mute': false\n\t    };\n\t    /**\n\t\t *  Open the media stream. If a string is passed in, it is assumed\n\t\t *  to be the label or id of the stream, if a number is passed in,\n\t\t *  it is the input number of the stream.\n\t\t *  @param  {String|Number} [labelOrId=\"default\"] The label or id of the audio input media device.\n\t\t *                                                With no argument, the default stream is opened.\n\t\t *  @return {Promise} The promise is resolved when the stream is open.\n\t\t */\n\t    Tone.UserMedia.prototype.open = function (labelOrId) {\n\t        labelOrId = Tone.defaultArg(labelOrId, 'default');\n\t        return Tone.UserMedia.enumerateDevices().then(function (devices) {\n\t            var device;\n\t            if (Tone.isNumber(labelOrId)) {\n\t                device = devices[labelOrId];\n\t            } else {\n\t                device = devices.find(function (device) {\n\t                    return device.label === labelOrId || device.deviceId === labelOrId;\n\t                });\n\t                //didn't find a matching device\n\t                if (!device) {\n\t                    throw new Error('Tone.UserMedia: no matching device: ' + labelOrId);\n\t                }\n\t            }\n\t            this._device = device;\n\t            //do getUserMedia\n\t            var constraints = {\n\t                audio: {\n\t                    'deviceId': device.deviceId,\n\t                    'echoCancellation': false,\n\t                    'sampleRate': this.context.sampleRate\n\t                }\n\t            };\n\t            return navigator.mediaDevices.getUserMedia(constraints).then(function (stream) {\n\t                //start a new source only if the previous one is closed\n\t                if (!this._stream) {\n\t                    this._stream = stream;\n\t                    //Wrap a MediaStreamSourceNode around the live input stream.\n\t                    this._mediaStream = this.context.createMediaStreamSource(stream);\n\t                    //Connect the MediaStreamSourceNode to a gate gain node\n\t                    this._mediaStream.connect(this.output);\n\t                }\n\t                return this;\n\t            }.bind(this));\n\t        }.bind(this));\n\t    };\n\t    /**\n\t\t *  Close the media stream\n\t\t *  @return {Tone.UserMedia} this\n\t\t */\n\t    Tone.UserMedia.prototype.close = function () {\n\t        if (this._stream) {\n\t            this._stream.getAudioTracks().forEach(function (track) {\n\t                track.stop();\n\t            });\n\t            this._stream = null;\n\t            //remove the old media stream\n\t            this._mediaStream.disconnect();\n\t            this._mediaStream = null;\n\t        }\n\t        this._device = null;\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Returns a promise which resolves with the list of audio input devices available.\n\t\t *  @return {Promise} The promise that is resolved with the devices\n\t\t *  @static\n\t\t *  @example\n\t\t * Tone.UserMedia.enumerateDevices().then(function(devices){\n\t\t * \tconsole.log(devices)\n\t\t * })\n\t\t */\n\t    Tone.UserMedia.enumerateDevices = function () {\n\t        return navigator.mediaDevices.enumerateDevices().then(function (devices) {\n\t            return devices.filter(function (device) {\n\t                return device.kind === 'audioinput';\n\t            });\n\t        });\n\t    };\n\t    /**\n\t\t *  Returns the playback state of the source, \"started\" when the microphone is open\n\t\t *  and \"stopped\" when the mic is closed.\n\t\t *  @type {Tone.State}\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.UserMedia#\n\t\t *  @name state\n\t\t */\n\t    Object.defineProperty(Tone.UserMedia.prototype, 'state', {\n\t        get: function () {\n\t            return this._stream && this._stream.active ? Tone.State.Started : Tone.State.Stopped;\n\t        }\n\t    });\n\t    /**\n\t\t * \tReturns an identifier for the represented device that is\n\t\t * \tpersisted across sessions. It is un-guessable by other applications and\n\t\t * \tunique to the origin of the calling application. It is reset when the\n\t\t * \tuser clears cookies (for Private Browsing, a different identifier is\n\t\t * \tused that is not persisted across sessions). Returns undefined when the\n\t\t * \tdevice is not open.\n\t\t *  @type {String}\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.UserMedia#\n\t\t *  @name deviceId\n\t\t */\n\t    Object.defineProperty(Tone.UserMedia.prototype, 'deviceId', {\n\t        get: function () {\n\t            if (this._device) {\n\t                return this._device.deviceId;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * \tReturns a group identifier. Two devices have the\n\t\t * \tsame group identifier if they belong to the same physical device.\n\t\t * \tReturns undefined when the device is not open.\n\t\t *  @type {String}\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.UserMedia#\n\t\t *  @name groupId\n\t\t */\n\t    Object.defineProperty(Tone.UserMedia.prototype, 'groupId', {\n\t        get: function () {\n\t            if (this._device) {\n\t                return this._device.groupId;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * \tReturns a label describing this device (for example \"Built-in Microphone\").\n\t\t * \tReturns undefined when the device is not open or label is not available\n\t\t * \tbecause of permissions.\n\t\t *  @type {String}\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.UserMedia#\n\t\t *  @name groupId\n\t\t */\n\t    Object.defineProperty(Tone.UserMedia.prototype, 'label', {\n\t        get: function () {\n\t            if (this._device) {\n\t                return this._device.label;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * Mute the output.\n\t\t * @memberOf Tone.UserMedia#\n\t\t * @type {boolean}\n\t\t * @name mute\n\t\t * @example\n\t\t * //mute the output\n\t\t * userMedia.mute = true;\n\t\t */\n\t    Object.defineProperty(Tone.UserMedia.prototype, 'mute', {\n\t        get: function () {\n\t            return this._volume.mute;\n\t        },\n\t        set: function (mute) {\n\t            this._volume.mute = mute;\n\t        }\n\t    });\n\t    /**\n\t\t * Clean up.\n\t\t * @return {Tone.UserMedia} this\n\t\t */\n\t    Tone.UserMedia.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this.close();\n\t        this._writable('volume');\n\t        this._volume.dispose();\n\t        this._volume = null;\n\t        this.volume = null;\n\t        return this;\n\t    };\n\t    /**\n\t\t *  If getUserMedia is supported by the browser.\n\t\t *  @type  {Boolean}\n\t\t *  @memberOf Tone.UserMedia#\n\t\t *  @name supported\n\t\t *  @static\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.UserMedia, 'supported', {\n\t        get: function () {\n\t            return !Tone.isUndef(navigator.mediaDevices) && Tone.isFunction(navigator.mediaDevices.getUserMedia);\n\t        }\n\t    });\n\t    return Tone.UserMedia;\n\t});\n\t\n\treturn Tone;\n}));\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nvar addLeadingSlash = exports.addLeadingSlash = function addLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path : '/' + path;\n};\n\nvar stripLeadingSlash = exports.stripLeadingSlash = function stripLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path.substr(1) : path;\n};\n\nvar hasBasename = exports.hasBasename = function hasBasename(path, prefix) {\n  return new RegExp('^' + prefix + '(\\\\/|\\\\?|#|$)', 'i').test(path);\n};\n\nvar stripBasename = exports.stripBasename = function stripBasename(path, prefix) {\n  return hasBasename(path, prefix) ? path.substr(prefix.length) : path;\n};\n\nvar stripTrailingSlash = exports.stripTrailingSlash = function stripTrailingSlash(path) {\n  return path.charAt(path.length - 1) === '/' ? path.slice(0, -1) : path;\n};\n\nvar parsePath = exports.parsePath = function parsePath(path) {\n  var pathname = path || '/';\n  var search = '';\n  var hash = '';\n\n  var hashIndex = pathname.indexOf('#');\n  if (hashIndex !== -1) {\n    hash = pathname.substr(hashIndex);\n    pathname = pathname.substr(0, hashIndex);\n  }\n\n  var searchIndex = pathname.indexOf('?');\n  if (searchIndex !== -1) {\n    search = pathname.substr(searchIndex);\n    pathname = pathname.substr(0, searchIndex);\n  }\n\n  return {\n    pathname: pathname,\n    search: search === '?' ? '' : search,\n    hash: hash === '#' ? '' : hash\n  };\n};\n\nvar createPath = exports.createPath = function createPath(location) {\n  var pathname = location.pathname,\n      search = location.search,\n      hash = location.hash;\n\n\n  var path = pathname || '/';\n\n  if (search && search !== '?') path += search.charAt(0) === '?' ? search : '?' + search;\n\n  if (hash && hash !== '#') path += hash.charAt(0) === '#' ? hash : '#' + hash;\n\n  return path;\n};\n\n/***/ }),\n/* 6 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return addLeadingSlash; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return stripLeadingSlash; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return hasBasename; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return stripBasename; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return stripTrailingSlash; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return parsePath; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return createPath; });\nvar addLeadingSlash = function addLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path : '/' + path;\n};\n\nvar stripLeadingSlash = function stripLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path.substr(1) : path;\n};\n\nvar hasBasename = function hasBasename(path, prefix) {\n  return new RegExp('^' + prefix + '(\\\\/|\\\\?|#|$)', 'i').test(path);\n};\n\nvar stripBasename = function stripBasename(path, prefix) {\n  return hasBasename(path, prefix) ? path.substr(prefix.length) : path;\n};\n\nvar stripTrailingSlash = function stripTrailingSlash(path) {\n  return path.charAt(path.length - 1) === '/' ? path.slice(0, -1) : path;\n};\n\nvar parsePath = function parsePath(path) {\n  var pathname = path || '/';\n  var search = '';\n  var hash = '';\n\n  var hashIndex = pathname.indexOf('#');\n  if (hashIndex !== -1) {\n    hash = pathname.substr(hashIndex);\n    pathname = pathname.substr(0, hashIndex);\n  }\n\n  var searchIndex = pathname.indexOf('?');\n  if (searchIndex !== -1) {\n    search = pathname.substr(searchIndex);\n    pathname = pathname.substr(0, searchIndex);\n  }\n\n  return {\n    pathname: pathname,\n    search: search === '?' ? '' : search,\n    hash: hash === '#' ? '' : hash\n  };\n};\n\nvar createPath = function createPath(location) {\n  var pathname = location.pathname,\n      search = location.search,\n      hash = location.hash;\n\n\n  var path = pathname || '/';\n\n  if (search && search !== '?') path += search.charAt(0) === '?' ? search : '?' + search;\n\n  if (hash && hash !== '#') path += hash.charAt(0) === '#' ? hash : '#' + hash;\n\n  return path;\n};\n\n/***/ }),\n/* 7 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Instrument; });\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}var Instrument=function(){function Instrument(synth,volume){_classCallCheck(this,Instrument);this.synth=synth;this.synth.toMaster();this.synth.volume.value=volume;}_createClass(Instrument,[{key:\"triggerAttackRelease\",value:function triggerAttackRelease(note,duration,time){if(note){this.synth.triggerAttackRelease(note,duration,time);}else{this.synth.triggerAttackRelease(duration,time);}}}]);return Instrument;}();\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\nvar g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\n} catch(e) {\n\t// This works if the window reference is available\n\tif(typeof window === \"object\")\n\t\tg = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return createLocation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return locationsAreEqual; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_resolve_pathname__ = __webpack_require__(26);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_value_equal__ = __webpack_require__(27);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__PathUtils__ = __webpack_require__(6);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n\n\n\n\nvar createLocation = function createLocation(path, state, key, currentLocation) {\n  var location = void 0;\n  if (typeof path === 'string') {\n    // Two-arg form: push(path, state)\n    location = Object(__WEBPACK_IMPORTED_MODULE_2__PathUtils__[\"d\" /* parsePath */])(path);\n    location.state = state;\n  } else {\n    // One-arg form: push(location)\n    location = _extends({}, path);\n\n    if (location.pathname === undefined) location.pathname = '';\n\n    if (location.search) {\n      if (location.search.charAt(0) !== '?') location.search = '?' + location.search;\n    } else {\n      location.search = '';\n    }\n\n    if (location.hash) {\n      if (location.hash.charAt(0) !== '#') location.hash = '#' + location.hash;\n    } else {\n      location.hash = '';\n    }\n\n    if (state !== undefined && location.state === undefined) location.state = state;\n  }\n\n  try {\n    location.pathname = decodeURI(location.pathname);\n  } catch (e) {\n    if (e instanceof URIError) {\n      throw new URIError('Pathname \"' + location.pathname + '\" could not be decoded. ' + 'This is likely caused by an invalid percent-encoding.');\n    } else {\n      throw e;\n    }\n  }\n\n  if (key) location.key = key;\n\n  if (currentLocation) {\n    // Resolve incomplete/relative pathname relative to current location.\n    if (!location.pathname) {\n      location.pathname = currentLocation.pathname;\n    } else if (location.pathname.charAt(0) !== '/') {\n      location.pathname = Object(__WEBPACK_IMPORTED_MODULE_0_resolve_pathname__[\"default\"])(location.pathname, currentLocation.pathname);\n    }\n  } else {\n    // When there is no prior location and pathname is empty, set it to /\n    if (!location.pathname) {\n      location.pathname = '/';\n    }\n  }\n\n  return location;\n};\n\nvar locationsAreEqual = function locationsAreEqual(a, b) {\n  return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash && a.key === b.key && Object(__WEBPACK_IMPORTED_MODULE_1_value_equal__[\"default\"])(a.state, b.state);\n};\n\n/***/ }),\n/* 10 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return randomIntBetween; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return isNumeric; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return randomFromArray; });\n/* unused harmony export coinToss */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return shuffleArray; });\n/* unused harmony export runFunctionUntilCheckPasses */\nvar randomIntBetween=function randomIntBetween(min,max){return Math.floor(Math.random()*(max-min+1)+min);};var isNumeric=function isNumeric(value){return!isNaN(value-parseFloat(value));};var randomFromArray=function randomFromArray(array){return array[randomIntBetween(0,array.length-1)];};var coinToss=function coinToss(){return Math.floor(Math.random()*2);};var shuffleArray=function shuffleArray(array){var counter=array.length;// While there are elements in the array\nwhile(counter>0){// Pick a random index\nvar index=Math.floor(Math.random()*counter);// Decrease counter by 1\ncounter--;// And swap the last element with it\nvar temp=array[counter];array[counter]=array[index];array[index]=temp;}return array;};var runFunctionUntilCheckPasses=function runFunctionUntilCheckPasses(fn,check,isDone,dispatch,getState){if(isDone)return;var promise=fn();return promise.then(function(data){return runFunctionUntilCheckPasses(fn,check,check(dispatch,getState,data),dispatch);});};\n\n/***/ }),\n/* 11 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__createStore__ = __webpack_require__(47);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__combineReducers__ = __webpack_require__(145);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__bindActionCreators__ = __webpack_require__(146);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__applyMiddleware__ = __webpack_require__(147);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__compose__ = __webpack_require__(50);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__utils_warning__ = __webpack_require__(49);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return __WEBPACK_IMPORTED_MODULE_0__createStore__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_1__combineReducers__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_2__bindActionCreators__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_3__applyMiddleware__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return __WEBPACK_IMPORTED_MODULE_4__compose__[\"a\"]; });\n\n\n\n\n\n\n\n/*\n* This is a dummy function to check if the function name has been altered by minification.\n* If the function has been minified and NODE_ENV !== 'production', warn the user.\n*/\nfunction isCrushed() {}\n\nif (false) {\n  warning('You are currently using minified code outside of NODE_ENV === \\'production\\'. ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');\n}\n\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (false) {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.locationsAreEqual = exports.createLocation = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _resolvePathname = __webpack_require__(26);\n\nvar _resolvePathname2 = _interopRequireDefault(_resolvePathname);\n\nvar _valueEqual = __webpack_require__(27);\n\nvar _valueEqual2 = _interopRequireDefault(_valueEqual);\n\nvar _PathUtils = __webpack_require__(5);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar createLocation = exports.createLocation = function createLocation(path, state, key, currentLocation) {\n  var location = void 0;\n  if (typeof path === 'string') {\n    // Two-arg form: push(path, state)\n    location = (0, _PathUtils.parsePath)(path);\n    location.state = state;\n  } else {\n    // One-arg form: push(location)\n    location = _extends({}, path);\n\n    if (location.pathname === undefined) location.pathname = '';\n\n    if (location.search) {\n      if (location.search.charAt(0) !== '?') location.search = '?' + location.search;\n    } else {\n      location.search = '';\n    }\n\n    if (location.hash) {\n      if (location.hash.charAt(0) !== '#') location.hash = '#' + location.hash;\n    } else {\n      location.hash = '';\n    }\n\n    if (state !== undefined && location.state === undefined) location.state = state;\n  }\n\n  try {\n    location.pathname = decodeURI(location.pathname);\n  } catch (e) {\n    if (e instanceof URIError) {\n      throw new URIError('Pathname \"' + location.pathname + '\" could not be decoded. ' + 'This is likely caused by an invalid percent-encoding.');\n    } else {\n      throw e;\n    }\n  }\n\n  if (key) location.key = key;\n\n  if (currentLocation) {\n    // Resolve incomplete/relative pathname relative to current location.\n    if (!location.pathname) {\n      location.pathname = currentLocation.pathname;\n    } else if (location.pathname.charAt(0) !== '/') {\n      location.pathname = (0, _resolvePathname2.default)(location.pathname, currentLocation.pathname);\n    }\n  } else {\n    // When there is no prior location and pathname is empty, set it to /\n    if (!location.pathname) {\n      location.pathname = '/';\n    }\n  }\n\n  return location;\n};\n\nvar locationsAreEqual = exports.locationsAreEqual = function locationsAreEqual(a, b) {\n  return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash && a.key === b.key && (0, _valueEqual2.default)(a.state, b.state);\n};\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _warning = __webpack_require__(2);\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar createTransitionManager = function createTransitionManager() {\n  var prompt = null;\n\n  var setPrompt = function setPrompt(nextPrompt) {\n    (0, _warning2.default)(prompt == null, 'A history supports only one prompt at a time');\n\n    prompt = nextPrompt;\n\n    return function () {\n      if (prompt === nextPrompt) prompt = null;\n    };\n  };\n\n  var confirmTransitionTo = function confirmTransitionTo(location, action, getUserConfirmation, callback) {\n    // TODO: If another transition starts while we're still confirming\n    // the previous one, we may end up in a weird state. Figure out the\n    // best way to handle this.\n    if (prompt != null) {\n      var result = typeof prompt === 'function' ? prompt(location, action) : prompt;\n\n      if (typeof result === 'string') {\n        if (typeof getUserConfirmation === 'function') {\n          getUserConfirmation(result, callback);\n        } else {\n          (0, _warning2.default)(false, 'A history needs a getUserConfirmation function in order to use a prompt message');\n\n          callback(true);\n        }\n      } else {\n        // Return false from a transition hook to cancel the transition.\n        callback(result !== false);\n      }\n    } else {\n      callback(true);\n    }\n  };\n\n  var listeners = [];\n\n  var appendListener = function appendListener(fn) {\n    var isActive = true;\n\n    var listener = function listener() {\n      if (isActive) fn.apply(undefined, arguments);\n    };\n\n    listeners.push(listener);\n\n    return function () {\n      isActive = false;\n      listeners = listeners.filter(function (item) {\n        return item !== listener;\n      });\n    };\n  };\n\n  var notifyListeners = function notifyListeners() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    listeners.forEach(function (listener) {\n      return listener.apply(undefined, args);\n    });\n  };\n\n  return {\n    setPrompt: setPrompt,\n    confirmTransitionTo: confirmTransitionTo,\n    appendListener: appendListener,\n    notifyListeners: notifyListeners\n  };\n};\n\nexports.default = createTransitionManager;\n\n/***/ }),\n/* 17 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react_router_es_Router__ = __webpack_require__(18);\n// Written in this round about way for babel-transform-imports\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0_react_router_es_Router__[\"a\" /* default */]);\n\n/***/ }),\n/* 18 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_warning__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_warning___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_warning__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_invariant__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_invariant___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_invariant__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_prop_types__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_prop_types__);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\n\n/**\n * The public API for putting history on context.\n */\n\nvar Router = function (_React$Component) {\n  _inherits(Router, _React$Component);\n\n  function Router() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Router);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {\n      match: _this.computeMatch(_this.props.history.location.pathname)\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Router.prototype.getChildContext = function getChildContext() {\n    return {\n      router: _extends({}, this.context.router, {\n        history: this.props.history,\n        route: {\n          location: this.props.history.location,\n          match: this.state.match\n        }\n      })\n    };\n  };\n\n  Router.prototype.computeMatch = function computeMatch(pathname) {\n    return {\n      path: '/',\n      url: '/',\n      params: {},\n      isExact: pathname === '/'\n    };\n  };\n\n  Router.prototype.componentWillMount = function componentWillMount() {\n    var _this2 = this;\n\n    var _props = this.props,\n        children = _props.children,\n        history = _props.history;\n\n\n    __WEBPACK_IMPORTED_MODULE_1_invariant___default()(children == null || __WEBPACK_IMPORTED_MODULE_2_react___default.a.Children.count(children) === 1, 'A <Router> may have only one child element');\n\n    // Do this here so we can setState when a <Redirect> changes the\n    // location in componentWillMount. This happens e.g. when doing\n    // server rendering using a <StaticRouter>.\n    this.unlisten = history.listen(function () {\n      _this2.setState({\n        match: _this2.computeMatch(history.location.pathname)\n      });\n    });\n  };\n\n  Router.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    __WEBPACK_IMPORTED_MODULE_0_warning___default()(this.props.history === nextProps.history, 'You cannot change <Router history>');\n  };\n\n  Router.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.unlisten();\n  };\n\n  Router.prototype.render = function render() {\n    var children = this.props.children;\n\n    return children ? __WEBPACK_IMPORTED_MODULE_2_react___default.a.Children.only(children) : null;\n  };\n\n  return Router;\n}(__WEBPACK_IMPORTED_MODULE_2_react___default.a.Component);\n\nRouter.propTypes = {\n  history: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.object.isRequired,\n  children: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.node\n};\nRouter.contextTypes = {\n  router: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.object\n};\nRouter.childContextTypes = {\n  router: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.object.isRequired\n};\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Router);\n\n/***/ }),\n/* 19 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_path_to_regexp__ = __webpack_require__(80);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_path_to_regexp___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_path_to_regexp__);\n\n\nvar patternCache = {};\nvar cacheLimit = 10000;\nvar cacheCount = 0;\n\nvar compilePath = function compilePath(pattern, options) {\n  var cacheKey = '' + options.end + options.strict + options.sensitive;\n  var cache = patternCache[cacheKey] || (patternCache[cacheKey] = {});\n\n  if (cache[pattern]) return cache[pattern];\n\n  var keys = [];\n  var re = __WEBPACK_IMPORTED_MODULE_0_path_to_regexp___default()(pattern, keys, options);\n  var compiledPattern = { re: re, keys: keys };\n\n  if (cacheCount < cacheLimit) {\n    cache[pattern] = compiledPattern;\n    cacheCount++;\n  }\n\n  return compiledPattern;\n};\n\n/**\n * Public API for matching a URL pathname to a path pattern.\n */\nvar matchPath = function matchPath(pathname) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (typeof options === 'string') options = { path: options };\n\n  var _options = options,\n      _options$path = _options.path,\n      path = _options$path === undefined ? '/' : _options$path,\n      _options$exact = _options.exact,\n      exact = _options$exact === undefined ? false : _options$exact,\n      _options$strict = _options.strict,\n      strict = _options$strict === undefined ? false : _options$strict,\n      _options$sensitive = _options.sensitive,\n      sensitive = _options$sensitive === undefined ? false : _options$sensitive;\n\n  var _compilePath = compilePath(path, { end: exact, strict: strict, sensitive: sensitive }),\n      re = _compilePath.re,\n      keys = _compilePath.keys;\n\n  var match = re.exec(pathname);\n\n  if (!match) return null;\n\n  var url = match[0],\n      values = match.slice(1);\n\n  var isExact = pathname === url;\n\n  if (exact && !isExact) return null;\n\n  return {\n    path: path, // the path pattern used to match\n    url: path === '/' && url === '' ? '/' : url, // the matched portion of the URL\n    isExact: isExact, // whether or not we matched exactly\n    params: keys.reduce(function (memo, key, index) {\n      memo[key.name] = values[index];\n      return memo;\n    }, {})\n  };\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (matchPath);\n\n/***/ }),\n/* 20 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_warning__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_warning___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_warning__);\n\n\nvar createTransitionManager = function createTransitionManager() {\n  var prompt = null;\n\n  var setPrompt = function setPrompt(nextPrompt) {\n    __WEBPACK_IMPORTED_MODULE_0_warning___default()(prompt == null, 'A history supports only one prompt at a time');\n\n    prompt = nextPrompt;\n\n    return function () {\n      if (prompt === nextPrompt) prompt = null;\n    };\n  };\n\n  var confirmTransitionTo = function confirmTransitionTo(location, action, getUserConfirmation, callback) {\n    // TODO: If another transition starts while we're still confirming\n    // the previous one, we may end up in a weird state. Figure out the\n    // best way to handle this.\n    if (prompt != null) {\n      var result = typeof prompt === 'function' ? prompt(location, action) : prompt;\n\n      if (typeof result === 'string') {\n        if (typeof getUserConfirmation === 'function') {\n          getUserConfirmation(result, callback);\n        } else {\n          __WEBPACK_IMPORTED_MODULE_0_warning___default()(false, 'A history needs a getUserConfirmation function in order to use a prompt message');\n\n          callback(true);\n        }\n      } else {\n        // Return false from a transition hook to cancel the transition.\n        callback(result !== false);\n      }\n    } else {\n      callback(true);\n    }\n  };\n\n  var listeners = [];\n\n  var appendListener = function appendListener(fn) {\n    var isActive = true;\n\n    var listener = function listener() {\n      if (isActive) fn.apply(undefined, arguments);\n    };\n\n    listeners.push(listener);\n\n    return function () {\n      isActive = false;\n      listeners = listeners.filter(function (item) {\n        return item !== listener;\n      });\n    };\n  };\n\n  var notifyListeners = function notifyListeners() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    listeners.forEach(function (listener) {\n      return listener.apply(undefined, args);\n    });\n  };\n\n  return {\n    setPrompt: setPrompt,\n    confirmTransitionTo: confirmTransitionTo,\n    appendListener: appendListener,\n    notifyListeners: notifyListeners\n  };\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (createTransitionManager);\n\n/***/ }),\n/* 21 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return play; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return stop; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return playDebounced; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash_debounce__ = __webpack_require__(101);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash_debounce___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_lodash_debounce__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_tone__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_tone___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_tone__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__songs__ = __webpack_require__(110);\nvar play=function play(song,seed){var callback=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;var visCallback=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;__WEBPACK_IMPORTED_MODULE_1_tone___default.a.context.close();__WEBPACK_IMPORTED_MODULE_1_tone___default.a.context=new AudioContext();Math.seedrandom(seed);var generatedSettings=__WEBPACK_IMPORTED_MODULE_2__songs__[\"a\" /* default */][song].play(visCallback);__WEBPACK_IMPORTED_MODULE_1_tone___default.a.Transport.bpm.value=generatedSettings.bpm;__WEBPACK_IMPORTED_MODULE_1_tone___default.a.Transport.swing=generatedSettings.swing;__WEBPACK_IMPORTED_MODULE_1_tone___default.a.Transport.start(1);console.log(generatedSettings);if(callback){callback(generatedSettings);}return generatedSettings;};var stop=function stop(){__WEBPACK_IMPORTED_MODULE_1_tone___default.a.context.close();};var playDebounced=__WEBPACK_IMPORTED_MODULE_0_lodash_debounce___default()(play,400);\n\n/***/ }),\n/* 22 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = warning;\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n    /* eslint-disable no-empty */\n  } catch (e) {}\n  /* eslint-enable no-empty */\n}\n\n/***/ }),\n/* 23 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__baseGetTag_js__ = __webpack_require__(134);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__getPrototype_js__ = __webpack_require__(139);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__isObjectLike_js__ = __webpack_require__(141);\n\n\n\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!Object(__WEBPACK_IMPORTED_MODULE_2__isObjectLike_js__[\"a\" /* default */])(value) || Object(__WEBPACK_IMPORTED_MODULE_0__baseGetTag_js__[\"a\" /* default */])(value) != objectTag) {\n    return false;\n  }\n  var proto = Object(__WEBPACK_IMPORTED_MODULE_1__getPrototype_js__[\"a\" /* default */])(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (isPlainObject);\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar asap = __webpack_require__(56);\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('Promise constructor\\'s argument is not a function');\n  }\n  this._75 = 0;\n  this._83 = 0;\n  this._18 = null;\n  this._38 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._47 = null;\nPromise._71 = null;\nPromise._44 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n}\nfunction handle(self, deferred) {\n  while (self._83 === 3) {\n    self = self._18;\n  }\n  if (Promise._47) {\n    Promise._47(self);\n  }\n  if (self._83 === 0) {\n    if (self._75 === 0) {\n      self._75 = 1;\n      self._38 = deferred;\n      return;\n    }\n    if (self._75 === 1) {\n      self._75 = 2;\n      self._38 = [self._38, deferred];\n      return;\n    }\n    self._38.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._83 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._83 === 1) {\n        resolve(deferred.promise, self._18);\n      } else {\n        reject(deferred.promise, self._18);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._18);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._83 = 3;\n      self._18 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._83 = 1;\n  self._18 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._83 = 2;\n  self._18 = newValue;\n  if (Promise._71) {\n    Promise._71(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._75 === 1) {\n    handle(self, self._38);\n    self._38 = null;\n  }\n  if (self._75 === 2) {\n    for (var i = 0; i < self._38.length; i++) {\n      handle(self, self._38[i]);\n    }\n    self._38 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  });\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n\nvar emptyObject = {};\n\nif (false) {\n  Object.freeze(emptyObject);\n}\n\nmodule.exports = emptyObject;\n\n/***/ }),\n/* 26 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\nfunction isAbsolute(pathname) {\n  return pathname.charAt(0) === '/';\n}\n\n// About 1.5x faster than the two-arg version of Array#splice()\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) {\n    list[i] = list[k];\n  }\n\n  list.pop();\n}\n\n// This implementation is based heavily on node's url.parse\nfunction resolvePathname(to) {\n  var from = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n  var toParts = to && to.split('/') || [];\n  var fromParts = from && from.split('/') || [];\n\n  var isToAbs = to && isAbsolute(to);\n  var isFromAbs = from && isAbsolute(from);\n  var mustEndAbs = isToAbs || isFromAbs;\n\n  if (to && isAbsolute(to)) {\n    // to is absolute\n    fromParts = toParts;\n  } else if (toParts.length) {\n    // to is relative, drop the filename\n    fromParts.pop();\n    fromParts = fromParts.concat(toParts);\n  }\n\n  if (!fromParts.length) return '/';\n\n  var hasTrailingSlash = void 0;\n  if (fromParts.length) {\n    var last = fromParts[fromParts.length - 1];\n    hasTrailingSlash = last === '.' || last === '..' || last === '';\n  } else {\n    hasTrailingSlash = false;\n  }\n\n  var up = 0;\n  for (var i = fromParts.length; i >= 0; i--) {\n    var part = fromParts[i];\n\n    if (part === '.') {\n      spliceOne(fromParts, i);\n    } else if (part === '..') {\n      spliceOne(fromParts, i);\n      up++;\n    } else if (up) {\n      spliceOne(fromParts, i);\n      up--;\n    }\n  }\n\n  if (!mustEndAbs) for (; up--; up) {\n    fromParts.unshift('..');\n  }if (mustEndAbs && fromParts[0] !== '' && (!fromParts[0] || !isAbsolute(fromParts[0]))) fromParts.unshift('');\n\n  var result = fromParts.join('/');\n\n  if (hasTrailingSlash && result.substr(-1) !== '/') result += '/';\n\n  return result;\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (resolvePathname);\n\n/***/ }),\n/* 27 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction valueEqual(a, b) {\n  if (a === b) return true;\n\n  if (a == null || b == null) return false;\n\n  if (Array.isArray(a)) {\n    return Array.isArray(b) && a.length === b.length && a.every(function (item, index) {\n      return valueEqual(item, b[index]);\n    });\n  }\n\n  var aType = typeof a === 'undefined' ? 'undefined' : _typeof(a);\n  var bType = typeof b === 'undefined' ? 'undefined' : _typeof(b);\n\n  if (aType !== bType) return false;\n\n  if (aType === 'object') {\n    var aValue = a.valueOf();\n    var bValue = b.valueOf();\n\n    if (aValue !== a || bValue !== b) return valueEqual(aValue, bValue);\n\n    var aKeys = Object.keys(a);\n    var bKeys = Object.keys(b);\n\n    if (aKeys.length !== bKeys.length) return false;\n\n    return aKeys.every(function (key) {\n      return valueEqual(a[key], b[key]);\n    });\n  }\n\n  return false;\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (valueEqual);\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nvar canUseDOM = exports.canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\nvar addEventListener = exports.addEventListener = function addEventListener(node, event, listener) {\n  return node.addEventListener ? node.addEventListener(event, listener, false) : node.attachEvent('on' + event, listener);\n};\n\nvar removeEventListener = exports.removeEventListener = function removeEventListener(node, event, listener) {\n  return node.removeEventListener ? node.removeEventListener(event, listener, false) : node.detachEvent('on' + event, listener);\n};\n\nvar getConfirmation = exports.getConfirmation = function getConfirmation(message, callback) {\n  return callback(window.confirm(message));\n}; // eslint-disable-line no-alert\n\n/**\n * Returns true if the HTML5 history API is supported. Taken from Modernizr.\n *\n * https://github.com/Modernizr/Modernizr/blob/master/LICENSE\n * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js\n * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586\n */\nvar supportsHistory = exports.supportsHistory = function supportsHistory() {\n  var ua = window.navigator.userAgent;\n\n  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;\n\n  return window.history && 'pushState' in window.history;\n};\n\n/**\n * Returns true if browser fires popstate on hash change.\n * IE10 and IE11 do not.\n */\nvar supportsPopStateOnHashChange = exports.supportsPopStateOnHashChange = function supportsPopStateOnHashChange() {\n  return window.navigator.userAgent.indexOf('Trident') === -1;\n};\n\n/**\n * Returns false if using go(n) with hash history causes a full page reload.\n */\nvar supportsGoWithoutReloadUsingHash = exports.supportsGoWithoutReloadUsingHash = function supportsGoWithoutReloadUsingHash() {\n  return window.navigator.userAgent.indexOf('Firefox') === -1;\n};\n\n/**\n * Returns true if a given popstate event is an extraneous WebKit event.\n * Accounts for the fact that Chrome on iOS fires real popstate events\n * containing undefined state when pressing the back button.\n */\nvar isExtraneousPopstateEvent = exports.isExtraneousPopstateEvent = function isExtraneousPopstateEvent(event) {\n  return event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1;\n};\n\n/***/ }),\n/* 29 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_prop_types__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_invariant__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_invariant___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_invariant__);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\nvar isModifiedEvent = function isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n};\n\n/**\n * The public API for rendering a history-aware <a>.\n */\n\nvar Link = function (_React$Component) {\n  _inherits(Link, _React$Component);\n\n  function Link() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Link);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleClick = function (event) {\n      if (_this.props.onClick) _this.props.onClick(event);\n\n      if (!event.defaultPrevented && // onClick prevented default\n      event.button === 0 && // ignore right clicks\n      !_this.props.target && // let browser handle \"target=_blank\" etc.\n      !isModifiedEvent(event) // ignore clicks with modifier keys\n      ) {\n          event.preventDefault();\n\n          var history = _this.context.router.history;\n          var _this$props = _this.props,\n              replace = _this$props.replace,\n              to = _this$props.to;\n\n\n          if (replace) {\n            history.replace(to);\n          } else {\n            history.push(to);\n          }\n        }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Link.prototype.render = function render() {\n    var _props = this.props,\n        replace = _props.replace,\n        to = _props.to,\n        innerRef = _props.innerRef,\n        props = _objectWithoutProperties(_props, ['replace', 'to', 'innerRef']); // eslint-disable-line no-unused-vars\n\n    __WEBPACK_IMPORTED_MODULE_2_invariant___default()(this.context.router, 'You should not use <Link> outside a <Router>');\n\n    var href = this.context.router.history.createHref(typeof to === 'string' ? { pathname: to } : to);\n\n    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('a', _extends({}, props, { onClick: this.handleClick, href: href, ref: innerRef }));\n  };\n\n  return Link;\n}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);\n\nLink.propTypes = {\n  onClick: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func,\n  target: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.string,\n  replace: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.bool,\n  to: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.oneOfType([__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.string, __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object]).isRequired,\n  innerRef: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.oneOfType([__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.string, __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func])\n};\nLink.defaultProps = {\n  replace: false\n};\nLink.contextTypes = {\n  router: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.shape({\n    history: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.shape({\n      push: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func.isRequired,\n      replace: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func.isRequired,\n      createHref: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func.isRequired\n    }).isRequired\n  }).isRequired\n};\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Link);\n\n/***/ }),\n/* 30 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react_router_es_Route__ = __webpack_require__(31);\n// Written in this round about way for babel-transform-imports\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0_react_router_es_Route__[\"a\" /* default */]);\n\n/***/ }),\n/* 31 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_warning__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_warning___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_warning__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_invariant__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_invariant___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_invariant__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_prop_types__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_prop_types__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__matchPath__ = __webpack_require__(19);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\n\n\nvar isEmptyChildren = function isEmptyChildren(children) {\n  return __WEBPACK_IMPORTED_MODULE_2_react___default.a.Children.count(children) === 0;\n};\n\n/**\n * The public API for matching a single path and rendering.\n */\n\nvar Route = function (_React$Component) {\n  _inherits(Route, _React$Component);\n\n  function Route() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Route);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {\n      match: _this.computeMatch(_this.props, _this.context.router)\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Route.prototype.getChildContext = function getChildContext() {\n    return {\n      router: _extends({}, this.context.router, {\n        route: {\n          location: this.props.location || this.context.router.route.location,\n          match: this.state.match\n        }\n      })\n    };\n  };\n\n  Route.prototype.computeMatch = function computeMatch(_ref, router) {\n    var computedMatch = _ref.computedMatch,\n        location = _ref.location,\n        path = _ref.path,\n        strict = _ref.strict,\n        exact = _ref.exact,\n        sensitive = _ref.sensitive;\n\n    if (computedMatch) return computedMatch; // <Switch> already computed the match for us\n\n    __WEBPACK_IMPORTED_MODULE_1_invariant___default()(router, 'You should not use <Route> or withRouter() outside a <Router>');\n\n    var route = router.route;\n\n    var pathname = (location || route.location).pathname;\n\n    return path ? Object(__WEBPACK_IMPORTED_MODULE_4__matchPath__[\"a\" /* default */])(pathname, { path: path, strict: strict, exact: exact, sensitive: sensitive }) : route.match;\n  };\n\n  Route.prototype.componentWillMount = function componentWillMount() {\n    __WEBPACK_IMPORTED_MODULE_0_warning___default()(!(this.props.component && this.props.render), 'You should not use <Route component> and <Route render> in the same route; <Route render> will be ignored');\n\n    __WEBPACK_IMPORTED_MODULE_0_warning___default()(!(this.props.component && this.props.children && !isEmptyChildren(this.props.children)), 'You should not use <Route component> and <Route children> in the same route; <Route children> will be ignored');\n\n    __WEBPACK_IMPORTED_MODULE_0_warning___default()(!(this.props.render && this.props.children && !isEmptyChildren(this.props.children)), 'You should not use <Route render> and <Route children> in the same route; <Route children> will be ignored');\n  };\n\n  Route.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps, nextContext) {\n    __WEBPACK_IMPORTED_MODULE_0_warning___default()(!(nextProps.location && !this.props.location), '<Route> elements should not change from uncontrolled to controlled (or vice versa). You initially used no \"location\" prop and then provided one on a subsequent render.');\n\n    __WEBPACK_IMPORTED_MODULE_0_warning___default()(!(!nextProps.location && this.props.location), '<Route> elements should not change from controlled to uncontrolled (or vice versa). You provided a \"location\" prop initially but omitted it on a subsequent render.');\n\n    this.setState({\n      match: this.computeMatch(nextProps, nextContext.router)\n    });\n  };\n\n  Route.prototype.render = function render() {\n    var match = this.state.match;\n    var _props = this.props,\n        children = _props.children,\n        component = _props.component,\n        render = _props.render;\n    var _context$router = this.context.router,\n        history = _context$router.history,\n        route = _context$router.route,\n        staticContext = _context$router.staticContext;\n\n    var location = this.props.location || route.location;\n    var props = { match: match, location: location, history: history, staticContext: staticContext };\n\n    return component ? // component prop gets first priority, only called if there's a match\n    match ? __WEBPACK_IMPORTED_MODULE_2_react___default.a.createElement(component, props) : null : render ? // render prop is next, only called if there's a match\n    match ? render(props) : null : children ? // children come last, always called\n    typeof children === 'function' ? children(props) : !isEmptyChildren(children) ? __WEBPACK_IMPORTED_MODULE_2_react___default.a.Children.only(children) : null : null;\n  };\n\n  return Route;\n}(__WEBPACK_IMPORTED_MODULE_2_react___default.a.Component);\n\nRoute.propTypes = {\n  computedMatch: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.object, // private, from <Switch>\n  path: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.string,\n  exact: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.bool,\n  strict: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.bool,\n  sensitive: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.bool,\n  component: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.func,\n  render: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.func,\n  children: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.oneOfType([__WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.func, __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.node]),\n  location: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.object\n};\nRoute.contextTypes = {\n  router: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.shape({\n    history: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.object.isRequired,\n    route: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.object.isRequired,\n    staticContext: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.object\n  })\n};\nRoute.childContextTypes = {\n  router: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.object.isRequired\n};\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Route);\n\n/***/ }),\n/* 32 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return canUseDOM; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return addEventListener; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return removeEventListener; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return getConfirmation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return supportsHistory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return supportsPopStateOnHashChange; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return supportsGoWithoutReloadUsingHash; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return isExtraneousPopstateEvent; });\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\nvar addEventListener = function addEventListener(node, event, listener) {\n  return node.addEventListener ? node.addEventListener(event, listener, false) : node.attachEvent('on' + event, listener);\n};\n\nvar removeEventListener = function removeEventListener(node, event, listener) {\n  return node.removeEventListener ? node.removeEventListener(event, listener, false) : node.detachEvent('on' + event, listener);\n};\n\nvar getConfirmation = function getConfirmation(message, callback) {\n  return callback(window.confirm(message));\n}; // eslint-disable-line no-alert\n\n/**\n * Returns true if the HTML5 history API is supported. Taken from Modernizr.\n *\n * https://github.com/Modernizr/Modernizr/blob/master/LICENSE\n * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js\n * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586\n */\nvar supportsHistory = function supportsHistory() {\n  var ua = window.navigator.userAgent;\n\n  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;\n\n  return window.history && 'pushState' in window.history;\n};\n\n/**\n * Returns true if browser fires popstate on hash change.\n * IE10 and IE11 do not.\n */\nvar supportsPopStateOnHashChange = function supportsPopStateOnHashChange() {\n  return window.navigator.userAgent.indexOf('Trident') === -1;\n};\n\n/**\n * Returns false if using go(n) with hash history causes a full page reload.\n */\nvar supportsGoWithoutReloadUsingHash = function supportsGoWithoutReloadUsingHash() {\n  return window.navigator.userAgent.indexOf('Firefox') === -1;\n};\n\n/**\n * Returns true if a given popstate event is an extraneous WebKit event.\n * Accounts for the fact that Chrome on iOS fires real popstate events\n * containing undefined state when pressing the back button.\n */\nvar isExtraneousPopstateEvent = function isExtraneousPopstateEvent(event) {\n  return event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1;\n};\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\n(function (global, factory) {\n     true ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.hoistNonReactStatics = factory());\n}(this, (function () {\n    'use strict';\n    \n    var REACT_STATICS = {\n        childContextTypes: true,\n        contextTypes: true,\n        defaultProps: true,\n        displayName: true,\n        getDefaultProps: true,\n        getDerivedStateFromProps: true,\n        mixins: true,\n        propTypes: true,\n        type: true\n    };\n    \n    var KNOWN_STATICS = {\n        name: true,\n        length: true,\n        prototype: true,\n        caller: true,\n        callee: true,\n        arguments: true,\n        arity: true\n    };\n    \n    var defineProperty = Object.defineProperty;\n    var getOwnPropertyNames = Object.getOwnPropertyNames;\n    var getOwnPropertySymbols = Object.getOwnPropertySymbols;\n    var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    var getPrototypeOf = Object.getPrototypeOf;\n    var objectPrototype = getPrototypeOf && getPrototypeOf(Object);\n    \n    return function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n        if (typeof sourceComponent !== 'string') { // don't hoist over string (html) components\n            \n            if (objectPrototype) {\n                var inheritedComponent = getPrototypeOf(sourceComponent);\n                if (inheritedComponent && inheritedComponent !== objectPrototype) {\n                    hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n                }\n            }\n            \n            var keys = getOwnPropertyNames(sourceComponent);\n            \n            if (getOwnPropertySymbols) {\n                keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n            }\n            \n            for (var i = 0; i < keys.length; ++i) {\n                var key = keys[i];\n                if (!REACT_STATICS[key] && !KNOWN_STATICS[key] && (!blacklist || !blacklist[key])) {\n                    var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n                    try { // Avoid failures from read-only properties\n                        defineProperty(targetComponent, key, descriptor);\n                    } catch (e) {}\n                }\n            }\n            \n            return targetComponent;\n        }\n        \n        return targetComponent;\n    };\n})));\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__reducer__ = __webpack_require__(98);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__actions__ = __webpack_require__(42);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components__ = __webpack_require__(43);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__containers__ = __webpack_require__(127);\n/* unused harmony reexport actions */\n/* unused harmony reexport components */\n/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_3__containers__; });\n/* harmony default export */ __webpack_exports__[\"b\"] = (__WEBPACK_IMPORTED_MODULE_0__reducer__[\"a\" /* default */]);\n\n/***/ }),\n/* 35 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export PLAY_BUTTON_CLICK */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return SYNTH_PLAY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return SYNTH_STOP; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return UPDATE_SEED; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return UPDATE_GENERATED_SETTINGS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return SET_SONG; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__constants__ = __webpack_require__(99);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__constants__ = __webpack_require__(100);\nvar prefix=__WEBPACK_IMPORTED_MODULE_0__constants__[\"a\" /* APP_NAME */]+\"/\"+__WEBPACK_IMPORTED_MODULE_1__constants__[\"a\" /* MODULE_NAME */]+\"/\";var PLAY_BUTTON_CLICK=prefix+\"PLAY_BUTTON_CLICK\";var SYNTH_PLAY=prefix+\"SYNTH_PLAY\";var SYNTH_STOP=prefix+\"SYNTH_STOP\";var UPDATE_SEED=prefix+\"UPDATE_SEED\";var UPDATE_GENERATED_SETTINGS=prefix+\"UPDATE_GENERATED_SETTINGS\";var SET_SONG=prefix+\"SET_SONG\";\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports) {\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar freeGlobal = __webpack_require__(103);\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar root = __webpack_require__(37);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export scales */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return chordProgressions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return getRandomRootNote; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return actualNotesFromScale; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return getRandomScaleType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return getChordProgressionForKey; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return getRandomChordTypesForProgression; });\n/* unused harmony export chordFromScale */\n/* unused harmony export scaleFromTonic */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return rootNotesFromChordProgression; });\n/* unused harmony export bassLineForChordProgression */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return smoothBassLineForChordProgression; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return motifForChordProgression; });\n/* unused harmony export melodyForChordProgression */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tone__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tone___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_tone__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utils__ = __webpack_require__(10);\nfunction _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}var roots=[\"C\",\"C#\",\"D\",\"Eb\",\"E\",\"F\",\"F#\",\"G\",\"Ab\",\"A\",\"Bb\",\"B\"];var scales={Major:[2,2,1,2,2,2],Minor:[2,1,2,2,1,2],HarmonicMinor:[2,1,2,2,1,3],MelodicMinor:[2,1,2,2,2,2],PentatonicMajor:[2,2,3,2],PentatonicMinor:[3,2,2,3],PentatonicBlues:[3,2,1,1],PentatonicNeutral:[2,3,2],Ionian:[2,2,1,2,2,2],Aeolian:[2,1,2,2,1,2],Dorian:[2,1,2,2,2,1],Mixolydian:[2,2,1,2,2,1],Phrygian:[1,2,2,2,1,2],Lydian:[2,2,2,1,2,2],Locrian:[1,2,2,1,2,2],Dominant7th:[2,2,1,2,2,1],Blues:[3,2,1,1,3]//   Dimhalf: [1, 2, 1, 2, 1, 2],\n//   Dimwhole: [2, 1, 2, 1, 2, 1],\n//   Whole: [2, 2, 2, 2],\n//   Augmented: [3, 1, 3, 1],\n//   Chromatic: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n//   RoumanianMinor: [2, 1, 3, 1, 2, 1],\n//   SpanishGypsy: [1, 3, 1, 2, 1, 2],\n//   Diatonic: [2, 2, 3, 2],\n//   DoubleHarmonic: [1, 3, 1, 2, 1, 3],\n//   EightToneSpanish: [1, 2, 1, 1, 1, 2, 2],\n//   Enigmatic: [1, 3, 2, 2, 2, 1],\n//   LeadingWholeTone: [2, 2, 2, 2, 1],\n//   LydianAugmented: [2, 2, 2, 2, 1, 2],\n//   NeopolitanMajor: [1, 2, 2, 2, 2, 2],\n//   NeopolitanMinor: [1, 2, 2, 2, 1, 2],\n//   Pelog: [1, 2, 3, 4],\n//   Prometheus: [2, 2, 2, 3, 1],\n//   PrometheusNeopolitan: [1, 3, 2, 3, 1],\n//   SixToneSymmetrical: [1, 3, 1, 3, 1],\n//   SuperLocrian: [1, 2, 1, 2, 2, 2],\n//   LydianMinor: [2, 2, 2, 1, 1, 2],\n//   LydianDiminished: [2, 1, 3, 1, 1, 2],\n//   NineToneScale: [2, 1, 1, 2, 1, 1, 1, 2],\n//   AuxiliaryDiminished: [2, 1, 2, 1, 2, 1, 2],\n//   AuxiliaryAugmented: [2, 2, 2, 2, 2],\n//   AuxiliaryDimBlues: [1, 2, 1, 2, 1, 2, 1],\n//   MajorLocrian: [2, 2, 1, 1, 2, 2],\n//   Overtone: [2, 2, 2, 1, 2, 1],\n//   DiminishedWholeTone: [1, 2, 1, 2, 2, 2],\n//   PureMinor: [2, 1, 2, 2, 1, 2]\n};var chordProgressions=[[1,5,4,4,1,5,1,5],[1,1,1,1,4,4,1,1,5,5,1,1],[1,6,4,5],[1,4,7,4],[2,5,1],[1,5,7,4],[6,2,5,1],[1,5,6,3],[1,4,2,5],[1,5,6,3,4,1,4,5]];var chords=[[1,3,5],[1,3,5,7],[1,3,5,9],[1,3,5,7,9],[1,3,5,7,9,11]];var getRandomRootNote=function getRandomRootNote(){return roots[__WEBPACK_IMPORTED_MODULE_1__utils__[\"c\" /* randomIntBetween */](0,roots.length-1)];};var actualNotesFromScale=function actualNotesFromScale(tonic,scale,lowOctave,highOctave){var notes=[];//Get just the note value without octaves\nif(!__WEBPACK_IMPORTED_MODULE_1__utils__[\"a\" /* isNumeric */](tonic)){tonic=tonic.replace(/[0-9]/g,\"\");}else{tonic=__WEBPACK_IMPORTED_MODULE_0_tone___default.a.Frequency(tonic).toNote().replace(/[0-9]/g,\"\");}for(var octave=lowOctave;octave<=highOctave;octave++){var octaveScale=scaleFromTonic(tonic+octave,scale);notes=[].concat(_toConsumableArray(notes),_toConsumableArray(octaveScale));}return notes;};var getRandomScaleType=function getRandomScaleType(){var keys=Object.keys(scales);var randomType=keys[keys.length*Math.random()<<0];return{type:randomType,intervals:scales[randomType]};};var getChordProgressionForKey=function getChordProgressionForKey(key,progression,chordTypesToUse){var progressionRootNotes=chordFromScale(progression,key.root,key.type,key.chordOctave);var progressionNotes=[];for(var index=0;index<progressionRootNotes.length;index++){var progressionIndex=progression[index];var chord=chordTypesToUse[index];progressionNotes.push(chordFromScale(chord,key.root,key.type,key.chordOctave,progressionIndex));}return progressionNotes;};var getRandomChordTypesForProgression=function getRandomChordTypesForProgression(progressionRootNotes){var chordTypes=[];for(var index=0;index<progressionRootNotes.length;index++){chordTypes.push(__WEBPACK_IMPORTED_MODULE_1__utils__[\"b\" /* randomFromArray */](chords));}return chordTypes;};var chordFromScale=function chordFromScale(chordToneIndexes,tonic,scale,mainOctave){var indexOffset=arguments.length>4&&arguments[4]!==undefined?arguments[4]:0;var fullScale=actualNotesFromScale(tonic,scale,mainOctave,mainOctave+1);var filteredScale=[];var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=chordToneIndexes[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var index=_step.value;filteredScale.push(fullScale[index+indexOffset-1]);}}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(!_iteratorNormalCompletion&&_iterator.return){_iterator.return();}}finally{if(_didIteratorError){throw _iteratorError;}}}return filteredScale;};var scaleFromTonic=function scaleFromTonic(tonic,intervals){var scale=[];var note=__WEBPACK_IMPORTED_MODULE_0_tone___default.a.Frequency(tonic);scale.push(tonic);var _iteratorNormalCompletion2=true;var _didIteratorError2=false;var _iteratorError2=undefined;try{for(var _iterator2=intervals[Symbol.iterator](),_step2;!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=true){var interval=_step2.value;note=note.transpose(interval);scale.push(note.toFrequency());}}catch(err){_didIteratorError2=true;_iteratorError2=err;}finally{try{if(!_iteratorNormalCompletion2&&_iterator2.return){_iterator2.return();}}finally{if(_didIteratorError2){throw _iteratorError2;}}}return scale;};var rootNotesFromChordProgression=function rootNotesFromChordProgression(chordProgression){return chordProgression.map(function(chord){return __WEBPACK_IMPORTED_MODULE_0_tone___default.a.Frequency(chord[0]).toNote().replace(/[0-9]/g,\"\");}).join(\", \");};var bassLineForChordProgression=function bassLineForChordProgression(notesPerChord,chordProgression,key,octave){var transposeSemiTones=-1*octave*12;var notes=[];for(var i=0;i<chordProgression.length;i++){var chord=chordProgression[i];var noteCountForChord=notesPerChord[i];var chordRoot=__WEBPACK_IMPORTED_MODULE_0_tone___default.a.Frequency(chord[0]).transpose(transposeSemiTones);var scaleForCurrentChord=actualNotesFromScale(key.root,key.type,octave,octave);var notesForChord=[chordRoot];for(var _i=0;_i<noteCountForChord-1;_i++){notesForChord.push(__WEBPACK_IMPORTED_MODULE_1__utils__[\"b\" /* randomFromArray */](scaleForCurrentChord));}notes.push(notesForChord);}return notes;};var smoothBassLineForChordProgression=function smoothBassLineForChordProgression(notesPerChord,chordProgression,key,octave){var transposeSemiTones=-1*octave*12;var notes=[];for(var i=0;i<chordProgression.length;i++){var chord=chordProgression[i];var noteCountForChord=notesPerChord[i];var chordRoot=__WEBPACK_IMPORTED_MODULE_0_tone___default.a.Frequency(chord[0]).transpose(transposeSemiTones);var scaleForCurrentChord=actualNotesFromScale(key.root,key.type,octave,octave);var notesForChord=[chordRoot];var previousNoteIndex=0;for(var _i2=0;_i2<noteCountForChord-1;_i2++){//get a note not too far away from the last\nvar newNote=__WEBPACK_IMPORTED_MODULE_1__utils__[\"c\" /* randomIntBetween */](Math.max(previousNoteIndex-2,0),Math.min(previousNoteIndex+2,scaleForCurrentChord.length));notesForChord.push(scaleForCurrentChord[newNote]);previousNoteIndex=newNote;}notes.push(notesForChord);}return notes;};var motifForChordProgression=function motifForChordProgression(notesPerChord,chordProgression,key,octave){var notes=[];for(var i=0;i<chordProgression.length;i++){var noteCountForChord=notesPerChord[i];var scaleForCurrentChord=actualNotesFromScale(key.root,key.type,octave,octave);var notesForChord=[];var previousNoteIndex=0;for(var _i3=0;_i3<noteCountForChord;_i3++){//get a note not too far away from the last\nvar newNote=__WEBPACK_IMPORTED_MODULE_1__utils__[\"c\" /* randomIntBetween */](Math.max(previousNoteIndex-2,0),Math.min(previousNoteIndex+2,scaleForCurrentChord.length));notesForChord.push(scaleForCurrentChord[newNote]);previousNoteIndex=newNote;}notes.push(notesForChord);}return notes;};var melodyForChordProgression=function melodyForChordProgression(chordProgression,key){//const notesPerChord = 8;\nvar melodyOctave=key.chordOctave+1;var transposeSemiTones=melodyOctave-key.chordOctave*12;var notes=[];var _iteratorNormalCompletion3=true;var _didIteratorError3=false;var _iteratorError3=undefined;try{for(var _iterator3=chordProgression[Symbol.iterator](),_step3;!(_iteratorNormalCompletion3=(_step3=_iterator3.next()).done);_iteratorNormalCompletion3=true){var chord=_step3.value;var chordRoot=__WEBPACK_IMPORTED_MODULE_0_tone___default.a.Frequency(chord[0]).transpose(transposeSemiTones);var chordRootToNote=__WEBPACK_IMPORTED_MODULE_0_tone___default.a.Frequency(chordRoot).toNote();var scaleForCurrentChord=actualNotesFromScale(chordRootToNote,key.type,melodyOctave,melodyOctave);var notesForChord=[chordRootToNote];notesForChord.push(scaleForCurrentChord[1]);notesForChord.push(scaleForCurrentChord[2]);notesForChord.push(scaleForCurrentChord[1]);notesForChord.push(scaleForCurrentChord[4]);notesForChord.push(scaleForCurrentChord[4]);notesForChord.push(scaleForCurrentChord[2]);notesForChord.push(scaleForCurrentChord[0]);notes.push(notesForChord);}}catch(err){_didIteratorError3=true;_iteratorError3=err;}finally{try{if(!_iteratorNormalCompletion3&&_iterator3.return){_iterator3.return();}}finally{if(_didIteratorError3){throw _iteratorError3;}}}return notes;};\n\n/***/ }),\n/* 40 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__bass__ = __webpack_require__(41);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__pads__ = __webpack_require__(113);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__drums__ = __webpack_require__(114);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lead__ = __webpack_require__(115);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__presets__ = __webpack_require__(116);\n/* harmony default export */ __webpack_exports__[\"a\"] = ({bass:__WEBPACK_IMPORTED_MODULE_0__bass__,pads:__WEBPACK_IMPORTED_MODULE_1__pads__,drums:__WEBPACK_IMPORTED_MODULE_2__drums__,lead:__WEBPACK_IMPORTED_MODULE_3__lead__,presets:__WEBPACK_IMPORTED_MODULE_4__presets__});\n\n/***/ }),\n/* 41 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"subBass\", function() { return subBass; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"softSquareBass\", function() { return softSquareBass; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FastAttackSquare\", function() { return FastAttackSquare; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SawTooth\", function() { return SawTooth; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"squareBass\", function() { return squareBass; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tone__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tone___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_tone__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__instrument__ = __webpack_require__(7);\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var subBass=function subBass(){return squareBass(2);};var softSquareBass=function softSquareBass(){return squareBass(6);};var FastAttackSquare=function(_Instrument){_inherits(FastAttackSquare,_Instrument);function FastAttackSquare(){_classCallCheck(this,FastAttackSquare);var _this=_possibleConstructorReturn(this,(FastAttackSquare.__proto__||Object.getPrototypeOf(FastAttackSquare)).call(this,new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.Synth({oscillator:{type:\"square4\"},envelope:{attack:0.02,decay:0,sustain:1,release:1}}),22));var comp=new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.Compressor(-30,12).toMaster();_this.synth.connect(comp);return _this;}return FastAttackSquare;}(__WEBPACK_IMPORTED_MODULE_1__instrument__[\"a\" /* Instrument */]);var SawTooth=function(_Instrument2){_inherits(SawTooth,_Instrument2);function SawTooth(){_classCallCheck(this,SawTooth);return _possibleConstructorReturn(this,(SawTooth.__proto__||Object.getPrototypeOf(SawTooth)).call(this,new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.Synth({oscillator:{type:\"sawtooth\"},envelope:{attack:0.02,decay:0.2,sustain:0.8,release:1}}),18));}return SawTooth;}(__WEBPACK_IMPORTED_MODULE_1__instrument__[\"a\" /* Instrument */]);var squareBass=function squareBass(harmonics){var bassSynth=new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.Synth({oscillator:{type:\"square\"+harmonics},envelope:{attack:\"0:2\",decay:0.1,sustain:1,release:3}}).toMaster();bassSynth.volume.value=24;return bassSynth;};\n\n/***/ }),\n/* 42 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Play\", function() { return Play; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Stop\", function() { return Stop; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PlayButtonClick\", function() { return PlayButtonClick; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SetInitialSeed\", function() { return SetInitialSeed; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SetSeed\", function() { return SetSeed; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RandomiseSeed\", function() { return RandomiseSeed; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SetSong\", function() { return SetSong; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__actionTypes__ = __webpack_require__(35);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__synth_synth__ = __webpack_require__(21);\nvar Play=function Play(){return function(dispatch,getState){var generatedSettings=__WEBPACK_IMPORTED_MODULE_1__synth_synth__[\"a\" /* play */](getState().app.song,getState().app.seed);dispatch({type:__WEBPACK_IMPORTED_MODULE_0__actionTypes__[\"b\" /* SYNTH_PLAY */],payload:generatedSettings});};};var Stop=function Stop(){return function(dispatch){dispatch({type:__WEBPACK_IMPORTED_MODULE_0__actionTypes__[\"c\" /* SYNTH_STOP */]});};};var PlayButtonClick=function PlayButtonClick(){return function(dispatch,getState){getState().app.isPlaying?dispatch({type:__WEBPACK_IMPORTED_MODULE_0__actionTypes__[\"c\" /* SYNTH_STOP */]}):dispatch({type:__WEBPACK_IMPORTED_MODULE_0__actionTypes__[\"b\" /* SYNTH_PLAY */]});};};var SetInitialSeed=function SetInitialSeed(newSeed){return function(dispatch){dispatch({type:__WEBPACK_IMPORTED_MODULE_0__actionTypes__[\"e\" /* UPDATE_SEED */],payload:newSeed});dispatch({type:__WEBPACK_IMPORTED_MODULE_0__actionTypes__[\"b\" /* SYNTH_PLAY */]});};};var SetSeed=function SetSeed(newSeed){return function(dispatch,getState){dispatch({type:__WEBPACK_IMPORTED_MODULE_0__actionTypes__[\"e\" /* UPDATE_SEED */],payload:newSeed});__WEBPACK_IMPORTED_MODULE_1__synth_synth__[\"b\" /* playDebounced */](getState().app.song,newSeed,function(generatedSettings){dispatch({type:__WEBPACK_IMPORTED_MODULE_0__actionTypes__[\"d\" /* UPDATE_GENERATED_SETTINGS */],payload:generatedSettings});});};};var RandomiseSeed=function RandomiseSeed(){return function(){var randomSeed=new Date().getTime().toString();return SetSeed(randomSeed);};};var SetSong=function SetSong(song){return function(dispatch){dispatch({type:__WEBPACK_IMPORTED_MODULE_0__actionTypes__[\"a\" /* SET_SONG */],payload:song});dispatch(Play());};};\n\n/***/ }),\n/* 43 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__App__ = __webpack_require__(119);\n/* harmony default export */ __webpack_exports__[\"a\"] = ({App:__WEBPACK_IMPORTED_MODULE_0__App__[\"a\" /* default */]});\n\n/***/ }),\n/* 44 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_Provider__ = __webpack_require__(129);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_connectAdvanced__ = __webpack_require__(46);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__connect_connect__ = __webpack_require__(131);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__components_Provider__[\"a\"]; });\n/* unused harmony reexport createProvider */\n/* unused harmony reexport connectAdvanced */\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_2__connect_connect__[\"a\"]; });\n\n\n\n\n\n\n/***/ }),\n/* 45 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return subscriptionShape; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return storeShape; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_prop_types__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_prop_types__);\n\n\nvar subscriptionShape = __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a.shape({\n  trySubscribe: __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a.func.isRequired,\n  tryUnsubscribe: __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a.func.isRequired,\n  notifyNestedSubs: __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a.func.isRequired,\n  isSubscribed: __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a.func.isRequired\n});\n\nvar storeShape = __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a.shape({\n  subscribe: __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a.func.isRequired,\n  dispatch: __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a.func.isRequired,\n  getState: __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a.func.isRequired\n});\n\n/***/ }),\n/* 46 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = connectAdvanced;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_hoist_non_react_statics__ = __webpack_require__(33);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_hoist_non_react_statics___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_hoist_non_react_statics__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_invariant__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_invariant___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_invariant__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__utils_Subscription__ = __webpack_require__(130);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__utils_PropTypes__ = __webpack_require__(45);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\n\n\n\n\n\n\n\nvar hotReloadingVersion = 0;\nvar dummyState = {};\nfunction noop() {}\nfunction makeSelectorStateful(sourceSelector, store) {\n  // wrap the selector in an object that tracks its results between runs.\n  var selector = {\n    run: function runComponentSelector(props) {\n      try {\n        var nextProps = sourceSelector(store.getState(), props);\n        if (nextProps !== selector.props || selector.error) {\n          selector.shouldComponentUpdate = true;\n          selector.props = nextProps;\n          selector.error = null;\n        }\n      } catch (error) {\n        selector.shouldComponentUpdate = true;\n        selector.error = error;\n      }\n    }\n  };\n\n  return selector;\n}\n\nfunction connectAdvanced(\n/*\n  selectorFactory is a func that is responsible for returning the selector function used to\n  compute new props from state, props, and dispatch. For example:\n     export default connectAdvanced((dispatch, options) => (state, props) => ({\n      thing: state.things[props.thingId],\n      saveThing: fields => dispatch(actionCreators.saveThing(props.thingId, fields)),\n    }))(YourComponent)\n   Access to dispatch is provided to the factory so selectorFactories can bind actionCreators\n  outside of their selector as an optimization. Options passed to connectAdvanced are passed to\n  the selectorFactory, along with displayName and WrappedComponent, as the second argument.\n   Note that selectorFactory is responsible for all caching/memoization of inbound and outbound\n  props. Do not use connectAdvanced directly without memoizing results between calls to your\n  selector, otherwise the Connect component will re-render on every state or props change.\n*/\nselectorFactory) {\n  var _contextTypes, _childContextTypes;\n\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$getDisplayName = _ref.getDisplayName,\n      getDisplayName = _ref$getDisplayName === undefined ? function (name) {\n    return 'ConnectAdvanced(' + name + ')';\n  } : _ref$getDisplayName,\n      _ref$methodName = _ref.methodName,\n      methodName = _ref$methodName === undefined ? 'connectAdvanced' : _ref$methodName,\n      _ref$renderCountProp = _ref.renderCountProp,\n      renderCountProp = _ref$renderCountProp === undefined ? undefined : _ref$renderCountProp,\n      _ref$shouldHandleStat = _ref.shouldHandleStateChanges,\n      shouldHandleStateChanges = _ref$shouldHandleStat === undefined ? true : _ref$shouldHandleStat,\n      _ref$storeKey = _ref.storeKey,\n      storeKey = _ref$storeKey === undefined ? 'store' : _ref$storeKey,\n      _ref$withRef = _ref.withRef,\n      withRef = _ref$withRef === undefined ? false : _ref$withRef,\n      connectOptions = _objectWithoutProperties(_ref, ['getDisplayName', 'methodName', 'renderCountProp', 'shouldHandleStateChanges', 'storeKey', 'withRef']);\n\n  var subscriptionKey = storeKey + 'Subscription';\n  var version = hotReloadingVersion++;\n\n  var contextTypes = (_contextTypes = {}, _contextTypes[storeKey] = __WEBPACK_IMPORTED_MODULE_4__utils_PropTypes__[\"a\" /* storeShape */], _contextTypes[subscriptionKey] = __WEBPACK_IMPORTED_MODULE_4__utils_PropTypes__[\"b\" /* subscriptionShape */], _contextTypes);\n  var childContextTypes = (_childContextTypes = {}, _childContextTypes[subscriptionKey] = __WEBPACK_IMPORTED_MODULE_4__utils_PropTypes__[\"b\" /* subscriptionShape */], _childContextTypes);\n\n  return function wrapWithConnect(WrappedComponent) {\n    __WEBPACK_IMPORTED_MODULE_1_invariant___default()(typeof WrappedComponent == 'function', 'You must pass a component to the function returned by ' + (methodName + '. Instead received ' + JSON.stringify(WrappedComponent)));\n\n    var wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || 'Component';\n\n    var displayName = getDisplayName(wrappedComponentName);\n\n    var selectorFactoryOptions = _extends({}, connectOptions, {\n      getDisplayName: getDisplayName,\n      methodName: methodName,\n      renderCountProp: renderCountProp,\n      shouldHandleStateChanges: shouldHandleStateChanges,\n      storeKey: storeKey,\n      withRef: withRef,\n      displayName: displayName,\n      wrappedComponentName: wrappedComponentName,\n      WrappedComponent: WrappedComponent\n    });\n\n    var Connect = function (_Component) {\n      _inherits(Connect, _Component);\n\n      function Connect(props, context) {\n        _classCallCheck(this, Connect);\n\n        var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));\n\n        _this.version = version;\n        _this.state = {};\n        _this.renderCount = 0;\n        _this.store = props[storeKey] || context[storeKey];\n        _this.propsMode = Boolean(props[storeKey]);\n        _this.setWrappedInstance = _this.setWrappedInstance.bind(_this);\n\n        __WEBPACK_IMPORTED_MODULE_1_invariant___default()(_this.store, 'Could not find \"' + storeKey + '\" in either the context or props of ' + ('\"' + displayName + '\". Either wrap the root component in a <Provider>, ') + ('or explicitly pass \"' + storeKey + '\" as a prop to \"' + displayName + '\".'));\n\n        _this.initSelector();\n        _this.initSubscription();\n        return _this;\n      }\n\n      Connect.prototype.getChildContext = function getChildContext() {\n        var _ref2;\n\n        // If this component received store from props, its subscription should be transparent\n        // to any descendants receiving store+subscription from context; it passes along\n        // subscription passed to it. Otherwise, it shadows the parent subscription, which allows\n        // Connect to control ordering of notifications to flow top-down.\n        var subscription = this.propsMode ? null : this.subscription;\n        return _ref2 = {}, _ref2[subscriptionKey] = subscription || this.context[subscriptionKey], _ref2;\n      };\n\n      Connect.prototype.componentDidMount = function componentDidMount() {\n        if (!shouldHandleStateChanges) return;\n\n        // componentWillMount fires during server side rendering, but componentDidMount and\n        // componentWillUnmount do not. Because of this, trySubscribe happens during ...didMount.\n        // Otherwise, unsubscription would never take place during SSR, causing a memory leak.\n        // To handle the case where a child component may have triggered a state change by\n        // dispatching an action in its componentWillMount, we have to re-run the select and maybe\n        // re-render.\n        this.subscription.trySubscribe();\n        this.selector.run(this.props);\n        if (this.selector.shouldComponentUpdate) this.forceUpdate();\n      };\n\n      Connect.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n        this.selector.run(nextProps);\n      };\n\n      Connect.prototype.shouldComponentUpdate = function shouldComponentUpdate() {\n        return this.selector.shouldComponentUpdate;\n      };\n\n      Connect.prototype.componentWillUnmount = function componentWillUnmount() {\n        if (this.subscription) this.subscription.tryUnsubscribe();\n        this.subscription = null;\n        this.notifyNestedSubs = noop;\n        this.store = null;\n        this.selector.run = noop;\n        this.selector.shouldComponentUpdate = false;\n      };\n\n      Connect.prototype.getWrappedInstance = function getWrappedInstance() {\n        __WEBPACK_IMPORTED_MODULE_1_invariant___default()(withRef, 'To access the wrapped instance, you need to specify ' + ('{ withRef: true } in the options argument of the ' + methodName + '() call.'));\n        return this.wrappedInstance;\n      };\n\n      Connect.prototype.setWrappedInstance = function setWrappedInstance(ref) {\n        this.wrappedInstance = ref;\n      };\n\n      Connect.prototype.initSelector = function initSelector() {\n        var sourceSelector = selectorFactory(this.store.dispatch, selectorFactoryOptions);\n        this.selector = makeSelectorStateful(sourceSelector, this.store);\n        this.selector.run(this.props);\n      };\n\n      Connect.prototype.initSubscription = function initSubscription() {\n        if (!shouldHandleStateChanges) return;\n\n        // parentSub's source should match where store came from: props vs. context. A component\n        // connected to the store via props shouldn't use subscription from context, or vice versa.\n        var parentSub = (this.propsMode ? this.props : this.context)[subscriptionKey];\n        this.subscription = new __WEBPACK_IMPORTED_MODULE_3__utils_Subscription__[\"a\" /* default */](this.store, parentSub, this.onStateChange.bind(this));\n\n        // `notifyNestedSubs` is duplicated to handle the case where the component is  unmounted in\n        // the middle of the notification loop, where `this.subscription` will then be null. An\n        // extra null check every change can be avoided by copying the method onto `this` and then\n        // replacing it with a no-op on unmount. This can probably be avoided if Subscription's\n        // listeners logic is changed to not call listeners that have been unsubscribed in the\n        // middle of the notification loop.\n        this.notifyNestedSubs = this.subscription.notifyNestedSubs.bind(this.subscription);\n      };\n\n      Connect.prototype.onStateChange = function onStateChange() {\n        this.selector.run(this.props);\n\n        if (!this.selector.shouldComponentUpdate) {\n          this.notifyNestedSubs();\n        } else {\n          this.componentDidUpdate = this.notifyNestedSubsOnComponentDidUpdate;\n          this.setState(dummyState);\n        }\n      };\n\n      Connect.prototype.notifyNestedSubsOnComponentDidUpdate = function notifyNestedSubsOnComponentDidUpdate() {\n        // `componentDidUpdate` is conditionally implemented when `onStateChange` determines it\n        // needs to notify nested subs. Once called, it unimplements itself until further state\n        // changes occur. Doing it this way vs having a permanent `componentDidUpdate` that does\n        // a boolean check every time avoids an extra method call most of the time, resulting\n        // in some perf boost.\n        this.componentDidUpdate = undefined;\n        this.notifyNestedSubs();\n      };\n\n      Connect.prototype.isSubscribed = function isSubscribed() {\n        return Boolean(this.subscription) && this.subscription.isSubscribed();\n      };\n\n      Connect.prototype.addExtraProps = function addExtraProps(props) {\n        if (!withRef && !renderCountProp && !(this.propsMode && this.subscription)) return props;\n        // make a shallow copy so that fields added don't leak to the original selector.\n        // this is especially important for 'ref' since that's a reference back to the component\n        // instance. a singleton memoized selector would then be holding a reference to the\n        // instance, preventing the instance from being garbage collected, and that would be bad\n        var withExtras = _extends({}, props);\n        if (withRef) withExtras.ref = this.setWrappedInstance;\n        if (renderCountProp) withExtras[renderCountProp] = this.renderCount++;\n        if (this.propsMode && this.subscription) withExtras[subscriptionKey] = this.subscription;\n        return withExtras;\n      };\n\n      Connect.prototype.render = function render() {\n        var selector = this.selector;\n        selector.shouldComponentUpdate = false;\n\n        if (selector.error) {\n          throw selector.error;\n        } else {\n          return Object(__WEBPACK_IMPORTED_MODULE_2_react__[\"createElement\"])(WrappedComponent, this.addExtraProps(selector.props));\n        }\n      };\n\n      return Connect;\n    }(__WEBPACK_IMPORTED_MODULE_2_react__[\"Component\"]);\n\n    Connect.WrappedComponent = WrappedComponent;\n    Connect.displayName = displayName;\n    Connect.childContextTypes = childContextTypes;\n    Connect.contextTypes = contextTypes;\n    Connect.propTypes = contextTypes;\n\n    if (false) {\n      Connect.prototype.componentWillUpdate = function componentWillUpdate() {\n        var _this2 = this;\n\n        // We are hot reloading!\n        if (this.version !== version) {\n          this.version = version;\n          this.initSelector();\n\n          // If any connected descendants don't hot reload (and resubscribe in the process), their\n          // listeners will be lost when we unsubscribe. Unfortunately, by copying over all\n          // listeners, this does mean that the old versions of connected descendants will still be\n          // notified of state changes; however, their onStateChange function is a no-op so this\n          // isn't a huge deal.\n          var oldListeners = [];\n\n          if (this.subscription) {\n            oldListeners = this.subscription.listeners.get();\n            this.subscription.tryUnsubscribe();\n          }\n          this.initSubscription();\n          if (shouldHandleStateChanges) {\n            this.subscription.trySubscribe();\n            oldListeners.forEach(function (listener) {\n              return _this2.subscription.listeners.subscribe(listener);\n            });\n          }\n        }\n      };\n    }\n\n    return __WEBPACK_IMPORTED_MODULE_0_hoist_non_react_statics___default()(Connect, WrappedComponent);\n  };\n}\n\n/***/ }),\n/* 47 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ActionTypes; });\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = createStore;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash_es_isPlainObject__ = __webpack_require__(23);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_symbol_observable__ = __webpack_require__(142);\n\n\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar ActionTypes = {\n  INIT: '@@redux/INIT'\n\n  /**\n   * Creates a Redux store that holds the state tree.\n   * The only way to change the data in the store is to call `dispatch()` on it.\n   *\n   * There should only be a single store in your app. To specify how different\n   * parts of the state tree respond to actions, you may combine several reducers\n   * into a single reducer function by using `combineReducers`.\n   *\n   * @param {Function} reducer A function that returns the next state tree, given\n   * the current state tree and the action to handle.\n   *\n   * @param {any} [preloadedState] The initial state. You may optionally specify it\n   * to hydrate the state from the server in universal apps, or to restore a\n   * previously serialized user session.\n   * If you use `combineReducers` to produce the root reducer function, this must be\n   * an object with the same shape as `combineReducers` keys.\n   *\n   * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n   * to enhance the store with third-party capabilities such as middleware,\n   * time travel, persistence, etc. The only store enhancer that ships with Redux\n   * is `applyMiddleware()`.\n   *\n   * @returns {Store} A Redux store that lets you read the state, dispatch actions\n   * and subscribe to changes.\n   */\n};function createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error('Expected the enhancer to be a function.');\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error('Expected the reducer to be a function.');\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n  function getState() {\n    return currentState;\n  }\n\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected listener to be a function.');\n    }\n\n    var isSubscribed = true;\n\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      isSubscribed = false;\n\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n    };\n  }\n\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n  function dispatch(action) {\n    if (!Object(__WEBPACK_IMPORTED_MODULE_0_lodash_es_isPlainObject__[\"a\" /* default */])(action)) {\n      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n    }\n\n    if (isDispatching) {\n      throw new Error('Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error('Expected the nextReducer to be a function.');\n    }\n\n    currentReducer = nextReducer;\n    dispatch({ type: ActionTypes.INIT });\n  }\n\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object') {\n          throw new TypeError('Expected the observer to be an object.');\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return { unsubscribe: unsubscribe };\n      }\n    }, _ref[__WEBPACK_IMPORTED_MODULE_1_symbol_observable__[\"a\" /* default */]] = function () {\n      return this;\n    }, _ref;\n  }\n\n  // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n  dispatch({ type: ActionTypes.INIT });\n\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[__WEBPACK_IMPORTED_MODULE_1_symbol_observable__[\"a\" /* default */]] = observable, _ref2;\n}\n\n/***/ }),\n/* 48 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__root_js__ = __webpack_require__(135);\n\n\n/** Built-in value references. */\nvar Symbol = __WEBPACK_IMPORTED_MODULE_0__root_js__[\"a\" /* default */].Symbol;\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Symbol);\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export default */\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n    /* eslint-disable no-empty */\n  } catch (e) {}\n  /* eslint-enable no-empty */\n}\n\n/***/ }),\n/* 50 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = compose;\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\n\nfunction compose() {\n  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(undefined, arguments));\n    };\n  });\n}\n\n/***/ }),\n/* 51 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = wrapMapToPropsConstant;\n/* unused harmony export getDependsOnOwnProps */\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = wrapMapToPropsFunc;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils_verifyPlainObject__ = __webpack_require__(52);\n\n\nfunction wrapMapToPropsConstant(getConstant) {\n  return function initConstantSelector(dispatch, options) {\n    var constant = getConstant(dispatch, options);\n\n    function constantSelector() {\n      return constant;\n    }\n    constantSelector.dependsOnOwnProps = false;\n    return constantSelector;\n  };\n}\n\n// dependsOnOwnProps is used by createMapToPropsProxy to determine whether to pass props as args\n// to the mapToProps function being wrapped. It is also used by makePurePropsSelector to determine\n// whether mapToProps needs to be invoked when props have changed.\n// \n// A length of one signals that mapToProps does not depend on props from the parent component.\n// A length of zero is assumed to mean mapToProps is getting args via arguments or ...args and\n// therefore not reporting its length accurately..\nfunction getDependsOnOwnProps(mapToProps) {\n  return mapToProps.dependsOnOwnProps !== null && mapToProps.dependsOnOwnProps !== undefined ? Boolean(mapToProps.dependsOnOwnProps) : mapToProps.length !== 1;\n}\n\n// Used by whenMapStateToPropsIsFunction and whenMapDispatchToPropsIsFunction,\n// this function wraps mapToProps in a proxy function which does several things:\n// \n//  * Detects whether the mapToProps function being called depends on props, which\n//    is used by selectorFactory to decide if it should reinvoke on props changes.\n//    \n//  * On first call, handles mapToProps if returns another function, and treats that\n//    new function as the true mapToProps for subsequent calls.\n//    \n//  * On first call, verifies the first result is a plain object, in order to warn\n//    the developer that their mapToProps function is not returning a valid result.\n//    \nfunction wrapMapToPropsFunc(mapToProps, methodName) {\n  return function initProxySelector(dispatch, _ref) {\n    var displayName = _ref.displayName;\n\n    var proxy = function mapToPropsProxy(stateOrDispatch, ownProps) {\n      return proxy.dependsOnOwnProps ? proxy.mapToProps(stateOrDispatch, ownProps) : proxy.mapToProps(stateOrDispatch);\n    };\n\n    // allow detectFactoryAndVerify to get ownProps\n    proxy.dependsOnOwnProps = true;\n\n    proxy.mapToProps = function detectFactoryAndVerify(stateOrDispatch, ownProps) {\n      proxy.mapToProps = mapToProps;\n      proxy.dependsOnOwnProps = getDependsOnOwnProps(mapToProps);\n      var props = proxy(stateOrDispatch, ownProps);\n\n      if (typeof props === 'function') {\n        proxy.mapToProps = props;\n        proxy.dependsOnOwnProps = getDependsOnOwnProps(props);\n        props = proxy(stateOrDispatch, ownProps);\n      }\n\n      if (false) verifyPlainObject(props, displayName, methodName);\n\n      return props;\n    };\n\n    return proxy;\n  };\n}\n\n/***/ }),\n/* 52 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export default */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash_es_isPlainObject__ = __webpack_require__(23);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__warning__ = __webpack_require__(22);\n\n\n\nfunction verifyPlainObject(value, displayName, methodName) {\n  if (!Object(__WEBPACK_IMPORTED_MODULE_0_lodash_es_isPlainObject__[\"a\" /* default */])(value)) {\n    Object(__WEBPACK_IMPORTED_MODULE_1__warning__[\"a\" /* default */])(methodName + '() in ' + displayName + ' must return a plain object. Instead received ' + value + '.');\n  }\n}\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(54);\nmodule.exports = __webpack_require__(59);\n\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// @remove-on-eject-begin\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// @remove-on-eject-end\n\n\nif (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behavior.\n  __webpack_require__(55).enable();\n  window.Promise = __webpack_require__(57);\n}\n\n// fetch() polyfill for making API calls.\n__webpack_require__(58);\n\n// Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\nObject.assign = __webpack_require__(12);\n\n// In tests, polyfill requestAnimationFrame since jsdom doesn't provide it yet.\n// We don't polyfill it in the browser--this is user's responsibility.\nif (false) {\n  require('raf').polyfill(global);\n}\n\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar Promise = __webpack_require__(24);\n\nvar DEFAULT_WHITELIST = [\n  ReferenceError,\n  TypeError,\n  RangeError\n];\n\nvar enabled = false;\nexports.disable = disable;\nfunction disable() {\n  enabled = false;\n  Promise._47 = null;\n  Promise._71 = null;\n}\n\nexports.enable = enable;\nfunction enable(options) {\n  options = options || {};\n  if (enabled) disable();\n  enabled = true;\n  var id = 0;\n  var displayId = 0;\n  var rejections = {};\n  Promise._47 = function (promise) {\n    if (\n      promise._83 === 2 && // IS REJECTED\n      rejections[promise._56]\n    ) {\n      if (rejections[promise._56].logged) {\n        onHandled(promise._56);\n      } else {\n        clearTimeout(rejections[promise._56].timeout);\n      }\n      delete rejections[promise._56];\n    }\n  };\n  Promise._71 = function (promise, err) {\n    if (promise._75 === 0) { // not yet handled\n      promise._56 = id++;\n      rejections[promise._56] = {\n        displayId: null,\n        error: err,\n        timeout: setTimeout(\n          onUnhandled.bind(null, promise._56),\n          // For reference errors and type errors, this almost always\n          // means the programmer made a mistake, so log them after just\n          // 100ms\n          // otherwise, wait 2 seconds to see if they get handled\n          matchWhitelist(err, DEFAULT_WHITELIST)\n            ? 100\n            : 2000\n        ),\n        logged: false\n      };\n    }\n  };\n  function onUnhandled(id) {\n    if (\n      options.allRejections ||\n      matchWhitelist(\n        rejections[id].error,\n        options.whitelist || DEFAULT_WHITELIST\n      )\n    ) {\n      rejections[id].displayId = displayId++;\n      if (options.onUnhandled) {\n        rejections[id].logged = true;\n        options.onUnhandled(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      } else {\n        rejections[id].logged = true;\n        logError(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      }\n    }\n  }\n  function onHandled(id) {\n    if (rejections[id].logged) {\n      if (options.onHandled) {\n        options.onHandled(rejections[id].displayId, rejections[id].error);\n      } else if (!rejections[id].onUnhandled) {\n        console.warn(\n          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n        );\n        console.warn(\n          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n          rejections[id].displayId + '.'\n        );\n      }\n    }\n  }\n}\n\nfunction logError(id, error) {\n  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n  var errStr = (error && (error.stack || error)) + '';\n  errStr.split('\\n').forEach(function (line) {\n    console.warn('  ' + line);\n  });\n}\n\nfunction matchWhitelist(error, list) {\n  return list.some(function (cls) {\n    return error instanceof cls;\n  });\n}\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = __webpack_require__(24);\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._44);\n  p._83 = 1;\n  p._18 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._83 === 3) {\n            val = val._18;\n          }\n          if (val._83 === 1) return res(i, val._18);\n          if (val._83 === 2) reject(val._18);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports) {\n\n(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n/***/ }),\n/* 59 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_dom__ = __webpack_require__(61);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_dom___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react_dom__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_router_dom__ = __webpack_require__(69);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__index_css__ = __webpack_require__(97);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__index_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__index_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__modules_App__ = __webpack_require__(34);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__registerServiceWorker__ = __webpack_require__(152);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_react_redux__ = __webpack_require__(44);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__store__ = __webpack_require__(153);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__modules_App_components_Drone__ = __webpack_require__(156);\n__WEBPACK_IMPORTED_MODULE_1_react_dom___default.a.render(__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_6_react_redux__[\"a\" /* Provider */],{store:__WEBPACK_IMPORTED_MODULE_7__store__[\"a\" /* default */]},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_react_router_dom__[\"a\" /* BrowserRouter */],{basename:\"/synaesthesia\"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_react_router_dom__[\"c\" /* Switch */],null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_react_router_dom__[\"b\" /* Route */],{path:\"/drone\",component:__WEBPACK_IMPORTED_MODULE_8__modules_App_components_Drone__[\"a\" /* default */]}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_react_router_dom__[\"b\" /* Route */],{path:\"/:seed\",component:__WEBPACK_IMPORTED_MODULE_4__modules_App__[\"a\" /* containers */].AppContainer}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_react_router_dom__[\"b\" /* Route */],{path:\"/\",component:__WEBPACK_IMPORTED_MODULE_4__modules_App__[\"a\" /* containers */].AppContainer})))),document.getElementById(\"root\"));Object(__WEBPACK_IMPORTED_MODULE_5__registerServiceWorker__[\"a\" /* default */])();\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/** @license React v16.3.2\n * react.production.min.js\n *\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar m=__webpack_require__(12),n=__webpack_require__(13),p=__webpack_require__(25),q=__webpack_require__(14),r=\"function\"===typeof Symbol&&Symbol[\"for\"],t=r?Symbol[\"for\"](\"react.element\"):60103,u=r?Symbol[\"for\"](\"react.portal\"):60106,v=r?Symbol[\"for\"](\"react.fragment\"):60107,w=r?Symbol[\"for\"](\"react.strict_mode\"):60108,x=r?Symbol[\"for\"](\"react.provider\"):60109,y=r?Symbol[\"for\"](\"react.context\"):60110,z=r?Symbol[\"for\"](\"react.async_mode\"):60111,A=r?Symbol[\"for\"](\"react.forward_ref\"):\n60112,B=\"function\"===typeof Symbol&&Symbol.iterator;function C(a){for(var b=arguments.length-1,e=\"http://reactjs.org/docs/error-decoder.html?invariant\\x3d\"+a,c=0;c<b;c++)e+=\"\\x26args[]\\x3d\"+encodeURIComponent(arguments[c+1]);n(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",e)}var D={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}};\nfunction E(a,b,e){this.props=a;this.context=b;this.refs=p;this.updater=e||D}E.prototype.isReactComponent={};E.prototype.setState=function(a,b){\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a?C(\"85\"):void 0;this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=p;this.updater=e||D}var H=G.prototype=new F;\nH.constructor=G;m(H,E.prototype);H.isPureReactComponent=!0;var I={current:null},J=Object.prototype.hasOwnProperty,K={key:!0,ref:!0,__self:!0,__source:!0};\nfunction L(a,b,e){var c=void 0,d={},g=null,h=null;if(null!=b)for(c in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)J.call(b,c)&&!K.hasOwnProperty(c)&&(d[c]=b[c]);var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){for(var k=Array(f),l=0;l<f;l++)k[l]=arguments[l+2];d.children=k}if(a&&a.defaultProps)for(c in f=a.defaultProps,f)void 0===d[c]&&(d[c]=f[c]);return{$$typeof:t,type:a,key:g,ref:h,props:d,_owner:I.current}}\nfunction M(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===t}function escape(a){var b={\"\\x3d\":\"\\x3d0\",\":\":\"\\x3d2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var N=/\\/+/g,O=[];function P(a,b,e,c){if(O.length){var d=O.pop();d.result=a;d.keyPrefix=b;d.func=e;d.context=c;d.count=0;return d}return{result:a,keyPrefix:b,func:e,context:c,count:0}}function Q(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>O.length&&O.push(a)}\nfunction R(a,b,e,c){var d=typeof a;if(\"undefined\"===d||\"boolean\"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case t:case u:g=!0}}if(g)return e(c,a,\"\"===b?\".\"+S(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var h=0;h<a.length;h++){d=a[h];var f=b+S(d,h);g+=R(d,f,e,c)}else if(null===a||\"undefined\"===typeof a?f=null:(f=B&&a[B]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),\nh=0;!(d=a.next()).done;)d=d.value,f=b+S(d,h++),g+=R(d,f,e,c);else\"object\"===d&&(e=\"\"+a,C(\"31\",\"[object Object]\"===e?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":e,\"\"));return g}function S(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function T(a,b){a.func.call(a.context,b,a.count++)}\nfunction U(a,b,e){var c=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?V(a,c,e,q.thatReturnsArgument):null!=a&&(M(a)&&(b=d+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(N,\"$\\x26/\")+\"/\")+e,a={$$typeof:t,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}),c.push(a))}function V(a,b,e,c,d){var g=\"\";null!=e&&(g=(\"\"+e).replace(N,\"$\\x26/\")+\"/\");b=P(b,g,c,d);null==a||R(a,\"\",U,b);Q(b)}\nvar W={Children:{map:function(a,b,e){if(null==a)return a;var c=[];V(a,c,null,b,e);return c},forEach:function(a,b,e){if(null==a)return a;b=P(null,null,b,e);null==a||R(a,\"\",T,b);Q(b)},count:function(a){return null==a?0:R(a,\"\",q.thatReturnsNull,null)},toArray:function(a){var b=[];V(a,b,null,q.thatReturnsArgument);return b},only:function(a){M(a)?void 0:C(\"143\");return a}},createRef:function(){return{current:null}},Component:E,PureComponent:G,createContext:function(a,b){void 0===b&&(b=null);a={$$typeof:y,\n_calculateChangedBits:b,_defaultValue:a,_currentValue:a,_changedBits:0,Provider:null,Consumer:null};a.Provider={$$typeof:x,_context:a};return a.Consumer=a},forwardRef:function(a){return{$$typeof:A,render:a}},Fragment:v,StrictMode:w,unstable_AsyncMode:z,createElement:L,cloneElement:function(a,b,e){null===a||void 0===a?C(\"267\",a):void 0;var c=void 0,d=m({},a.props),g=a.key,h=a.ref,f=a._owner;if(null!=b){void 0!==b.ref&&(h=b.ref,f=I.current);void 0!==b.key&&(g=\"\"+b.key);var k=void 0;a.type&&a.type.defaultProps&&\n(k=a.type.defaultProps);for(c in b)J.call(b,c)&&!K.hasOwnProperty(c)&&(d[c]=void 0===b[c]&&void 0!==k?k[c]:b[c])}c=arguments.length-2;if(1===c)d.children=e;else if(1<c){k=Array(c);for(var l=0;l<c;l++)k[l]=arguments[l+2];d.children=k}return{$$typeof:t,type:a.type,key:g,ref:h,props:d,_owner:f}},createFactory:function(a){var b=L.bind(null,a);b.type=a;return b},isValidElement:M,version:\"16.3.2\",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:I,assign:m}},X=Object.freeze({default:W}),\nY=X&&W||X;module.exports=Y[\"default\"]?Y[\"default\"]:Y;\n\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (false) {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (true) {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = __webpack_require__(62);\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/** @license React v16.3.2\n * react-dom.production.min.js\n *\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\nvar ba=__webpack_require__(13),ea=__webpack_require__(0),m=__webpack_require__(63),A=__webpack_require__(12),C=__webpack_require__(14),fa=__webpack_require__(64),ha=__webpack_require__(65),ja=__webpack_require__(66),ka=__webpack_require__(25);\nfunction D(a){for(var b=arguments.length-1,c=\"http://reactjs.org/docs/error-decoder.html?invariant\\x3d\"+a,d=0;d<b;d++)c+=\"\\x26args[]\\x3d\"+encodeURIComponent(arguments[d+1]);ba(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",c)}ea?void 0:D(\"227\");\nfunction ma(a,b,c,d,e,f,h,g,k){this._hasCaughtError=!1;this._caughtError=null;var v=Array.prototype.slice.call(arguments,3);try{b.apply(c,v)}catch(l){this._caughtError=l,this._hasCaughtError=!0}}\nvar E={_caughtError:null,_hasCaughtError:!1,_rethrowError:null,_hasRethrowError:!1,invokeGuardedCallback:function(a,b,c,d,e,f,h,g,k){ma.apply(E,arguments)},invokeGuardedCallbackAndCatchFirstError:function(a,b,c,d,e,f,h,g,k){E.invokeGuardedCallback.apply(this,arguments);if(E.hasCaughtError()){var v=E.clearCaughtError();E._hasRethrowError||(E._hasRethrowError=!0,E._rethrowError=v)}},rethrowCaughtError:function(){return na.apply(E,arguments)},hasCaughtError:function(){return E._hasCaughtError},clearCaughtError:function(){if(E._hasCaughtError){var a=\nE._caughtError;E._caughtError=null;E._hasCaughtError=!1;return a}D(\"198\")}};function na(){if(E._hasRethrowError){var a=E._rethrowError;E._rethrowError=null;E._hasRethrowError=!1;throw a;}}var oa=null,pa={};\nfunction qa(){if(oa)for(var a in pa){var b=pa[a],c=oa.indexOf(a);-1<c?void 0:D(\"96\",a);if(!ra[c]){b.extractEvents?void 0:D(\"97\",a);ra[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],h=b,g=d;sa.hasOwnProperty(g)?D(\"99\",g):void 0;sa[g]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&ta(k[e],h,g);e=!0}else f.registrationName?(ta(f.registrationName,h,g),e=!0):e=!1;e?void 0:D(\"98\",d,a)}}}}\nfunction ta(a,b,c){ua[a]?D(\"100\",a):void 0;ua[a]=b;va[a]=b.eventTypes[c].dependencies}var ra=[],sa={},ua={},va={};function wa(a){oa?D(\"101\"):void 0;oa=Array.prototype.slice.call(a);qa()}function xa(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];pa.hasOwnProperty(c)&&pa[c]===d||(pa[c]?D(\"102\",c):void 0,pa[c]=d,b=!0)}b&&qa()}\nvar Ca=Object.freeze({plugins:ra,eventNameDispatchConfigs:sa,registrationNameModules:ua,registrationNameDependencies:va,possibleRegistrationNames:null,injectEventPluginOrder:wa,injectEventPluginsByName:xa}),Da=null,Ea=null,Fa=null;function Ga(a,b,c,d){b=a.type||\"unknown-event\";a.currentTarget=Fa(d);E.invokeGuardedCallbackAndCatchFirstError(b,c,void 0,a);a.currentTarget=null}\nfunction Ha(a,b){null==b?D(\"30\"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}function Ia(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var Ja=null;\nfunction Ka(a,b){if(a){var c=a._dispatchListeners,d=a._dispatchInstances;if(Array.isArray(c))for(var e=0;e<c.length&&!a.isPropagationStopped();e++)Ga(a,b,c[e],d[e]);else c&&Ga(a,b,c,d);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}function La(a){return Ka(a,!0)}function Ma(a){return Ka(a,!1)}var Na={injectEventPluginOrder:wa,injectEventPluginsByName:xa};\nfunction Oa(a,b){var c=a.stateNode;if(!c)return null;var d=Da(c);if(!d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;c&&\"function\"!==typeof c?D(\"231\",b,typeof c):void 0;\nreturn c}function Pa(a,b){null!==a&&(Ja=Ha(Ja,a));a=Ja;Ja=null;a&&(b?Ia(a,La):Ia(a,Ma),Ja?D(\"95\"):void 0,E.rethrowCaughtError())}function Qa(a,b,c,d){for(var e=null,f=0;f<ra.length;f++){var h=ra[f];h&&(h=h.extractEvents(a,b,c,d))&&(e=Ha(e,h))}Pa(e,!1)}var Ra=Object.freeze({injection:Na,getListener:Oa,runEventsInBatch:Pa,runExtractedEventsInBatch:Qa}),Sa=Math.random().toString(36).slice(2),F=\"__reactInternalInstance$\"+Sa,Ta=\"__reactEventHandlers$\"+Sa;\nfunction Ua(a){if(a[F])return a[F];for(;!a[F];)if(a.parentNode)a=a.parentNode;else return null;a=a[F];return 5===a.tag||6===a.tag?a:null}function Va(a){if(5===a.tag||6===a.tag)return a.stateNode;D(\"33\")}function Xa(a){return a[Ta]||null}var bb=Object.freeze({precacheFiberNode:function(a,b){b[F]=a},getClosestInstanceFromNode:Ua,getInstanceFromNode:function(a){a=a[F];return!a||5!==a.tag&&6!==a.tag?null:a},getNodeFromInstance:Va,getFiberCurrentPropsFromNode:Xa,updateFiberProps:function(a,b){a[Ta]=b}});\nfunction L(a){do a=a[\"return\"];while(a&&5!==a.tag);return a?a:null}function cb(a,b,c){for(var d=[];a;)d.push(a),a=L(a);for(a=d.length;0<a--;)b(d[a],\"captured\",c);for(a=0;a<d.length;a++)b(d[a],\"bubbled\",c)}function db(a,b,c){if(b=Oa(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=Ha(c._dispatchListeners,b),c._dispatchInstances=Ha(c._dispatchInstances,a)}function eb(a){a&&a.dispatchConfig.phasedRegistrationNames&&cb(a._targetInst,db,a)}\nfunction fb(a){if(a&&a.dispatchConfig.phasedRegistrationNames){var b=a._targetInst;b=b?L(b):null;cb(b,db,a)}}function gb(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Oa(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=Ha(c._dispatchListeners,b),c._dispatchInstances=Ha(c._dispatchInstances,a))}function hb(a){a&&a.dispatchConfig.registrationName&&gb(a._targetInst,null,a)}function ib(a){Ia(a,eb)}\nfunction jb(a,b,c,d){if(c&&d)a:{var e=c;for(var f=d,h=0,g=e;g;g=L(g))h++;g=0;for(var k=f;k;k=L(k))g++;for(;0<h-g;)e=L(e),h--;for(;0<g-h;)f=L(f),g--;for(;h--;){if(e===f||e===f.alternate)break a;e=L(e);f=L(f)}e=null}else e=null;f=e;for(e=[];c&&c!==f;){h=c.alternate;if(null!==h&&h===f)break;e.push(c);c=L(c)}for(c=[];d&&d!==f;){h=d.alternate;if(null!==h&&h===f)break;c.push(d);d=L(d)}for(d=0;d<e.length;d++)gb(e[d],\"bubbled\",a);for(a=c.length;0<a--;)gb(c[a],\"captured\",b)}\nvar kb=Object.freeze({accumulateTwoPhaseDispatches:ib,accumulateTwoPhaseDispatchesSkipTarget:function(a){Ia(a,fb)},accumulateEnterLeaveDispatches:jb,accumulateDirectDispatches:function(a){Ia(a,hb)}}),lb=null;function mb(){!lb&&m.canUseDOM&&(lb=\"textContent\"in document.documentElement?\"textContent\":\"innerText\");return lb}var M={_root:null,_startText:null,_fallbackText:null};\nfunction nb(){if(M._fallbackText)return M._fallbackText;var a,b=M._startText,c=b.length,d,e=ob(),f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var h=c-a;for(d=1;d<=h&&b[c-d]===e[f-d];d++);M._fallbackText=e.slice(a,1<d?1-d:void 0);return M._fallbackText}function ob(){return\"value\"in M._root?M._root.value:M._root[mb()]}\nvar pb=\"dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances\".split(\" \"),qb={type:null,target:null,currentTarget:C.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};\nfunction N(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):\"target\"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?C.thatReturnsTrue:C.thatReturnsFalse;this.isPropagationStopped=C.thatReturnsFalse;return this}\nA(N.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=C.thatReturnsTrue)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=C.thatReturnsTrue)},persist:function(){this.isPersistent=C.thatReturnsTrue},isPersistent:C.thatReturnsFalse,\ndestructor:function(){var a=this.constructor.Interface,b;for(b in a)this[b]=null;for(a=0;a<pb.length;a++)this[pb[a]]=null}});N.Interface=qb;N.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;A(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=A({},d.Interface,a);c.extend=d.extend;rb(c);return c};rb(N);\nfunction sb(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}function tb(a){a instanceof this?void 0:D(\"223\");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}function rb(a){a.eventPool=[];a.getPooled=sb;a.release=tb}var ub=N.extend({data:null}),vb=N.extend({data:null}),wb=[9,13,27,32],xb=m.canUseDOM&&\"CompositionEvent\"in window,yb=null;m.canUseDOM&&\"documentMode\"in document&&(yb=document.documentMode);\nvar zb=m.canUseDOM&&\"TextEvent\"in window&&!yb,Ab=m.canUseDOM&&(!xb||yb&&8<yb&&11>=yb),Bb=String.fromCharCode(32),Kb={beforeInput:{phasedRegistrationNames:{bubbled:\"onBeforeInput\",captured:\"onBeforeInputCapture\"},dependencies:[\"topCompositionEnd\",\"topKeyPress\",\"topTextInput\",\"topPaste\"]},compositionEnd:{phasedRegistrationNames:{bubbled:\"onCompositionEnd\",captured:\"onCompositionEndCapture\"},dependencies:\"topBlur topCompositionEnd topKeyDown topKeyPress topKeyUp topMouseDown\".split(\" \")},compositionStart:{phasedRegistrationNames:{bubbled:\"onCompositionStart\",\ncaptured:\"onCompositionStartCapture\"},dependencies:\"topBlur topCompositionStart topKeyDown topKeyPress topKeyUp topMouseDown\".split(\" \")},compositionUpdate:{phasedRegistrationNames:{bubbled:\"onCompositionUpdate\",captured:\"onCompositionUpdateCapture\"},dependencies:\"topBlur topCompositionUpdate topKeyDown topKeyPress topKeyUp topMouseDown\".split(\" \")}},Lb=!1;\nfunction Mb(a,b){switch(a){case \"topKeyUp\":return-1!==wb.indexOf(b.keyCode);case \"topKeyDown\":return 229!==b.keyCode;case \"topKeyPress\":case \"topMouseDown\":case \"topBlur\":return!0;default:return!1}}function Nb(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var Ob=!1;function Pb(a,b){switch(a){case \"topCompositionEnd\":return Nb(b);case \"topKeyPress\":if(32!==b.which)return null;Lb=!0;return Bb;case \"topTextInput\":return a=b.data,a===Bb&&Lb?null:a;default:return null}}\nfunction Qb(a,b){if(Ob)return\"topCompositionEnd\"===a||!xb&&Mb(a,b)?(a=nb(),M._root=null,M._startText=null,M._fallbackText=null,Ob=!1,a):null;switch(a){case \"topPaste\":return null;case \"topKeyPress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"topCompositionEnd\":return Ab?null:b.data;default:return null}}\nvar Rb={eventTypes:Kb,extractEvents:function(a,b,c,d){var e=void 0;var f=void 0;if(xb)b:{switch(a){case \"topCompositionStart\":e=Kb.compositionStart;break b;case \"topCompositionEnd\":e=Kb.compositionEnd;break b;case \"topCompositionUpdate\":e=Kb.compositionUpdate;break b}e=void 0}else Ob?Mb(a,c)&&(e=Kb.compositionEnd):\"topKeyDown\"===a&&229===c.keyCode&&(e=Kb.compositionStart);e?(Ab&&(Ob||e!==Kb.compositionStart?e===Kb.compositionEnd&&Ob&&(f=nb()):(M._root=d,M._startText=ob(),Ob=!0)),e=ub.getPooled(e,\nb,c,d),f?e.data=f:(f=Nb(c),null!==f&&(e.data=f)),ib(e),f=e):f=null;(a=zb?Pb(a,c):Qb(a,c))?(b=vb.getPooled(Kb.beforeInput,b,c,d),b.data=a,ib(b)):b=null;return null===f?b:null===b?f:[f,b]}},Sb=null,Tb={injectFiberControlledHostComponent:function(a){Sb=a}},Ub=null,Vb=null;function Wb(a){if(a=Ea(a)){Sb&&\"function\"===typeof Sb.restoreControlledState?void 0:D(\"194\");var b=Da(a.stateNode);Sb.restoreControlledState(a.stateNode,a.type,b)}}function Xb(a){Ub?Vb?Vb.push(a):Vb=[a]:Ub=a}\nfunction Yb(){return null!==Ub||null!==Vb}function Zb(){if(Ub){var a=Ub,b=Vb;Vb=Ub=null;Wb(a);if(b)for(a=0;a<b.length;a++)Wb(b[a])}}var $b=Object.freeze({injection:Tb,enqueueStateRestore:Xb,needsStateRestore:Yb,restoreStateIfNeeded:Zb});function ac(a,b){return a(b)}function bc(a,b,c){return a(b,c)}function cc(){}var dc=!1;function ec(a,b){if(dc)return a(b);dc=!0;try{return ac(a,b)}finally{dc=!1,Yb()&&(cc(),Zb())}}\nvar fc={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function gc(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!fc[a.type]:\"textarea\"===b?!0:!1}function hc(a){a=a.target||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}\nfunction ic(a,b){if(!m.canUseDOM||b&&!(\"addEventListener\"in document))return!1;a=\"on\"+a;b=a in document;b||(b=document.createElement(\"div\"),b.setAttribute(a,\"return;\"),b=\"function\"===typeof b[a]);return b}function jc(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction kc(a){var b=jc(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"function\"===typeof c.get&&\"function\"===typeof c.set)return Object.defineProperty(a,b,{configurable:!0,get:function(){return c.get.call(this)},set:function(a){d=\"\"+a;c.set.call(this,a)}}),Object.defineProperty(a,b,{enumerable:c.enumerable}),{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=null;delete a[b]}}}\nfunction lc(a){a._valueTracker||(a._valueTracker=kc(a))}function mc(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=jc(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}\nvar nc=ea.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,O=\"function\"===typeof Symbol&&Symbol[\"for\"],oc=O?Symbol[\"for\"](\"react.element\"):60103,pc=O?Symbol[\"for\"](\"react.call\"):60104,qc=O?Symbol[\"for\"](\"react.return\"):60105,rc=O?Symbol[\"for\"](\"react.portal\"):60106,sc=O?Symbol[\"for\"](\"react.fragment\"):60107,tc=O?Symbol[\"for\"](\"react.strict_mode\"):60108,uc=O?Symbol[\"for\"](\"react.provider\"):60109,vc=O?Symbol[\"for\"](\"react.context\"):60110,wc=O?Symbol[\"for\"](\"react.async_mode\"):60111,\nxc=O?Symbol[\"for\"](\"react.forward_ref\"):60112,yc=\"function\"===typeof Symbol&&Symbol.iterator;function zc(a){if(null===a||\"undefined\"===typeof a)return null;a=yc&&a[yc]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nfunction Ac(a){a=a.type;if(\"function\"===typeof a)return a.displayName||a.name;if(\"string\"===typeof a)return a;switch(a){case sc:return\"ReactFragment\";case rc:return\"ReactPortal\";case pc:return\"ReactCall\";case qc:return\"ReactReturn\"}if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case xc:return a=a.render.displayName||a.render.name||\"\",\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\"}return null}\nfunction Bc(a){var b=\"\";do{a:switch(a.tag){case 0:case 1:case 2:case 5:var c=a._debugOwner,d=a._debugSource;var e=Ac(a);var f=null;c&&(f=Ac(c));c=d;e=\"\\n    in \"+(e||\"Unknown\")+(c?\" (at \"+c.fileName.replace(/^.*[\\\\\\/]/,\"\")+\":\"+c.lineNumber+\")\":f?\" (created by \"+f+\")\":\"\");break a;default:e=\"\"}b+=e;a=a[\"return\"]}while(a);return b}\nvar Cc=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,Dc={},Ec={};function Fc(a){if(Ec.hasOwnProperty(a))return!0;if(Dc.hasOwnProperty(a))return!1;if(Cc.test(a))return Ec[a]=!0;Dc[a]=!0;return!1}\nfunction Gc(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}function Hc(a,b,c,d){if(null===b||\"undefined\"===typeof b||Gc(a,b,c,d))return!0;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}\nfunction U(a,b,c,d,e){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b}var V={};\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){V[a]=new U(a,0,!1,a,null)});\n[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];V[b]=new U(b,1,!1,a[1],null)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){V[a]=new U(a,2,!1,a.toLowerCase(),null)});[\"autoReverse\",\"externalResourcesRequired\",\"preserveAlpha\"].forEach(function(a){V[a]=new U(a,2,!1,a,null)});\n\"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){V[a]=new U(a,3,!1,a.toLowerCase(),null)});[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){V[a]=new U(a,3,!0,a.toLowerCase(),null)});[\"capture\",\"download\"].forEach(function(a){V[a]=new U(a,4,!1,a.toLowerCase(),null)});\n[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){V[a]=new U(a,6,!1,a.toLowerCase(),null)});[\"rowSpan\",\"start\"].forEach(function(a){V[a]=new U(a,5,!1,a.toLowerCase(),null)});var Sc=/[\\-:]([a-z])/g;function Tc(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(Sc,\nTc);V[b]=new U(b,1,!1,a,null)});\"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(Sc,Tc);V[b]=new U(b,1,!1,a,\"http://www.w3.org/1999/xlink\")});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(Sc,Tc);V[b]=new U(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\")});V.tabIndex=new U(\"tabIndex\",1,!1,\"tabindex\",null);\nfunction Uc(a,b,c,d){var e=V.hasOwnProperty(b)?V[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(Hc(b,c,e,d)&&(c=null),d||null===e?Fc(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nfunction Vc(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Wc(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Xc(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function Yc(a,b){b=b.checked;null!=b&&Uc(a,\"checked\",b,!1)}\nfunction Zc(a,b){Yc(a,b);var c=Xc(b.value);if(null!=c)if(\"number\"===b.type){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);b.hasOwnProperty(\"value\")?$c(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&$c(a,b.type,Xc(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction ad(a,b){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\"))\"\"===a.value&&(a.value=\"\"+a._wrapperState.initialValue),a.defaultValue=\"\"+a._wrapperState.initialValue;b=a.name;\"\"!==b&&(a.name=\"\");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!a.defaultChecked;\"\"!==b&&(a.name=b)}function $c(a,b,c){if(\"number\"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}\nfunction Xc(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}var bd={change:{phasedRegistrationNames:{bubbled:\"onChange\",captured:\"onChangeCapture\"},dependencies:\"topBlur topChange topClick topFocus topInput topKeyDown topKeyUp topSelectionChange\".split(\" \")}};function cd(a,b,c){a=N.getPooled(bd.change,a,b,c);a.type=\"change\";Xb(c);ib(a);return a}var dd=null,ed=null;function fd(a){Pa(a,!1)}\nfunction gd(a){var b=Va(a);if(mc(b))return a}function hd(a,b){if(\"topChange\"===a)return b}var id=!1;m.canUseDOM&&(id=ic(\"input\")&&(!document.documentMode||9<document.documentMode));function jd(){dd&&(dd.detachEvent(\"onpropertychange\",kd),ed=dd=null)}function kd(a){\"value\"===a.propertyName&&gd(ed)&&(a=cd(ed,a,hc(a)),ec(fd,a))}function ld(a,b,c){\"topFocus\"===a?(jd(),dd=b,ed=c,dd.attachEvent(\"onpropertychange\",kd)):\"topBlur\"===a&&jd()}\nfunction md(a){if(\"topSelectionChange\"===a||\"topKeyUp\"===a||\"topKeyDown\"===a)return gd(ed)}function nd(a,b){if(\"topClick\"===a)return gd(b)}function od(a,b){if(\"topInput\"===a||\"topChange\"===a)return gd(b)}\nvar pd={eventTypes:bd,_isInputEventSupported:id,extractEvents:function(a,b,c,d){var e=b?Va(b):window,f=void 0,h=void 0,g=e.nodeName&&e.nodeName.toLowerCase();\"select\"===g||\"input\"===g&&\"file\"===e.type?f=hd:gc(e)?id?f=od:(f=md,h=ld):(g=e.nodeName)&&\"input\"===g.toLowerCase()&&(\"checkbox\"===e.type||\"radio\"===e.type)&&(f=nd);if(f&&(f=f(a,b)))return cd(f,c,d);h&&h(a,e,b);\"topBlur\"===a&&null!=b&&(a=b._wrapperState||e._wrapperState)&&a.controlled&&\"number\"===e.type&&$c(e,\"number\",e.value)}},qd=N.extend({view:null,\ndetail:null}),rd={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function sd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=rd[a])?!!b[a]:!1}function td(){return sd}\nvar ud=qd.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:td,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)}}),vd={mouseEnter:{registrationName:\"onMouseEnter\",dependencies:[\"topMouseOut\",\"topMouseOver\"]},mouseLeave:{registrationName:\"onMouseLeave\",dependencies:[\"topMouseOut\",\"topMouseOver\"]}},wd={eventTypes:vd,extractEvents:function(a,\nb,c,d){if(\"topMouseOver\"===a&&(c.relatedTarget||c.fromElement)||\"topMouseOut\"!==a&&\"topMouseOver\"!==a)return null;var e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||e.parentWindow:window;\"topMouseOut\"===a?(a=b,b=(b=c.relatedTarget||c.toElement)?Ua(b):null):a=null;if(a===b)return null;var f=null==a?e:Va(a);e=null==b?e:Va(b);var h=ud.getPooled(vd.mouseLeave,a,c,d);h.type=\"mouseleave\";h.target=f;h.relatedTarget=e;c=ud.getPooled(vd.mouseEnter,b,c,d);c.type=\"mouseenter\";c.target=e;c.relatedTarget=\nf;jb(h,c,a,b);return[h,c]}};function xd(a){var b=a;if(a.alternate)for(;b[\"return\"];)b=b[\"return\"];else{if(0!==(b.effectTag&2))return 1;for(;b[\"return\"];)if(b=b[\"return\"],0!==(b.effectTag&2))return 1}return 3===b.tag?2:3}function yd(a){return(a=a._reactInternalFiber)?2===xd(a):!1}function zd(a){2!==xd(a)?D(\"188\"):void 0}\nfunction Ad(a){var b=a.alternate;if(!b)return b=xd(a),3===b?D(\"188\"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c[\"return\"],f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var h=e.child;h;){if(h===c)return zd(e),a;if(h===d)return zd(e),b;h=h.sibling}D(\"188\")}if(c[\"return\"]!==d[\"return\"])c=e,d=f;else{h=!1;for(var g=e.child;g;){if(g===c){h=!0;c=e;d=f;break}if(g===d){h=!0;d=e;c=f;break}g=g.sibling}if(!h){for(g=f.child;g;){if(g===c){h=!0;c=f;d=e;break}if(g===d){h=!0;d=f;c=e;break}g=g.sibling}h?\nvoid 0:D(\"189\")}}c.alternate!==d?D(\"190\"):void 0}3!==c.tag?D(\"188\"):void 0;return c.stateNode.current===c?a:b}function Bd(a){a=Ad(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child[\"return\"]=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b[\"return\"]||b[\"return\"]===a)return null;b=b[\"return\"]}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}}return null}\nfunction Cd(a){a=Ad(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child&&4!==b.tag)b.child[\"return\"]=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b[\"return\"]||b[\"return\"]===a)return null;b=b[\"return\"]}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}}return null}var Dd=N.extend({animationName:null,elapsedTime:null,pseudoElement:null}),Ed=N.extend({clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Fd=qd.extend({relatedTarget:null});\nfunction Gd(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}\nvar Hd={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Id={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",\n116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Jd=qd.extend({key:function(a){if(a.key){var b=Hd[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=Gd(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Id[a.keyCode]||\"Unidentified\":\"\"},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:td,charCode:function(a){return\"keypress\"===\na.type?Gd(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===a.type?Gd(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Kd=ud.extend({dataTransfer:null}),Ld=qd.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:td}),Md=N.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),Nd=ud.extend({deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in\na?-a.wheelDeltaX:0},deltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),Od={},Pd={};function Qd(a,b){var c=a[0].toUpperCase()+a.slice(1),d=\"on\"+c;c=\"top\"+c;b={phasedRegistrationNames:{bubbled:d,captured:d+\"Capture\"},dependencies:[c],isInteractive:b};Od[a]=b;Pd[c]=b}\n\"blur cancel click close contextMenu copy cut doubleClick dragEnd dragStart drop focus input invalid keyDown keyPress keyUp mouseDown mouseUp paste pause play rateChange reset seeked submit touchCancel touchEnd touchStart volumeChange\".split(\" \").forEach(function(a){Qd(a,!0)});\n\"abort animationEnd animationIteration animationStart canPlay canPlayThrough drag dragEnter dragExit dragLeave dragOver durationChange emptied encrypted ended error load loadedData loadedMetadata loadStart mouseMove mouseOut mouseOver playing progress scroll seeking stalled suspend timeUpdate toggle touchMove transitionEnd waiting wheel\".split(\" \").forEach(function(a){Qd(a,!1)});\nvar Rd={eventTypes:Od,isInteractiveTopLevelEventType:function(a){a=Pd[a];return void 0!==a&&!0===a.isInteractive},extractEvents:function(a,b,c,d){var e=Pd[a];if(!e)return null;switch(a){case \"topKeyPress\":if(0===Gd(c))return null;case \"topKeyDown\":case \"topKeyUp\":a=Jd;break;case \"topBlur\":case \"topFocus\":a=Fd;break;case \"topClick\":if(2===c.button)return null;case \"topDoubleClick\":case \"topMouseDown\":case \"topMouseMove\":case \"topMouseUp\":case \"topMouseOut\":case \"topMouseOver\":case \"topContextMenu\":a=\nud;break;case \"topDrag\":case \"topDragEnd\":case \"topDragEnter\":case \"topDragExit\":case \"topDragLeave\":case \"topDragOver\":case \"topDragStart\":case \"topDrop\":a=Kd;break;case \"topTouchCancel\":case \"topTouchEnd\":case \"topTouchMove\":case \"topTouchStart\":a=Ld;break;case \"topAnimationEnd\":case \"topAnimationIteration\":case \"topAnimationStart\":a=Dd;break;case \"topTransitionEnd\":a=Md;break;case \"topScroll\":a=qd;break;case \"topWheel\":a=Nd;break;case \"topCopy\":case \"topCut\":case \"topPaste\":a=Ed;break;default:a=\nN}b=a.getPooled(e,b,c,d);ib(b);return b}},Sd=Rd.isInteractiveTopLevelEventType,Td=[];function Ud(a){var b=a.targetInst;do{if(!b){a.ancestors.push(b);break}var c;for(c=b;c[\"return\"];)c=c[\"return\"];c=3!==c.tag?null:c.stateNode.containerInfo;if(!c)break;a.ancestors.push(b);b=Ua(c)}while(b);for(c=0;c<a.ancestors.length;c++)b=a.ancestors[c],Qa(a.topLevelType,b,a.nativeEvent,hc(a.nativeEvent))}var Vd=!0;function Wd(a){Vd=!!a}\nfunction W(a,b,c){if(!c)return null;a=(Sd(a)?Xd:Yd).bind(null,a);c.addEventListener(b,a,!1)}function Zd(a,b,c){if(!c)return null;a=(Sd(a)?Xd:Yd).bind(null,a);c.addEventListener(b,a,!0)}function Xd(a,b){bc(Yd,a,b)}\nfunction Yd(a,b){if(Vd){var c=hc(b);c=Ua(c);null!==c&&\"number\"===typeof c.tag&&2!==xd(c)&&(c=null);if(Td.length){var d=Td.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{ec(Ud,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>Td.length&&Td.push(a)}}}\nvar $d=Object.freeze({get _enabled(){return Vd},setEnabled:Wd,isEnabled:function(){return Vd},trapBubbledEvent:W,trapCapturedEvent:Zd,dispatchEvent:Yd});function ae(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;c[\"ms\"+a]=\"MS\"+b;c[\"O\"+a]=\"o\"+b.toLowerCase();return c}\nvar be={animationend:ae(\"Animation\",\"AnimationEnd\"),animationiteration:ae(\"Animation\",\"AnimationIteration\"),animationstart:ae(\"Animation\",\"AnimationStart\"),transitionend:ae(\"Transition\",\"TransitionEnd\")},ce={},de={};m.canUseDOM&&(de=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete be.animationend.animation,delete be.animationiteration.animation,delete be.animationstart.animation),\"TransitionEvent\"in window||delete be.transitionend.transition);\nfunction ee(a){if(ce[a])return ce[a];if(!be[a])return a;var b=be[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in de)return ce[a]=b[c];return a}\nvar fe={topAnimationEnd:ee(\"animationend\"),topAnimationIteration:ee(\"animationiteration\"),topAnimationStart:ee(\"animationstart\"),topBlur:\"blur\",topCancel:\"cancel\",topChange:\"change\",topClick:\"click\",topClose:\"close\",topCompositionEnd:\"compositionend\",topCompositionStart:\"compositionstart\",topCompositionUpdate:\"compositionupdate\",topContextMenu:\"contextmenu\",topCopy:\"copy\",topCut:\"cut\",topDoubleClick:\"dblclick\",topDrag:\"drag\",topDragEnd:\"dragend\",topDragEnter:\"dragenter\",topDragExit:\"dragexit\",topDragLeave:\"dragleave\",\ntopDragOver:\"dragover\",topDragStart:\"dragstart\",topDrop:\"drop\",topFocus:\"focus\",topInput:\"input\",topKeyDown:\"keydown\",topKeyPress:\"keypress\",topKeyUp:\"keyup\",topLoad:\"load\",topLoadStart:\"loadstart\",topMouseDown:\"mousedown\",topMouseMove:\"mousemove\",topMouseOut:\"mouseout\",topMouseOver:\"mouseover\",topMouseUp:\"mouseup\",topPaste:\"paste\",topScroll:\"scroll\",topSelectionChange:\"selectionchange\",topTextInput:\"textInput\",topToggle:\"toggle\",topTouchCancel:\"touchcancel\",topTouchEnd:\"touchend\",topTouchMove:\"touchmove\",\ntopTouchStart:\"touchstart\",topTransitionEnd:ee(\"transitionend\"),topWheel:\"wheel\"},ge={topAbort:\"abort\",topCanPlay:\"canplay\",topCanPlayThrough:\"canplaythrough\",topDurationChange:\"durationchange\",topEmptied:\"emptied\",topEncrypted:\"encrypted\",topEnded:\"ended\",topError:\"error\",topLoadedData:\"loadeddata\",topLoadedMetadata:\"loadedmetadata\",topLoadStart:\"loadstart\",topPause:\"pause\",topPlay:\"play\",topPlaying:\"playing\",topProgress:\"progress\",topRateChange:\"ratechange\",topSeeked:\"seeked\",topSeeking:\"seeking\",\ntopStalled:\"stalled\",topSuspend:\"suspend\",topTimeUpdate:\"timeupdate\",topVolumeChange:\"volumechange\",topWaiting:\"waiting\"},he={},ie=0,je=\"_reactListenersID\"+(\"\"+Math.random()).slice(2);function ke(a){Object.prototype.hasOwnProperty.call(a,je)||(a[je]=ie++,he[a[je]]={});return he[a[je]]}function le(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction me(a,b){var c=le(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=le(c)}}function ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&\"text\"===a.type||\"textarea\"===b||\"true\"===a.contentEditable)}\nvar oe=m.canUseDOM&&\"documentMode\"in document&&11>=document.documentMode,pe={select:{phasedRegistrationNames:{bubbled:\"onSelect\",captured:\"onSelectCapture\"},dependencies:\"topBlur topContextMenu topFocus topKeyDown topKeyUp topMouseDown topMouseUp topSelectionChange\".split(\" \")}},qe=null,re=null,se=null,te=!1;\nfunction ue(a,b){if(te||null==qe||qe!==fa())return null;var c=qe;\"selectionStart\"in c&&ne(c)?c={start:c.selectionStart,end:c.selectionEnd}:window.getSelection?(c=window.getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset}):c=void 0;return se&&ha(se,c)?null:(se=c,a=N.getPooled(pe.select,re,a,b),a.type=\"select\",a.target=qe,ib(a),a)}\nvar ve={eventTypes:pe,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=ke(e);f=va.onSelect;for(var h=0;h<f.length;h++){var g=f[h];if(!e.hasOwnProperty(g)||!e[g]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?Va(b):window;switch(a){case \"topFocus\":if(gc(e)||\"true\"===e.contentEditable)qe=e,re=b,se=null;break;case \"topBlur\":se=re=qe=null;break;case \"topMouseDown\":te=!0;break;case \"topContextMenu\":case \"topMouseUp\":return te=!1,ue(c,d);case \"topSelectionChange\":if(oe)break;\ncase \"topKeyDown\":case \"topKeyUp\":return ue(c,d)}return null}};Na.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));Da=bb.getFiberCurrentPropsFromNode;Ea=bb.getInstanceFromNode;Fa=bb.getNodeFromInstance;Na.injectEventPluginsByName({SimpleEventPlugin:Rd,EnterLeaveEventPlugin:wd,ChangeEventPlugin:pd,SelectEventPlugin:ve,BeforeInputEventPlugin:Rb});\nfunction xe(a,b,c,d){this.tag=a;this.key=c;this.stateNode=this.type=null;this.sibling=this.child=this[\"return\"]=null;this.index=0;this.ref=null;this.pendingProps=b;this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.expirationTime=0;this.alternate=null}\nfunction ze(a,b,c){var d=a.alternate;null===d?(d=new xe(a.tag,b,a.key,a.mode),d.type=a.type,d.stateNode=a.stateNode,d.alternate=a,a.alternate=d):(d.pendingProps=b,d.effectTag=0,d.nextEffect=null,d.firstEffect=null,d.lastEffect=null);d.expirationTime=c;d.child=a.child;d.memoizedProps=a.memoizedProps;d.memoizedState=a.memoizedState;d.updateQueue=a.updateQueue;d.sibling=a.sibling;d.index=a.index;d.ref=a.ref;return d}\nfunction Ae(a,b,c){var d=a.type,e=a.key;a=a.props;var f=void 0;if(\"function\"===typeof d)f=d.prototype&&d.prototype.isReactComponent?2:0;else if(\"string\"===typeof d)f=5;else switch(d){case sc:return Be(a.children,b,c,e);case wc:f=11;b|=3;break;case tc:f=11;b|=2;break;case pc:f=7;break;case qc:f=9;break;default:if(\"object\"===typeof d&&null!==d)switch(d.$$typeof){case uc:f=13;break;case vc:f=12;break;case xc:f=14;break;default:if(\"number\"===typeof d.tag)return b=d,b.pendingProps=a,b.expirationTime=c,\nb;D(\"130\",null==d?d:typeof d,\"\")}else D(\"130\",null==d?d:typeof d,\"\")}b=new xe(f,a,e,b);b.type=d;b.expirationTime=c;return b}function Be(a,b,c,d){a=new xe(10,a,d,b);a.expirationTime=c;return a}function Ce(a,b,c){a=new xe(6,a,null,b);a.expirationTime=c;return a}function De(a,b,c){b=new xe(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}var Ee=null,Fe=null;\nfunction Ge(a){return function(b){try{return a(b)}catch(c){}}}function He(a){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Ee=Ge(function(a){return b.onCommitFiberRoot(c,a)});Fe=Ge(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}function Ie(a){\"function\"===typeof Ee&&Ee(a)}function Je(a){\"function\"===typeof Fe&&Fe(a)}new Set;\nfunction Ke(a){return{baseState:a,expirationTime:0,first:null,last:null,callbackList:null,hasForceUpdate:!1,isInitialized:!1,capturedValues:null}}function Le(a,b){null===a.last?a.first=a.last=b:(a.last.next=b,a.last=b);if(0===a.expirationTime||a.expirationTime>b.expirationTime)a.expirationTime=b.expirationTime}var Me=void 0,Ne=void 0;\nfunction Oe(a){Me=Ne=null;var b=a.alternate,c=a.updateQueue;null===c&&(c=a.updateQueue=Ke(null));null!==b?(a=b.updateQueue,null===a&&(a=b.updateQueue=Ke(null))):a=null;Me=c;Ne=a!==c?a:null}function Pe(a,b){Oe(a);a=Me;var c=Ne;null===c?Le(a,b):null===a.last||null===c.last?(Le(a,b),Le(c,b)):(Le(a,b),c.last=b)}function Qe(a,b,c,d){a=a.partialState;return\"function\"===typeof a?a.call(b,c,d):a}\nfunction Re(a,b,c,d,e,f){null!==a&&a.updateQueue===c&&(c=b.updateQueue={baseState:c.baseState,expirationTime:c.expirationTime,first:c.first,last:c.last,isInitialized:c.isInitialized,capturedValues:c.capturedValues,callbackList:null,hasForceUpdate:!1});c.expirationTime=0;c.isInitialized?a=c.baseState:(a=c.baseState=b.memoizedState,c.isInitialized=!0);for(var h=!0,g=c.first,k=!1;null!==g;){var v=g.expirationTime;if(v>f){var l=c.expirationTime;if(0===l||l>v)c.expirationTime=v;k||(k=!0,c.baseState=a)}else{k||\n(c.first=g.next,null===c.first&&(c.last=null));if(g.isReplace)a=Qe(g,d,a,e),h=!0;else if(v=Qe(g,d,a,e))a=h?A({},a,v):A(a,v),h=!1;g.isForced&&(c.hasForceUpdate=!0);null!==g.callback&&(v=c.callbackList,null===v&&(v=c.callbackList=[]),v.push(g));null!==g.capturedValue&&(v=c.capturedValues,null===v?c.capturedValues=[g.capturedValue]:v.push(g.capturedValue))}g=g.next}null!==c.callbackList?b.effectTag|=32:null!==c.first||c.hasForceUpdate||null!==c.capturedValues||(b.updateQueue=null);k||(c.baseState=a);\nreturn a}function Se(a,b){var c=a.callbackList;if(null!==c)for(a.callbackList=null,a=0;a<c.length;a++){var d=c[a],e=d.callback;d.callback=null;\"function\"!==typeof e?D(\"191\",e):void 0;e.call(b)}}\nfunction Te(a,b,c,d,e){function f(a,b,c,d,e,f){if(null===b||null!==a.updateQueue&&a.updateQueue.hasForceUpdate)return!0;var n=a.stateNode;a=a.type;return\"function\"===typeof n.shouldComponentUpdate?n.shouldComponentUpdate(c,e,f):a.prototype&&a.prototype.isPureReactComponent?!ha(b,c)||!ha(d,e):!0}function h(a,b){b.updater=r;a.stateNode=b;b._reactInternalFiber=a}function g(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&\nb.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&r.enqueueReplaceState(b,b.state,null)}function k(a,b,c,d){a=a.type;if(\"function\"===typeof a.getDerivedStateFromProps)return a.getDerivedStateFromProps.call(null,c,d)}var v=a.cacheContext,l=a.getMaskedContext,p=a.getUnmaskedContext,z=a.isContextConsumer,B=a.hasContextChanged,r={isMounted:yd,enqueueSetState:function(a,d,e){a=a._reactInternalFiber;e=void 0===e?null:e;var f=c(a);Pe(a,{expirationTime:f,partialState:d,callback:e,isReplace:!1,isForced:!1,\ncapturedValue:null,next:null});b(a,f)},enqueueReplaceState:function(a,d,e){a=a._reactInternalFiber;e=void 0===e?null:e;var f=c(a);Pe(a,{expirationTime:f,partialState:d,callback:e,isReplace:!0,isForced:!1,capturedValue:null,next:null});b(a,f)},enqueueForceUpdate:function(a,d){a=a._reactInternalFiber;d=void 0===d?null:d;var e=c(a);Pe(a,{expirationTime:e,partialState:null,callback:d,isReplace:!1,isForced:!0,capturedValue:null,next:null});b(a,e)}};return{adoptClassInstance:h,callGetDerivedStateFromProps:k,\nconstructClassInstance:function(a,b){var c=a.type,d=p(a),e=z(a),f=e?l(a,d):ka;c=new c(b,f);var n=null!==c.state&&void 0!==c.state?c.state:null;h(a,c);a.memoizedState=n;b=k(a,c,b,n);null!==b&&void 0!==b&&(a.memoizedState=A({},a.memoizedState,b));e&&v(a,d,f);return c},mountClassInstance:function(a,b){var c=a.type,d=a.alternate,e=a.stateNode,f=a.pendingProps,n=p(a);e.props=f;e.state=a.memoizedState;e.refs=ka;e.context=l(a,n);\"function\"===typeof c.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\n\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||(c=e.state,\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),c!==e.state&&r.enqueueReplaceState(e,e.state,null),c=a.updateQueue,null!==c&&(e.state=Re(d,a,c,e,f,b)));\"function\"===typeof e.componentDidMount&&(a.effectTag|=4)},resumeMountClassInstance:function(a,b){var c=a.type,n=a.stateNode;n.props=a.memoizedProps;n.state=\na.memoizedState;var h=a.memoizedProps,r=a.pendingProps,z=n.context,q=p(a);q=l(a,q);(c=\"function\"===typeof c.getDerivedStateFromProps||\"function\"===typeof n.getSnapshotBeforeUpdate)||\"function\"!==typeof n.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof n.componentWillReceiveProps||(h!==r||z!==q)&&g(a,n,r,q);z=a.memoizedState;b=null!==a.updateQueue?Re(null,a,a.updateQueue,n,r,b):z;var u=void 0;h!==r&&(u=k(a,n,r,b));if(null!==u&&void 0!==u){b=null===b||void 0===b?u:A({},b,u);var t=a.updateQueue;\nnull!==t&&(t.baseState=A({},t.baseState,u))}if(!(h!==r||z!==b||B()||null!==a.updateQueue&&a.updateQueue.hasForceUpdate))return\"function\"===typeof n.componentDidMount&&(a.effectTag|=4),!1;(h=f(a,h,r,z,b,q))?(c||\"function\"!==typeof n.UNSAFE_componentWillMount&&\"function\"!==typeof n.componentWillMount||(\"function\"===typeof n.componentWillMount&&n.componentWillMount(),\"function\"===typeof n.UNSAFE_componentWillMount&&n.UNSAFE_componentWillMount()),\"function\"===typeof n.componentDidMount&&(a.effectTag|=\n4)):(\"function\"===typeof n.componentDidMount&&(a.effectTag|=4),d(a,r),e(a,b));n.props=r;n.state=b;n.context=q;return h},updateClassInstance:function(a,b,c){var n=b.type,x=b.stateNode;x.props=b.memoizedProps;x.state=b.memoizedState;var h=b.memoizedProps,r=b.pendingProps,q=x.context,u=p(b);u=l(b,u);(n=\"function\"===typeof n.getDerivedStateFromProps||\"function\"===typeof x.getSnapshotBeforeUpdate)||\"function\"!==typeof x.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof x.componentWillReceiveProps||\n(h!==r||q!==u)&&g(b,x,r,u);q=b.memoizedState;c=null!==b.updateQueue?Re(a,b,b.updateQueue,x,r,c):q;var t=void 0;h!==r&&(t=k(b,x,r,c));if(null!==t&&void 0!==t){c=null===c||void 0===c?t:A({},c,t);var y=b.updateQueue;null!==y&&(y.baseState=A({},y.baseState,t))}if(!(h!==r||q!==c||B()||null!==b.updateQueue&&b.updateQueue.hasForceUpdate))return\"function\"!==typeof x.componentDidUpdate||h===a.memoizedProps&&q===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof x.getSnapshotBeforeUpdate||h===a.memoizedProps&&\nq===a.memoizedState||(b.effectTag|=2048),!1;(t=f(b,h,r,q,c,u))?(n||\"function\"!==typeof x.UNSAFE_componentWillUpdate&&\"function\"!==typeof x.componentWillUpdate||(\"function\"===typeof x.componentWillUpdate&&x.componentWillUpdate(r,c,u),\"function\"===typeof x.UNSAFE_componentWillUpdate&&x.UNSAFE_componentWillUpdate(r,c,u)),\"function\"===typeof x.componentDidUpdate&&(b.effectTag|=4),\"function\"===typeof x.getSnapshotBeforeUpdate&&(b.effectTag|=2048)):(\"function\"!==typeof x.componentDidUpdate||h===a.memoizedProps&&\nq===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof x.getSnapshotBeforeUpdate||h===a.memoizedProps&&q===a.memoizedState||(b.effectTag|=2048),d(b,r),e(b,c));x.props=r;x.state=c;x.context=u;return t}}}var Ue=Array.isArray;\nfunction Ve(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;var d=void 0;c&&(2!==c.tag?D(\"110\"):void 0,d=c.stateNode);d?void 0:D(\"147\",a);var e=\"\"+a;if(null!==b&&null!==b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs===ka?d.refs={}:d.refs;null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}\"string\"!==typeof a?D(\"148\"):void 0;c._owner?void 0:D(\"254\",a)}return a}\nfunction We(a,b){\"textarea\"!==a.type&&D(\"31\",\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b,\"\")}\nfunction Xe(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=ze(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=\n2,c):d;b.effectTag=2;return c}function h(b){a&&null===b.alternate&&(b.effectTag=2);return b}function g(a,b,c,d){if(null===b||6!==b.tag)return b=Ce(c,a.mode,d),b[\"return\"]=a,b;b=e(b,c,d);b[\"return\"]=a;return b}function k(a,b,c,d){if(null!==b&&b.type===c.type)return d=e(b,c.props,d),d.ref=Ve(a,b,c),d[\"return\"]=a,d;d=Ae(c,a.mode,d);d.ref=Ve(a,b,c);d[\"return\"]=a;return d}function v(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=\nDe(c,a.mode,d),b[\"return\"]=a,b;b=e(b,c.children||[],d);b[\"return\"]=a;return b}function l(a,b,c,d,f){if(null===b||10!==b.tag)return b=Be(c,a.mode,d,f),b[\"return\"]=a,b;b=e(b,c,d);b[\"return\"]=a;return b}function p(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=Ce(\"\"+b,a.mode,c),b[\"return\"]=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case oc:return c=Ae(b,a.mode,c),c.ref=Ve(a,null,b),c[\"return\"]=a,c;case rc:return b=De(b,a.mode,c),b[\"return\"]=a,b}if(Ue(b)||zc(b))return b=Be(b,\na.mode,c,null),b[\"return\"]=a,b;We(a,b)}return null}function z(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:g(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case oc:return c.key===e?c.type===sc?l(a,b,c.props.children,d,e):k(a,b,c,d):null;case rc:return c.key===e?v(a,b,c,d):null}if(Ue(c)||zc(c))return null!==e?null:l(a,b,c,d,null);We(a,c)}return null}function B(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=a.get(c)||\nnull,g(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case oc:return a=a.get(null===d.key?c:d.key)||null,d.type===sc?l(b,a,d.props.children,e,d.key):k(b,a,d,e);case rc:return a=a.get(null===d.key?c:d.key)||null,v(b,a,d,e)}if(Ue(d)||zc(d))return a=a.get(c)||null,l(b,a,d,e,null);We(b,d)}return null}function r(e,l,g,h){for(var r=null,k=null,q=l,u=l=0,t=null;null!==q&&u<g.length;u++){q.index>u?(t=q,q=null):t=q.sibling;var n=z(e,q,g[u],h);if(null===n){null===q&&(q=t);break}a&&q&&null===\nn.alternate&&b(e,q);l=f(n,l,u);null===k?r=n:k.sibling=n;k=n;q=t}if(u===g.length)return c(e,q),r;if(null===q){for(;u<g.length;u++)if(q=p(e,g[u],h))l=f(q,l,u),null===k?r=q:k.sibling=q,k=q;return r}for(q=d(e,q);u<g.length;u++)if(t=B(q,e,u,g[u],h)){if(a&&null!==t.alternate)q[\"delete\"](null===t.key?u:t.key);l=f(t,l,u);null===k?r=t:k.sibling=t;k=t}a&&q.forEach(function(a){return b(e,a)});return r}function Q(e,l,g,h){var r=zc(g);\"function\"!==typeof r?D(\"150\"):void 0;g=r.call(g);null==g?D(\"151\"):void 0;for(var k=\nr=null,q=l,u=l=0,t=null,n=g.next();null!==q&&!n.done;u++,n=g.next()){q.index>u?(t=q,q=null):t=q.sibling;var H=z(e,q,n.value,h);if(null===H){q||(q=t);break}a&&q&&null===H.alternate&&b(e,q);l=f(H,l,u);null===k?r=H:k.sibling=H;k=H;q=t}if(n.done)return c(e,q),r;if(null===q){for(;!n.done;u++,n=g.next())n=p(e,n.value,h),null!==n&&(l=f(n,l,u),null===k?r=n:k.sibling=n,k=n);return r}for(q=d(e,q);!n.done;u++,n=g.next())if(n=B(q,e,u,n.value,h),null!==n){if(a&&null!==n.alternate)q[\"delete\"](null===n.key?u:n.key);\nl=f(n,l,u);null===k?r=n:k.sibling=n;k=n}a&&q.forEach(function(a){return b(e,a)});return r}return function(a,d,f,l){\"object\"===typeof f&&null!==f&&f.type===sc&&null===f.key&&(f=f.props.children);var g=\"object\"===typeof f&&null!==f;if(g)switch(f.$$typeof){case oc:a:{var k=f.key;for(g=d;null!==g;){if(g.key===k)if(10===g.tag?f.type===sc:g.type===f.type){c(a,g.sibling);d=e(g,f.type===sc?f.props.children:f.props,l);d.ref=Ve(a,g,f);d[\"return\"]=a;a=d;break a}else{c(a,g);break}else b(a,g);g=g.sibling}f.type===\nsc?(d=Be(f.props.children,a.mode,l,f.key),d[\"return\"]=a,a=d):(l=Ae(f,a.mode,l),l.ref=Ve(a,d,f),l[\"return\"]=a,a=l)}return h(a);case rc:a:{for(g=f.key;null!==d;){if(d.key===g)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[],l);d[\"return\"]=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=De(f,a.mode,l);d[\"return\"]=a;a=d}return h(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\"\"+f,null!==d&&\n6===d.tag?(c(a,d.sibling),d=e(d,f,l),d[\"return\"]=a,a=d):(c(a,d),d=Ce(f,a.mode,l),d[\"return\"]=a,a=d),h(a);if(Ue(f))return r(a,d,f,l);if(zc(f))return Q(a,d,f,l);g&&We(a,f);if(\"undefined\"===typeof f)switch(a.tag){case 2:case 1:l=a.type,D(\"152\",l.displayName||l.name||\"Component\")}return c(a,d)}}var Ye=Xe(!0),Ze=Xe(!1);\nfunction $e(a,b,c,d,e,f,h){function g(a,b,c){k(a,b,c,b.expirationTime)}function k(a,b,c,d){b.child=null===a?Ze(b,null,c,d):Ye(b,a.child,c,d)}function v(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function l(a,b,c,d,e,f){v(a,b);if(!c&&!e)return d&&y(b,!1),r(a,b);c=b.stateNode;nc.current=b;var l=e?null:c.render();b.effectTag|=1;e&&(k(a,b,null,f),b.child=null);k(a,b,l,f);b.memoizedState=c.state;b.memoizedProps=c.props;d&&y(b,!0);return b.child}function p(a){var b=a.stateNode;\nb.pendingContext?t(a,b.pendingContext,b.pendingContext!==b.context):b.context&&t(a,b.context,!1);Y(a,b.containerInfo)}function z(a,b,c,d){var e=a.child;for(null!==e&&(e[\"return\"]=a);null!==e;){switch(e.tag){case 12:var f=e.stateNode|0;if(e.type===b&&0!==(f&c)){for(f=e;null!==f;){var l=f.alternate;if(0===f.expirationTime||f.expirationTime>d)f.expirationTime=d,null!==l&&(0===l.expirationTime||l.expirationTime>d)&&(l.expirationTime=d);else if(null!==l&&(0===l.expirationTime||l.expirationTime>d))l.expirationTime=\nd;else break;f=f[\"return\"]}f=null}else f=e.child;break;case 13:f=e.type===a.type?null:e.child;break;default:f=e.child}if(null!==f)f[\"return\"]=e;else for(f=e;null!==f;){if(f===a){f=null;break}e=f.sibling;if(null!==e){f=e;break}f=f[\"return\"]}e=f}}function B(a,b,c){var d=b.type._context,e=b.pendingProps,f=b.memoizedProps;if(!q()&&f===e)return b.stateNode=0,G(b),r(a,b);var l=e.value;b.memoizedProps=e;if(null===f)l=1073741823;else if(f.value===e.value){if(f.children===e.children)return b.stateNode=0,G(b),\nr(a,b);l=0}else{var h=f.value;if(h===l&&(0!==h||1/h===1/l)||h!==h&&l!==l){if(f.children===e.children)return b.stateNode=0,G(b),r(a,b);l=0}else if(l=\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(h,l):1073741823,l|=0,0===l){if(f.children===e.children)return b.stateNode=0,G(b),r(a,b)}else z(b,d,l,c)}b.stateNode=l;G(b);g(a,b,e.children);return b.child}function r(a,b){null!==a&&b.child!==a.child?D(\"153\"):void 0;if(null!==b.child){a=b.child;var c=ze(a,a.pendingProps,a.expirationTime);\nb.child=c;for(c[\"return\"]=b;null!==a.sibling;)a=a.sibling,c=c.sibling=ze(a,a.pendingProps,a.expirationTime),c[\"return\"]=b;c.sibling=null}return b.child}var Q=a.shouldSetTextContent,n=a.shouldDeprioritizeSubtree,x=b.pushHostContext,Y=b.pushHostContainer,G=d.pushProvider,R=c.getMaskedContext,S=c.getUnmaskedContext,q=c.hasContextChanged,u=c.pushContextProvider,t=c.pushTopLevelContextObject,y=c.invalidateContextProvider,H=e.enterHydrationState,Wa=e.resetHydrationState,Cb=e.tryToClaimNextHydratableInstance;\na=Te(c,f,h,function(a,b){a.memoizedProps=b},function(a,b){a.memoizedState=b});var Jc=a.adoptClassInstance,Kc=a.callGetDerivedStateFromProps,Lc=a.constructClassInstance,Db=a.mountClassInstance,Mc=a.resumeMountClassInstance,Eb=a.updateClassInstance;return{beginWork:function(a,b,c){if(0===b.expirationTime||b.expirationTime>c){switch(b.tag){case 3:p(b);break;case 2:u(b);break;case 4:Y(b,b.stateNode.containerInfo);break;case 13:G(b)}return null}switch(b.tag){case 0:null!==a?D(\"155\"):void 0;var d=b.type,\ne=b.pendingProps,f=S(b);f=R(b,f);d=d(e,f);b.effectTag|=1;\"object\"===typeof d&&null!==d&&\"function\"===typeof d.render&&void 0===d.$$typeof?(f=b.type,b.tag=2,b.memoizedState=null!==d.state&&void 0!==d.state?d.state:null,\"function\"===typeof f.getDerivedStateFromProps&&(e=Kc(b,d,e,b.memoizedState),null!==e&&void 0!==e&&(b.memoizedState=A({},b.memoizedState,e))),e=u(b),Jc(b,d),Db(b,c),a=l(a,b,!0,e,!1,c)):(b.tag=1,g(a,b,d),b.memoizedProps=e,a=b.child);return a;case 1:return e=b.type,c=b.pendingProps,q()||\nb.memoizedProps!==c?(d=S(b),d=R(b,d),e=e(c,d),b.effectTag|=1,g(a,b,e),b.memoizedProps=c,a=b.child):a=r(a,b),a;case 2:e=u(b);null===a?null===b.stateNode?(Lc(b,b.pendingProps),Db(b,c),d=!0):d=Mc(b,c):d=Eb(a,b,c);f=!1;var h=b.updateQueue;null!==h&&null!==h.capturedValues&&(f=d=!0);return l(a,b,d,e,f,c);case 3:a:if(p(b),d=b.updateQueue,null!==d){f=b.memoizedState;e=Re(a,b,d,null,null,c);b.memoizedState=e;d=b.updateQueue;if(null!==d&&null!==d.capturedValues)d=null;else if(f===e){Wa();a=r(a,b);break a}else d=\ne.element;f=b.stateNode;(null===a||null===a.child)&&f.hydrate&&H(b)?(b.effectTag|=2,b.child=Ze(b,null,d,c)):(Wa(),g(a,b,d));b.memoizedState=e;a=b.child}else Wa(),a=r(a,b);return a;case 5:a:{x(b);null===a&&Cb(b);e=b.type;h=b.memoizedProps;d=b.pendingProps;f=null!==a?a.memoizedProps:null;if(!q()&&h===d){if(h=b.mode&1&&n(e,d))b.expirationTime=1073741823;if(!h||1073741823!==c){a=r(a,b);break a}}h=d.children;Q(e,d)?h=null:f&&Q(e,f)&&(b.effectTag|=16);v(a,b);1073741823!==c&&b.mode&1&&n(e,d)?(b.expirationTime=\n1073741823,b.memoizedProps=d,a=null):(g(a,b,h),b.memoizedProps=d,a=b.child)}return a;case 6:return null===a&&Cb(b),b.memoizedProps=b.pendingProps,null;case 8:b.tag=7;case 7:return e=b.pendingProps,q()||b.memoizedProps!==e||(e=b.memoizedProps),d=e.children,b.stateNode=null===a?Ze(b,b.stateNode,d,c):Ye(b,a.stateNode,d,c),b.memoizedProps=e,b.stateNode;case 9:return null;case 4:return Y(b,b.stateNode.containerInfo),e=b.pendingProps,q()||b.memoizedProps!==e?(null===a?b.child=Ye(b,null,e,c):g(a,b,e),b.memoizedProps=\ne,a=b.child):a=r(a,b),a;case 14:return c=b.type.render,c=c(b.pendingProps,b.ref),g(a,b,c),b.memoizedProps=c,b.child;case 10:return c=b.pendingProps,q()||b.memoizedProps!==c?(g(a,b,c),b.memoizedProps=c,a=b.child):a=r(a,b),a;case 11:return c=b.pendingProps.children,q()||null!==c&&b.memoizedProps!==c?(g(a,b,c),b.memoizedProps=c,a=b.child):a=r(a,b),a;case 13:return B(a,b,c);case 12:a:{d=b.type;f=b.pendingProps;h=b.memoizedProps;e=d._currentValue;var t=d._changedBits;if(q()||0!==t||h!==f){b.memoizedProps=\nf;var k=f.unstable_observedBits;if(void 0===k||null===k)k=1073741823;b.stateNode=k;if(0!==(t&k))z(b,d,t,c);else if(h===f){a=r(a,b);break a}c=f.children;c=c(e);g(a,b,c);a=b.child}else a=r(a,b)}return a;default:D(\"156\")}}}}\nfunction af(a,b,c,d,e){function f(a){a.effectTag|=4}var h=a.createInstance,g=a.createTextInstance,k=a.appendInitialChild,v=a.finalizeInitialChildren,l=a.prepareUpdate,p=a.persistence,z=b.getRootHostContainer,B=b.popHostContext,r=b.getHostContext,Q=b.popHostContainer,n=c.popContextProvider,x=c.popTopLevelContextObject,Y=d.popProvider,G=e.prepareToHydrateHostInstance,R=e.prepareToHydrateHostTextInstance,S=e.popHydrationState,q=void 0,u=void 0,t=void 0;a.mutation?(q=function(){},u=function(a,b,c){(b.updateQueue=\nc)&&f(b)},t=function(a,b,c,d){c!==d&&f(b)}):p?D(\"235\"):D(\"236\");return{completeWork:function(a,b,c){var d=b.pendingProps;switch(b.tag){case 1:return null;case 2:return n(b),a=b.stateNode,d=b.updateQueue,null!==d&&null!==d.capturedValues&&(b.effectTag&=-65,\"function\"===typeof a.componentDidCatch?b.effectTag|=256:d.capturedValues=null),null;case 3:Q(b);x(b);d=b.stateNode;d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)S(b),b.effectTag&=-3;q(b);a=b.updateQueue;\nnull!==a&&null!==a.capturedValues&&(b.effectTag|=256);return null;case 5:B(b);c=z();var e=b.type;if(null!==a&&null!=b.stateNode){var p=a.memoizedProps,H=b.stateNode,y=r();H=l(H,e,p,d,c,y);u(a,b,H,e,p,d,c,y);a.ref!==b.ref&&(b.effectTag|=128)}else{if(!d)return null===b.stateNode?D(\"166\"):void 0,null;a=r();if(S(b))G(b,c,a)&&f(b);else{p=h(e,d,c,a,b);a:for(y=b.child;null!==y;){if(5===y.tag||6===y.tag)k(p,y.stateNode);else if(4!==y.tag&&null!==y.child){y.child[\"return\"]=y;y=y.child;continue}if(y===b)break;\nfor(;null===y.sibling;){if(null===y[\"return\"]||y[\"return\"]===b)break a;y=y[\"return\"]}y.sibling[\"return\"]=y[\"return\"];y=y.sibling}v(p,e,d,c,a)&&f(b);b.stateNode=p}null!==b.ref&&(b.effectTag|=128)}return null;case 6:if(a&&null!=b.stateNode)t(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d)return null===b.stateNode?D(\"166\"):void 0,null;a=z();c=r();S(b)?R(b)&&f(b):b.stateNode=g(d,a,c,b)}return null;case 7:(d=b.memoizedProps)?void 0:D(\"165\");b.tag=8;e=[];a:for((p=b.stateNode)&&(p[\"return\"]=b);null!==\np;){if(5===p.tag||6===p.tag||4===p.tag)D(\"247\");else if(9===p.tag)e.push(p.pendingProps.value);else if(null!==p.child){p.child[\"return\"]=p;p=p.child;continue}for(;null===p.sibling;){if(null===p[\"return\"]||p[\"return\"]===b)break a;p=p[\"return\"]}p.sibling[\"return\"]=p[\"return\"];p=p.sibling}p=d.handler;d=p(d.props,e);b.child=Ye(b,null!==a?a.child:null,d,c);return b.child;case 8:return b.tag=7,null;case 9:return null;case 14:return null;case 10:return null;case 11:return null;case 4:return Q(b),q(b),null;\ncase 13:return Y(b),null;case 12:return null;case 0:D(\"167\");default:D(\"156\")}}}}\nfunction bf(a,b,c,d,e){var f=a.popHostContainer,h=a.popHostContext,g=b.popContextProvider,k=b.popTopLevelContextObject,v=c.popProvider;return{throwException:function(a,b,c){b.effectTag|=512;b.firstEffect=b.lastEffect=null;b={value:c,source:b,stack:Bc(b)};do{switch(a.tag){case 3:Oe(a);a.updateQueue.capturedValues=[b];a.effectTag|=1024;return;case 2:if(c=a.stateNode,0===(a.effectTag&64)&&null!==c&&\"function\"===typeof c.componentDidCatch&&!e(c)){Oe(a);c=a.updateQueue;var d=c.capturedValues;null===d?\nc.capturedValues=[b]:d.push(b);a.effectTag|=1024;return}}a=a[\"return\"]}while(null!==a)},unwindWork:function(a){switch(a.tag){case 2:g(a);var b=a.effectTag;return b&1024?(a.effectTag=b&-1025|64,a):null;case 3:return f(a),k(a),b=a.effectTag,b&1024?(a.effectTag=b&-1025|64,a):null;case 5:return h(a),null;case 4:return f(a),null;case 13:return v(a),null;default:return null}},unwindInterruptedWork:function(a){switch(a.tag){case 2:g(a);break;case 3:f(a);k(a);break;case 5:h(a);break;case 4:f(a);break;case 13:v(a)}}}}\nfunction cf(a,b){var c=b.source;null===b.stack&&Bc(c);null!==c&&Ac(c);b=b.value;null!==a&&2===a.tag&&Ac(a);try{b&&b.suppressReactErrorLogging||console.error(b)}catch(d){d&&d.suppressReactErrorLogging||console.error(d)}}\nfunction df(a,b,c,d,e){function f(a){var c=a.ref;if(null!==c)if(\"function\"===typeof c)try{c(null)}catch(t){b(a,t)}else c.current=null}function h(a){\"function\"===typeof Je&&Je(a);switch(a.tag){case 2:f(a);var c=a.stateNode;if(\"function\"===typeof c.componentWillUnmount)try{c.props=a.memoizedProps,c.state=a.memoizedState,c.componentWillUnmount()}catch(t){b(a,t)}break;case 5:f(a);break;case 7:g(a.stateNode);break;case 4:p&&v(a)}}function g(a){for(var b=a;;)if(h(b),null===b.child||p&&4===b.tag){if(b===\na)break;for(;null===b.sibling;){if(null===b[\"return\"]||b[\"return\"]===a)return;b=b[\"return\"]}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}else b.child[\"return\"]=b,b=b.child}function k(a){return 5===a.tag||3===a.tag||4===a.tag}function v(a){for(var b=a,c=!1,d=void 0,e=void 0;;){if(!c){c=b[\"return\"];a:for(;;){null===c?D(\"160\"):void 0;switch(c.tag){case 5:d=c.stateNode;e=!1;break a;case 3:d=c.stateNode.containerInfo;e=!0;break a;case 4:d=c.stateNode.containerInfo;e=!0;break a}c=c[\"return\"]}c=!0}if(5===\nb.tag||6===b.tag)g(b),e?S(d,b.stateNode):R(d,b.stateNode);else if(4===b.tag?d=b.stateNode.containerInfo:h(b),null!==b.child){b.child[\"return\"]=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b[\"return\"]||b[\"return\"]===a)return;b=b[\"return\"];4===b.tag&&(c=!1)}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}}var l=a.getPublicInstance,p=a.mutation;a=a.persistence;p||(a?D(\"235\"):D(\"236\"));var z=p.commitMount,B=p.commitUpdate,r=p.resetTextContent,Q=p.commitTextUpdate,n=p.appendChild,\nx=p.appendChildToContainer,Y=p.insertBefore,G=p.insertInContainerBefore,R=p.removeChild,S=p.removeChildFromContainer;return{commitBeforeMutationLifeCycles:function(a,b){switch(b.tag){case 2:if(b.effectTag&2048&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;a.props=b.memoizedProps;a.state=b.memoizedState;b=a.getSnapshotBeforeUpdate(c,d);a.__reactInternalSnapshotBeforeUpdate=b}break;case 3:case 5:case 6:case 4:break;default:D(\"163\")}},commitResetTextContent:function(a){r(a.stateNode)},\ncommitPlacement:function(a){a:{for(var b=a[\"return\"];null!==b;){if(k(b)){var c=b;break a}b=b[\"return\"]}D(\"160\");c=void 0}var d=b=void 0;switch(c.tag){case 5:b=c.stateNode;d=!1;break;case 3:b=c.stateNode.containerInfo;d=!0;break;case 4:b=c.stateNode.containerInfo;d=!0;break;default:D(\"161\")}c.effectTag&16&&(r(b),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c[\"return\"]||k(c[\"return\"])){c=null;break a}c=c[\"return\"]}c.sibling[\"return\"]=c[\"return\"];for(c=c.sibling;5!==c.tag&&6!==\nc.tag;){if(c.effectTag&2)continue b;if(null===c.child||4===c.tag)continue b;else c.child[\"return\"]=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(5===e.tag||6===e.tag)c?d?G(b,e.stateNode,c):Y(b,e.stateNode,c):d?x(b,e.stateNode):n(b,e.stateNode);else if(4!==e.tag&&null!==e.child){e.child[\"return\"]=e;e=e.child;continue}if(e===a)break;for(;null===e.sibling;){if(null===e[\"return\"]||e[\"return\"]===a)return;e=e[\"return\"]}e.sibling[\"return\"]=e[\"return\"];e=e.sibling}},commitDeletion:function(a){v(a);\na[\"return\"]=null;a.child=null;a.alternate&&(a.alternate.child=null,a.alternate[\"return\"]=null)},commitWork:function(a,b){switch(b.tag){case 2:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps;a=null!==a?a.memoizedProps:d;var e=b.type,f=b.updateQueue;b.updateQueue=null;null!==f&&B(c,f,e,a,d,b)}break;case 6:null===b.stateNode?D(\"162\"):void 0;c=b.memoizedProps;Q(b.stateNode,null!==a?a.memoizedProps:c,c);break;case 3:break;default:D(\"163\")}},commitLifeCycles:function(a,b,c){switch(c.tag){case 2:a=\nc.stateNode;if(c.effectTag&4)if(null===b)a.props=c.memoizedProps,a.state=c.memoizedState,a.componentDidMount();else{var d=b.memoizedProps;b=b.memoizedState;a.props=c.memoizedProps;a.state=c.memoizedState;a.componentDidUpdate(d,b,a.__reactInternalSnapshotBeforeUpdate)}c=c.updateQueue;null!==c&&Se(c,a);break;case 3:b=c.updateQueue;if(null!==b){a=null;if(null!==c.child)switch(c.child.tag){case 5:a=l(c.child.stateNode);break;case 2:a=c.child.stateNode}Se(b,a)}break;case 5:a=c.stateNode;null===b&&c.effectTag&\n4&&z(a,c.type,c.memoizedProps,c);break;case 6:break;case 4:break;default:D(\"163\")}},commitErrorLogging:function(a,b){switch(a.tag){case 2:var c=a.type;b=a.stateNode;var d=a.updateQueue;null===d||null===d.capturedValues?D(\"264\"):void 0;var f=d.capturedValues;d.capturedValues=null;\"function\"!==typeof c.getDerivedStateFromCatch&&e(b);b.props=a.memoizedProps;b.state=a.memoizedState;for(c=0;c<f.length;c++){d=f[c];var l=d.value,g=d.stack;cf(a,d);b.componentDidCatch(l,{componentStack:null!==g?g:\"\"})}break;\ncase 3:c=a.updateQueue;null===c||null===c.capturedValues?D(\"264\"):void 0;f=c.capturedValues;c.capturedValues=null;for(c=0;c<f.length;c++)d=f[c],cf(a,d),b(d.value);break;default:D(\"265\")}},commitAttachRef:function(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=l(c);break;default:a=c}\"function\"===typeof b?b(a):b.current=a}},commitDetachRef:function(a){a=a.ref;null!==a&&(\"function\"===typeof a?a(null):a.current=null)}}}var ef={};\nfunction ff(a,b){function c(a){a===ef?D(\"174\"):void 0;return a}var d=a.getChildHostContext,e=a.getRootHostContext;a=b.createCursor;var f=b.push,h=b.pop,g=a(ef),k=a(ef),v=a(ef);return{getHostContext:function(){return c(g.current)},getRootHostContainer:function(){return c(v.current)},popHostContainer:function(a){h(g,a);h(k,a);h(v,a)},popHostContext:function(a){k.current===a&&(h(g,a),h(k,a))},pushHostContainer:function(a,b){f(v,b,a);f(k,a,a);f(g,ef,a);b=e(b);h(g,a);f(g,b,a)},pushHostContext:function(a){var b=\nc(v.current),e=c(g.current);b=d(e,a.type,b);e!==b&&(f(k,a,a),f(g,b,a))}}}\nfunction gf(a){function b(a,b){var c=new xe(5,null,null,0);c.type=\"DELETED\";c.stateNode=b;c[\"return\"]=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function c(a,b){switch(a.tag){case 5:return b=f(b,a.type,a.pendingProps),null!==b?(a.stateNode=b,!0):!1;case 6:return b=h(b,a.pendingProps),null!==b?(a.stateNode=b,!0):!1;default:return!1}}function d(a){for(a=a[\"return\"];null!==a&&5!==a.tag&&3!==a.tag;)a=a[\"return\"];p=a}var e=a.shouldSetTextContent;\na=a.hydration;if(!a)return{enterHydrationState:function(){return!1},resetHydrationState:function(){},tryToClaimNextHydratableInstance:function(){},prepareToHydrateHostInstance:function(){D(\"175\")},prepareToHydrateHostTextInstance:function(){D(\"176\")},popHydrationState:function(){return!1}};var f=a.canHydrateInstance,h=a.canHydrateTextInstance,g=a.getNextHydratableSibling,k=a.getFirstHydratableChild,v=a.hydrateInstance,l=a.hydrateTextInstance,p=null,z=null,B=!1;return{enterHydrationState:function(a){z=\nk(a.stateNode.containerInfo);p=a;return B=!0},resetHydrationState:function(){z=p=null;B=!1},tryToClaimNextHydratableInstance:function(a){if(B){var d=z;if(d){if(!c(a,d)){d=g(d);if(!d||!c(a,d)){a.effectTag|=2;B=!1;p=a;return}b(p,z)}p=a;z=k(d)}else a.effectTag|=2,B=!1,p=a}},prepareToHydrateHostInstance:function(a,b,c){b=v(a.stateNode,a.type,a.memoizedProps,b,c,a);a.updateQueue=b;return null!==b?!0:!1},prepareToHydrateHostTextInstance:function(a){return l(a.stateNode,a.memoizedProps,a)},popHydrationState:function(a){if(a!==\np)return!1;if(!B)return d(a),B=!0,!1;var c=a.type;if(5!==a.tag||\"head\"!==c&&\"body\"!==c&&!e(c,a.memoizedProps))for(c=z;c;)b(a,c),c=g(c);d(a);z=p?g(a.stateNode):null;return!0}}}\nfunction hf(a){function b(a,b,c){a=a.stateNode;a.__reactInternalMemoizedUnmaskedChildContext=b;a.__reactInternalMemoizedMaskedChildContext=c}function c(a){return 2===a.tag&&null!=a.type.childContextTypes}function d(a,b){var c=a.stateNode,d=a.type.childContextTypes;if(\"function\"!==typeof c.getChildContext)return b;c=c.getChildContext();for(var e in c)e in d?void 0:D(\"108\",Ac(a)||\"Unknown\",e);return A({},b,c)}var e=a.createCursor,f=a.push,h=a.pop,g=e(ka),k=e(!1),v=ka;return{getUnmaskedContext:function(a){return c(a)?\nv:g.current},cacheContext:b,getMaskedContext:function(a,c){var d=a.type.contextTypes;if(!d)return ka;var e=a.stateNode;if(e&&e.__reactInternalMemoizedUnmaskedChildContext===c)return e.__reactInternalMemoizedMaskedChildContext;var f={},g;for(g in d)f[g]=c[g];e&&b(a,c,f);return f},hasContextChanged:function(){return k.current},isContextConsumer:function(a){return 2===a.tag&&null!=a.type.contextTypes},isContextProvider:c,popContextProvider:function(a){c(a)&&(h(k,a),h(g,a))},popTopLevelContextObject:function(a){h(k,\na);h(g,a)},pushTopLevelContextObject:function(a,b,c){null!=g.cursor?D(\"168\"):void 0;f(g,b,a);f(k,c,a)},processChildContext:d,pushContextProvider:function(a){if(!c(a))return!1;var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||ka;v=g.current;f(g,b,a);f(k,k.current,a);return!0},invalidateContextProvider:function(a,b){var c=a.stateNode;c?void 0:D(\"169\");if(b){var e=d(a,v);c.__reactInternalMemoizedMergedChildContext=e;h(k,a);h(g,a);f(g,e,a)}else h(k,a);f(k,b,a)},findCurrentUnmaskedContext:function(a){for(2!==\nxd(a)||2!==a.tag?D(\"170\"):void 0;3!==a.tag;){if(c(a))return a.stateNode.__reactInternalMemoizedMergedChildContext;(a=a[\"return\"])?void 0:D(\"171\")}return a.stateNode.context}}}\nfunction jf(a){var b=a.createCursor,c=a.push,d=a.pop,e=b(null),f=b(null),h=b(0);return{pushProvider:function(a){var b=a.type._context;c(h,b._changedBits,a);c(f,b._currentValue,a);c(e,a,a);b._currentValue=a.pendingProps.value;b._changedBits=a.stateNode},popProvider:function(a){var b=h.current,c=f.current;d(e,a);d(f,a);d(h,a);a=a.type._context;a._currentValue=c;a._changedBits=b}}}\nfunction kf(){var a=[],b=-1;return{createCursor:function(a){return{current:a}},isEmpty:function(){return-1===b},pop:function(c){0>b||(c.current=a[b],a[b]=null,b--)},push:function(c,d){b++;a[b]=c.current;c.current=d},checkThatStackIsEmpty:function(){},resetStackAfterFatalErrorInDev:function(){}}}\nfunction lf(a){function b(){if(null!==I)for(var a=I[\"return\"];null!==a;)Lc(a),a=a[\"return\"];Ya=null;Z=0;I=null;Nc=!1}function c(a){return null!==ya&&ya.has(a)}function d(a){for(;;){var b=a.alternate,c=a[\"return\"],d=a.sibling;if(0===(a.effectTag&512)){b=Cb(b,a,Z);var e=a;if(1073741823===Z||1073741823!==e.expirationTime){b:switch(e.tag){case 3:case 2:var f=e.updateQueue;f=null===f?0:f.expirationTime;break b;default:f=0}for(var g=e.child;null!==g;)0!==g.expirationTime&&(0===f||f>g.expirationTime)&&(f=\ng.expirationTime),g=g.sibling;e.expirationTime=f}if(null!==b)return b;null!==c&&0===(c.effectTag&512)&&(null===c.firstEffect&&(c.firstEffect=a.firstEffect),null!==a.lastEffect&&(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a));if(null!==d)return d;if(null!==c)a=c;else{Nc=!0;break}}else{a=Kc(a);if(null!==a)return a.effectTag&=2559,a;null!==c&&(c.firstEffect=c.lastEffect=\nnull,c.effectTag|=512);if(null!==d)return d;if(null!==c)a=c;else break}}return null}function e(a){var b=Wa(a.alternate,a,Z);null===b&&(b=d(a));nc.current=null;return b}function f(a,c,f){ca?D(\"243\"):void 0;ca=!0;if(c!==Z||a!==Ya||null===I)b(),Ya=a,Z=c,I=ze(Ya.current,null,Z),a.pendingCommitExpirationTime=0;var g=!1;do{try{if(f)for(;null!==I&&!S();)I=e(I);else for(;null!==I;)I=e(I)}catch(Oc){if(null===I){g=!0;q(Oc);break}f=I;var h=f[\"return\"];if(null===h){g=!0;q(Oc);break}Jc(h,f,Oc);I=d(f)}break}while(1);\nca=!1;if(g||null!==I)return null;if(Nc)return a.pendingCommitExpirationTime=c,a.current.alternate;D(\"262\")}function h(a,b,c,d){a={value:c,source:a,stack:Bc(a)};Pe(b,{expirationTime:d,partialState:null,callback:null,isReplace:!1,isForced:!1,capturedValue:a,next:null});v(b,d)}function g(a,b){a:{ca&&!Za?D(\"263\"):void 0;for(var d=a[\"return\"];null!==d;){switch(d.tag){case 2:var e=d.stateNode;if(\"function\"===typeof d.type.getDerivedStateFromCatch||\"function\"===typeof e.componentDidCatch&&!c(e)){h(a,d,b,\n1);a=void 0;break a}break;case 3:h(a,d,b,1);a=void 0;break a}d=d[\"return\"]}3===a.tag&&h(a,a,b,1);a=void 0}return a}function k(a){a=0!==ia?ia:ca?Za?1:Z:a.mode&1?za?10*(((l()+15)/10|0)+1):25*(((l()+500)/25|0)+1):1;za&&(0===da||a>da)&&(da=a);return a}function v(a,c){a:{for(;null!==a;){if(0===a.expirationTime||a.expirationTime>c)a.expirationTime=c;null!==a.alternate&&(0===a.alternate.expirationTime||a.alternate.expirationTime>c)&&(a.alternate.expirationTime=c);if(null===a[\"return\"])if(3===a.tag){var d=\na.stateNode;!ca&&0!==Z&&c<Z&&b();ca&&!Za&&Ya===d||B(d,c);Fb>xg&&D(\"185\")}else{c=void 0;break a}a=a[\"return\"]}c=void 0}return c}function l(){ye=Ic()-Pc;return yg=(ye/10|0)+2}function p(a,b,c,d,e){var f=ia;ia=1;try{return a(b,c,d,e)}finally{ia=f}}function z(a){if(0!==Gb){if(a>Gb)return;mg(Qc)}var b=Ic()-Pc;Gb=a;Qc=lg(Q,{timeout:10*(a-2)-b})}function B(a,b){if(null===a.nextScheduledRoot)a.remainingExpirationTime=b,null===K?(la=K=a,a.nextScheduledRoot=a):(K=K.nextScheduledRoot=a,K.nextScheduledRoot=la);\nelse{var c=a.remainingExpirationTime;if(0===c||b<c)a.remainingExpirationTime=b}T||(J?Hb&&(aa=a,P=1,G(a,1,!1)):1===b?n():z(b))}function r(){var a=0,b=null;if(null!==K)for(var c=K,d=la;null!==d;){var e=d.remainingExpirationTime;if(0===e){null===c||null===K?D(\"244\"):void 0;if(d===d.nextScheduledRoot){la=K=d.nextScheduledRoot=null;break}else if(d===la)la=e=d.nextScheduledRoot,K.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===K){K=c;K.nextScheduledRoot=la;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=\nd.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{if(0===a||e<a)a=e,b=d;if(d===K)break;c=d;d=d.nextScheduledRoot}}c=aa;null!==c&&c===b&&1===a?Fb++:Fb=0;aa=b;P=a}function Q(a){x(0,!0,a)}function n(){x(1,!1,null)}function x(a,b,c){$a=c;r();if(b)for(;null!==aa&&0!==P&&(0===a||a>=P)&&(!Ib||l()>=P);)G(aa,P,!Ib),r();else for(;null!==aa&&0!==P&&(0===a||a>=P);)G(aa,P,!1),r();null!==$a&&(Gb=0,Qc=-1);0!==P&&z(P);$a=null;Ib=!1;Y()}function Y(){Fb=0;if(null!==Aa){var a=Aa;Aa=null;for(var b=\n0;b<a.length;b++){var c=a[b];try{c._onComplete()}catch(wg){Ba||(Ba=!0,Jb=wg)}}}if(Ba)throw a=Jb,Jb=null,Ba=!1,a;}function G(a,b,c){T?D(\"245\"):void 0;T=!0;c?(c=a.finishedWork,null!==c?R(a,c,b):(a.finishedWork=null,c=f(a,b,!0),null!==c&&(S()?a.finishedWork=c:R(a,c,b)))):(c=a.finishedWork,null!==c?R(a,c,b):(a.finishedWork=null,c=f(a,b,!1),null!==c&&R(a,c,b)));T=!1}function R(a,b,c){var d=a.firstBatch;if(null!==d&&d._expirationTime<=c&&(null===Aa?Aa=[d]:Aa.push(d),d._defer)){a.finishedWork=b;a.remainingExpirationTime=\n0;return}a.finishedWork=null;Za=ca=!0;c=b.stateNode;c.current===b?D(\"177\"):void 0;d=c.pendingCommitExpirationTime;0===d?D(\"261\"):void 0;c.pendingCommitExpirationTime=0;var e=l();nc.current=null;if(1<b.effectTag)if(null!==b.lastEffect){b.lastEffect.nextEffect=b;var f=b.firstEffect}else f=b;else f=b.firstEffect;zg(c.containerInfo);for(w=f;null!==w;){var h=!1,k=void 0;try{for(;null!==w;)w.effectTag&2048&&Db(w.alternate,w),w=w.nextEffect}catch(ab){h=!0,k=ab}h&&(null===w?D(\"178\"):void 0,g(w,k),null!==\nw&&(w=w.nextEffect))}for(w=f;null!==w;){h=!1;k=void 0;try{for(;null!==w;){var p=w.effectTag;p&16&&Mc(w);if(p&128){var n=w.alternate;null!==n&&kg(n)}switch(p&14){case 2:Eb(w);w.effectTag&=-3;break;case 6:Eb(w);w.effectTag&=-3;we(w.alternate,w);break;case 4:we(w.alternate,w);break;case 8:gg(w)}w=w.nextEffect}}catch(ab){h=!0,k=ab}h&&(null===w?D(\"178\"):void 0,g(w,k),null!==w&&(w=w.nextEffect))}Ag(c.containerInfo);c.current=b;for(w=f;null!==w;){p=!1;n=void 0;try{for(f=c,h=e,k=d;null!==w;){var r=w.effectTag;\nr&36&&hg(f,w.alternate,w,h,k);r&256&&ig(w,q);r&128&&jg(w);var t=w.nextEffect;w.nextEffect=null;w=t}}catch(ab){p=!0,n=ab}p&&(null===w?D(\"178\"):void 0,g(w,n),null!==w&&(w=w.nextEffect))}ca=Za=!1;\"function\"===typeof Ie&&Ie(b.stateNode);b=c.current.expirationTime;0===b&&(ya=null);a.remainingExpirationTime=b}function S(){return null===$a||$a.timeRemaining()>Bg?!1:Ib=!0}function q(a){null===aa?D(\"246\"):void 0;aa.remainingExpirationTime=0;Ba||(Ba=!0,Jb=a)}var u=kf(),t=ff(a,u),y=hf(u);u=jf(u);var H=gf(a),\nWa=$e(a,t,y,u,H,v,k).beginWork,Cb=af(a,t,y,u,H).completeWork;t=bf(t,y,u,v,c);var Jc=t.throwException,Kc=t.unwindWork,Lc=t.unwindInterruptedWork;t=df(a,g,v,k,function(a){null===ya?ya=new Set([a]):ya.add(a)},l);var Db=t.commitBeforeMutationLifeCycles,Mc=t.commitResetTextContent,Eb=t.commitPlacement,gg=t.commitDeletion,we=t.commitWork,hg=t.commitLifeCycles,ig=t.commitErrorLogging,jg=t.commitAttachRef,kg=t.commitDetachRef,Ic=a.now,lg=a.scheduleDeferredCallback,mg=a.cancelDeferredCallback,zg=a.prepareForCommit,\nAg=a.resetAfterCommit,Pc=Ic(),yg=2,ye=Pc,Rc=0,ia=0,ca=!1,I=null,Ya=null,Z=0,w=null,Za=!1,Nc=!1,ya=null,la=null,K=null,Gb=0,Qc=-1,T=!1,aa=null,P=0,da=0,Ib=!1,Ba=!1,Jb=null,$a=null,J=!1,Hb=!1,za=!1,Aa=null,xg=1E3,Fb=0,Bg=1;return{recalculateCurrentTime:l,computeExpirationForFiber:k,scheduleWork:v,requestWork:B,flushRoot:function(a,b){T?D(\"253\"):void 0;aa=a;P=b;G(a,b,!1);n();Y()},batchedUpdates:function(a,b){var c=J;J=!0;try{return a(b)}finally{(J=c)||T||n()}},unbatchedUpdates:function(a,b){if(J&&!Hb){Hb=\n!0;try{return a(b)}finally{Hb=!1}}return a(b)},flushSync:function(a,b){T?D(\"187\"):void 0;var c=J;J=!0;try{return p(a,b)}finally{J=c,n()}},flushControlled:function(a){var b=J;J=!0;try{p(a)}finally{(J=b)||T||x(1,!1,null)}},deferredUpdates:function(a){var b=ia;ia=25*(((l()+500)/25|0)+1);try{return a()}finally{ia=b}},syncUpdates:p,interactiveUpdates:function(a,b,c){if(za)return a(b,c);J||T||0===da||(x(da,!1,null),da=0);var d=za,e=J;J=za=!0;try{return a(b,c)}finally{za=d,(J=e)||T||n()}},flushInteractiveUpdates:function(){T||\n0===da||(x(da,!1,null),da=0)},computeUniqueAsyncExpiration:function(){var a=25*(((l()+500)/25|0)+1);a<=Rc&&(a=Rc+1);return Rc=a},legacyContext:y}}\nfunction mf(a){function b(a,b,c,d,e,h){d=b.current;if(c){c=c._reactInternalFiber;var l=g(c);c=k(c)?v(c,l):l}else c=ka;null===b.context?b.context=c:b.pendingContext=c;b=h;Pe(d,{expirationTime:e,partialState:{element:a},callback:void 0===b?null:b,isReplace:!1,isForced:!1,capturedValue:null,next:null});f(d,e);return e}var c=a.getPublicInstance;a=lf(a);var d=a.recalculateCurrentTime,e=a.computeExpirationForFiber,f=a.scheduleWork,h=a.legacyContext,g=h.findCurrentUnmaskedContext,k=h.isContextProvider,v=\nh.processChildContext;return{createContainer:function(a,b,c){b=new xe(3,null,null,b?3:0);a={current:b,containerInfo:a,pendingChildren:null,pendingCommitExpirationTime:0,finishedWork:null,context:null,pendingContext:null,hydrate:c,remainingExpirationTime:0,firstBatch:null,nextScheduledRoot:null};return b.stateNode=a},updateContainer:function(a,c,f,h){var g=c.current,k=d();g=e(g);return b(a,c,f,k,g,h)},updateContainerAtExpirationTime:function(a,c,e,f,g){var h=d();return b(a,c,e,h,f,g)},flushRoot:a.flushRoot,\nrequestWork:a.requestWork,computeUniqueAsyncExpiration:a.computeUniqueAsyncExpiration,batchedUpdates:a.batchedUpdates,unbatchedUpdates:a.unbatchedUpdates,deferredUpdates:a.deferredUpdates,syncUpdates:a.syncUpdates,interactiveUpdates:a.interactiveUpdates,flushInteractiveUpdates:a.flushInteractiveUpdates,flushControlled:a.flushControlled,flushSync:a.flushSync,getPublicRootInstance:function(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return c(a.child.stateNode);default:return a.child.stateNode}},\nfindHostInstance:function(a){var b=a._reactInternalFiber;void 0===b&&(\"function\"===typeof a.render?D(\"188\"):D(\"268\",Object.keys(a)));a=Bd(b);return null===a?null:a.stateNode},findHostInstanceWithNoPortals:function(a){a=Cd(a);return null===a?null:a.stateNode},injectIntoDevTools:function(a){var b=a.findFiberByHostInstance;return He(A({},a,{findHostInstanceByFiber:function(a){a=Bd(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null}}))}}}\nvar nf=Object.freeze({default:mf}),of=nf&&mf||nf,pf=of[\"default\"]?of[\"default\"]:of;function qf(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:rc,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}var rf=\"object\"===typeof performance&&\"function\"===typeof performance.now,sf=void 0;sf=rf?function(){return performance.now()}:function(){return Date.now()};var tf=void 0,uf=void 0;\nif(m.canUseDOM)if(\"function\"!==typeof requestIdleCallback||\"function\"!==typeof cancelIdleCallback){var vf=null,wf=!1,xf=-1,yf=!1,zf=0,Af=33,Bf=33,Cf=void 0;Cf=rf?{didTimeout:!1,timeRemaining:function(){var a=zf-performance.now();return 0<a?a:0}}:{didTimeout:!1,timeRemaining:function(){var a=zf-Date.now();return 0<a?a:0}};var Df=\"__reactIdleCallback$\"+Math.random().toString(36).slice(2);window.addEventListener(\"message\",function(a){if(a.source===window&&a.data===Df){wf=!1;a=sf();if(0>=zf-a)if(-1!==\nxf&&xf<=a)Cf.didTimeout=!0;else{yf||(yf=!0,requestAnimationFrame(Ef));return}else Cf.didTimeout=!1;xf=-1;a=vf;vf=null;null!==a&&a(Cf)}},!1);var Ef=function(a){yf=!1;var b=a-zf+Bf;b<Bf&&Af<Bf?(8>b&&(b=8),Bf=b<Af?Af:b):Af=b;zf=a+Bf;wf||(wf=!0,window.postMessage(Df,\"*\"))};tf=function(a,b){vf=a;null!=b&&\"number\"===typeof b.timeout&&(xf=sf()+b.timeout);yf||(yf=!0,requestAnimationFrame(Ef));return 0};uf=function(){vf=null;wf=!1;xf=-1}}else tf=window.requestIdleCallback,uf=window.cancelIdleCallback;else tf=\nfunction(a){return setTimeout(function(){a({timeRemaining:function(){return Infinity},didTimeout:!1})})},uf=function(a){clearTimeout(a)};function Ff(a){var b=\"\";ea.Children.forEach(a,function(a){null==a||\"string\"!==typeof a&&\"number\"!==typeof a||(b+=a)});return b}function Gf(a,b){a=A({children:void 0},b);if(b=Ff(b.children))a.children=b;return a}\nfunction Hf(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+c;b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction If(a,b){var c=b.value;a._wrapperState={initialValue:null!=c?c:b.defaultValue,wasMultiple:!!b.multiple}}function Jf(a,b){null!=b.dangerouslySetInnerHTML?D(\"91\"):void 0;return A({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function Kf(a,b){var c=b.value;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?D(\"92\"):void 0,Array.isArray(b)&&(1>=b.length?void 0:D(\"93\"),b=b[0]),c=\"\"+b),null==c&&(c=\"\"));a._wrapperState={initialValue:\"\"+c}}\nfunction Lf(a,b){var c=b.value;null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&(a.defaultValue=c));null!=b.defaultValue&&(a.defaultValue=b.defaultValue)}function Mf(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var Nf={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction Of(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function Pf(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?Of(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar Qf=void 0,Rf=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==Nf.svg||\"innerHTML\"in a)a.innerHTML=b;else{Qf=Qf||document.createElement(\"div\");Qf.innerHTML=\"\\x3csvg\\x3e\"+b+\"\\x3c/svg\\x3e\";for(b=Qf.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction Sf(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar Tf={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,\nstopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Uf=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(Tf).forEach(function(a){Uf.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);Tf[b]=Tf[a]})});\nfunction Vf(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\");var e=c;var f=b[c];e=null==f||\"boolean\"===typeof f||\"\"===f?\"\":d||\"number\"!==typeof f||0===f||Tf.hasOwnProperty(e)&&Tf[e]?(\"\"+f).trim():f+\"px\";\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var Wf=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction Xf(a,b,c){b&&(Wf[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?D(\"137\",a,c()):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?D(\"60\"):void 0,\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML?void 0:D(\"61\")),null!=b.style&&\"object\"!==typeof b.style?D(\"62\",c()):void 0)}\nfunction Yf(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var Zf=C.thatReturns(\"\");\nfunction $f(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=ke(a);b=va[b];for(var d=0;d<b.length;d++){var e=b[d];c.hasOwnProperty(e)&&c[e]||(\"topScroll\"===e?Zd(\"topScroll\",\"scroll\",a):\"topFocus\"===e||\"topBlur\"===e?(Zd(\"topFocus\",\"focus\",a),Zd(\"topBlur\",\"blur\",a),c.topBlur=!0,c.topFocus=!0):\"topCancel\"===e?(ic(\"cancel\",!0)&&Zd(\"topCancel\",\"cancel\",a),c.topCancel=!0):\"topClose\"===e?(ic(\"close\",!0)&&Zd(\"topClose\",\"close\",a),c.topClose=!0):fe.hasOwnProperty(e)&&W(e,fe[e],a),c[e]=!0)}}\nfunction ag(a,b,c,d){c=9===c.nodeType?c:c.ownerDocument;d===Nf.html&&(d=Of(a));d===Nf.html?\"script\"===a?(a=c.createElement(\"div\"),a.innerHTML=\"\\x3cscript\\x3e\\x3c/script\\x3e\",a=a.removeChild(a.firstChild)):a=\"string\"===typeof b.is?c.createElement(a,{is:b.is}):c.createElement(a):a=c.createElementNS(d,a);return a}function bg(a,b){return(9===b.nodeType?b:b.ownerDocument).createTextNode(a)}\nfunction cg(a,b,c,d){var e=Yf(b,c);switch(b){case \"iframe\":case \"object\":W(\"topLoad\",\"load\",a);var f=c;break;case \"video\":case \"audio\":for(f in ge)ge.hasOwnProperty(f)&&W(f,ge[f],a);f=c;break;case \"source\":W(\"topError\",\"error\",a);f=c;break;case \"img\":case \"image\":case \"link\":W(\"topError\",\"error\",a);W(\"topLoad\",\"load\",a);f=c;break;case \"form\":W(\"topReset\",\"reset\",a);W(\"topSubmit\",\"submit\",a);f=c;break;case \"details\":W(\"topToggle\",\"toggle\",a);f=c;break;case \"input\":Wc(a,c);f=Vc(a,c);W(\"topInvalid\",\n\"invalid\",a);$f(d,\"onChange\");break;case \"option\":f=Gf(a,c);break;case \"select\":If(a,c);f=A({},c,{value:void 0});W(\"topInvalid\",\"invalid\",a);$f(d,\"onChange\");break;case \"textarea\":Kf(a,c);f=Jf(a,c);W(\"topInvalid\",\"invalid\",a);$f(d,\"onChange\");break;default:f=c}Xf(b,f,Zf);var h=f,g;for(g in h)if(h.hasOwnProperty(g)){var k=h[g];\"style\"===g?Vf(a,k,Zf):\"dangerouslySetInnerHTML\"===g?(k=k?k.__html:void 0,null!=k&&Rf(a,k)):\"children\"===g?\"string\"===typeof k?(\"textarea\"!==b||\"\"!==k)&&Sf(a,k):\"number\"===typeof k&&\nSf(a,\"\"+k):\"suppressContentEditableWarning\"!==g&&\"suppressHydrationWarning\"!==g&&\"autoFocus\"!==g&&(ua.hasOwnProperty(g)?null!=k&&$f(d,g):null!=k&&Uc(a,g,k,e))}switch(b){case \"input\":lc(a);ad(a,c);break;case \"textarea\":lc(a);Mf(a,c);break;case \"option\":null!=c.value&&a.setAttribute(\"value\",c.value);break;case \"select\":a.multiple=!!c.multiple;b=c.value;null!=b?Hf(a,!!c.multiple,b,!1):null!=c.defaultValue&&Hf(a,!!c.multiple,c.defaultValue,!0);break;default:\"function\"===typeof f.onClick&&(a.onclick=C)}}\nfunction dg(a,b,c,d,e){var f=null;switch(b){case \"input\":c=Vc(a,c);d=Vc(a,d);f=[];break;case \"option\":c=Gf(a,c);d=Gf(a,d);f=[];break;case \"select\":c=A({},c,{value:void 0});d=A({},d,{value:void 0});f=[];break;case \"textarea\":c=Jf(a,c);d=Jf(a,d);f=[];break;default:\"function\"!==typeof c.onClick&&\"function\"===typeof d.onClick&&(a.onclick=C)}Xf(b,d,Zf);b=a=void 0;var h=null;for(a in c)if(!d.hasOwnProperty(a)&&c.hasOwnProperty(a)&&null!=c[a])if(\"style\"===a){var g=c[a];for(b in g)g.hasOwnProperty(b)&&(h||\n(h={}),h[b]=\"\")}else\"dangerouslySetInnerHTML\"!==a&&\"children\"!==a&&\"suppressContentEditableWarning\"!==a&&\"suppressHydrationWarning\"!==a&&\"autoFocus\"!==a&&(ua.hasOwnProperty(a)?f||(f=[]):(f=f||[]).push(a,null));for(a in d){var k=d[a];g=null!=c?c[a]:void 0;if(d.hasOwnProperty(a)&&k!==g&&(null!=k||null!=g))if(\"style\"===a)if(g){for(b in g)!g.hasOwnProperty(b)||k&&k.hasOwnProperty(b)||(h||(h={}),h[b]=\"\");for(b in k)k.hasOwnProperty(b)&&g[b]!==k[b]&&(h||(h={}),h[b]=k[b])}else h||(f||(f=[]),f.push(a,h)),\nh=k;else\"dangerouslySetInnerHTML\"===a?(k=k?k.__html:void 0,g=g?g.__html:void 0,null!=k&&g!==k&&(f=f||[]).push(a,\"\"+k)):\"children\"===a?g===k||\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(a,\"\"+k):\"suppressContentEditableWarning\"!==a&&\"suppressHydrationWarning\"!==a&&(ua.hasOwnProperty(a)?(null!=k&&$f(e,a),f||g===k||(f=[])):(f=f||[]).push(a,k))}h&&(f=f||[]).push(\"style\",h);return f}\nfunction eg(a,b,c,d,e){\"input\"===c&&\"radio\"===e.type&&null!=e.name&&Yc(a,e);Yf(c,d);d=Yf(c,e);for(var f=0;f<b.length;f+=2){var h=b[f],g=b[f+1];\"style\"===h?Vf(a,g,Zf):\"dangerouslySetInnerHTML\"===h?Rf(a,g):\"children\"===h?Sf(a,g):Uc(a,h,g,d)}switch(c){case \"input\":Zc(a,e);break;case \"textarea\":Lf(a,e);break;case \"select\":a._wrapperState.initialValue=void 0,b=a._wrapperState.wasMultiple,a._wrapperState.wasMultiple=!!e.multiple,c=e.value,null!=c?Hf(a,!!e.multiple,c,!1):b!==!!e.multiple&&(null!=e.defaultValue?\nHf(a,!!e.multiple,e.defaultValue,!0):Hf(a,!!e.multiple,e.multiple?[]:\"\",!1))}}\nfunction fg(a,b,c,d,e){switch(b){case \"iframe\":case \"object\":W(\"topLoad\",\"load\",a);break;case \"video\":case \"audio\":for(var f in ge)ge.hasOwnProperty(f)&&W(f,ge[f],a);break;case \"source\":W(\"topError\",\"error\",a);break;case \"img\":case \"image\":case \"link\":W(\"topError\",\"error\",a);W(\"topLoad\",\"load\",a);break;case \"form\":W(\"topReset\",\"reset\",a);W(\"topSubmit\",\"submit\",a);break;case \"details\":W(\"topToggle\",\"toggle\",a);break;case \"input\":Wc(a,c);W(\"topInvalid\",\"invalid\",a);$f(e,\"onChange\");break;case \"select\":If(a,\nc);W(\"topInvalid\",\"invalid\",a);$f(e,\"onChange\");break;case \"textarea\":Kf(a,c),W(\"topInvalid\",\"invalid\",a),$f(e,\"onChange\")}Xf(b,c,Zf);d=null;for(var h in c)c.hasOwnProperty(h)&&(f=c[h],\"children\"===h?\"string\"===typeof f?a.textContent!==f&&(d=[\"children\",f]):\"number\"===typeof f&&a.textContent!==\"\"+f&&(d=[\"children\",\"\"+f]):ua.hasOwnProperty(h)&&null!=f&&$f(e,h));switch(b){case \"input\":lc(a);ad(a,c);break;case \"textarea\":lc(a);Mf(a,c);break;case \"select\":case \"option\":break;default:\"function\"===typeof c.onClick&&\n(a.onclick=C)}return d}function ng(a,b){return a.nodeValue!==b}\nvar og=Object.freeze({createElement:ag,createTextNode:bg,setInitialProperties:cg,diffProperties:dg,updateProperties:eg,diffHydratedProperties:fg,diffHydratedText:ng,warnForUnmatchedText:function(){},warnForDeletedHydratableElement:function(){},warnForDeletedHydratableText:function(){},warnForInsertedHydratedElement:function(){},warnForInsertedHydratedText:function(){},restoreControlledState:function(a,b,c){switch(b){case \"input\":Zc(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=\nc.parentNode;c=c.querySelectorAll(\"input[name\\x3d\"+JSON.stringify(\"\"+b)+'][type\\x3d\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Xa(d);e?void 0:D(\"90\");mc(d);Zc(d,e)}}}break;case \"textarea\":Lf(a,c);break;case \"select\":b=c.value,null!=b&&Hf(a,!!c.multiple,b,!1)}}});Tb.injectFiberControlledHostComponent(og);var pg=null,qg=null;\nfunction rg(a){this._expirationTime=X.computeUniqueAsyncExpiration();this._root=a;this._callbacks=this._next=null;this._hasChildren=this._didComplete=!1;this._children=null;this._defer=!0}rg.prototype.render=function(a){this._defer?void 0:D(\"250\");this._hasChildren=!0;this._children=a;var b=this._root._internalRoot,c=this._expirationTime,d=new sg;X.updateContainerAtExpirationTime(a,b,null,c,d._onCommit);return d};\nrg.prototype.then=function(a){if(this._didComplete)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\nrg.prototype.commit=function(){var a=this._root._internalRoot,b=a.firstBatch;this._defer&&null!==b?void 0:D(\"251\");if(this._hasChildren){var c=this._expirationTime;if(b!==this){this._hasChildren&&(c=this._expirationTime=b._expirationTime,this.render(this._children));for(var d=null,e=b;e!==this;)d=e,e=e._next;null===d?D(\"251\"):void 0;d._next=e._next;this._next=b;a.firstBatch=this}this._defer=!1;X.flushRoot(a,c);b=this._next;this._next=null;b=a.firstBatch=b;null!==b&&b._hasChildren&&b.render(b._children)}else this._next=\nnull,this._defer=!1};rg.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++)(0,a[b])()}};function sg(){this._callbacks=null;this._didCommit=!1;this._onCommit=this._onCommit.bind(this)}sg.prototype.then=function(a){if(this._didCommit)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\nsg.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++){var c=a[b];\"function\"!==typeof c?D(\"191\",c):void 0;c()}}};function tg(a,b,c){this._internalRoot=X.createContainer(a,b,c)}tg.prototype.render=function(a,b){var c=this._internalRoot,d=new sg;b=void 0===b?null:b;null!==b&&d.then(b);X.updateContainer(a,c,null,d._onCommit);return d};\ntg.prototype.unmount=function(a){var b=this._internalRoot,c=new sg;a=void 0===a?null:a;null!==a&&c.then(a);X.updateContainer(null,b,null,c._onCommit);return c};tg.prototype.legacy_renderSubtreeIntoContainer=function(a,b,c){var d=this._internalRoot,e=new sg;c=void 0===c?null:c;null!==c&&e.then(c);X.updateContainer(b,d,a,e._onCommit);return e};\ntg.prototype.createBatch=function(){var a=new rg(this),b=a._expirationTime,c=this._internalRoot,d=c.firstBatch;if(null===d)c.firstBatch=a,a._next=null;else{for(c=null;null!==d&&d._expirationTime<=b;)c=d,d=d._next;a._next=d;null!==c&&(c._next=a)}return a};function ug(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}\nfunction vg(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}\nvar X=pf({getRootHostContext:function(a){var b=a.nodeType;switch(b){case 9:case 11:a=(a=a.documentElement)?a.namespaceURI:Pf(null,\"\");break;default:b=8===b?a.parentNode:a,a=b.namespaceURI||null,b=b.tagName,a=Pf(a,b)}return a},getChildHostContext:function(a,b){return Pf(a,b)},getPublicInstance:function(a){return a},prepareForCommit:function(){pg=Vd;var a=fa();if(ne(a)){if(\"selectionStart\"in a)var b={start:a.selectionStart,end:a.selectionEnd};else a:{var c=window.getSelection&&window.getSelection();\nif(c&&0!==c.rangeCount){b=c.anchorNode;var d=c.anchorOffset,e=c.focusNode;c=c.focusOffset;try{b.nodeType,e.nodeType}catch(B){b=null;break a}var f=0,h=-1,g=-1,k=0,v=0,l=a,p=null;b:for(;;){for(var z;;){l!==b||0!==d&&3!==l.nodeType||(h=f+d);l!==e||0!==c&&3!==l.nodeType||(g=f+c);3===l.nodeType&&(f+=l.nodeValue.length);if(null===(z=l.firstChild))break;p=l;l=z}for(;;){if(l===a)break b;p===b&&++k===d&&(h=f);p===e&&++v===c&&(g=f);if(null!==(z=l.nextSibling))break;l=p;p=l.parentNode}l=z}b=-1===h||-1===g?null:\n{start:h,end:g}}else b=null}b=b||{start:0,end:0}}else b=null;qg={focusedElem:a,selectionRange:b};Wd(!1)},resetAfterCommit:function(){var a=qg,b=fa(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&ja(document.documentElement,c)){if(ne(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(window.getSelection){b=window.getSelection();var e=c[mb()].length;a=Math.min(d.start,e);d=void 0===d.end?a:Math.min(d.end,e);!b.extend&&a>\nd&&(e=d,d=a,a=e);e=me(c,a);var f=me(c,d);if(e&&f&&(1!==b.rangeCount||b.anchorNode!==e.node||b.anchorOffset!==e.offset||b.focusNode!==f.node||b.focusOffset!==f.offset)){var h=document.createRange();h.setStart(e.node,e.offset);b.removeAllRanges();a>d?(b.addRange(h),b.extend(f.node,f.offset)):(h.setEnd(f.node,f.offset),b.addRange(h))}}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,\na.element.scrollTop=a.top}qg=null;Wd(pg);pg=null},createInstance:function(a,b,c,d,e){a=ag(a,b,c,d);a[F]=e;a[Ta]=b;return a},appendInitialChild:function(a,b){a.appendChild(b)},finalizeInitialChildren:function(a,b,c,d){cg(a,b,c,d);return vg(b,c)},prepareUpdate:function(a,b,c,d,e){return dg(a,b,c,d,e)},shouldSetTextContent:function(a,b){return\"textarea\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&\"string\"===\ntypeof b.dangerouslySetInnerHTML.__html},shouldDeprioritizeSubtree:function(a,b){return!!b.hidden},createTextInstance:function(a,b,c,d){a=bg(a,b);a[F]=d;return a},now:sf,mutation:{commitMount:function(a,b,c){vg(b,c)&&a.focus()},commitUpdate:function(a,b,c,d,e){a[Ta]=e;eg(a,b,c,d,e)},resetTextContent:function(a){Sf(a,\"\")},commitTextUpdate:function(a,b,c){a.nodeValue=c},appendChild:function(a,b){a.appendChild(b)},appendChildToContainer:function(a,b){8===a.nodeType?a.parentNode.insertBefore(b,a):a.appendChild(b)},\ninsertBefore:function(a,b,c){a.insertBefore(b,c)},insertInContainerBefore:function(a,b,c){8===a.nodeType?a.parentNode.insertBefore(b,c):a.insertBefore(b,c)},removeChild:function(a,b){a.removeChild(b)},removeChildFromContainer:function(a,b){8===a.nodeType?a.parentNode.removeChild(b):a.removeChild(b)}},hydration:{canHydrateInstance:function(a,b){return 1!==a.nodeType||b.toLowerCase()!==a.nodeName.toLowerCase()?null:a},canHydrateTextInstance:function(a,b){return\"\"===b||3!==a.nodeType?null:a},getNextHydratableSibling:function(a){for(a=\na.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a},getFirstHydratableChild:function(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a},hydrateInstance:function(a,b,c,d,e,f){a[F]=f;a[Ta]=c;return fg(a,b,c,e,d)},hydrateTextInstance:function(a,b,c){a[F]=c;return ng(a,b)},didNotMatchHydratedContainerTextInstance:function(){},didNotMatchHydratedTextInstance:function(){},didNotHydrateContainerInstance:function(){},didNotHydrateInstance:function(){},\ndidNotFindHydratableContainerInstance:function(){},didNotFindHydratableContainerTextInstance:function(){},didNotFindHydratableInstance:function(){},didNotFindHydratableTextInstance:function(){}},scheduleDeferredCallback:tf,cancelDeferredCallback:uf}),Cg=X;ac=Cg.batchedUpdates;bc=Cg.interactiveUpdates;cc=Cg.flushInteractiveUpdates;\nfunction Dg(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new tg(a,!1,b)}\nfunction Eg(a,b,c,d,e){ug(c)?void 0:D(\"200\");var f=c._reactRootContainer;if(f){if(\"function\"===typeof e){var h=e;e=function(){var a=X.getPublicRootInstance(f._internalRoot);h.call(a)}}null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)}else{f=c._reactRootContainer=Dg(c,d);if(\"function\"===typeof e){var g=e;e=function(){var a=X.getPublicRootInstance(f._internalRoot);g.call(a)}}X.unbatchedUpdates(function(){null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)})}return X.getPublicRootInstance(f._internalRoot)}\nfunction Fg(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;ug(b)?void 0:D(\"200\");return qf(a,b,null,c)}\nvar Gg={createPortal:Fg,findDOMNode:function(a){return null==a?null:1===a.nodeType?a:X.findHostInstance(a)},hydrate:function(a,b,c){return Eg(null,a,b,!0,c)},render:function(a,b,c){return Eg(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){null==a||void 0===a._reactInternalFiber?D(\"38\"):void 0;return Eg(a,b,c,!1,d)},unmountComponentAtNode:function(a){ug(a)?void 0:D(\"40\");return a._reactRootContainer?(X.unbatchedUpdates(function(){Eg(null,null,a,!1,function(){a._reactRootContainer=\nnull})}),!0):!1},unstable_createPortal:function(){return Fg.apply(void 0,arguments)},unstable_batchedUpdates:X.batchedUpdates,unstable_deferredUpdates:X.deferredUpdates,flushSync:X.flushSync,unstable_flushControlled:X.flushControlled,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{EventPluginHub:Ra,EventPluginRegistry:Ca,EventPropagators:kb,ReactControlledComponent:$b,ReactDOMComponentTree:bb,ReactDOMEventListener:$d},unstable_createRoot:function(a,b){return new tg(a,!0,null!=b&&!0===b.hydrate)}};\nX.injectIntoDevTools({findFiberByHostInstance:Ua,bundleType:0,version:\"16.3.2\",rendererPackageName:\"react-dom\"});var Hg=Object.freeze({default:Gg}),Ig=Hg&&Gg||Hg;module.exports=Ig[\"default\"]?Ig[\"default\"]:Ig;\n\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\n/**\n * Simple, lightweight module assisting with the detection and context of\n * Worker. Helps avoid circular dependencies and allows code to reason about\n * whether or not they are in a Worker, even if they never include the main\n * `ReactWorker` dependency.\n */\nvar ExecutionEnvironment = {\n\n  canUseDOM: canUseDOM,\n\n  canUseWorkers: typeof Worker !== 'undefined',\n\n  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),\n\n  canUseViewport: canUseDOM && !!window.screen,\n\n  isInWorker: !canUseDOM // For now, this is true - might change in the future.\n\n};\n\nmodule.exports = ExecutionEnvironment;\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n/* eslint-disable fb-www/typeof-undefined */\n\n/**\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\n * not safe to call document.activeElement if there is nothing focused.\n *\n * The activeElement will be null only if the document or document body is not\n * yet defined.\n *\n * @param {?DOMDocument} doc Defaults to current document.\n * @return {?DOMElement}\n */\nfunction getActiveElement(doc) /*?DOMElement*/{\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n  if (typeof doc === 'undefined') {\n    return null;\n  }\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\n\nmodule.exports = getActiveElement;\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n * \n */\n\n/*eslint-disable no-self-compare */\n\n\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  // SameValue algorithm\n  if (x === y) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    // Added the nonzero y check to make Flow happy, but it is redundant\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y;\n  }\n}\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nfunction shallowEqual(objA, objB) {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  for (var i = 0; i < keysA.length; i++) {\n    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = shallowEqual;\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nvar isTextNode = __webpack_require__(67);\n\n/*eslint-disable no-bitwise */\n\n/**\n * Checks if a given DOM node contains or is another DOM node.\n */\nfunction containsNode(outerNode, innerNode) {\n  if (!outerNode || !innerNode) {\n    return false;\n  } else if (outerNode === innerNode) {\n    return true;\n  } else if (isTextNode(outerNode)) {\n    return false;\n  } else if (isTextNode(innerNode)) {\n    return containsNode(outerNode, innerNode.parentNode);\n  } else if ('contains' in outerNode) {\n    return outerNode.contains(innerNode);\n  } else if (outerNode.compareDocumentPosition) {\n    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = containsNode;\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\nvar isNode = __webpack_require__(68);\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM text node.\n */\nfunction isTextNode(object) {\n  return isNode(object) && object.nodeType == 3;\n}\n\nmodule.exports = isTextNode;\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM node.\n */\nfunction isNode(object) {\n  var doc = object ? object.ownerDocument || object : document;\n  var defaultView = doc.defaultView || window;\n  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));\n}\n\nmodule.exports = isNode;\n\n/***/ }),\n/* 69 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__BrowserRouter__ = __webpack_require__(70);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__BrowserRouter__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__HashRouter__ = __webpack_require__(74);\n/* unused harmony reexport HashRouter */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Link__ = __webpack_require__(29);\n/* unused harmony reexport Link */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__MemoryRouter__ = __webpack_require__(76);\n/* unused harmony reexport MemoryRouter */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__NavLink__ = __webpack_require__(79);\n/* unused harmony reexport NavLink */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__Prompt__ = __webpack_require__(82);\n/* unused harmony reexport Prompt */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__Redirect__ = __webpack_require__(84);\n/* unused harmony reexport Redirect */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__Route__ = __webpack_require__(30);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_7__Route__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__Router__ = __webpack_require__(17);\n/* unused harmony reexport Router */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__StaticRouter__ = __webpack_require__(90);\n/* unused harmony reexport StaticRouter */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__Switch__ = __webpack_require__(92);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_10__Switch__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__matchPath__ = __webpack_require__(94);\n/* unused harmony reexport matchPath */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__withRouter__ = __webpack_require__(95);\n/* unused harmony reexport withRouter */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/***/ }),\n/* 70 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_warning__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_warning___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_warning__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_prop_types__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_history_createBrowserHistory__ = __webpack_require__(73);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_history_createBrowserHistory___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_history_createBrowserHistory__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Router__ = __webpack_require__(17);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\n\n\n/**\n * The public API for a <Router> that uses HTML5 history.\n */\n\nvar BrowserRouter = function (_React$Component) {\n  _inherits(BrowserRouter, _React$Component);\n\n  function BrowserRouter() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, BrowserRouter);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.history = __WEBPACK_IMPORTED_MODULE_3_history_createBrowserHistory___default()(_this.props), _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  BrowserRouter.prototype.componentWillMount = function componentWillMount() {\n    __WEBPACK_IMPORTED_MODULE_0_warning___default()(!this.props.history, '<BrowserRouter> ignores the history prop. To use a custom history, ' + 'use `import { Router }` instead of `import { BrowserRouter as Router }`.');\n  };\n\n  BrowserRouter.prototype.render = function render() {\n    return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__Router__[\"a\" /* default */], { history: this.history, children: this.props.children });\n  };\n\n  return BrowserRouter;\n}(__WEBPACK_IMPORTED_MODULE_1_react___default.a.Component);\n\nBrowserRouter.propTypes = {\n  basename: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string,\n  forceRefresh: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool,\n  getUserConfirmation: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func,\n  keyLength: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.number,\n  children: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.node\n};\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (BrowserRouter);\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar emptyFunction = __webpack_require__(14);\nvar invariant = __webpack_require__(13);\nvar ReactPropTypesSecret = __webpack_require__(72);\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    invariant(\n      false,\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _warning = __webpack_require__(2);\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _invariant = __webpack_require__(3);\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _LocationUtils = __webpack_require__(15);\n\nvar _PathUtils = __webpack_require__(5);\n\nvar _createTransitionManager = __webpack_require__(16);\n\nvar _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);\n\nvar _DOMUtils = __webpack_require__(28);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar PopStateEvent = 'popstate';\nvar HashChangeEvent = 'hashchange';\n\nvar getHistoryState = function getHistoryState() {\n  try {\n    return window.history.state || {};\n  } catch (e) {\n    // IE 11 sometimes throws when accessing window.history.state\n    // See https://github.com/ReactTraining/history/pull/289\n    return {};\n  }\n};\n\n/**\n * Creates a history object that uses the HTML5 history API including\n * pushState, replaceState, and the popstate event.\n */\nvar createBrowserHistory = function createBrowserHistory() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  (0, _invariant2.default)(_DOMUtils.canUseDOM, 'Browser history needs a DOM');\n\n  var globalHistory = window.history;\n  var canUseHistory = (0, _DOMUtils.supportsHistory)();\n  var needsHashChangeListener = !(0, _DOMUtils.supportsPopStateOnHashChange)();\n\n  var _props$forceRefresh = props.forceRefresh,\n      forceRefresh = _props$forceRefresh === undefined ? false : _props$forceRefresh,\n      _props$getUserConfirm = props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === undefined ? _DOMUtils.getConfirmation : _props$getUserConfirm,\n      _props$keyLength = props.keyLength,\n      keyLength = _props$keyLength === undefined ? 6 : _props$keyLength;\n\n  var basename = props.basename ? (0, _PathUtils.stripTrailingSlash)((0, _PathUtils.addLeadingSlash)(props.basename)) : '';\n\n  var getDOMLocation = function getDOMLocation(historyState) {\n    var _ref = historyState || {},\n        key = _ref.key,\n        state = _ref.state;\n\n    var _window$location = window.location,\n        pathname = _window$location.pathname,\n        search = _window$location.search,\n        hash = _window$location.hash;\n\n\n    var path = pathname + search + hash;\n\n    (0, _warning2.default)(!basename || (0, _PathUtils.hasBasename)(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".');\n\n    if (basename) path = (0, _PathUtils.stripBasename)(path, basename);\n\n    return (0, _LocationUtils.createLocation)(path, state, key);\n  };\n\n  var createKey = function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  };\n\n  var transitionManager = (0, _createTransitionManager2.default)();\n\n  var setState = function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n\n    transitionManager.notifyListeners(history.location, history.action);\n  };\n\n  var handlePopState = function handlePopState(event) {\n    // Ignore extraneous popstate events in WebKit.\n    if ((0, _DOMUtils.isExtraneousPopstateEvent)(event)) return;\n\n    handlePop(getDOMLocation(event.state));\n  };\n\n  var handleHashChange = function handleHashChange() {\n    handlePop(getDOMLocation(getHistoryState()));\n  };\n\n  var forceNextPop = false;\n\n  var handlePop = function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({ action: action, location: location });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  };\n\n  var revertPop = function revertPop(fromLocation) {\n    var toLocation = history.location;\n\n    // TODO: We could probably make this more reliable by\n    // keeping a list of keys we've seen in sessionStorage.\n    // Instead, we just default to 0 for keys we don't know.\n\n    var toIndex = allKeys.indexOf(toLocation.key);\n\n    if (toIndex === -1) toIndex = 0;\n\n    var fromIndex = allKeys.indexOf(fromLocation.key);\n\n    if (fromIndex === -1) fromIndex = 0;\n\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  };\n\n  var initialLocation = getDOMLocation(getHistoryState());\n  var allKeys = [initialLocation.key];\n\n  // Public interface\n\n  var createHref = function createHref(location) {\n    return basename + (0, _PathUtils.createPath)(location);\n  };\n\n  var push = function push(path, state) {\n    (0, _warning2.default)(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored');\n\n    var action = 'PUSH';\n    var location = (0, _LocationUtils.createLocation)(path, state, createKey(), history.location);\n\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n\n      if (canUseHistory) {\n        globalHistory.pushState({ key: key, state: state }, null, href);\n\n        if (forceRefresh) {\n          window.location.href = href;\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n          var nextKeys = allKeys.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);\n\n          nextKeys.push(location.key);\n          allKeys = nextKeys;\n\n          setState({ action: action, location: location });\n        }\n      } else {\n        (0, _warning2.default)(state === undefined, 'Browser history cannot push state in browsers that do not support HTML5 history');\n\n        window.location.href = href;\n      }\n    });\n  };\n\n  var replace = function replace(path, state) {\n    (0, _warning2.default)(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored');\n\n    var action = 'REPLACE';\n    var location = (0, _LocationUtils.createLocation)(path, state, createKey(), history.location);\n\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n\n      if (canUseHistory) {\n        globalHistory.replaceState({ key: key, state: state }, null, href);\n\n        if (forceRefresh) {\n          window.location.replace(href);\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n\n          if (prevIndex !== -1) allKeys[prevIndex] = location.key;\n\n          setState({ action: action, location: location });\n        }\n      } else {\n        (0, _warning2.default)(state === undefined, 'Browser history cannot replace state in browsers that do not support HTML5 history');\n\n        window.location.replace(href);\n      }\n    });\n  };\n\n  var go = function go(n) {\n    globalHistory.go(n);\n  };\n\n  var goBack = function goBack() {\n    return go(-1);\n  };\n\n  var goForward = function goForward() {\n    return go(1);\n  };\n\n  var listenerCount = 0;\n\n  var checkDOMListeners = function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1) {\n      (0, _DOMUtils.addEventListener)(window, PopStateEvent, handlePopState);\n\n      if (needsHashChangeListener) (0, _DOMUtils.addEventListener)(window, HashChangeEvent, handleHashChange);\n    } else if (listenerCount === 0) {\n      (0, _DOMUtils.removeEventListener)(window, PopStateEvent, handlePopState);\n\n      if (needsHashChangeListener) (0, _DOMUtils.removeEventListener)(window, HashChangeEvent, handleHashChange);\n    }\n  };\n\n  var isBlocked = false;\n\n  var block = function block() {\n    var prompt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  };\n\n  var listen = function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  };\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n\n  return history;\n};\n\nexports.default = createBrowserHistory;\n\n/***/ }),\n/* 74 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_warning__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_warning___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_warning__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_prop_types__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_history_createHashHistory__ = __webpack_require__(75);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_history_createHashHistory___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_history_createHashHistory__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Router__ = __webpack_require__(17);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\n\n\n/**\n * The public API for a <Router> that uses window.location.hash.\n */\n\nvar HashRouter = function (_React$Component) {\n  _inherits(HashRouter, _React$Component);\n\n  function HashRouter() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, HashRouter);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.history = __WEBPACK_IMPORTED_MODULE_3_history_createHashHistory___default()(_this.props), _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  HashRouter.prototype.componentWillMount = function componentWillMount() {\n    __WEBPACK_IMPORTED_MODULE_0_warning___default()(!this.props.history, '<HashRouter> ignores the history prop. To use a custom history, ' + 'use `import { Router }` instead of `import { HashRouter as Router }`.');\n  };\n\n  HashRouter.prototype.render = function render() {\n    return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__Router__[\"a\" /* default */], { history: this.history, children: this.props.children });\n  };\n\n  return HashRouter;\n}(__WEBPACK_IMPORTED_MODULE_1_react___default.a.Component);\n\nHashRouter.propTypes = {\n  basename: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string,\n  getUserConfirmation: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func,\n  hashType: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.oneOf(['hashbang', 'noslash', 'slash']),\n  children: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.node\n};\n\n\n/* unused harmony default export */ var _unused_webpack_default_export = (HashRouter);\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _warning = __webpack_require__(2);\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _invariant = __webpack_require__(3);\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _LocationUtils = __webpack_require__(15);\n\nvar _PathUtils = __webpack_require__(5);\n\nvar _createTransitionManager = __webpack_require__(16);\n\nvar _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);\n\nvar _DOMUtils = __webpack_require__(28);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar HashChangeEvent = 'hashchange';\n\nvar HashPathCoders = {\n  hashbang: {\n    encodePath: function encodePath(path) {\n      return path.charAt(0) === '!' ? path : '!/' + (0, _PathUtils.stripLeadingSlash)(path);\n    },\n    decodePath: function decodePath(path) {\n      return path.charAt(0) === '!' ? path.substr(1) : path;\n    }\n  },\n  noslash: {\n    encodePath: _PathUtils.stripLeadingSlash,\n    decodePath: _PathUtils.addLeadingSlash\n  },\n  slash: {\n    encodePath: _PathUtils.addLeadingSlash,\n    decodePath: _PathUtils.addLeadingSlash\n  }\n};\n\nvar getHashPath = function getHashPath() {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var hashIndex = href.indexOf('#');\n  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);\n};\n\nvar pushHashPath = function pushHashPath(path) {\n  return window.location.hash = path;\n};\n\nvar replaceHashPath = function replaceHashPath(path) {\n  var hashIndex = window.location.href.indexOf('#');\n\n  window.location.replace(window.location.href.slice(0, hashIndex >= 0 ? hashIndex : 0) + '#' + path);\n};\n\nvar createHashHistory = function createHashHistory() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  (0, _invariant2.default)(_DOMUtils.canUseDOM, 'Hash history needs a DOM');\n\n  var globalHistory = window.history;\n  var canGoWithoutReload = (0, _DOMUtils.supportsGoWithoutReloadUsingHash)();\n\n  var _props$getUserConfirm = props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === undefined ? _DOMUtils.getConfirmation : _props$getUserConfirm,\n      _props$hashType = props.hashType,\n      hashType = _props$hashType === undefined ? 'slash' : _props$hashType;\n\n  var basename = props.basename ? (0, _PathUtils.stripTrailingSlash)((0, _PathUtils.addLeadingSlash)(props.basename)) : '';\n\n  var _HashPathCoders$hashT = HashPathCoders[hashType],\n      encodePath = _HashPathCoders$hashT.encodePath,\n      decodePath = _HashPathCoders$hashT.decodePath;\n\n\n  var getDOMLocation = function getDOMLocation() {\n    var path = decodePath(getHashPath());\n\n    (0, _warning2.default)(!basename || (0, _PathUtils.hasBasename)(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".');\n\n    if (basename) path = (0, _PathUtils.stripBasename)(path, basename);\n\n    return (0, _LocationUtils.createLocation)(path);\n  };\n\n  var transitionManager = (0, _createTransitionManager2.default)();\n\n  var setState = function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n\n    transitionManager.notifyListeners(history.location, history.action);\n  };\n\n  var forceNextPop = false;\n  var ignorePath = null;\n\n  var handleHashChange = function handleHashChange() {\n    var path = getHashPath();\n    var encodedPath = encodePath(path);\n\n    if (path !== encodedPath) {\n      // Ensure we always have a properly-encoded hash.\n      replaceHashPath(encodedPath);\n    } else {\n      var location = getDOMLocation();\n      var prevLocation = history.location;\n\n      if (!forceNextPop && (0, _LocationUtils.locationsAreEqual)(prevLocation, location)) return; // A hashchange doesn't always == location change.\n\n      if (ignorePath === (0, _PathUtils.createPath)(location)) return; // Ignore this change; we already setState in push/replace.\n\n      ignorePath = null;\n\n      handlePop(location);\n    }\n  };\n\n  var handlePop = function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({ action: action, location: location });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  };\n\n  var revertPop = function revertPop(fromLocation) {\n    var toLocation = history.location;\n\n    // TODO: We could probably make this more reliable by\n    // keeping a list of paths we've seen in sessionStorage.\n    // Instead, we just default to 0 for paths we don't know.\n\n    var toIndex = allPaths.lastIndexOf((0, _PathUtils.createPath)(toLocation));\n\n    if (toIndex === -1) toIndex = 0;\n\n    var fromIndex = allPaths.lastIndexOf((0, _PathUtils.createPath)(fromLocation));\n\n    if (fromIndex === -1) fromIndex = 0;\n\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  };\n\n  // Ensure the hash is encoded properly before doing anything else.\n  var path = getHashPath();\n  var encodedPath = encodePath(path);\n\n  if (path !== encodedPath) replaceHashPath(encodedPath);\n\n  var initialLocation = getDOMLocation();\n  var allPaths = [(0, _PathUtils.createPath)(initialLocation)];\n\n  // Public interface\n\n  var createHref = function createHref(location) {\n    return '#' + encodePath(basename + (0, _PathUtils.createPath)(location));\n  };\n\n  var push = function push(path, state) {\n    (0, _warning2.default)(state === undefined, 'Hash history cannot push state; it is ignored');\n\n    var action = 'PUSH';\n    var location = (0, _LocationUtils.createLocation)(path, undefined, undefined, history.location);\n\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n\n      var path = (0, _PathUtils.createPath)(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a PUSH, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        pushHashPath(encodedPath);\n\n        var prevIndex = allPaths.lastIndexOf((0, _PathUtils.createPath)(history.location));\n        var nextPaths = allPaths.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);\n\n        nextPaths.push(path);\n        allPaths = nextPaths;\n\n        setState({ action: action, location: location });\n      } else {\n        (0, _warning2.default)(false, 'Hash history cannot PUSH the same path; a new entry will not be added to the history stack');\n\n        setState();\n      }\n    });\n  };\n\n  var replace = function replace(path, state) {\n    (0, _warning2.default)(state === undefined, 'Hash history cannot replace state; it is ignored');\n\n    var action = 'REPLACE';\n    var location = (0, _LocationUtils.createLocation)(path, undefined, undefined, history.location);\n\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n\n      var path = (0, _PathUtils.createPath)(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a REPLACE, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        replaceHashPath(encodedPath);\n      }\n\n      var prevIndex = allPaths.indexOf((0, _PathUtils.createPath)(history.location));\n\n      if (prevIndex !== -1) allPaths[prevIndex] = path;\n\n      setState({ action: action, location: location });\n    });\n  };\n\n  var go = function go(n) {\n    (0, _warning2.default)(canGoWithoutReload, 'Hash history go(n) causes a full page reload in this browser');\n\n    globalHistory.go(n);\n  };\n\n  var goBack = function goBack() {\n    return go(-1);\n  };\n\n  var goForward = function goForward() {\n    return go(1);\n  };\n\n  var listenerCount = 0;\n\n  var checkDOMListeners = function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1) {\n      (0, _DOMUtils.addEventListener)(window, HashChangeEvent, handleHashChange);\n    } else if (listenerCount === 0) {\n      (0, _DOMUtils.removeEventListener)(window, HashChangeEvent, handleHashChange);\n    }\n  };\n\n  var isBlocked = false;\n\n  var block = function block() {\n    var prompt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  };\n\n  var listen = function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  };\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n\n  return history;\n};\n\nexports.default = createHashHistory;\n\n/***/ }),\n/* 76 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react_router_es_MemoryRouter__ = __webpack_require__(77);\n// Written in this round about way for babel-transform-imports\n\n\n/* unused harmony default export */ var _unused_webpack_default_export = (__WEBPACK_IMPORTED_MODULE_0_react_router_es_MemoryRouter__[\"a\" /* default */]);\n\n/***/ }),\n/* 77 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_warning__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_warning___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_warning__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_prop_types__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_history_createMemoryHistory__ = __webpack_require__(78);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_history_createMemoryHistory___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_history_createMemoryHistory__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Router__ = __webpack_require__(18);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\n\n\n/**\n * The public API for a <Router> that stores location in memory.\n */\n\nvar MemoryRouter = function (_React$Component) {\n  _inherits(MemoryRouter, _React$Component);\n\n  function MemoryRouter() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, MemoryRouter);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.history = __WEBPACK_IMPORTED_MODULE_3_history_createMemoryHistory___default()(_this.props), _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  MemoryRouter.prototype.componentWillMount = function componentWillMount() {\n    __WEBPACK_IMPORTED_MODULE_0_warning___default()(!this.props.history, '<MemoryRouter> ignores the history prop. To use a custom history, ' + 'use `import { Router }` instead of `import { MemoryRouter as Router }`.');\n  };\n\n  MemoryRouter.prototype.render = function render() {\n    return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__Router__[\"a\" /* default */], { history: this.history, children: this.props.children });\n  };\n\n  return MemoryRouter;\n}(__WEBPACK_IMPORTED_MODULE_1_react___default.a.Component);\n\nMemoryRouter.propTypes = {\n  initialEntries: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.array,\n  initialIndex: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.number,\n  getUserConfirmation: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func,\n  keyLength: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.number,\n  children: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.node\n};\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (MemoryRouter);\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _warning = __webpack_require__(2);\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _PathUtils = __webpack_require__(5);\n\nvar _LocationUtils = __webpack_require__(15);\n\nvar _createTransitionManager = __webpack_require__(16);\n\nvar _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar clamp = function clamp(n, lowerBound, upperBound) {\n  return Math.min(Math.max(n, lowerBound), upperBound);\n};\n\n/**\n * Creates a history object that stores locations in memory.\n */\nvar createMemoryHistory = function createMemoryHistory() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var getUserConfirmation = props.getUserConfirmation,\n      _props$initialEntries = props.initialEntries,\n      initialEntries = _props$initialEntries === undefined ? ['/'] : _props$initialEntries,\n      _props$initialIndex = props.initialIndex,\n      initialIndex = _props$initialIndex === undefined ? 0 : _props$initialIndex,\n      _props$keyLength = props.keyLength,\n      keyLength = _props$keyLength === undefined ? 6 : _props$keyLength;\n\n\n  var transitionManager = (0, _createTransitionManager2.default)();\n\n  var setState = function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = history.entries.length;\n\n    transitionManager.notifyListeners(history.location, history.action);\n  };\n\n  var createKey = function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  };\n\n  var index = clamp(initialIndex, 0, initialEntries.length - 1);\n  var entries = initialEntries.map(function (entry) {\n    return typeof entry === 'string' ? (0, _LocationUtils.createLocation)(entry, undefined, createKey()) : (0, _LocationUtils.createLocation)(entry, undefined, entry.key || createKey());\n  });\n\n  // Public interface\n\n  var createHref = _PathUtils.createPath;\n\n  var push = function push(path, state) {\n    (0, _warning2.default)(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored');\n\n    var action = 'PUSH';\n    var location = (0, _LocationUtils.createLocation)(path, state, createKey(), history.location);\n\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n\n      var prevIndex = history.index;\n      var nextIndex = prevIndex + 1;\n\n      var nextEntries = history.entries.slice(0);\n      if (nextEntries.length > nextIndex) {\n        nextEntries.splice(nextIndex, nextEntries.length - nextIndex, location);\n      } else {\n        nextEntries.push(location);\n      }\n\n      setState({\n        action: action,\n        location: location,\n        index: nextIndex,\n        entries: nextEntries\n      });\n    });\n  };\n\n  var replace = function replace(path, state) {\n    (0, _warning2.default)(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored');\n\n    var action = 'REPLACE';\n    var location = (0, _LocationUtils.createLocation)(path, state, createKey(), history.location);\n\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n\n      history.entries[history.index] = location;\n\n      setState({ action: action, location: location });\n    });\n  };\n\n  var go = function go(n) {\n    var nextIndex = clamp(history.index + n, 0, history.entries.length - 1);\n\n    var action = 'POP';\n    var location = history.entries[nextIndex];\n\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (ok) {\n        setState({\n          action: action,\n          location: location,\n          index: nextIndex\n        });\n      } else {\n        // Mimic the behavior of DOM histories by\n        // causing a render after a cancelled POP.\n        setState();\n      }\n    });\n  };\n\n  var goBack = function goBack() {\n    return go(-1);\n  };\n\n  var goForward = function goForward() {\n    return go(1);\n  };\n\n  var canGo = function canGo(n) {\n    var nextIndex = history.index + n;\n    return nextIndex >= 0 && nextIndex < history.entries.length;\n  };\n\n  var block = function block() {\n    var prompt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    return transitionManager.setPrompt(prompt);\n  };\n\n  var listen = function listen(listener) {\n    return transitionManager.appendListener(listener);\n  };\n\n  var history = {\n    length: entries.length,\n    action: 'POP',\n    location: entries[index],\n    index: index,\n    entries: entries,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    canGo: canGo,\n    block: block,\n    listen: listen\n  };\n\n  return history;\n};\n\nexports.default = createMemoryHistory;\n\n/***/ }),\n/* 79 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_prop_types__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Route__ = __webpack_require__(30);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Link__ = __webpack_require__(29);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\n\n\n\n\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nvar NavLink = function NavLink(_ref) {\n  var to = _ref.to,\n      exact = _ref.exact,\n      strict = _ref.strict,\n      location = _ref.location,\n      activeClassName = _ref.activeClassName,\n      className = _ref.className,\n      activeStyle = _ref.activeStyle,\n      style = _ref.style,\n      getIsActive = _ref.isActive,\n      ariaCurrent = _ref.ariaCurrent,\n      rest = _objectWithoutProperties(_ref, ['to', 'exact', 'strict', 'location', 'activeClassName', 'className', 'activeStyle', 'style', 'isActive', 'ariaCurrent']);\n\n  return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__Route__[\"a\" /* default */], {\n    path: (typeof to === 'undefined' ? 'undefined' : _typeof(to)) === 'object' ? to.pathname : to,\n    exact: exact,\n    strict: strict,\n    location: location,\n    children: function children(_ref2) {\n      var location = _ref2.location,\n          match = _ref2.match;\n\n      var isActive = !!(getIsActive ? getIsActive(match, location) : match);\n\n      return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__Link__[\"a\" /* default */], _extends({\n        to: to,\n        className: isActive ? [className, activeClassName].filter(function (i) {\n          return i;\n        }).join(' ') : className,\n        style: isActive ? _extends({}, style, activeStyle) : style,\n        'aria-current': isActive && ariaCurrent\n      }, rest));\n    }\n  });\n};\n\nNavLink.propTypes = {\n  to: __WEBPACK_IMPORTED_MODULE_3__Link__[\"a\" /* default */].propTypes.to,\n  exact: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.bool,\n  strict: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.bool,\n  location: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object,\n  activeClassName: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.string,\n  className: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.string,\n  activeStyle: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object,\n  style: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object,\n  isActive: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func,\n  ariaCurrent: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.oneOf(['page', 'step', 'location', 'true'])\n};\n\nNavLink.defaultProps = {\n  activeClassName: 'active',\n  ariaCurrent: 'true'\n};\n\n/* unused harmony default export */ var _unused_webpack_default_export = (NavLink);\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isarray = __webpack_require__(81)\n\n/**\n * Expose `pathToRegexp`.\n */\nmodule.exports = pathToRegexp\nmodule.exports.parse = parse\nmodule.exports.compile = compile\nmodule.exports.tokensToFunction = tokensToFunction\nmodule.exports.tokensToRegExp = tokensToRegExp\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g')\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = []\n  var key = 0\n  var index = 0\n  var path = ''\n  var defaultDelimiter = options && options.delimiter || '/'\n  var res\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0]\n    var escaped = res[1]\n    var offset = res.index\n    path += str.slice(index, offset)\n    index = offset + m.length\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1]\n      continue\n    }\n\n    var next = str[index]\n    var prefix = res[2]\n    var name = res[3]\n    var capture = res[4]\n    var group = res[5]\n    var modifier = res[6]\n    var asterisk = res[7]\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path)\n      path = ''\n    }\n\n    var partial = prefix != null && next != null && next !== prefix\n    var repeat = modifier === '+' || modifier === '*'\n    var optional = modifier === '?' || modifier === '*'\n    var delimiter = res[2] || defaultDelimiter\n    var pattern = capture || group\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    })\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index)\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path)\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length)\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$')\n    }\n  }\n\n  return function (obj, opts) {\n    var path = ''\n    var data = obj || {}\n    var options = opts || {}\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i]\n\n      if (typeof token === 'string') {\n        path += token\n\n        continue\n      }\n\n      var value = data[token.name]\n      var segment\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j])\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value)\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g)\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      })\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = []\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source)\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options))\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options)\n    keys = []\n  }\n\n  options = options || {}\n\n  var strict = options.strict\n  var end = options.end !== false\n  var route = ''\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n\n    if (typeof token === 'string') {\n      route += escapeString(token)\n    } else {\n      var prefix = escapeString(token.prefix)\n      var capture = '(?:' + token.pattern + ')'\n\n      keys.push(token)\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*'\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?'\n        } else {\n          capture = prefix + '(' + capture + ')?'\n        }\n      } else {\n        capture = prefix + '(' + capture + ')'\n      }\n\n      route += capture\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/')\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?'\n  }\n\n  if (end) {\n    route += '$'\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)'\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options)\n    keys = []\n  }\n\n  options = options || {}\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\n\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports) {\n\nmodule.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n\n/***/ }),\n/* 82 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react_router_es_Prompt__ = __webpack_require__(83);\n// Written in this round about way for babel-transform-imports\n\n\n/* unused harmony default export */ var _unused_webpack_default_export = (__WEBPACK_IMPORTED_MODULE_0_react_router_es_Prompt__[\"a\" /* default */]);\n\n/***/ }),\n/* 83 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_prop_types__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_invariant__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_invariant___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_invariant__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\n/**\n * The public API for prompting the user before navigating away\n * from a screen with a component.\n */\n\nvar Prompt = function (_React$Component) {\n  _inherits(Prompt, _React$Component);\n\n  function Prompt() {\n    _classCallCheck(this, Prompt);\n\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n\n  Prompt.prototype.enable = function enable(message) {\n    if (this.unblock) this.unblock();\n\n    this.unblock = this.context.router.history.block(message);\n  };\n\n  Prompt.prototype.disable = function disable() {\n    if (this.unblock) {\n      this.unblock();\n      this.unblock = null;\n    }\n  };\n\n  Prompt.prototype.componentWillMount = function componentWillMount() {\n    __WEBPACK_IMPORTED_MODULE_2_invariant___default()(this.context.router, 'You should not use <Prompt> outside a <Router>');\n\n    if (this.props.when) this.enable(this.props.message);\n  };\n\n  Prompt.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    if (nextProps.when) {\n      if (!this.props.when || this.props.message !== nextProps.message) this.enable(nextProps.message);\n    } else {\n      this.disable();\n    }\n  };\n\n  Prompt.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.disable();\n  };\n\n  Prompt.prototype.render = function render() {\n    return null;\n  };\n\n  return Prompt;\n}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);\n\nPrompt.propTypes = {\n  when: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.bool,\n  message: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.oneOfType([__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func, __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.string]).isRequired\n};\nPrompt.defaultProps = {\n  when: true\n};\nPrompt.contextTypes = {\n  router: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.shape({\n    history: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.shape({\n      block: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func.isRequired\n    }).isRequired\n  }).isRequired\n};\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Prompt);\n\n/***/ }),\n/* 84 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react_router_es_Redirect__ = __webpack_require__(85);\n// Written in this round about way for babel-transform-imports\n\n\n/* unused harmony default export */ var _unused_webpack_default_export = (__WEBPACK_IMPORTED_MODULE_0_react_router_es_Redirect__[\"a\" /* default */]);\n\n/***/ }),\n/* 85 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_prop_types__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_warning__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_warning___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_warning__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_invariant__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_invariant___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_invariant__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_history__ = __webpack_require__(86);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\n\n\n/**\n * The public API for updating the location programmatically\n * with a component.\n */\n\nvar Redirect = function (_React$Component) {\n  _inherits(Redirect, _React$Component);\n\n  function Redirect() {\n    _classCallCheck(this, Redirect);\n\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n\n  Redirect.prototype.isStatic = function isStatic() {\n    return this.context.router && this.context.router.staticContext;\n  };\n\n  Redirect.prototype.componentWillMount = function componentWillMount() {\n    __WEBPACK_IMPORTED_MODULE_3_invariant___default()(this.context.router, 'You should not use <Redirect> outside a <Router>');\n\n    if (this.isStatic()) this.perform();\n  };\n\n  Redirect.prototype.componentDidMount = function componentDidMount() {\n    if (!this.isStatic()) this.perform();\n  };\n\n  Redirect.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var prevTo = Object(__WEBPACK_IMPORTED_MODULE_4_history__[\"a\" /* createLocation */])(prevProps.to);\n    var nextTo = Object(__WEBPACK_IMPORTED_MODULE_4_history__[\"a\" /* createLocation */])(this.props.to);\n\n    if (Object(__WEBPACK_IMPORTED_MODULE_4_history__[\"b\" /* locationsAreEqual */])(prevTo, nextTo)) {\n      __WEBPACK_IMPORTED_MODULE_2_warning___default()(false, 'You tried to redirect to the same route you\\'re currently on: ' + ('\"' + nextTo.pathname + nextTo.search + '\"'));\n      return;\n    }\n\n    this.perform();\n  };\n\n  Redirect.prototype.perform = function perform() {\n    var history = this.context.router.history;\n    var _props = this.props,\n        push = _props.push,\n        to = _props.to;\n\n\n    if (push) {\n      history.push(to);\n    } else {\n      history.replace(to);\n    }\n  };\n\n  Redirect.prototype.render = function render() {\n    return null;\n  };\n\n  return Redirect;\n}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);\n\nRedirect.propTypes = {\n  push: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.bool,\n  from: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.string,\n  to: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.oneOfType([__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.string, __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object]).isRequired\n};\nRedirect.defaultProps = {\n  push: false\n};\nRedirect.contextTypes = {\n  router: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.shape({\n    history: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.shape({\n      push: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func.isRequired,\n      replace: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func.isRequired\n    }).isRequired,\n    staticContext: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object\n  }).isRequired\n};\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Redirect);\n\n/***/ }),\n/* 86 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__createBrowserHistory__ = __webpack_require__(87);\n/* unused harmony reexport createBrowserHistory */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__createHashHistory__ = __webpack_require__(88);\n/* unused harmony reexport createHashHistory */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__createMemoryHistory__ = __webpack_require__(89);\n/* unused harmony reexport createMemoryHistory */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__LocationUtils__ = __webpack_require__(9);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_3__LocationUtils__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_3__LocationUtils__[\"b\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__PathUtils__ = __webpack_require__(6);\n/* unused harmony reexport parsePath */\n/* unused harmony reexport createPath */\n\n\n\n\n\n\n\n\n\n\n/***/ }),\n/* 87 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_warning__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_warning___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_warning__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_invariant__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_invariant___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_invariant__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__LocationUtils__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__PathUtils__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__createTransitionManager__ = __webpack_require__(20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__DOMUtils__ = __webpack_require__(32);\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n\n\n\n\n\n\n\nvar PopStateEvent = 'popstate';\nvar HashChangeEvent = 'hashchange';\n\nvar getHistoryState = function getHistoryState() {\n  try {\n    return window.history.state || {};\n  } catch (e) {\n    // IE 11 sometimes throws when accessing window.history.state\n    // See https://github.com/ReactTraining/history/pull/289\n    return {};\n  }\n};\n\n/**\n * Creates a history object that uses the HTML5 history API including\n * pushState, replaceState, and the popstate event.\n */\nvar createBrowserHistory = function createBrowserHistory() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  __WEBPACK_IMPORTED_MODULE_1_invariant___default()(__WEBPACK_IMPORTED_MODULE_5__DOMUtils__[\"b\" /* canUseDOM */], 'Browser history needs a DOM');\n\n  var globalHistory = window.history;\n  var canUseHistory = Object(__WEBPACK_IMPORTED_MODULE_5__DOMUtils__[\"g\" /* supportsHistory */])();\n  var needsHashChangeListener = !Object(__WEBPACK_IMPORTED_MODULE_5__DOMUtils__[\"h\" /* supportsPopStateOnHashChange */])();\n\n  var _props$forceRefresh = props.forceRefresh,\n      forceRefresh = _props$forceRefresh === undefined ? false : _props$forceRefresh,\n      _props$getUserConfirm = props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === undefined ? __WEBPACK_IMPORTED_MODULE_5__DOMUtils__[\"c\" /* getConfirmation */] : _props$getUserConfirm,\n      _props$keyLength = props.keyLength,\n      keyLength = _props$keyLength === undefined ? 6 : _props$keyLength;\n\n  var basename = props.basename ? Object(__WEBPACK_IMPORTED_MODULE_3__PathUtils__[\"g\" /* stripTrailingSlash */])(Object(__WEBPACK_IMPORTED_MODULE_3__PathUtils__[\"a\" /* addLeadingSlash */])(props.basename)) : '';\n\n  var getDOMLocation = function getDOMLocation(historyState) {\n    var _ref = historyState || {},\n        key = _ref.key,\n        state = _ref.state;\n\n    var _window$location = window.location,\n        pathname = _window$location.pathname,\n        search = _window$location.search,\n        hash = _window$location.hash;\n\n\n    var path = pathname + search + hash;\n\n    __WEBPACK_IMPORTED_MODULE_0_warning___default()(!basename || Object(__WEBPACK_IMPORTED_MODULE_3__PathUtils__[\"c\" /* hasBasename */])(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".');\n\n    if (basename) path = Object(__WEBPACK_IMPORTED_MODULE_3__PathUtils__[\"e\" /* stripBasename */])(path, basename);\n\n    return Object(__WEBPACK_IMPORTED_MODULE_2__LocationUtils__[\"a\" /* createLocation */])(path, state, key);\n  };\n\n  var createKey = function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  };\n\n  var transitionManager = Object(__WEBPACK_IMPORTED_MODULE_4__createTransitionManager__[\"a\" /* default */])();\n\n  var setState = function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n\n    transitionManager.notifyListeners(history.location, history.action);\n  };\n\n  var handlePopState = function handlePopState(event) {\n    // Ignore extraneous popstate events in WebKit.\n    if (Object(__WEBPACK_IMPORTED_MODULE_5__DOMUtils__[\"d\" /* isExtraneousPopstateEvent */])(event)) return;\n\n    handlePop(getDOMLocation(event.state));\n  };\n\n  var handleHashChange = function handleHashChange() {\n    handlePop(getDOMLocation(getHistoryState()));\n  };\n\n  var forceNextPop = false;\n\n  var handlePop = function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({ action: action, location: location });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  };\n\n  var revertPop = function revertPop(fromLocation) {\n    var toLocation = history.location;\n\n    // TODO: We could probably make this more reliable by\n    // keeping a list of keys we've seen in sessionStorage.\n    // Instead, we just default to 0 for keys we don't know.\n\n    var toIndex = allKeys.indexOf(toLocation.key);\n\n    if (toIndex === -1) toIndex = 0;\n\n    var fromIndex = allKeys.indexOf(fromLocation.key);\n\n    if (fromIndex === -1) fromIndex = 0;\n\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  };\n\n  var initialLocation = getDOMLocation(getHistoryState());\n  var allKeys = [initialLocation.key];\n\n  // Public interface\n\n  var createHref = function createHref(location) {\n    return basename + Object(__WEBPACK_IMPORTED_MODULE_3__PathUtils__[\"b\" /* createPath */])(location);\n  };\n\n  var push = function push(path, state) {\n    __WEBPACK_IMPORTED_MODULE_0_warning___default()(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored');\n\n    var action = 'PUSH';\n    var location = Object(__WEBPACK_IMPORTED_MODULE_2__LocationUtils__[\"a\" /* createLocation */])(path, state, createKey(), history.location);\n\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n\n      if (canUseHistory) {\n        globalHistory.pushState({ key: key, state: state }, null, href);\n\n        if (forceRefresh) {\n          window.location.href = href;\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n          var nextKeys = allKeys.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);\n\n          nextKeys.push(location.key);\n          allKeys = nextKeys;\n\n          setState({ action: action, location: location });\n        }\n      } else {\n        __WEBPACK_IMPORTED_MODULE_0_warning___default()(state === undefined, 'Browser history cannot push state in browsers that do not support HTML5 history');\n\n        window.location.href = href;\n      }\n    });\n  };\n\n  var replace = function replace(path, state) {\n    __WEBPACK_IMPORTED_MODULE_0_warning___default()(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored');\n\n    var action = 'REPLACE';\n    var location = Object(__WEBPACK_IMPORTED_MODULE_2__LocationUtils__[\"a\" /* createLocation */])(path, state, createKey(), history.location);\n\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n\n      if (canUseHistory) {\n        globalHistory.replaceState({ key: key, state: state }, null, href);\n\n        if (forceRefresh) {\n          window.location.replace(href);\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n\n          if (prevIndex !== -1) allKeys[prevIndex] = location.key;\n\n          setState({ action: action, location: location });\n        }\n      } else {\n        __WEBPACK_IMPORTED_MODULE_0_warning___default()(state === undefined, 'Browser history cannot replace state in browsers that do not support HTML5 history');\n\n        window.location.replace(href);\n      }\n    });\n  };\n\n  var go = function go(n) {\n    globalHistory.go(n);\n  };\n\n  var goBack = function goBack() {\n    return go(-1);\n  };\n\n  var goForward = function goForward() {\n    return go(1);\n  };\n\n  var listenerCount = 0;\n\n  var checkDOMListeners = function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1) {\n      Object(__WEBPACK_IMPORTED_MODULE_5__DOMUtils__[\"a\" /* addEventListener */])(window, PopStateEvent, handlePopState);\n\n      if (needsHashChangeListener) Object(__WEBPACK_IMPORTED_MODULE_5__DOMUtils__[\"a\" /* addEventListener */])(window, HashChangeEvent, handleHashChange);\n    } else if (listenerCount === 0) {\n      Object(__WEBPACK_IMPORTED_MODULE_5__DOMUtils__[\"e\" /* removeEventListener */])(window, PopStateEvent, handlePopState);\n\n      if (needsHashChangeListener) Object(__WEBPACK_IMPORTED_MODULE_5__DOMUtils__[\"e\" /* removeEventListener */])(window, HashChangeEvent, handleHashChange);\n    }\n  };\n\n  var isBlocked = false;\n\n  var block = function block() {\n    var prompt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  };\n\n  var listen = function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  };\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n\n  return history;\n};\n\n/* unused harmony default export */ var _unused_webpack_default_export = (createBrowserHistory);\n\n/***/ }),\n/* 88 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_warning__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_warning___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_warning__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_invariant__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_invariant___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_invariant__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__LocationUtils__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__PathUtils__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__createTransitionManager__ = __webpack_require__(20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__DOMUtils__ = __webpack_require__(32);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n\n\n\n\n\n\n\nvar HashChangeEvent = 'hashchange';\n\nvar HashPathCoders = {\n  hashbang: {\n    encodePath: function encodePath(path) {\n      return path.charAt(0) === '!' ? path : '!/' + Object(__WEBPACK_IMPORTED_MODULE_3__PathUtils__[\"f\" /* stripLeadingSlash */])(path);\n    },\n    decodePath: function decodePath(path) {\n      return path.charAt(0) === '!' ? path.substr(1) : path;\n    }\n  },\n  noslash: {\n    encodePath: __WEBPACK_IMPORTED_MODULE_3__PathUtils__[\"f\" /* stripLeadingSlash */],\n    decodePath: __WEBPACK_IMPORTED_MODULE_3__PathUtils__[\"a\" /* addLeadingSlash */]\n  },\n  slash: {\n    encodePath: __WEBPACK_IMPORTED_MODULE_3__PathUtils__[\"a\" /* addLeadingSlash */],\n    decodePath: __WEBPACK_IMPORTED_MODULE_3__PathUtils__[\"a\" /* addLeadingSlash */]\n  }\n};\n\nvar getHashPath = function getHashPath() {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var hashIndex = href.indexOf('#');\n  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);\n};\n\nvar pushHashPath = function pushHashPath(path) {\n  return window.location.hash = path;\n};\n\nvar replaceHashPath = function replaceHashPath(path) {\n  var hashIndex = window.location.href.indexOf('#');\n\n  window.location.replace(window.location.href.slice(0, hashIndex >= 0 ? hashIndex : 0) + '#' + path);\n};\n\nvar createHashHistory = function createHashHistory() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  __WEBPACK_IMPORTED_MODULE_1_invariant___default()(__WEBPACK_IMPORTED_MODULE_5__DOMUtils__[\"b\" /* canUseDOM */], 'Hash history needs a DOM');\n\n  var globalHistory = window.history;\n  var canGoWithoutReload = Object(__WEBPACK_IMPORTED_MODULE_5__DOMUtils__[\"f\" /* supportsGoWithoutReloadUsingHash */])();\n\n  var _props$getUserConfirm = props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === undefined ? __WEBPACK_IMPORTED_MODULE_5__DOMUtils__[\"c\" /* getConfirmation */] : _props$getUserConfirm,\n      _props$hashType = props.hashType,\n      hashType = _props$hashType === undefined ? 'slash' : _props$hashType;\n\n  var basename = props.basename ? Object(__WEBPACK_IMPORTED_MODULE_3__PathUtils__[\"g\" /* stripTrailingSlash */])(Object(__WEBPACK_IMPORTED_MODULE_3__PathUtils__[\"a\" /* addLeadingSlash */])(props.basename)) : '';\n\n  var _HashPathCoders$hashT = HashPathCoders[hashType],\n      encodePath = _HashPathCoders$hashT.encodePath,\n      decodePath = _HashPathCoders$hashT.decodePath;\n\n\n  var getDOMLocation = function getDOMLocation() {\n    var path = decodePath(getHashPath());\n\n    __WEBPACK_IMPORTED_MODULE_0_warning___default()(!basename || Object(__WEBPACK_IMPORTED_MODULE_3__PathUtils__[\"c\" /* hasBasename */])(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".');\n\n    if (basename) path = Object(__WEBPACK_IMPORTED_MODULE_3__PathUtils__[\"e\" /* stripBasename */])(path, basename);\n\n    return Object(__WEBPACK_IMPORTED_MODULE_2__LocationUtils__[\"a\" /* createLocation */])(path);\n  };\n\n  var transitionManager = Object(__WEBPACK_IMPORTED_MODULE_4__createTransitionManager__[\"a\" /* default */])();\n\n  var setState = function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n\n    transitionManager.notifyListeners(history.location, history.action);\n  };\n\n  var forceNextPop = false;\n  var ignorePath = null;\n\n  var handleHashChange = function handleHashChange() {\n    var path = getHashPath();\n    var encodedPath = encodePath(path);\n\n    if (path !== encodedPath) {\n      // Ensure we always have a properly-encoded hash.\n      replaceHashPath(encodedPath);\n    } else {\n      var location = getDOMLocation();\n      var prevLocation = history.location;\n\n      if (!forceNextPop && Object(__WEBPACK_IMPORTED_MODULE_2__LocationUtils__[\"b\" /* locationsAreEqual */])(prevLocation, location)) return; // A hashchange doesn't always == location change.\n\n      if (ignorePath === Object(__WEBPACK_IMPORTED_MODULE_3__PathUtils__[\"b\" /* createPath */])(location)) return; // Ignore this change; we already setState in push/replace.\n\n      ignorePath = null;\n\n      handlePop(location);\n    }\n  };\n\n  var handlePop = function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({ action: action, location: location });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  };\n\n  var revertPop = function revertPop(fromLocation) {\n    var toLocation = history.location;\n\n    // TODO: We could probably make this more reliable by\n    // keeping a list of paths we've seen in sessionStorage.\n    // Instead, we just default to 0 for paths we don't know.\n\n    var toIndex = allPaths.lastIndexOf(Object(__WEBPACK_IMPORTED_MODULE_3__PathUtils__[\"b\" /* createPath */])(toLocation));\n\n    if (toIndex === -1) toIndex = 0;\n\n    var fromIndex = allPaths.lastIndexOf(Object(__WEBPACK_IMPORTED_MODULE_3__PathUtils__[\"b\" /* createPath */])(fromLocation));\n\n    if (fromIndex === -1) fromIndex = 0;\n\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  };\n\n  // Ensure the hash is encoded properly before doing anything else.\n  var path = getHashPath();\n  var encodedPath = encodePath(path);\n\n  if (path !== encodedPath) replaceHashPath(encodedPath);\n\n  var initialLocation = getDOMLocation();\n  var allPaths = [Object(__WEBPACK_IMPORTED_MODULE_3__PathUtils__[\"b\" /* createPath */])(initialLocation)];\n\n  // Public interface\n\n  var createHref = function createHref(location) {\n    return '#' + encodePath(basename + Object(__WEBPACK_IMPORTED_MODULE_3__PathUtils__[\"b\" /* createPath */])(location));\n  };\n\n  var push = function push(path, state) {\n    __WEBPACK_IMPORTED_MODULE_0_warning___default()(state === undefined, 'Hash history cannot push state; it is ignored');\n\n    var action = 'PUSH';\n    var location = Object(__WEBPACK_IMPORTED_MODULE_2__LocationUtils__[\"a\" /* createLocation */])(path, undefined, undefined, history.location);\n\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n\n      var path = Object(__WEBPACK_IMPORTED_MODULE_3__PathUtils__[\"b\" /* createPath */])(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a PUSH, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        pushHashPath(encodedPath);\n\n        var prevIndex = allPaths.lastIndexOf(Object(__WEBPACK_IMPORTED_MODULE_3__PathUtils__[\"b\" /* createPath */])(history.location));\n        var nextPaths = allPaths.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);\n\n        nextPaths.push(path);\n        allPaths = nextPaths;\n\n        setState({ action: action, location: location });\n      } else {\n        __WEBPACK_IMPORTED_MODULE_0_warning___default()(false, 'Hash history cannot PUSH the same path; a new entry will not be added to the history stack');\n\n        setState();\n      }\n    });\n  };\n\n  var replace = function replace(path, state) {\n    __WEBPACK_IMPORTED_MODULE_0_warning___default()(state === undefined, 'Hash history cannot replace state; it is ignored');\n\n    var action = 'REPLACE';\n    var location = Object(__WEBPACK_IMPORTED_MODULE_2__LocationUtils__[\"a\" /* createLocation */])(path, undefined, undefined, history.location);\n\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n\n      var path = Object(__WEBPACK_IMPORTED_MODULE_3__PathUtils__[\"b\" /* createPath */])(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a REPLACE, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        replaceHashPath(encodedPath);\n      }\n\n      var prevIndex = allPaths.indexOf(Object(__WEBPACK_IMPORTED_MODULE_3__PathUtils__[\"b\" /* createPath */])(history.location));\n\n      if (prevIndex !== -1) allPaths[prevIndex] = path;\n\n      setState({ action: action, location: location });\n    });\n  };\n\n  var go = function go(n) {\n    __WEBPACK_IMPORTED_MODULE_0_warning___default()(canGoWithoutReload, 'Hash history go(n) causes a full page reload in this browser');\n\n    globalHistory.go(n);\n  };\n\n  var goBack = function goBack() {\n    return go(-1);\n  };\n\n  var goForward = function goForward() {\n    return go(1);\n  };\n\n  var listenerCount = 0;\n\n  var checkDOMListeners = function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1) {\n      Object(__WEBPACK_IMPORTED_MODULE_5__DOMUtils__[\"a\" /* addEventListener */])(window, HashChangeEvent, handleHashChange);\n    } else if (listenerCount === 0) {\n      Object(__WEBPACK_IMPORTED_MODULE_5__DOMUtils__[\"e\" /* removeEventListener */])(window, HashChangeEvent, handleHashChange);\n    }\n  };\n\n  var isBlocked = false;\n\n  var block = function block() {\n    var prompt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  };\n\n  var listen = function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  };\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n\n  return history;\n};\n\n/* unused harmony default export */ var _unused_webpack_default_export = (createHashHistory);\n\n/***/ }),\n/* 89 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_warning__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_warning___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_warning__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__PathUtils__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__LocationUtils__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__createTransitionManager__ = __webpack_require__(20);\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n\n\n\n\n\nvar clamp = function clamp(n, lowerBound, upperBound) {\n  return Math.min(Math.max(n, lowerBound), upperBound);\n};\n\n/**\n * Creates a history object that stores locations in memory.\n */\nvar createMemoryHistory = function createMemoryHistory() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var getUserConfirmation = props.getUserConfirmation,\n      _props$initialEntries = props.initialEntries,\n      initialEntries = _props$initialEntries === undefined ? ['/'] : _props$initialEntries,\n      _props$initialIndex = props.initialIndex,\n      initialIndex = _props$initialIndex === undefined ? 0 : _props$initialIndex,\n      _props$keyLength = props.keyLength,\n      keyLength = _props$keyLength === undefined ? 6 : _props$keyLength;\n\n\n  var transitionManager = Object(__WEBPACK_IMPORTED_MODULE_3__createTransitionManager__[\"a\" /* default */])();\n\n  var setState = function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = history.entries.length;\n\n    transitionManager.notifyListeners(history.location, history.action);\n  };\n\n  var createKey = function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  };\n\n  var index = clamp(initialIndex, 0, initialEntries.length - 1);\n  var entries = initialEntries.map(function (entry) {\n    return typeof entry === 'string' ? Object(__WEBPACK_IMPORTED_MODULE_2__LocationUtils__[\"a\" /* createLocation */])(entry, undefined, createKey()) : Object(__WEBPACK_IMPORTED_MODULE_2__LocationUtils__[\"a\" /* createLocation */])(entry, undefined, entry.key || createKey());\n  });\n\n  // Public interface\n\n  var createHref = __WEBPACK_IMPORTED_MODULE_1__PathUtils__[\"b\" /* createPath */];\n\n  var push = function push(path, state) {\n    __WEBPACK_IMPORTED_MODULE_0_warning___default()(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored');\n\n    var action = 'PUSH';\n    var location = Object(__WEBPACK_IMPORTED_MODULE_2__LocationUtils__[\"a\" /* createLocation */])(path, state, createKey(), history.location);\n\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n\n      var prevIndex = history.index;\n      var nextIndex = prevIndex + 1;\n\n      var nextEntries = history.entries.slice(0);\n      if (nextEntries.length > nextIndex) {\n        nextEntries.splice(nextIndex, nextEntries.length - nextIndex, location);\n      } else {\n        nextEntries.push(location);\n      }\n\n      setState({\n        action: action,\n        location: location,\n        index: nextIndex,\n        entries: nextEntries\n      });\n    });\n  };\n\n  var replace = function replace(path, state) {\n    __WEBPACK_IMPORTED_MODULE_0_warning___default()(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored');\n\n    var action = 'REPLACE';\n    var location = Object(__WEBPACK_IMPORTED_MODULE_2__LocationUtils__[\"a\" /* createLocation */])(path, state, createKey(), history.location);\n\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n\n      history.entries[history.index] = location;\n\n      setState({ action: action, location: location });\n    });\n  };\n\n  var go = function go(n) {\n    var nextIndex = clamp(history.index + n, 0, history.entries.length - 1);\n\n    var action = 'POP';\n    var location = history.entries[nextIndex];\n\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (ok) {\n        setState({\n          action: action,\n          location: location,\n          index: nextIndex\n        });\n      } else {\n        // Mimic the behavior of DOM histories by\n        // causing a render after a cancelled POP.\n        setState();\n      }\n    });\n  };\n\n  var goBack = function goBack() {\n    return go(-1);\n  };\n\n  var goForward = function goForward() {\n    return go(1);\n  };\n\n  var canGo = function canGo(n) {\n    var nextIndex = history.index + n;\n    return nextIndex >= 0 && nextIndex < history.entries.length;\n  };\n\n  var block = function block() {\n    var prompt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    return transitionManager.setPrompt(prompt);\n  };\n\n  var listen = function listen(listener) {\n    return transitionManager.appendListener(listener);\n  };\n\n  var history = {\n    length: entries.length,\n    action: 'POP',\n    location: entries[index],\n    index: index,\n    entries: entries,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    canGo: canGo,\n    block: block,\n    listen: listen\n  };\n\n  return history;\n};\n\n/* unused harmony default export */ var _unused_webpack_default_export = (createMemoryHistory);\n\n/***/ }),\n/* 90 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react_router_es_StaticRouter__ = __webpack_require__(91);\n// Written in this round about way for babel-transform-imports\n\n\n/* unused harmony default export */ var _unused_webpack_default_export = (__WEBPACK_IMPORTED_MODULE_0_react_router_es_StaticRouter__[\"a\" /* default */]);\n\n/***/ }),\n/* 91 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_warning__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_warning___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_warning__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_invariant__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_invariant___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_invariant__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_prop_types__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_prop_types__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_history_PathUtils__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_history_PathUtils___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_history_PathUtils__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__Router__ = __webpack_require__(18);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\n\n\n\nvar normalizeLocation = function normalizeLocation(object) {\n  var _object$pathname = object.pathname,\n      pathname = _object$pathname === undefined ? '/' : _object$pathname,\n      _object$search = object.search,\n      search = _object$search === undefined ? '' : _object$search,\n      _object$hash = object.hash,\n      hash = _object$hash === undefined ? '' : _object$hash;\n\n\n  return {\n    pathname: pathname,\n    search: search === '?' ? '' : search,\n    hash: hash === '#' ? '' : hash\n  };\n};\n\nvar addBasename = function addBasename(basename, location) {\n  if (!basename) return location;\n\n  return _extends({}, location, {\n    pathname: Object(__WEBPACK_IMPORTED_MODULE_4_history_PathUtils__[\"addLeadingSlash\"])(basename) + location.pathname\n  });\n};\n\nvar stripBasename = function stripBasename(basename, location) {\n  if (!basename) return location;\n\n  var base = Object(__WEBPACK_IMPORTED_MODULE_4_history_PathUtils__[\"addLeadingSlash\"])(basename);\n\n  if (location.pathname.indexOf(base) !== 0) return location;\n\n  return _extends({}, location, {\n    pathname: location.pathname.substr(base.length)\n  });\n};\n\nvar createLocation = function createLocation(location) {\n  return typeof location === 'string' ? Object(__WEBPACK_IMPORTED_MODULE_4_history_PathUtils__[\"parsePath\"])(location) : normalizeLocation(location);\n};\n\nvar createURL = function createURL(location) {\n  return typeof location === 'string' ? location : Object(__WEBPACK_IMPORTED_MODULE_4_history_PathUtils__[\"createPath\"])(location);\n};\n\nvar staticHandler = function staticHandler(methodName) {\n  return function () {\n    __WEBPACK_IMPORTED_MODULE_1_invariant___default()(false, 'You cannot %s with <StaticRouter>', methodName);\n  };\n};\n\nvar noop = function noop() {};\n\n/**\n * The public top-level API for a \"static\" <Router>, so-called because it\n * can't actually change the current location. Instead, it just records\n * location changes in a context object. Useful mainly in testing and\n * server-rendering scenarios.\n */\n\nvar StaticRouter = function (_React$Component) {\n  _inherits(StaticRouter, _React$Component);\n\n  function StaticRouter() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, StaticRouter);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.createHref = function (path) {\n      return Object(__WEBPACK_IMPORTED_MODULE_4_history_PathUtils__[\"addLeadingSlash\"])(_this.props.basename + createURL(path));\n    }, _this.handlePush = function (location) {\n      var _this$props = _this.props,\n          basename = _this$props.basename,\n          context = _this$props.context;\n\n      context.action = 'PUSH';\n      context.location = addBasename(basename, createLocation(location));\n      context.url = createURL(context.location);\n    }, _this.handleReplace = function (location) {\n      var _this$props2 = _this.props,\n          basename = _this$props2.basename,\n          context = _this$props2.context;\n\n      context.action = 'REPLACE';\n      context.location = addBasename(basename, createLocation(location));\n      context.url = createURL(context.location);\n    }, _this.handleListen = function () {\n      return noop;\n    }, _this.handleBlock = function () {\n      return noop;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  StaticRouter.prototype.getChildContext = function getChildContext() {\n    return {\n      router: {\n        staticContext: this.props.context\n      }\n    };\n  };\n\n  StaticRouter.prototype.componentWillMount = function componentWillMount() {\n    __WEBPACK_IMPORTED_MODULE_0_warning___default()(!this.props.history, '<StaticRouter> ignores the history prop. To use a custom history, ' + 'use `import { Router }` instead of `import { StaticRouter as Router }`.');\n  };\n\n  StaticRouter.prototype.render = function render() {\n    var _props = this.props,\n        basename = _props.basename,\n        context = _props.context,\n        location = _props.location,\n        props = _objectWithoutProperties(_props, ['basename', 'context', 'location']);\n\n    var history = {\n      createHref: this.createHref,\n      action: 'POP',\n      location: stripBasename(basename, createLocation(location)),\n      push: this.handlePush,\n      replace: this.handleReplace,\n      go: staticHandler('go'),\n      goBack: staticHandler('goBack'),\n      goForward: staticHandler('goForward'),\n      listen: this.handleListen,\n      block: this.handleBlock\n    };\n\n    return __WEBPACK_IMPORTED_MODULE_2_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5__Router__[\"a\" /* default */], _extends({}, props, { history: history }));\n  };\n\n  return StaticRouter;\n}(__WEBPACK_IMPORTED_MODULE_2_react___default.a.Component);\n\nStaticRouter.propTypes = {\n  basename: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.string,\n  context: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.object.isRequired,\n  location: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.oneOfType([__WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.string, __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.object])\n};\nStaticRouter.defaultProps = {\n  basename: '',\n  location: '/'\n};\nStaticRouter.childContextTypes = {\n  router: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.object.isRequired\n};\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (StaticRouter);\n\n/***/ }),\n/* 92 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react_router_es_Switch__ = __webpack_require__(93);\n// Written in this round about way for babel-transform-imports\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0_react_router_es_Switch__[\"a\" /* default */]);\n\n/***/ }),\n/* 93 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_prop_types__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_warning__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_warning___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_warning__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_invariant__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_invariant___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_invariant__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__matchPath__ = __webpack_require__(19);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\n\n\n/**\n * The public API for rendering the first <Route> that matches.\n */\n\nvar Switch = function (_React$Component) {\n  _inherits(Switch, _React$Component);\n\n  function Switch() {\n    _classCallCheck(this, Switch);\n\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n\n  Switch.prototype.componentWillMount = function componentWillMount() {\n    __WEBPACK_IMPORTED_MODULE_3_invariant___default()(this.context.router, 'You should not use <Switch> outside a <Router>');\n  };\n\n  Switch.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    __WEBPACK_IMPORTED_MODULE_2_warning___default()(!(nextProps.location && !this.props.location), '<Switch> elements should not change from uncontrolled to controlled (or vice versa). You initially used no \"location\" prop and then provided one on a subsequent render.');\n\n    __WEBPACK_IMPORTED_MODULE_2_warning___default()(!(!nextProps.location && this.props.location), '<Switch> elements should not change from controlled to uncontrolled (or vice versa). You provided a \"location\" prop initially but omitted it on a subsequent render.');\n  };\n\n  Switch.prototype.render = function render() {\n    var route = this.context.router.route;\n    var children = this.props.children;\n\n    var location = this.props.location || route.location;\n\n    var match = void 0,\n        child = void 0;\n    __WEBPACK_IMPORTED_MODULE_0_react___default.a.Children.forEach(children, function (element) {\n      if (!__WEBPACK_IMPORTED_MODULE_0_react___default.a.isValidElement(element)) return;\n\n      var _element$props = element.props,\n          pathProp = _element$props.path,\n          exact = _element$props.exact,\n          strict = _element$props.strict,\n          sensitive = _element$props.sensitive,\n          from = _element$props.from;\n\n      var path = pathProp || from;\n\n      if (match == null) {\n        child = element;\n        match = path ? Object(__WEBPACK_IMPORTED_MODULE_4__matchPath__[\"a\" /* default */])(location.pathname, { path: path, exact: exact, strict: strict, sensitive: sensitive }) : route.match;\n      }\n    });\n\n    return match ? __WEBPACK_IMPORTED_MODULE_0_react___default.a.cloneElement(child, { location: location, computedMatch: match }) : null;\n  };\n\n  return Switch;\n}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);\n\nSwitch.contextTypes = {\n  router: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.shape({\n    route: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object.isRequired\n  }).isRequired\n};\nSwitch.propTypes = {\n  children: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.node,\n  location: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object\n};\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Switch);\n\n/***/ }),\n/* 94 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react_router_es_matchPath__ = __webpack_require__(19);\n// Written in this round about way for babel-transform-imports\n\n\n/* unused harmony default export */ var _unused_webpack_default_export = (__WEBPACK_IMPORTED_MODULE_0_react_router_es_matchPath__[\"a\" /* default */]);\n\n/***/ }),\n/* 95 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react_router_es_withRouter__ = __webpack_require__(96);\n// Written in this round about way for babel-transform-imports\n\n\n/* unused harmony default export */ var _unused_webpack_default_export = (__WEBPACK_IMPORTED_MODULE_0_react_router_es_withRouter__[\"a\" /* default */]);\n\n/***/ }),\n/* 96 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_prop_types__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_hoist_non_react_statics__ = __webpack_require__(33);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_hoist_non_react_statics___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_hoist_non_react_statics__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Route__ = __webpack_require__(31);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\n\n\n\n\n\n/**\n * A public higher-order component to access the imperative API\n */\nvar withRouter = function withRouter(Component) {\n  var C = function C(props) {\n    var wrappedComponentRef = props.wrappedComponentRef,\n        remainingProps = _objectWithoutProperties(props, ['wrappedComponentRef']);\n\n    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__Route__[\"a\" /* default */], { render: function render(routeComponentProps) {\n        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(Component, _extends({}, remainingProps, routeComponentProps, { ref: wrappedComponentRef }));\n      } });\n  };\n\n  C.displayName = 'withRouter(' + (Component.displayName || Component.name) + ')';\n  C.WrappedComponent = Component;\n  C.propTypes = {\n    wrappedComponentRef: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func\n  };\n\n  return __WEBPACK_IMPORTED_MODULE_2_hoist_non_react_statics___default()(C, Component);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (withRouter);\n\n/***/ }),\n/* 97 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 98 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__actionTypes__ = __webpack_require__(35);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__synth_synth__ = __webpack_require__(21);\nvar initialState={song:1,seed:\"a seed\",//1523983162306\nplayButtonText:\"Play\",generatedSettings:null,isPlaying:true};/* harmony default export */ __webpack_exports__[\"a\"] = (function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments[1];switch(action.type){case __WEBPACK_IMPORTED_MODULE_0__actionTypes__[\"b\" /* SYNTH_PLAY */]:{state=Object.assign({},state,{generatedSettings:action.payload,playButtonText:\"Stop\",isPlaying:true});break;}case __WEBPACK_IMPORTED_MODULE_0__actionTypes__[\"c\" /* SYNTH_STOP */]:{__WEBPACK_IMPORTED_MODULE_1__synth_synth__[\"c\" /* stop */]();state=Object.assign({},state,{playButtonText:\"Play\",isPlaying:false});break;}case __WEBPACK_IMPORTED_MODULE_0__actionTypes__[\"e\" /* UPDATE_SEED */]:{var newSeed=action.payload;state=Object.assign({},state,{seed:newSeed});break;}case __WEBPACK_IMPORTED_MODULE_0__actionTypes__[\"d\" /* UPDATE_GENERATED_SETTINGS */]:{var generatedSettings=action.payload;state=Object.assign({},state,{generatedSettings:generatedSettings});break;}case __WEBPACK_IMPORTED_MODULE_0__actionTypes__[\"a\" /* SET_SONG */]:{var newSong=action.payload;state=Object.assign({},state,{song:newSong});break;}default:break;}return state;});\n\n/***/ }),\n/* 99 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return APP_NAME; });\nvar APP_NAME=\"Synaesthesia\";\n\n/***/ }),\n/* 100 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return MODULE_NAME; });\nvar MODULE_NAME=\"App\";\n\n/***/ }),\n/* 101 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(36),\n    now = __webpack_require__(102),\n    toNumber = __webpack_require__(104);\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nmodule.exports = debounce;\n\n\n/***/ }),\n/* 102 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar root = __webpack_require__(37);\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nmodule.exports = now;\n\n\n/***/ }),\n/* 103 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))\n\n/***/ }),\n/* 104 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(36),\n    isSymbol = __webpack_require__(105);\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n\n\n/***/ }),\n/* 105 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseGetTag = __webpack_require__(106),\n    isObjectLike = __webpack_require__(109);\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n\n\n/***/ }),\n/* 106 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Symbol = __webpack_require__(38),\n    getRawTag = __webpack_require__(107),\n    objectToString = __webpack_require__(108);\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n\n\n/***/ }),\n/* 107 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Symbol = __webpack_require__(38);\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n\n\n/***/ }),\n/* 108 */\n/***/ (function(module, exports) {\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n\n\n/***/ }),\n/* 109 */\n/***/ (function(module, exports) {\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n\n\n/***/ }),\n/* 110 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__funkyDownTempo__ = __webpack_require__(111);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__drone__ = __webpack_require__(118);\n/* harmony default export */ __webpack_exports__[\"a\"] = ({1:__WEBPACK_IMPORTED_MODULE_0__funkyDownTempo__,2:__WEBPACK_IMPORTED_MODULE_1__drone__});\n\n/***/ }),\n/* 111 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"play\", function() { return play; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tone__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tone___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_tone__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__scales__ = __webpack_require__(39);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__parts__ = __webpack_require__(112);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__instruments__ = __webpack_require__(40);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__rythyms__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__utils__ = __webpack_require__(10);\nvar reverb=new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.Freeverb().toMaster();reverb.receive(\"reverb\");var play=function play(visCallback){__WEBPACK_IMPORTED_MODULE_0_tone___default.a.Master.volume.value=-32;var keyType=__WEBPACK_IMPORTED_MODULE_1__scales__[\"f\" /* getRandomScaleType */]();var songKey={root:__WEBPACK_IMPORTED_MODULE_1__scales__[\"e\" /* getRandomRootNote */](),type:keyType.intervals,typeName:keyType.type,chordOctave:__WEBPACK_IMPORTED_MODULE_5__utils__[\"c\" /* randomIntBetween */](2,3)};var progressionIntervals=__WEBPACK_IMPORTED_MODULE_5__utils__[\"b\" /* randomFromArray */](__WEBPACK_IMPORTED_MODULE_1__scales__[\"b\" /* chordProgressions */]);var chordTypesToUseInProgression=__WEBPACK_IMPORTED_MODULE_1__scales__[\"d\" /* getRandomChordTypesForProgression */](progressionIntervals);var chordProgression=__WEBPACK_IMPORTED_MODULE_1__scales__[\"c\" /* getChordProgressionForKey */](songKey,progressionIntervals,chordTypesToUseInProgression);var possibleChordSectionLengths=[1,2,4,8];var chordProgressionBars=__WEBPACK_IMPORTED_MODULE_5__utils__[\"b\" /* randomFromArray */](possibleChordSectionLengths);var possibleChordPads=[__WEBPACK_IMPORTED_MODULE_3__instruments__[\"a\" /* default */].pads.SimpleSine,__WEBPACK_IMPORTED_MODULE_3__instruments__[\"a\" /* default */].pads.SwirlySawtoothChorusWithSubBass,__WEBPACK_IMPORTED_MODULE_3__instruments__[\"a\" /* default */].pads.SoftSquareFm];var possibleBassInstruments=[__WEBPACK_IMPORTED_MODULE_3__instruments__[\"a\" /* default */].bass.FastAttackSquare,__WEBPACK_IMPORTED_MODULE_3__instruments__[\"a\" /* default */].presets.Bassy];var possibleMotifInstruments=[__WEBPACK_IMPORTED_MODULE_3__instruments__[\"a\" /* default */].presets.AM_Tiny,__WEBPACK_IMPORTED_MODULE_3__instruments__[\"a\" /* default */].presets.Kalimba];var kickRythym=__WEBPACK_IMPORTED_MODULE_4__rythyms__[\"c\" /* randomKickRythym */]();var hihatRythym=__WEBPACK_IMPORTED_MODULE_4__rythyms__[\"b\" /* randomHiHatRythym */]();var shakerRythym=__WEBPACK_IMPORTED_MODULE_4__rythyms__[\"f\" /* randomShakerRythym */]();var openHatRythym=__WEBPACK_IMPORTED_MODULE_4__rythyms__[\"e\" /* randomOpenHatRythym */]();var snareRythym=__WEBPACK_IMPORTED_MODULE_4__rythyms__[\"g\" /* randomSnareRythym */]();var bassLinePatterns=[];for(var i=0;i<chordProgression.length;i++){bassLinePatterns.push(__WEBPACK_IMPORTED_MODULE_4__rythyms__[\"a\" /* randomBassRythym */]());}var motifPatterns=[];for(var _i=0;_i<chordProgression.length;_i++){motifPatterns.push(__WEBPACK_IMPORTED_MODULE_4__rythyms__[\"d\" /* randomMotifRythym */]());}var chordInstrument=new(__WEBPACK_IMPORTED_MODULE_5__utils__[\"b\" /* randomFromArray */](possibleChordPads))();var bassInstrument=new(__WEBPACK_IMPORTED_MODULE_5__utils__[\"b\" /* randomFromArray */](possibleBassInstruments))();var motifInstrument=new(__WEBPACK_IMPORTED_MODULE_5__utils__[\"b\" /* randomFromArray */](possibleMotifInstruments))();var openHatFrequency=__WEBPACK_IMPORTED_MODULE_0_tone___default.a.Frequency(songKey.root+\"3\").toFrequency();var generatedSettings={bpm:__WEBPACK_IMPORTED_MODULE_5__utils__[\"c\" /* randomIntBetween */](70,90),swing:Math.random(),key:songKey.root+\" (\"+songKey.typeName+\")\",chordOctave:songKey.chordOctave,chordProgression:progressionIntervals,chordProgressionBars:chordProgressionBars,chordTypesToUseInProgression:chordTypesToUseInProgression,chordProgressionNotes:__WEBPACK_IMPORTED_MODULE_1__scales__[\"h\" /* rootNotesFromChordProgression */](chordProgression),chordInstrument:chordInstrument.constructor.name,bassInstrument:bassInstrument.constructor.name,motifInstrument:motifInstrument.constructor.name};var changeRythym=function changeRythym(sequencer,newRythym){var originalLength=sequencer.length;newRythym.forEach(function(item,index){sequencer.at(index,item);});var numberToRemove=originalLength-newRythym.length;for(var _i2=numberToRemove;_i2>0;_i2--){sequencer.remove(newRythym.length+_i2-1);}};__WEBPACK_IMPORTED_MODULE_2__parts__[\"b\" /* addDrums */](\"0:0:0\",songKey.root+\"0\",new __WEBPACK_IMPORTED_MODULE_3__instruments__[\"a\" /* default */].drums.KickDrum(),kickRythym,1,true,function(sequencer){changeRythym(sequencer,__WEBPACK_IMPORTED_MODULE_4__rythyms__[\"c\" /* randomKickRythym */]());});__WEBPACK_IMPORTED_MODULE_2__parts__[\"b\" /* addDrums */](\"0:0:0\",undefined,new __WEBPACK_IMPORTED_MODULE_3__instruments__[\"a\" /* default */].drums.Slap(),snareRythym,0.9,true,function(sequencer){changeRythym(sequencer,__WEBPACK_IMPORTED_MODULE_4__rythyms__[\"g\" /* randomSnareRythym */]());});__WEBPACK_IMPORTED_MODULE_2__parts__[\"b\" /* addDrums */](\"0:0:0\",undefined,new __WEBPACK_IMPORTED_MODULE_3__instruments__[\"a\" /* default */].drums.HiHat(),hihatRythym,0.9,true,function(sequencer){changeRythym(sequencer,__WEBPACK_IMPORTED_MODULE_4__rythyms__[\"b\" /* randomHiHatRythym */]());});__WEBPACK_IMPORTED_MODULE_2__parts__[\"b\" /* addDrums */](\"0:0:0\",undefined,new __WEBPACK_IMPORTED_MODULE_3__instruments__[\"a\" /* default */].drums.Shaker(),shakerRythym,0.8,true,function(sequencer){changeRythym(sequencer,__WEBPACK_IMPORTED_MODULE_4__rythyms__[\"f\" /* randomShakerRythym */]());});__WEBPACK_IMPORTED_MODULE_2__parts__[\"b\" /* addDrums */](\"0:0:0\",undefined,new __WEBPACK_IMPORTED_MODULE_3__instruments__[\"a\" /* default */].drums.OpenHat(openHatFrequency),openHatRythym,0.8,true,function(sequencer){changeRythym(sequencer,__WEBPACK_IMPORTED_MODULE_4__rythyms__[\"e\" /* randomOpenHatRythym */]());});__WEBPACK_IMPORTED_MODULE_2__parts__[\"a\" /* addChordProgression */](\"0:0:0\",chordProgression,chordInstrument,chordProgressionBars+\"m\",chordProgressionBars+\"m\",true,visCallback);var notesPerChord=[];var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=bassLinePatterns[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var bassLinePattern=_step.value;notesPerChord.push(bassLinePattern.filter(function(hit){return hit===1;}).length);}}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(!_iteratorNormalCompletion&&_iterator.return){_iterator.return();}}finally{if(_didIteratorError){throw _iteratorError;}}}var bassOctave=songKey.chordOctave-1;__WEBPACK_IMPORTED_MODULE_2__parts__[\"c\" /* addRepeatingSoloPart */](\"0:0:0\",__WEBPACK_IMPORTED_MODULE_1__scales__[\"i\" /* smoothBassLineForChordProgression */](notesPerChord,chordProgression,songKey,bassOctave),bassInstrument,\"4n\",bassLinePatterns,chordProgressionBars,true);var motifOctave=songKey.chordOctave+1;__WEBPACK_IMPORTED_MODULE_2__parts__[\"c\" /* addRepeatingSoloPart */](\"0:0:0\",__WEBPACK_IMPORTED_MODULE_1__scales__[\"g\" /* motifForChordProgression */](notesPerChord,chordProgression,songKey,motifOctave),motifInstrument,1.3,motifPatterns,chordProgressionBars,true);// const evolutionLoop = new Tone.Loop(function() {\n//   const parts = [kickPart, snarePart, hihatPart, shakerPart, openHatPart];\n//   const part = utils.randomFromArray(parts);\n//   part.mutate();\n// }, \"4m\");\n// evolutionLoop.start(0);\nreturn generatedSettings;};\n\n/***/ }),\n/* 112 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return addChordProgression; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return addDrums; });\n/* unused harmony export addSoloPart */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return addRepeatingSoloPart; });\n/* unused harmony export Part */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tone__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tone___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_tone__);\nvar addChordProgression=function addChordProgression(startTime,chordProgression,instrument,noteLength,interval,shouldLoop,visCallback){var loop=new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.Loop(function(time){//Take first chord\nvar currentChord=chordProgression.shift();//add chord to back of queue\nchordProgression.push(currentChord);//play it\ninstrument.triggerAttackRelease(currentChord,noteLength,time);__WEBPACK_IMPORTED_MODULE_0_tone___default.a.Draw.schedule(function(){//the callback synced to the animation frame at the given time\nif(visCallback){visCallback(currentChord);}},time);},interval);loop.loop=shouldLoop;loop.start(startTime);};var addDrums=function addDrums(startTime,note,instrument,pattern,probability,shouldLoop,mutationFunction){var sequencer=new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.Sequence(function(time,hit){if(hit===1){instrument.triggerAttackRelease(note,\"16n\",time);}},pattern,\"16n\");sequencer.probability=probability;sequencer.loop=shouldLoop;sequencer.start(startTime);return new Part(sequencer,mutationFunction);};var addSoloPart=function addSoloPart(startTime,notes,instrument,noteLength,pattern,probability,shouldLoop){var sequencer=new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.Sequence(function(time,hit){if(hit===1){var note=notes.shift();notes.push(note);instrument.triggerAttackRelease(note,noteLength,time);}},pattern,\"16n\");sequencer.probability=probability;sequencer.loop=shouldLoop;sequencer.start(startTime);};var addRepeatingSoloPart=function addRepeatingSoloPart(startTime,notes,instrument,noteLength,patterns,repeatTimes,shouldLoop){var expandedSequence=[];var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=notes[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var section=_step.value;for(var ri=0;ri<repeatTimes;ri++){for(var ni=0;ni<section.length;ni++){var note=section[ni];expandedSequence.push(note);}}}}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(!_iteratorNormalCompletion&&_iterator.return){_iterator.return();}}finally{if(_didIteratorError){throw _iteratorError;}}}var expandedPattern=[];var _iteratorNormalCompletion2=true;var _didIteratorError2=false;var _iteratorError2=undefined;try{for(var _iterator2=patterns[Symbol.iterator](),_step2;!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=true){var _section=_step2.value;for(var _ri=0;_ri<repeatTimes;_ri++){for(var _ni=0;_ni<_section.length;_ni++){var rythym=_section[_ni];expandedPattern.push(rythym);}}}}catch(err){_didIteratorError2=true;_iteratorError2=err;}finally{try{if(!_iteratorNormalCompletion2&&_iterator2.return){_iterator2.return();}}finally{if(_didIteratorError2){throw _iteratorError2;}}}var sequencer=new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.Sequence(function(time,hit){if(hit===1){var note=expandedSequence.shift();expandedSequence.push(note);instrument.triggerAttackRelease(note,noteLength,time);}},expandedPattern,\"16n\");sequencer.loop=shouldLoop;sequencer.start(startTime);};function Part(mutationPayload,mutationFunction){this.mutationFunction=mutationFunction;this.mutate=function(){this.mutationFunction(mutationPayload);};}\n\n/***/ }),\n/* 113 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SimpleSine\", function() { return SimpleSine; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SoftSquareFm\", function() { return SoftSquareFm; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SwirlySawtoothChorusWithSubBass\", function() { return SwirlySawtoothChorusWithSubBass; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tone__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tone___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_tone__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__bass__ = __webpack_require__(41);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__instrument__ = __webpack_require__(7);\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var SimpleSine=function(_Instrument){_inherits(SimpleSine,_Instrument);function SimpleSine(){var volume=arguments.length>0&&arguments[0]!==undefined?arguments[0]:24;_classCallCheck(this,SimpleSine);var _this=_possibleConstructorReturn(this,(SimpleSine.__proto__||Object.getPrototypeOf(SimpleSine)).call(this,new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.PolySynth(6,__WEBPACK_IMPORTED_MODULE_0_tone___default.a.Synth),volume));_this.synth.set({oscillator:{type:\"fatsine\"},envelope:{attack:0.2,decay:0.1,sustain:1,release:1},portamento:0.2});_this.synth.volume.value=10;_this.synth.send(\"reverb\",-12);return _this;}return SimpleSine;}(__WEBPACK_IMPORTED_MODULE_2__instrument__[\"a\" /* Instrument */]);var SoftSquareFm=function(_Instrument2){_inherits(SoftSquareFm,_Instrument2);function SoftSquareFm(){var volume=arguments.length>0&&arguments[0]!==undefined?arguments[0]:24;_classCallCheck(this,SoftSquareFm);var _this2=_possibleConstructorReturn(this,(SoftSquareFm.__proto__||Object.getPrototypeOf(SoftSquareFm)).call(this,new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.PolySynth(6,__WEBPACK_IMPORTED_MODULE_0_tone___default.a.Synth),volume));_this2.synth.set({oscillator:{type:\"fmsquare2\"},envelope:{attack:0.2,decay:0.1,sustain:1,release:1},portamento:0});_this2.synth.volume.value=8;var filter=new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.Filter(400,\"lowpass\").toMaster();_this2.synth.send(\"reverb\",-12);_this2.synth.connect(filter);return _this2;}return SoftSquareFm;}(__WEBPACK_IMPORTED_MODULE_2__instrument__[\"a\" /* Instrument */]);var SwirlySawtoothChorusWithSubBass=function SwirlySawtoothChorusWithSubBass(){var chordSynth=new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.PolySynth(6,__WEBPACK_IMPORTED_MODULE_0_tone___default.a.Synth);chordSynth.set({oscillator:{type:\"fatsawtooth\"},envelope:{attack:0.2,decay:0.1,sustain:1,release:1},portamento:0.2});var filter=new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.Filter(250,\"lowpass\").toMaster();var lfo=new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.LFO(\"8m\",250,1600);lfo.start();lfo.connect(filter.frequency);var chorus=new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.Chorus(\"1:0:0\",2.5,1).toMaster();var reverb=new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.Freeverb().toMaster();var lfoReverbDampening=new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.LFO(\"8m\",400,14000);lfoReverbDampening.phase=90;lfoReverbDampening.start();lfoReverbDampening.connect(reverb.dampening);chordSynth.chain(chorus,reverb,filter);//Add bass for the root note\nvar bassSynth=__WEBPACK_IMPORTED_MODULE_1__bass__[\"subBass\"]();bassSynth.volume.value=bassSynth.volume.value-12;this.triggerAttackRelease=function(chord,duration,time){var lowRootNote=__WEBPACK_IMPORTED_MODULE_0_tone___default.a.Frequency(chord[0]).transpose(-12);chordSynth.triggerAttackRelease(chord,duration,time);bassSynth.triggerAttackRelease(lowRootNote,duration,time);};};\n\n/***/ }),\n/* 114 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"KickDrum\", function() { return KickDrum; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HiHat\", function() { return HiHat; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Slap\", function() { return Slap; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OpenHat\", function() { return OpenHat; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Shaker\", function() { return Shaker; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DampenedOpenHat\", function() { return DampenedOpenHat; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Test\", function() { return Test; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tone__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tone___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_tone__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__instrument__ = __webpack_require__(7);\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var KickDrum=function(_Instrument){_inherits(KickDrum,_Instrument);function KickDrum(){_classCallCheck(this,KickDrum);var _this=_possibleConstructorReturn(this,(KickDrum.__proto__||Object.getPrototypeOf(KickDrum)).call(this,new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.MembraneSynth({pitchDecay:0.1}),28));var comp=new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.Compressor(-30,12).toMaster();_this.synth.connect(comp);return _this;}return KickDrum;}(__WEBPACK_IMPORTED_MODULE_1__instrument__[\"a\" /* Instrument */]);var HiHat=function(_Instrument2){_inherits(HiHat,_Instrument2);function HiHat(addReverb){_classCallCheck(this,HiHat);var _this2=_possibleConstructorReturn(this,(HiHat.__proto__||Object.getPrototypeOf(HiHat)).call(this,new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.NoiseSynth(),16));if(addReverb){_this2.synth.send(\"reverb\",-12);}var filter=new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.Filter(8000,\"highpass\").toMaster();_this2.synth.connect(filter);return _this2;}return HiHat;}(__WEBPACK_IMPORTED_MODULE_1__instrument__[\"a\" /* Instrument */]);var Slap=function(_Instrument3){_inherits(Slap,_Instrument3);function Slap(addReverb){_classCallCheck(this,Slap);var _this3=_possibleConstructorReturn(this,(Slap.__proto__||Object.getPrototypeOf(Slap)).call(this,new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.NoiseSynth({noise:{type:\"white\",playbackRate:5},envelope:{attack:0.001,decay:0.3,sustain:0,release:0.3}}),14));if(addReverb){_this3.synth.send(\"reverb\",-12);}var filter=new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.Filter(500,\"lowpass\").toMaster();_this3.synth.connect(filter);return _this3;}return Slap;}(__WEBPACK_IMPORTED_MODULE_1__instrument__[\"a\" /* Instrument */]);var OpenHat=function(_Instrument4){_inherits(OpenHat,_Instrument4);function OpenHat(frequency){_classCallCheck(this,OpenHat);return _possibleConstructorReturn(this,(OpenHat.__proto__||Object.getPrototypeOf(OpenHat)).call(this,new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.MetalSynth({frequency:frequency}),10));}return OpenHat;}(__WEBPACK_IMPORTED_MODULE_1__instrument__[\"a\" /* Instrument */]);var Shaker=function(_Instrument5){_inherits(Shaker,_Instrument5);function Shaker(frequency){_classCallCheck(this,Shaker);return _possibleConstructorReturn(this,(Shaker.__proto__||Object.getPrototypeOf(Shaker)).call(this,new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.MetalSynth({envelope:{attack:0.1,decay:0.4,release:0.3},frequency:frequency,//harmonicity: 5.1,\nmodulationIndex:64,resonance:3000,octaves:1.5}),5));}return Shaker;}(__WEBPACK_IMPORTED_MODULE_1__instrument__[\"a\" /* Instrument */]);var DampenedOpenHat=function(_Instrument6){_inherits(DampenedOpenHat,_Instrument6);function DampenedOpenHat(frequency){_classCallCheck(this,DampenedOpenHat);return _possibleConstructorReturn(this,(DampenedOpenHat.__proto__||Object.getPrototypeOf(DampenedOpenHat)).call(this,new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.MetalSynth({frequency:frequency,//harmonicity: 5.1,\nmodulationIndex:32,resonance:1000,octaves:1.5}),8));}return DampenedOpenHat;}(__WEBPACK_IMPORTED_MODULE_1__instrument__[\"a\" /* Instrument */]);var Test=function(_Instrument7){_inherits(Test,_Instrument7);function Test(){_classCallCheck(this,Test);return _possibleConstructorReturn(this,(Test.__proto__||Object.getPrototypeOf(Test)).call(this,new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.MetalSynth({frequency:200}),16));}return Test;}(__WEBPACK_IMPORTED_MODULE_1__instrument__[\"a\" /* Instrument */]);\n\n/***/ }),\n/* 115 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SimpleSine\", function() { return SimpleSine; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tone__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tone___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_tone__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__instrument__ = __webpack_require__(7);\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var SimpleSine=function(_Instrument){_inherits(SimpleSine,_Instrument);function SimpleSine(){_classCallCheck(this,SimpleSine);return _possibleConstructorReturn(this,(SimpleSine.__proto__||Object.getPrototypeOf(SimpleSine)).call(this,new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.Synth({oscillator:{type:\"sine\"},envelope:{attack:0.02,decay:0,sustain:1,release:1}}),18));}return SimpleSine;}(__WEBPACK_IMPORTED_MODULE_1__instrument__[\"a\" /* Instrument */]);\n\n/***/ }),\n/* 116 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Tiny\", function() { return Tiny; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Harmonics\", function() { return Harmonics; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AM_Tiny\", function() { return AM_Tiny; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FM_ElectricCello\", function() { return FM_ElectricCello; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Kalimba\", function() { return Kalimba; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BassGuitar\", function() { return BassGuitar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Bassy\", function() { return Bassy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Coolguy\", function() { return Coolguy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Bah\", function() { return Bah; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AlienChorus\", function() { return AlienChorus; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Gravel\", function() { return Gravel; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tone__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tone___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_tone__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__instrument__ = __webpack_require__(7);\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}// http://tonejs.github.io/Presets/\nvar Tiny=function(_Instrument){_inherits(Tiny,_Instrument);function Tiny(){_classCallCheck(this,Tiny);var _this=_possibleConstructorReturn(this,(Tiny.__proto__||Object.getPrototypeOf(Tiny)).call(this,new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.PolySynth(6,__WEBPACK_IMPORTED_MODULE_0_tone___default.a.Synth),24));_this.synth.set({harmonicity:2,oscillator:{type:\"amsine2\",modulationType:\"sine\",harmonicity:1.01},envelope:{attack:0.006,decay:4,sustain:0.04,release:1.2},modulation:{volume:13,type:\"amsine2\",modulationType:\"sine\",harmonicity:12},modulationEnvelope:{attack:0.006,decay:0.2,sustain:0.2,release:0.4}});_this.synth.volume.value=10;_this.synth.send(\"reverb\",-12);return _this;}return Tiny;}(__WEBPACK_IMPORTED_MODULE_1__instrument__[\"a\" /* Instrument */]);var Harmonics=function(_Instrument2){_inherits(Harmonics,_Instrument2);function Harmonics(){_classCallCheck(this,Harmonics);var _this2=_possibleConstructorReturn(this,(Harmonics.__proto__||Object.getPrototypeOf(Harmonics)).call(this,new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.PolySynth(6,__WEBPACK_IMPORTED_MODULE_0_tone___default.a.AMSynth),24));_this2.synth.set({volume:16,harmonicity:3.999,oscillator:{type:\"square\"},envelope:{attack:0.03,decay:0.3,sustain:0.7,release:0.8},modulation:{volume:12,type:\"square6\"},modulationEnvelope:{attack:2,decay:3,sustain:0.8,release:0.1}});_this2.synth.volume.value=10;_this2.synth.send(\"reverb\",-12);return _this2;}return Harmonics;}(__WEBPACK_IMPORTED_MODULE_1__instrument__[\"a\" /* Instrument */]);var AM_Tiny=function(_Instrument3){_inherits(AM_Tiny,_Instrument3);function AM_Tiny(){_classCallCheck(this,AM_Tiny);var _this3=_possibleConstructorReturn(this,(AM_Tiny.__proto__||Object.getPrototypeOf(AM_Tiny)).call(this,new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.PolySynth(6,__WEBPACK_IMPORTED_MODULE_0_tone___default.a.AMSynth),24));_this3.synth.set({volume:14,harmonicity:2,oscillator:{type:\"amsine2\",modulationType:\"sine\",harmonicity:1.01},envelope:{attack:0.006,decay:4,sustain:0.04,release:1.2},modulation:{volume:13,type:\"amsine2\",modulationType:\"sine\",harmonicity:12},modulationEnvelope:{attack:0.006,decay:0.2,sustain:0.2,release:0.4}});_this3.synth.volume.value=14;_this3.synth.send(\"reverb\",-12);return _this3;}return AM_Tiny;}(__WEBPACK_IMPORTED_MODULE_1__instrument__[\"a\" /* Instrument */]);var FM_ElectricCello=function(_Instrument4){_inherits(FM_ElectricCello,_Instrument4);function FM_ElectricCello(){_classCallCheck(this,FM_ElectricCello);var _this4=_possibleConstructorReturn(this,(FM_ElectricCello.__proto__||Object.getPrototypeOf(FM_ElectricCello)).call(this,new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.PolySynth(6,__WEBPACK_IMPORTED_MODULE_0_tone___default.a.FMSynth),24));_this4.synth.set({volume:20,harmonicity:3.01,modulationIndex:14,oscillator:{type:\"triangle\"},envelope:{attack:0.2,decay:0.3,sustain:0.9,release:1.2},modulation:{type:\"square\"},modulationEnvelope:{attack:0.01,decay:0.5,sustain:0.2,release:0.1}});_this4.synth.volume.value=10;_this4.synth.send(\"reverb\",-12);return _this4;}return FM_ElectricCello;}(__WEBPACK_IMPORTED_MODULE_1__instrument__[\"a\" /* Instrument */]);var Kalimba=function(_Instrument5){_inherits(Kalimba,_Instrument5);function Kalimba(){_classCallCheck(this,Kalimba);return _possibleConstructorReturn(this,(Kalimba.__proto__||Object.getPrototypeOf(Kalimba)).call(this,new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.FMSynth({harmonicity:8,modulationIndex:2,oscillator:{type:\"sine\"},envelope:{attack:0.001,decay:2,sustain:0.1,release:2},modulation:{type:\"square\"},modulationEnvelope:{attack:0.002,decay:0.2,sustain:0,release:0.2}}),18));}return Kalimba;}(__WEBPACK_IMPORTED_MODULE_1__instrument__[\"a\" /* Instrument */]);var BassGuitar=function(_Instrument6){_inherits(BassGuitar,_Instrument6);function BassGuitar(){_classCallCheck(this,BassGuitar);return _possibleConstructorReturn(this,(BassGuitar.__proto__||Object.getPrototypeOf(BassGuitar)).call(this,new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.MonoSynth({oscillator:{type:\"fmsquare5\",modulationType:\"triangle\",modulationIndex:2,harmonicity:0.501},filter:{Q:1,type:\"lowpass\",rolloff:-24},envelope:{attack:0.01,decay:0.1,sustain:0.4,release:2},filterEnvelope:{attack:0.01,decay:0.1,sustain:0.8,release:1.5,baseFrequency:50,octaves:4.4}}),18));}return BassGuitar;}(__WEBPACK_IMPORTED_MODULE_1__instrument__[\"a\" /* Instrument */]);var Bassy=function(_Instrument7){_inherits(Bassy,_Instrument7);function Bassy(){_classCallCheck(this,Bassy);return _possibleConstructorReturn(this,(Bassy.__proto__||Object.getPrototypeOf(Bassy)).call(this,new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.MonoSynth({portamento:0.08,oscillator:{partials:[2,1,3,2,0.4]},filter:{Q:4,type:\"lowpass\",rolloff:-48},envelope:{attack:0.04,decay:0.06,sustain:0.4,release:1},filterEnvelope:{attack:0.01,decay:0.1,sustain:0.6,release:1.5,baseFrequency:50,octaves:3.4}}),18));}return Bassy;}(__WEBPACK_IMPORTED_MODULE_1__instrument__[\"a\" /* Instrument */]);var Coolguy=function(_Instrument8){_inherits(Coolguy,_Instrument8);function Coolguy(){_classCallCheck(this,Coolguy);var _this8=_possibleConstructorReturn(this,(Coolguy.__proto__||Object.getPrototypeOf(Coolguy)).call(this,new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.PolySynth(6,__WEBPACK_IMPORTED_MODULE_0_tone___default.a.MonoSynth),24));_this8.synth.set({oscillator:{type:\"pwm\",modulationFrequency:1},filter:{Q:6,rolloff:-24},envelope:{attack:0.025,decay:0.3,sustain:0.9,release:2},filterEnvelope:{attack:0.245,decay:0.131,sustain:0.5,release:2,baseFrequency:20,octaves:7.2,exponent:2}});_this8.synth.volume.value=10;_this8.synth.send(\"reverb\",-12);return _this8;}return Coolguy;}(__WEBPACK_IMPORTED_MODULE_1__instrument__[\"a\" /* Instrument */]);var Bah=function(_Instrument9){_inherits(Bah,_Instrument9);function Bah(){_classCallCheck(this,Bah);var _this9=_possibleConstructorReturn(this,(Bah.__proto__||Object.getPrototypeOf(Bah)).call(this,new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.PolySynth(6,__WEBPACK_IMPORTED_MODULE_0_tone___default.a.MonoSynth),24));_this9.synth.set({volume:24,oscillator:{type:\"sawtooth\"},filter:{Q:2,type:\"bandpass\",rolloff:-24},envelope:{attack:0.01,decay:0.1,sustain:0.2,release:0.6},filterEnvelope:{attack:0.02,decay:0.4,sustain:1,release:0.7,releaseCurve:\"linear\",baseFrequency:20,octaves:5}});return _this9;}return Bah;}(__WEBPACK_IMPORTED_MODULE_1__instrument__[\"a\" /* Instrument */]);var AlienChorus=function(_Instrument10){_inherits(AlienChorus,_Instrument10);function AlienChorus(){_classCallCheck(this,AlienChorus);var _this10=_possibleConstructorReturn(this,(AlienChorus.__proto__||Object.getPrototypeOf(AlienChorus)).call(this,new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.PolySynth(6,__WEBPACK_IMPORTED_MODULE_0_tone___default.a.Synth),24));_this10.synth.set({oscillator:{type:\"fatsine4\",spread:60,count:10},envelope:{attack:0.4,decay:0.01,sustain:1,attackCurve:\"sine\",releaseCurve:\"sine\",release:0.4}});_this10.synth.volume.value=10;_this10.synth.send(\"reverb\",-12);return _this10;}return AlienChorus;}(__WEBPACK_IMPORTED_MODULE_1__instrument__[\"a\" /* Instrument */]);var Gravel=function(_Instrument11){_inherits(Gravel,_Instrument11);function Gravel(){_classCallCheck(this,Gravel);var _this11=_possibleConstructorReturn(this,(Gravel.__proto__||Object.getPrototypeOf(Gravel)).call(this,new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.PolySynth(6,__WEBPACK_IMPORTED_MODULE_0_tone___default.a.NoiseSynth),24));_this11.synth.set({noise:{type:\"pink\",playbackRate:0.1},envelope:{attack:0.5,decay:2,sustain:0.5,release:3}});_this11.synth.volume.value=10;_this11.synth.send(\"reverb\",-12);return _this11;}return Gravel;}(__WEBPACK_IMPORTED_MODULE_1__instrument__[\"a\" /* Instrument */]);\n\n/***/ }),\n/* 117 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return randomMotifRythym; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return randomHiHatRythym; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return randomSnareRythym; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return randomKickRythym; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return randomBassRythym; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return randomShakerRythym; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return randomOpenHatRythym; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils__ = __webpack_require__(10);\nvar kicks=[[1,0,0,0],[1,0,1,0,0,1,0,0,1,0,0,0,1,0,0,0],[1,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0],[1,1,0,0,1,0,0,0,1,0,0,0,1,0,0,0],[1,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0]];var snares=[[0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,1,0,1,0]];var hiHats=[[0,1,0,0],[0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,1],[0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0],[0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,1],[0,0,1,0,0,0,1,0,0,1,1,0,0,0,1,0]];var bass=[[1,1,0,0,0,0,1,0,1,0,0,0,0,0,0,0],[1,0,0,1,0,0,1,0,0,0,0,0,1,0,0,0],[1,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0],[1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0],[1,0,1,0,0,1,0,0,0,0,1,0,0,0,0,0],[1,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0],[1,0,1,0,0,1,0,0,0,0,0,0,1,0,0,0],[1,0,1,0,0,1,1,0,0,1,0,0,1,1,0,0],[1,0,0,0,0,1,1,0,0,1,0,0,1,1,0,0]];var shakers=[[1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0],[1,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0],[1,0,1,1,0,0,1,0,1,0,0,0,1,0,1,0],[1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0]];var openHats=[[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0]];var motifs=[[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0]];var randomMotifRythym=function randomMotifRythym(){return __WEBPACK_IMPORTED_MODULE_0__utils__[\"b\" /* randomFromArray */](motifs);};var randomHiHatRythym=function randomHiHatRythym(){return __WEBPACK_IMPORTED_MODULE_0__utils__[\"b\" /* randomFromArray */](hiHats);};var randomSnareRythym=function randomSnareRythym(){return __WEBPACK_IMPORTED_MODULE_0__utils__[\"b\" /* randomFromArray */](snares);};var randomKickRythym=function randomKickRythym(){return __WEBPACK_IMPORTED_MODULE_0__utils__[\"b\" /* randomFromArray */](kicks);};var randomBassRythym=function randomBassRythym(){return __WEBPACK_IMPORTED_MODULE_0__utils__[\"b\" /* randomFromArray */](bass);};var randomShakerRythym=function randomShakerRythym(){return __WEBPACK_IMPORTED_MODULE_0__utils__[\"b\" /* randomFromArray */](shakers);};var randomOpenHatRythym=function randomOpenHatRythym(){return __WEBPACK_IMPORTED_MODULE_0__utils__[\"b\" /* randomFromArray */](openHats);};\n\n/***/ }),\n/* 118 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"play\", function() { return play; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tone__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tone___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_tone__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utils__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__scales__ = __webpack_require__(39);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__instruments__ = __webpack_require__(40);\nfunction _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}var fmOscillator=function fmOscillator(note){var volume=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;var oscType=__WEBPACK_IMPORTED_MODULE_1__utils__[\"b\" /* randomFromArray */]([\"sine\",\"square4\"]);var osc=new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.FMOscillator(note,oscType,\"square\").toMaster().start(0.5);osc.volume.value=volume;return osc;};var transpose=function transpose(freq,semitones){return __WEBPACK_IMPORTED_MODULE_0_tone___default.a.Frequency(freq).transpose(semitones);};var play=function play(visCallback){__WEBPACK_IMPORTED_MODULE_0_tone___default.a.Master.volume.value=-32;var config={lowestOscVolume:-50,changeFrequencyInterval:\"4m\",changeVolumeInterval:\"3m\",bassInterval:\"4m\",harmonyInterval:\"7m\",harmonyFadeOutTime:\"+2:0:0\",harmonyOscVolume:-4,extraOscillatorInterval:\"6m\",extraOscillatorFadeOutTime:\"+2:2:0\",changeRootInterval:\"64m\"};var masterScale=__WEBPACK_IMPORTED_MODULE_2__scales__[\"f\" /* getRandomScaleType */]();var root=__WEBPACK_IMPORTED_MODULE_2__scales__[\"e\" /* getRandomRootNote */]();var rootFreq=__WEBPACK_IMPORTED_MODULE_0_tone___default.a.Frequency(root+\"0\");var oscScale=__WEBPACK_IMPORTED_MODULE_2__scales__[\"a\" /* actualNotesFromScale */](rootFreq.toNote(),masterScale.intervals,2,3);var harmonyNotes=__WEBPACK_IMPORTED_MODULE_1__utils__[\"d\" /* shuffleArray */](__WEBPACK_IMPORTED_MODULE_2__scales__[\"a\" /* actualNotesFromScale */](rootFreq.toNote(),masterScale.intervals,3,3));var harmonyOscillator=fmOscillator(rootFreq,config.lowestOscVolume);var oscillatorsWithEffects=[];var oscillatorsWithFrequencyChange=[];var oscillatorsWithVolumeChange=[];var extraOscillators=[];var changeRootAndTransposeAllToMatch=null;var changeRootRampTime=\"+4:0:0\";//Create the bass pattern\nvar bassInstrument=new __WEBPACK_IMPORTED_MODULE_3__instruments__[\"a\" /* default */].bass.FastAttackSquare();var bassPattern=new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.Pattern(function(time,note){bassInstrument.triggerAttackRelease(note,config.bassInterval,time);__WEBPACK_IMPORTED_MODULE_0_tone___default.a.Draw.schedule(function(){if(visCallback){visCallback();}},time);},__WEBPACK_IMPORTED_MODULE_2__scales__[\"a\" /* actualNotesFromScale */](rootFreq.toNote(),masterScale.intervals,1,2),\"randomWalk\");bassPattern.interval=config.bassInterval;bassPattern.start();var oscRoot=fmOscillator(rootFreq);var oscRootO2=fmOscillator(transpose(rootFreq,12));var oscRootO3=fmOscillator(transpose(rootFreq,24));var osc3=fmOscillator(oscScale[2],config.lowestOscVolume);var osc5=fmOscillator(oscScale[4],config.lowestOscVolume);var osc7=fmOscillator(oscScale[6],config.lowestOscVolume);var osc9=fmOscillator(oscScale[8],config.lowestOscVolume);var osc11=fmOscillator(oscScale[10],config.lowestOscVolume);var osc13=fmOscillator(oscScale[12],config.lowestOscVolume);oscillatorsWithEffects=[harmonyOscillator,oscRoot,oscRootO2,oscRootO3,osc3,osc5,osc7,osc9,osc11,osc13];oscillatorsWithFrequencyChange=oscillatorsWithEffects;oscillatorsWithVolumeChange=[oscRoot,oscRootO2,oscRootO3,osc3];extraOscillators=[osc5,osc7,osc9,osc11,osc13];changeRootAndTransposeAllToMatch=function changeRootAndTransposeAllToMatch(newRoot){newRoot=__WEBPACK_IMPORTED_MODULE_0_tone___default.a.Frequency(newRoot);var newScale=__WEBPACK_IMPORTED_MODULE_2__scales__[\"a\" /* actualNotesFromScale */](newRoot.toNote(),masterScale.intervals,2,3);//Change the oscillators to the new notes\noscRoot.frequency.linearRampToValueAtTime(newRoot,changeRootRampTime);oscRootO2.frequency.linearRampToValueAtTime(transpose(newRoot,24),changeRootRampTime);osc3.frequency.linearRampToValueAtTime(newScale[2],changeRootRampTime);osc5.frequency.linearRampToValueAtTime(newScale[4],changeRootRampTime);osc7.frequency.linearRampToValueAtTime(newScale[6],changeRootRampTime);osc9.frequency.linearRampToValueAtTime(newScale[8],changeRootRampTime);osc11.frequency.linearRampToValueAtTime(newScale[10],changeRootRampTime);bassPattern.values=__WEBPACK_IMPORTED_MODULE_2__scales__[\"a\" /* actualNotesFromScale */](newRoot.toNote(),masterScale.intervals,1,2);};var chorus=new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.Chorus(2,2.5,0.5).toMaster();var reverb=new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.Freeverb().toMaster();var phaser=new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.Phaser(0.2).toMaster();var autoWah=new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.AutoWah().toMaster();oscillatorsWithEffects.forEach(function(osc){osc.connect(chorus);osc.connect(phaser);osc.connect(autoWah);osc.connect(reverb);osc.frequencyChangeActive=true;osc.volumeChangeActive=true;});var frequencyChangeLoop=new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.Loop(function(){var frequencyChangeOscillator=__WEBPACK_IMPORTED_MODULE_1__utils__[\"b\" /* randomFromArray */](oscillatorsWithFrequencyChange);//frequency change\nif(frequencyChangeOscillator.frequencyChangeActive){var transposeAmount=0.125;frequencyChangeOscillator.frequency.exponentialRampToValueAtTime(__WEBPACK_IMPORTED_MODULE_0_tone___default.a.Frequency(frequencyChangeOscillator.frequency.value).transpose(transposeAmount),\"+0:2:0\");frequencyChangeOscillator.transposeAmount=transposeAmount;}else{frequencyChangeOscillator.frequency.exponentialRampToValueAtTime(__WEBPACK_IMPORTED_MODULE_0_tone___default.a.Frequency(frequencyChangeOscillator.frequency.value).transpose(frequencyChangeOscillator.transposeAmount*-1),\"+0:2:0\");}frequencyChangeOscillator.frequencyChangeActive=!frequencyChangeOscillator.frequencyChangeActive;},config.changeFrequencyInterval);frequencyChangeLoop.start(config.changeFrequencyInterval);var volumeChangeLoop=new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.Loop(function(){oscillatorsWithVolumeChange.forEach(function(osc){osc.volume.exponentialRampToValueAtTime(0,\"+1:0:0\");});var volumeChangeOscillator=__WEBPACK_IMPORTED_MODULE_1__utils__[\"b\" /* randomFromArray */](oscillatorsWithVolumeChange);volumeChangeOscillator.volume.exponentialRampToValueAtTime(-6,\"+1:0:0\");},config.changeVolumeInterval);volumeChangeLoop.start(config.changeVolumeInterval);//initialize the noise and start\nvar noise=new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.Noise(\"pink\").start();noise.volume.value=9;var noiseAutoFilter=new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.AutoFilter({frequency:\"8m\",min:800,max:15000}).toMaster();noise.connect(noiseAutoFilter);noiseAutoFilter.start();//Subtly modulate the noise volume\nvar noiseVolumeLfo=new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.LFO(\"9m\",8,10);noiseVolumeLfo.start();noiseVolumeLfo.connect(noise.volume);//Subtly modulate the reverb\nvar reverbRoomSizeLfo=new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.LFO(\"7m\",0.7,0.9);reverbRoomSizeLfo.start();reverbRoomSizeLfo.connect(reverb.roomSize);//Subtly modulate the reverb\nvar reverbDampeningLfo=new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.LFO(\"6m\",1000,4000);reverbDampeningLfo.start();reverbDampeningLfo.connect(reverb.dampening);//Fade in and out one other random oscillator\nvar extraOscillatorLoop=new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.Loop(function(){var oscs=[].concat(_toConsumableArray(extraOscillators));var extraOscillator=__WEBPACK_IMPORTED_MODULE_1__utils__[\"b\" /* randomFromArray */](oscs);extraOscillators.forEach(function(osc){if(osc!==extraOscillator){osc.volume.exponentialRampToValueAtTime(config.lowestOscVolume,\"+1:0:0\");}});__WEBPACK_IMPORTED_MODULE_0_tone___default.a.Transport.scheduleOnce(function(time){extraOscillator.volume.rampTo(0,\"1m\",time);},config.extraOscillatorFadeOutTime);},config.extraOscillatorInterval);// extraOscillatorLoop.probability = 0.7;\nextraOscillatorLoop.start(config.extraOscillatorInterval);var harmonyOscillatorLoop=new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.Loop(function(time){var note=harmonyNotes.shift();harmonyOscillator.frequency.value=note;harmonyOscillator.volume.rampTo(config.harmonyOscVolume,\"1m\",time);__WEBPACK_IMPORTED_MODULE_0_tone___default.a.Transport.scheduleOnce(function(time){harmonyOscillator.volume.rampTo(config.lowestOscVolume,\"1m\",time);},config.harmonyFadeOutTime);harmonyNotes.push(note);},config.harmonyInterval);// harmonyOscillatorLoop.probability = 0.8;\nharmonyOscillatorLoop.start(config.harmonyInterval);//Transpose th whole lot by changing the root\nvar changeRootPattern=new __WEBPACK_IMPORTED_MODULE_0_tone___default.a.Pattern(function(time,note){changeRootAndTransposeAllToMatch(note);},__WEBPACK_IMPORTED_MODULE_2__scales__[\"a\" /* actualNotesFromScale */](rootFreq.toNote(),masterScale.intervals,0,0),\"randomWalk\");changeRootPattern.interval=config.changeRootInterval;changeRootPattern.start(config.changeRootInterval);return{bpm:70,swing:0,key:root+\" (\"+masterScale.type+\")\",chordProgressionNotes:\"n/a\"};};\n\n/***/ }),\n/* 119 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_prop_types__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__App_css__ = __webpack_require__(120);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__App_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__App_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__package_json__ = __webpack_require__(121);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__package_json___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__package_json__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Songs__ = __webpack_require__(122);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__Info__ = __webpack_require__(123);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__Song__ = __webpack_require__(124);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var App=function(_Component){_inherits(App,_Component);function App(){var _ref;var _temp,_this,_ret;_classCallCheck(this,App);for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}return _ret=(_temp=(_this=_possibleConstructorReturn(this,(_ref=App.__proto__||Object.getPrototypeOf(App)).call.apply(_ref,[this].concat(args))),_this),_this.handleSeedChange=function(event){var newSeed=event.target.value.toString();_this.props.history.push(\"/\"+newSeed);},_this.handleSongSelection=function(event){var song=parseInt(event.target.getAttribute(\"data-song\"),10);_this.props.actions.SetSong(song);},_this.randomiseSeed=function(){var randomSeed=new Date().getTime().toString();_this.props.history.push(\"/\"+randomSeed);},_temp),_possibleConstructorReturn(_this,_ret);}_createClass(App,[{key:\"componentWillMount\",value:function componentWillMount(){if(this.props.match.params.seed){this.props.actions.SetInitialSeed(this.props.match.params.seed);}if(this.props.song>0){this.props.actions.SetSong(this.props.song);}}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){if(this.props.location!==prevProps.location){this.props.actions.SetSeed(this.props.match.params.seed||\"\");}}},{key:\"render\",value:function render(){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"container text-center\"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"row\"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"col-sm-12\"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"h1\",{className:\"main-title\"},\"Synaesthesia\"),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"p\",{className:\"lead\"},\"Web Audio experiments by \",__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"a\",{href:\"https://soundcloud.com/wheelibin\"},\"wheelibin\")))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"row\"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"col-md-8 offset-md-2\"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__Songs__[\"a\" /* default */],{onSongSelection:this.handleSongSelection,song:this.props.song}))),this.props.isPlaying&&__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_6__Song__[\"a\" /* default */],{isPlaying:this.props.isPlaying,generatedSettings:this.props.generatedSettings,seed:this.props.seed,onRandomise:this.randomiseSeed,onSeedChange:this.handleSeedChange}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"col-md-6 offset-md-3\",style:{marginTop:0}},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5__Info__[\"a\" /* default */],{isPlaying:this.props.isPlaying})),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"small\",{className:\"version\"},\"v\",__WEBPACK_IMPORTED_MODULE_3__package_json__[\"version\"]));}}]);return App;}(__WEBPACK_IMPORTED_MODULE_0_react__[\"Component\"]);App.propTypes={actions:__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object.isRequired,isPlaying:__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.bool.isRequired,generatedSettings:__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object,seed:__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.string.isRequired,playButtonText:__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.string.isRequired,match:__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object,location:__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object.isRequired,history:__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object.isRequired,song:__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.number.isRequired};/* harmony default export */ __webpack_exports__[\"a\"] = (App);\n\n/***/ }),\n/* 120 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 121 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\"name\":\"synaesthesia\",\"version\":\"0.1.19\",\"private\":true,\"homepage\":\"https://wheelibin.github.io/synaesthesia\",\"dependencies\":{\"axios\":\"^0.18.0\",\"lodash\":\"^4.17.10\",\"react\":\"^16.3.2\",\"react-dom\":\"^16.3.2\",\"react-redux\":\"^5.0.7\",\"react-router\":\"^4.2.0\",\"react-router-dom\":\"^4.2.2\",\"react-scripts\":\"^1.1.4\",\"redux\":\"^3.7.2\",\"redux-thunk\":\"^2.2.0\",\"tone\":\"^0.11.12\"},\"scripts\":{\"start\":\"react-scripts start\",\"build\":\"react-scripts build\",\"test\":\"react-scripts test --env=jsdom\",\"eject\":\"react-scripts eject\",\"predeploy\":\"npm version patch && npm run build\",\"deploy\":\"gh-pages -d build\"},\"devDependencies\":{\"eslint-config-prettier\":\"^2.9.0\",\"eslint-plugin-prettier\":\"^2.6.0\",\"eslint-plugin-react\":\"^7.7.0\",\"gh-pages\":\"^1.2.0\",\"prettier\":\"1.11.1\"}}\n\n/***/ }),\n/* 122 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_prop_types__);\nvar Songs=function Songs(_ref){var onSongSelection=_ref.onSongSelection,song=_ref.song;return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"btn-group\",role:\"group\",\"aria-label\":\"...\"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"button\",{\"data-song\":1,type:\"button\",className:\"btn btn-outline-light active-song-\"+(song===1),onClick:onSongSelection},\"Funky Down-Tempo\"),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"button\",{\"data-song\":2,type:\"button\",className:\"btn btn-outline-light active-song-\"+(song===2),onClick:onSongSelection},\"Ambient Drone\"));};Songs.propTypes={onSongSelection:__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func.isRequired,song:__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.number};/* harmony default export */ __webpack_exports__[\"a\"] = (Songs);\n\n/***/ }),\n/* 123 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_prop_types__);\nvar Info=function Info(_ref){var isPlaying=_ref.isPlaying;if(isPlaying){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"info-section\"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"p\",{className:\"lead text-center\"},\"What's all this then?\"),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"p\",{className:\"text-center\"},\"All the music is randomly generated, within certain musical constraints, using the excellent\",\" \",__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"a\",{href:\"https://tonejs.github.io/\",target:\"new\"},\"Tone.js\"),\". The random generation algorithm is seeded with the seed shown above, this can be changed to anything you like, and entering the same seed with always produce the same randomly generated song. Images are loaded from Flickr and will change in time with the music.\"),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"p\",{className:\"text-center\"},\"All the code, and a bit more info, can be found on GitHub here:\",\" \",__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"a\",{href:\"https://github.com/wheelibin/synaesthesia\"},\"https://github.com/wheelibin/synaesthesia\")));}return null;};Info.propTypes={isPlaying:__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.bool.isRequired};/* harmony default export */ __webpack_exports__[\"a\"] = (Info);\n\n/***/ }),\n/* 124 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_prop_types__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__SongInfo__ = __webpack_require__(125);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__GenerationOptions__ = __webpack_require__(126);\nvar Song=function Song(_ref){var isPlaying=_ref.isPlaying,generatedSettings=_ref.generatedSettings,seed=_ref.seed,onRandomise=_ref.onRandomise,onSeedChange=_ref.onSeedChange;return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"row\"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"col-md-8 offset-md-2 col-sm-12 song border rounded\"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__SongInfo__[\"a\" /* default */],{isPlaying:isPlaying,generatedSettings:generatedSettings}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__GenerationOptions__[\"a\" /* default */],{isPlaying:isPlaying,seed:seed,onRandomise:onRandomise,onSeedChange:onSeedChange})));};Song.propTypes={isPlaying:__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.bool,generatedSettings:__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object,seed:__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.string.isRequired,onRandomise:__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func.isRequired,onSeedChange:__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func.isRequired,currentImage:__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.string};/* harmony default export */ __webpack_exports__[\"a\"] = (Song);\n\n/***/ }),\n/* 125 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_prop_types__);\nvar SongInfo=function SongInfo(_ref){var isPlaying=_ref.isPlaying,generatedSettings=_ref.generatedSettings;if(generatedSettings&&isPlaying){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"row\",style:{// backgroundColor: \"rgba(0,0,0, 0.5)\",\nmarginLeft:0,marginRight:0,marginTop:\"2em\",borderTopLeftRadius:\"0.5em\",borderTopRightRadius:\"0.5em\"}},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"col-md-5 offset-md-1\"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"p\",{style:{marginBottom:0}},\"Key\"),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"h4\",null,generatedSettings.key)),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"col-md-5\"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"p\",{style:{marginBottom:0}},\"Chord Progression\"),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"h4\",null,generatedSettings.chordProgressionNotes)));}return null;};SongInfo.propTypes={isPlaying:__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.bool,generatedSettings:__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object};/* harmony default export */ __webpack_exports__[\"a\"] = (SongInfo);\n\n/***/ }),\n/* 126 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_prop_types__);\nvar GenerationOptions=function GenerationOptions(_ref){var isPlaying=_ref.isPlaying,seed=_ref.seed,onRandomise=_ref.onRandomise,onSeedChange=_ref.onSeedChange;if(isPlaying){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"form\",{className:\"form\"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"generation-options row\",style:{// backgroundColor: \"rgba(0,0,0, 0.5)\",\nmarginLeft:0,marginRight:0,borderBottomLeftRadius:\"0.5em\",borderBottomRightRadius:\"0.5em\",paddingTop:8}},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"form-group col-md-5 offset-md-1\"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"label\",{htmlFor:\"seed\"},\"Seed (try entering your own)\"),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"input\",{type:\"text\",className:\"form-control form-control-lg text-center seed-input\",id:\"seed\",onChange:onSeedChange,placeholder:\"A word or phrase to generate music from\",value:seed,disabled:!isPlaying})),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"form-group col-md-5\"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"label\",{htmlFor:\"seed\"},\"Or generate a random seed\"),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"button\",{type:\"button\",disabled:!isPlaying,className:\"btn btn-outline-light btn-lg btn-block\",onClick:onRandomise},\"Randomise!\"))));}return null;};GenerationOptions.propTypes={isPlaying:__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.bool.isRequired,seed:__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.string.isRequired,onRandomise:__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func.isRequired,onSeedChange:__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func.isRequired};/* harmony default export */ __webpack_exports__[\"a\"] = (GenerationOptions);\n\n/***/ }),\n/* 127 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__AppContainer__ = __webpack_require__(128);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"AppContainer\", function() { return __WEBPACK_IMPORTED_MODULE_0__AppContainer__[\"a\"]; });\n\n\n/***/ }),\n/* 128 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react_redux__ = __webpack_require__(44);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_redux__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__actions__ = __webpack_require__(42);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components__ = __webpack_require__(43);\nvar mapStateToProps=function mapStateToProps(state){var _state$app=state.app,seed=_state$app.seed,playButtonText=_state$app.playButtonText,generatedSettings=_state$app.generatedSettings,isPlaying=_state$app.isPlaying,song=_state$app.song;return{seed:seed,playButtonText:playButtonText,generatedSettings:generatedSettings,isPlaying:isPlaying,song:song};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{actions:Object(__WEBPACK_IMPORTED_MODULE_1_redux__[\"b\" /* bindActionCreators */])(__WEBPACK_IMPORTED_MODULE_2__actions__,dispatch)};};var AppContainer=Object(__WEBPACK_IMPORTED_MODULE_0_react_redux__[\"b\" /* connect */])(mapStateToProps,mapDispatchToProps)(__WEBPACK_IMPORTED_MODULE_3__components__[\"a\" /* default */].App);/* harmony default export */ __webpack_exports__[\"a\"] = (AppContainer);\n\n/***/ }),\n/* 129 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export createProvider */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_prop_types__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__utils_PropTypes__ = __webpack_require__(45);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__utils_warning__ = __webpack_require__(22);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\n\nvar didWarnAboutReceivingStore = false;\nfunction warnAboutReceivingStore() {\n  if (didWarnAboutReceivingStore) {\n    return;\n  }\n  didWarnAboutReceivingStore = true;\n\n  Object(__WEBPACK_IMPORTED_MODULE_3__utils_warning__[\"a\" /* default */])('<Provider> does not support changing `store` on the fly. ' + 'It is most likely that you see this error because you updated to ' + 'Redux 2.x and React Redux 2.x which no longer hot reload reducers ' + 'automatically. See https://github.com/reactjs/react-redux/releases/' + 'tag/v2.0.0 for the migration instructions.');\n}\n\nfunction createProvider() {\n  var _Provider$childContex;\n\n  var storeKey = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'store';\n  var subKey = arguments[1];\n\n  var subscriptionKey = subKey || storeKey + 'Subscription';\n\n  var Provider = function (_Component) {\n    _inherits(Provider, _Component);\n\n    Provider.prototype.getChildContext = function getChildContext() {\n      var _ref;\n\n      return _ref = {}, _ref[storeKey] = this[storeKey], _ref[subscriptionKey] = null, _ref;\n    };\n\n    function Provider(props, context) {\n      _classCallCheck(this, Provider);\n\n      var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));\n\n      _this[storeKey] = props.store;\n      return _this;\n    }\n\n    Provider.prototype.render = function render() {\n      return __WEBPACK_IMPORTED_MODULE_0_react__[\"Children\"].only(this.props.children);\n    };\n\n    return Provider;\n  }(__WEBPACK_IMPORTED_MODULE_0_react__[\"Component\"]);\n\n  if (false) {\n    Provider.prototype.componentWillReceiveProps = function (nextProps) {\n      if (this[storeKey] !== nextProps.store) {\n        warnAboutReceivingStore();\n      }\n    };\n  }\n\n  Provider.propTypes = {\n    store: __WEBPACK_IMPORTED_MODULE_2__utils_PropTypes__[\"a\" /* storeShape */].isRequired,\n    children: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.element.isRequired\n  };\n  Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[storeKey] = __WEBPACK_IMPORTED_MODULE_2__utils_PropTypes__[\"a\" /* storeShape */].isRequired, _Provider$childContex[subscriptionKey] = __WEBPACK_IMPORTED_MODULE_2__utils_PropTypes__[\"b\" /* subscriptionShape */], _Provider$childContex);\n\n  return Provider;\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (createProvider());\n\n/***/ }),\n/* 130 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Subscription; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// encapsulates the subscription logic for connecting a component to the redux store, as\n// well as nesting subscriptions of descendant components, so that we can ensure the\n// ancestor components re-render before descendants\n\nvar CLEARED = null;\nvar nullListeners = {\n  notify: function notify() {}\n};\n\nfunction createListenerCollection() {\n  // the current/next pattern is copied from redux's createStore code.\n  // TODO: refactor+expose that code to be reusable here?\n  var current = [];\n  var next = [];\n\n  return {\n    clear: function clear() {\n      next = CLEARED;\n      current = CLEARED;\n    },\n    notify: function notify() {\n      var listeners = current = next;\n      for (var i = 0; i < listeners.length; i++) {\n        listeners[i]();\n      }\n    },\n    get: function get() {\n      return next;\n    },\n    subscribe: function subscribe(listener) {\n      var isSubscribed = true;\n      if (next === current) next = current.slice();\n      next.push(listener);\n\n      return function unsubscribe() {\n        if (!isSubscribed || current === CLEARED) return;\n        isSubscribed = false;\n\n        if (next === current) next = current.slice();\n        next.splice(next.indexOf(listener), 1);\n      };\n    }\n  };\n}\n\nvar Subscription = function () {\n  function Subscription(store, parentSub, onStateChange) {\n    _classCallCheck(this, Subscription);\n\n    this.store = store;\n    this.parentSub = parentSub;\n    this.onStateChange = onStateChange;\n    this.unsubscribe = null;\n    this.listeners = nullListeners;\n  }\n\n  Subscription.prototype.addNestedSub = function addNestedSub(listener) {\n    this.trySubscribe();\n    return this.listeners.subscribe(listener);\n  };\n\n  Subscription.prototype.notifyNestedSubs = function notifyNestedSubs() {\n    this.listeners.notify();\n  };\n\n  Subscription.prototype.isSubscribed = function isSubscribed() {\n    return Boolean(this.unsubscribe);\n  };\n\n  Subscription.prototype.trySubscribe = function trySubscribe() {\n    if (!this.unsubscribe) {\n      this.unsubscribe = this.parentSub ? this.parentSub.addNestedSub(this.onStateChange) : this.store.subscribe(this.onStateChange);\n\n      this.listeners = createListenerCollection();\n    }\n  };\n\n  Subscription.prototype.tryUnsubscribe = function tryUnsubscribe() {\n    if (this.unsubscribe) {\n      this.unsubscribe();\n      this.unsubscribe = null;\n      this.listeners.clear();\n      this.listeners = nullListeners;\n    }\n  };\n\n  return Subscription;\n}();\n\n\n\n/***/ }),\n/* 131 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export createConnect */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_connectAdvanced__ = __webpack_require__(46);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utils_shallowEqual__ = __webpack_require__(132);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mapDispatchToProps__ = __webpack_require__(133);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mapStateToProps__ = __webpack_require__(148);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__mergeProps__ = __webpack_require__(149);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__selectorFactory__ = __webpack_require__(150);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\n\n\n\n\n\n\n\n/*\n  connect is a facade over connectAdvanced. It turns its args into a compatible\n  selectorFactory, which has the signature:\n\n    (dispatch, options) => (nextState, nextOwnProps) => nextFinalProps\n  \n  connect passes its args to connectAdvanced as options, which will in turn pass them to\n  selectorFactory each time a Connect component instance is instantiated or hot reloaded.\n\n  selectorFactory returns a final props selector from its mapStateToProps,\n  mapStateToPropsFactories, mapDispatchToProps, mapDispatchToPropsFactories, mergeProps,\n  mergePropsFactories, and pure args.\n\n  The resulting final props selector is called by the Connect component instance whenever\n  it receives new props or store state.\n */\n\nfunction match(arg, factories, name) {\n  for (var i = factories.length - 1; i >= 0; i--) {\n    var result = factories[i](arg);\n    if (result) return result;\n  }\n\n  return function (dispatch, options) {\n    throw new Error('Invalid value of type ' + typeof arg + ' for ' + name + ' argument when connecting component ' + options.wrappedComponentName + '.');\n  };\n}\n\nfunction strictEqual(a, b) {\n  return a === b;\n}\n\n// createConnect with default args builds the 'official' connect behavior. Calling it with\n// different options opens up some testing and extensibility scenarios\nfunction createConnect() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$connectHOC = _ref.connectHOC,\n      connectHOC = _ref$connectHOC === undefined ? __WEBPACK_IMPORTED_MODULE_0__components_connectAdvanced__[\"a\" /* default */] : _ref$connectHOC,\n      _ref$mapStateToPropsF = _ref.mapStateToPropsFactories,\n      mapStateToPropsFactories = _ref$mapStateToPropsF === undefined ? __WEBPACK_IMPORTED_MODULE_3__mapStateToProps__[\"a\" /* default */] : _ref$mapStateToPropsF,\n      _ref$mapDispatchToPro = _ref.mapDispatchToPropsFactories,\n      mapDispatchToPropsFactories = _ref$mapDispatchToPro === undefined ? __WEBPACK_IMPORTED_MODULE_2__mapDispatchToProps__[\"a\" /* default */] : _ref$mapDispatchToPro,\n      _ref$mergePropsFactor = _ref.mergePropsFactories,\n      mergePropsFactories = _ref$mergePropsFactor === undefined ? __WEBPACK_IMPORTED_MODULE_4__mergeProps__[\"a\" /* default */] : _ref$mergePropsFactor,\n      _ref$selectorFactory = _ref.selectorFactory,\n      selectorFactory = _ref$selectorFactory === undefined ? __WEBPACK_IMPORTED_MODULE_5__selectorFactory__[\"a\" /* default */] : _ref$selectorFactory;\n\n  return function connect(mapStateToProps, mapDispatchToProps, mergeProps) {\n    var _ref2 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},\n        _ref2$pure = _ref2.pure,\n        pure = _ref2$pure === undefined ? true : _ref2$pure,\n        _ref2$areStatesEqual = _ref2.areStatesEqual,\n        areStatesEqual = _ref2$areStatesEqual === undefined ? strictEqual : _ref2$areStatesEqual,\n        _ref2$areOwnPropsEqua = _ref2.areOwnPropsEqual,\n        areOwnPropsEqual = _ref2$areOwnPropsEqua === undefined ? __WEBPACK_IMPORTED_MODULE_1__utils_shallowEqual__[\"a\" /* default */] : _ref2$areOwnPropsEqua,\n        _ref2$areStatePropsEq = _ref2.areStatePropsEqual,\n        areStatePropsEqual = _ref2$areStatePropsEq === undefined ? __WEBPACK_IMPORTED_MODULE_1__utils_shallowEqual__[\"a\" /* default */] : _ref2$areStatePropsEq,\n        _ref2$areMergedPropsE = _ref2.areMergedPropsEqual,\n        areMergedPropsEqual = _ref2$areMergedPropsE === undefined ? __WEBPACK_IMPORTED_MODULE_1__utils_shallowEqual__[\"a\" /* default */] : _ref2$areMergedPropsE,\n        extraOptions = _objectWithoutProperties(_ref2, ['pure', 'areStatesEqual', 'areOwnPropsEqual', 'areStatePropsEqual', 'areMergedPropsEqual']);\n\n    var initMapStateToProps = match(mapStateToProps, mapStateToPropsFactories, 'mapStateToProps');\n    var initMapDispatchToProps = match(mapDispatchToProps, mapDispatchToPropsFactories, 'mapDispatchToProps');\n    var initMergeProps = match(mergeProps, mergePropsFactories, 'mergeProps');\n\n    return connectHOC(selectorFactory, _extends({\n      // used in error messages\n      methodName: 'connect',\n\n      // used to compute Connect's displayName from the wrapped component's displayName.\n      getDisplayName: function getDisplayName(name) {\n        return 'Connect(' + name + ')';\n      },\n\n      // if mapStateToProps is falsy, the Connect component doesn't subscribe to store state changes\n      shouldHandleStateChanges: Boolean(mapStateToProps),\n\n      // passed through to selectorFactory\n      initMapStateToProps: initMapStateToProps,\n      initMapDispatchToProps: initMapDispatchToProps,\n      initMergeProps: initMergeProps,\n      pure: pure,\n      areStatesEqual: areStatesEqual,\n      areOwnPropsEqual: areOwnPropsEqual,\n      areStatePropsEqual: areStatePropsEqual,\n      areMergedPropsEqual: areMergedPropsEqual\n\n    }, extraOptions));\n  };\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (createConnect());\n\n/***/ }),\n/* 132 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = shallowEqual;\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nfunction is(x, y) {\n  if (x === y) {\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    return x !== x && y !== y;\n  }\n}\n\nfunction shallowEqual(objA, objB) {\n  if (is(objA, objB)) return true;\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) return false;\n\n  for (var i = 0; i < keysA.length; i++) {\n    if (!hasOwn.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/***/ }),\n/* 133 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export whenMapDispatchToPropsIsFunction */\n/* unused harmony export whenMapDispatchToPropsIsMissing */\n/* unused harmony export whenMapDispatchToPropsIsObject */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_redux__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__wrapMapToProps__ = __webpack_require__(51);\n\n\n\nfunction whenMapDispatchToPropsIsFunction(mapDispatchToProps) {\n  return typeof mapDispatchToProps === 'function' ? Object(__WEBPACK_IMPORTED_MODULE_1__wrapMapToProps__[\"b\" /* wrapMapToPropsFunc */])(mapDispatchToProps, 'mapDispatchToProps') : undefined;\n}\n\nfunction whenMapDispatchToPropsIsMissing(mapDispatchToProps) {\n  return !mapDispatchToProps ? Object(__WEBPACK_IMPORTED_MODULE_1__wrapMapToProps__[\"a\" /* wrapMapToPropsConstant */])(function (dispatch) {\n    return { dispatch: dispatch };\n  }) : undefined;\n}\n\nfunction whenMapDispatchToPropsIsObject(mapDispatchToProps) {\n  return mapDispatchToProps && typeof mapDispatchToProps === 'object' ? Object(__WEBPACK_IMPORTED_MODULE_1__wrapMapToProps__[\"a\" /* wrapMapToPropsConstant */])(function (dispatch) {\n    return Object(__WEBPACK_IMPORTED_MODULE_0_redux__[\"b\" /* bindActionCreators */])(mapDispatchToProps, dispatch);\n  }) : undefined;\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ([whenMapDispatchToPropsIsFunction, whenMapDispatchToPropsIsMissing, whenMapDispatchToPropsIsObject]);\n\n/***/ }),\n/* 134 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Symbol_js__ = __webpack_require__(48);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__getRawTag_js__ = __webpack_require__(137);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__objectToString_js__ = __webpack_require__(138);\n\n\n\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = __WEBPACK_IMPORTED_MODULE_0__Symbol_js__[\"a\" /* default */] ? __WEBPACK_IMPORTED_MODULE_0__Symbol_js__[\"a\" /* default */].toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? Object(__WEBPACK_IMPORTED_MODULE_1__getRawTag_js__[\"a\" /* default */])(value)\n    : Object(__WEBPACK_IMPORTED_MODULE_2__objectToString_js__[\"a\" /* default */])(value);\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (baseGetTag);\n\n\n/***/ }),\n/* 135 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__freeGlobal_js__ = __webpack_require__(136);\n\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = __WEBPACK_IMPORTED_MODULE_0__freeGlobal_js__[\"a\" /* default */] || freeSelf || Function('return this')();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (root);\n\n\n/***/ }),\n/* 136 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (freeGlobal);\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(8)))\n\n/***/ }),\n/* 137 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Symbol_js__ = __webpack_require__(48);\n\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = __WEBPACK_IMPORTED_MODULE_0__Symbol_js__[\"a\" /* default */] ? __WEBPACK_IMPORTED_MODULE_0__Symbol_js__[\"a\" /* default */].toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (getRawTag);\n\n\n/***/ }),\n/* 138 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (objectToString);\n\n\n/***/ }),\n/* 139 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__overArg_js__ = __webpack_require__(140);\n\n\n/** Built-in value references. */\nvar getPrototype = Object(__WEBPACK_IMPORTED_MODULE_0__overArg_js__[\"a\" /* default */])(Object.getPrototypeOf, Object);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (getPrototype);\n\n\n/***/ }),\n/* 140 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (overArg);\n\n\n/***/ }),\n/* 141 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (isObjectLike);\n\n\n/***/ }),\n/* 142 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global, module) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ponyfill_js__ = __webpack_require__(144);\n/* global window */\n\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (true) {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = Object(__WEBPACK_IMPORTED_MODULE_0__ponyfill_js__[\"a\" /* default */])(root);\n/* harmony default export */ __webpack_exports__[\"a\"] = (result);\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(8), __webpack_require__(143)(module)))\n\n/***/ }),\n/* 143 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(originalModule) {\n\tif(!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif(!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true,\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n/***/ }),\n/* 144 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = symbolObservablePonyfill;\nfunction symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n\n\n/***/ }),\n/* 145 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = combineReducers;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__createStore__ = __webpack_require__(47);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash_es_isPlainObject__ = __webpack_require__(23);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__utils_warning__ = __webpack_require__(49);\n\n\n\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  var actionType = action && action.type;\n  var actionName = actionType && '\"' + actionType.toString() + '\"' || 'an action';\n\n  return 'Given action ' + actionName + ', reducer \"' + key + '\" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state. ' + 'If you want this reducer to hold no value, you can return null instead of undefined.';\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === __WEBPACK_IMPORTED_MODULE_0__createStore__[\"a\" /* ActionTypes */].INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!Object(__WEBPACK_IMPORTED_MODULE_1_lodash_es_isPlainObject__[\"a\" /* default */])(inputState)) {\n    return 'The ' + argumentName + ' has unexpected type of \"' + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + '\". Expected argument to be an object with the following ' + ('keys: \"' + reducerKeys.join('\", \"') + '\"');\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n\n  if (unexpectedKeys.length > 0) {\n    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('\"' + unexpectedKeys.join('\", \"') + '\" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('\"' + reducerKeys.join('\", \"') + '\". Unexpected keys will be ignored.');\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, { type: __WEBPACK_IMPORTED_MODULE_0__createStore__[\"a\" /* ActionTypes */].INIT });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error('Reducer \"' + key + '\" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined. If you don\\'t want to set a value for this reducer, ' + 'you can use null instead of undefined.');\n    }\n\n    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');\n    if (typeof reducer(undefined, { type: type }) === 'undefined') {\n      throw new Error('Reducer \"' + key + '\" returned undefined when probed with a random type. ' + ('Don\\'t try to handle ' + __WEBPACK_IMPORTED_MODULE_0__createStore__[\"a\" /* ActionTypes */].INIT + ' or other actions in \"redux/*\" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined, but can be null.');\n    }\n  });\n}\n\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (false) {\n      if (typeof reducers[key] === 'undefined') {\n        warning('No reducer provided for key \"' + key + '\"');\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n  var finalReducerKeys = Object.keys(finalReducers);\n\n  var unexpectedKeyCache = void 0;\n  if (false) {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError = void 0;\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var action = arguments[1];\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (false) {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n      if (typeof nextStateForKey === 'undefined') {\n        var errorMessage = getUndefinedStateErrorMessage(_key, action);\n        throw new Error(errorMessage);\n      }\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n    return hasChanged ? nextState : state;\n  };\n}\n\n/***/ }),\n/* 146 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = bindActionCreators;\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(undefined, arguments));\n  };\n}\n\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass a single function as the first argument,\n * and get a function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators) + '. ' + 'Did you write \"import ActionCreators from\" instead of \"import * as ActionCreators from\"?');\n  }\n\n  var keys = Object.keys(actionCreators);\n  var boundActionCreators = {};\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var actionCreator = actionCreators[key];\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n  return boundActionCreators;\n}\n\n/***/ }),\n/* 147 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = applyMiddleware;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__compose__ = __webpack_require__(50);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function (reducer, preloadedState, enhancer) {\n      var store = createStore(reducer, preloadedState, enhancer);\n      var _dispatch = store.dispatch;\n      var chain = [];\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch(action) {\n          return _dispatch(action);\n        }\n      };\n      chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = __WEBPACK_IMPORTED_MODULE_0__compose__[\"a\" /* default */].apply(undefined, chain)(store.dispatch);\n\n      return _extends({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n/***/ }),\n/* 148 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export whenMapStateToPropsIsFunction */\n/* unused harmony export whenMapStateToPropsIsMissing */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__wrapMapToProps__ = __webpack_require__(51);\n\n\nfunction whenMapStateToPropsIsFunction(mapStateToProps) {\n  return typeof mapStateToProps === 'function' ? Object(__WEBPACK_IMPORTED_MODULE_0__wrapMapToProps__[\"b\" /* wrapMapToPropsFunc */])(mapStateToProps, 'mapStateToProps') : undefined;\n}\n\nfunction whenMapStateToPropsIsMissing(mapStateToProps) {\n  return !mapStateToProps ? Object(__WEBPACK_IMPORTED_MODULE_0__wrapMapToProps__[\"a\" /* wrapMapToPropsConstant */])(function () {\n    return {};\n  }) : undefined;\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ([whenMapStateToPropsIsFunction, whenMapStateToPropsIsMissing]);\n\n/***/ }),\n/* 149 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export defaultMergeProps */\n/* unused harmony export wrapMergePropsFunc */\n/* unused harmony export whenMergePropsIsFunction */\n/* unused harmony export whenMergePropsIsOmitted */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils_verifyPlainObject__ = __webpack_require__(52);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n\n\nfunction defaultMergeProps(stateProps, dispatchProps, ownProps) {\n  return _extends({}, ownProps, stateProps, dispatchProps);\n}\n\nfunction wrapMergePropsFunc(mergeProps) {\n  return function initMergePropsProxy(dispatch, _ref) {\n    var displayName = _ref.displayName,\n        pure = _ref.pure,\n        areMergedPropsEqual = _ref.areMergedPropsEqual;\n\n    var hasRunOnce = false;\n    var mergedProps = void 0;\n\n    return function mergePropsProxy(stateProps, dispatchProps, ownProps) {\n      var nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n\n      if (hasRunOnce) {\n        if (!pure || !areMergedPropsEqual(nextMergedProps, mergedProps)) mergedProps = nextMergedProps;\n      } else {\n        hasRunOnce = true;\n        mergedProps = nextMergedProps;\n\n        if (false) verifyPlainObject(mergedProps, displayName, 'mergeProps');\n      }\n\n      return mergedProps;\n    };\n  };\n}\n\nfunction whenMergePropsIsFunction(mergeProps) {\n  return typeof mergeProps === 'function' ? wrapMergePropsFunc(mergeProps) : undefined;\n}\n\nfunction whenMergePropsIsOmitted(mergeProps) {\n  return !mergeProps ? function () {\n    return defaultMergeProps;\n  } : undefined;\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ([whenMergePropsIsFunction, whenMergePropsIsOmitted]);\n\n/***/ }),\n/* 150 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export impureFinalPropsSelectorFactory */\n/* unused harmony export pureFinalPropsSelectorFactory */\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = finalPropsSelectorFactory;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__verifySubselectors__ = __webpack_require__(151);\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\n\n\nfunction impureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch) {\n  return function impureFinalPropsSelector(state, ownProps) {\n    return mergeProps(mapStateToProps(state, ownProps), mapDispatchToProps(dispatch, ownProps), ownProps);\n  };\n}\n\nfunction pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, _ref) {\n  var areStatesEqual = _ref.areStatesEqual,\n      areOwnPropsEqual = _ref.areOwnPropsEqual,\n      areStatePropsEqual = _ref.areStatePropsEqual;\n\n  var hasRunAtLeastOnce = false;\n  var state = void 0;\n  var ownProps = void 0;\n  var stateProps = void 0;\n  var dispatchProps = void 0;\n  var mergedProps = void 0;\n\n  function handleFirstCall(firstState, firstOwnProps) {\n    state = firstState;\n    ownProps = firstOwnProps;\n    stateProps = mapStateToProps(state, ownProps);\n    dispatchProps = mapDispatchToProps(dispatch, ownProps);\n    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n    hasRunAtLeastOnce = true;\n    return mergedProps;\n  }\n\n  function handleNewPropsAndNewState() {\n    stateProps = mapStateToProps(state, ownProps);\n\n    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);\n\n    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n    return mergedProps;\n  }\n\n  function handleNewProps() {\n    if (mapStateToProps.dependsOnOwnProps) stateProps = mapStateToProps(state, ownProps);\n\n    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);\n\n    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n    return mergedProps;\n  }\n\n  function handleNewState() {\n    var nextStateProps = mapStateToProps(state, ownProps);\n    var statePropsChanged = !areStatePropsEqual(nextStateProps, stateProps);\n    stateProps = nextStateProps;\n\n    if (statePropsChanged) mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n\n    return mergedProps;\n  }\n\n  function handleSubsequentCalls(nextState, nextOwnProps) {\n    var propsChanged = !areOwnPropsEqual(nextOwnProps, ownProps);\n    var stateChanged = !areStatesEqual(nextState, state);\n    state = nextState;\n    ownProps = nextOwnProps;\n\n    if (propsChanged && stateChanged) return handleNewPropsAndNewState();\n    if (propsChanged) return handleNewProps();\n    if (stateChanged) return handleNewState();\n    return mergedProps;\n  }\n\n  return function pureFinalPropsSelector(nextState, nextOwnProps) {\n    return hasRunAtLeastOnce ? handleSubsequentCalls(nextState, nextOwnProps) : handleFirstCall(nextState, nextOwnProps);\n  };\n}\n\n// TODO: Add more comments\n\n// If pure is true, the selector returned by selectorFactory will memoize its results,\n// allowing connectAdvanced's shouldComponentUpdate to return false if final\n// props have not changed. If false, the selector will always return a new\n// object and shouldComponentUpdate will always return true.\n\nfunction finalPropsSelectorFactory(dispatch, _ref2) {\n  var initMapStateToProps = _ref2.initMapStateToProps,\n      initMapDispatchToProps = _ref2.initMapDispatchToProps,\n      initMergeProps = _ref2.initMergeProps,\n      options = _objectWithoutProperties(_ref2, ['initMapStateToProps', 'initMapDispatchToProps', 'initMergeProps']);\n\n  var mapStateToProps = initMapStateToProps(dispatch, options);\n  var mapDispatchToProps = initMapDispatchToProps(dispatch, options);\n  var mergeProps = initMergeProps(dispatch, options);\n\n  if (false) {\n    verifySubselectors(mapStateToProps, mapDispatchToProps, mergeProps, options.displayName);\n  }\n\n  var selectorFactory = options.pure ? pureFinalPropsSelectorFactory : impureFinalPropsSelectorFactory;\n\n  return selectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, options);\n}\n\n/***/ }),\n/* 151 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export default */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils_warning__ = __webpack_require__(22);\n\n\nfunction verify(selector, methodName, displayName) {\n  if (!selector) {\n    throw new Error('Unexpected value for ' + methodName + ' in ' + displayName + '.');\n  } else if (methodName === 'mapStateToProps' || methodName === 'mapDispatchToProps') {\n    if (!selector.hasOwnProperty('dependsOnOwnProps')) {\n      Object(__WEBPACK_IMPORTED_MODULE_0__utils_warning__[\"a\" /* default */])('The selector for ' + methodName + ' of ' + displayName + ' did not specify a value for dependsOnOwnProps.');\n    }\n  }\n}\n\nfunction verifySubselectors(mapStateToProps, mapDispatchToProps, mergeProps, displayName) {\n  verify(mapStateToProps, 'mapStateToProps', displayName);\n  verify(mapDispatchToProps, 'mapDispatchToProps', displayName);\n  verify(mergeProps, 'mergeProps', displayName);\n}\n\n/***/ }),\n/* 152 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = register;\n/* unused harmony export unregister */\n// In production, we register a service worker to serve assets from local cache.\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\nvar isLocalhost=Boolean(window.location.hostname==='localhost'||// [::1] is the IPv6 localhost address.\nwindow.location.hostname==='[::1]'||// 127.0.0.1/8 is considered localhost for IPv4.\nwindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));function register(){if(\"production\"==='production'&&'serviceWorker'in navigator){// The URL constructor is available in all browsers that support SW.\nvar publicUrl=new URL(\"/synaesthesia\",window.location);if(publicUrl.origin!==window.location.origin){// Our service worker won't work if PUBLIC_URL is on a different origin\n// from what our page is served on. This might happen if a CDN is used to\n// serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\nreturn;}window.addEventListener('load',function(){var swUrl=\"/synaesthesia\"+'/service-worker.js';if(isLocalhost){// This is running on localhost. Lets check if a service worker still exists or not.\ncheckValidServiceWorker(swUrl);// Add some additional logging to localhost, pointing developers to the\n// service worker/PWA documentation.\nnavigator.serviceWorker.ready.then(function(){console.log('This web app is being served cache-first by a service '+'worker. To learn more, visit https://goo.gl/SC7cgQ');});}else{// Is not local host. Just register service worker\nregisterValidSW(swUrl);}});}}function registerValidSW(swUrl){navigator.serviceWorker.register(swUrl).then(function(registration){registration.onupdatefound=function(){var installingWorker=registration.installing;installingWorker.onstatechange=function(){if(installingWorker.state==='installed'){if(navigator.serviceWorker.controller){// At this point, the old content will have been purged and\n// the fresh content will have been added to the cache.\n// It's the perfect time to display a \"New content is\n// available; please refresh.\" message in your web app.\nconsole.log('New content is available; please refresh.');}else{// At this point, everything has been precached.\n// It's the perfect time to display a\n// \"Content is cached for offline use.\" message.\nconsole.log('Content is cached for offline use.');}}};};}).catch(function(error){console.error('Error during service worker registration:',error);});}function checkValidServiceWorker(swUrl){// Check if the service worker can be found. If it can't reload the page.\nfetch(swUrl).then(function(response){// Ensure service worker exists, and that we really are getting a JS file.\nif(response.status===404||response.headers.get('content-type').indexOf('javascript')===-1){// No service worker found. Probably a different app. Reload the page.\nnavigator.serviceWorker.ready.then(function(registration){registration.unregister().then(function(){window.location.reload();});});}else{// Service worker found. Proceed as normal.\nregisterValidSW(swUrl);}}).catch(function(){console.log('No internet connection found. App is running in offline mode.');});}function unregister(){if('serviceWorker'in navigator){navigator.serviceWorker.ready.then(function(registration){registration.unregister();});}}\n\n/***/ }),\n/* 153 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_redux__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_redux_thunk__ = __webpack_require__(154);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_redux_thunk___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_redux_thunk__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__modules_root__ = __webpack_require__(155);\nvar composeEnhancers=window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__||__WEBPACK_IMPORTED_MODULE_0_redux__[\"d\" /* compose */];var store=Object(__WEBPACK_IMPORTED_MODULE_0_redux__[\"e\" /* createStore */])(__WEBPACK_IMPORTED_MODULE_2__modules_root__[\"a\" /* rootReducer */],composeEnhancers(Object(__WEBPACK_IMPORTED_MODULE_0_redux__[\"a\" /* applyMiddleware */])(__WEBPACK_IMPORTED_MODULE_1_redux_thunk___default.a)));/* harmony default export */ __webpack_exports__[\"a\"] = (store);\n\n/***/ }),\n/* 154 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nfunction createThunkMiddleware(extraArgument) {\n  return function (_ref) {\n    var dispatch = _ref.dispatch,\n        getState = _ref.getState;\n    return function (next) {\n      return function (action) {\n        if (typeof action === 'function') {\n          return action(dispatch, getState, extraArgument);\n        }\n\n        return next(action);\n      };\n    };\n  };\n}\n\nvar thunk = createThunkMiddleware();\nthunk.withExtraArgument = createThunkMiddleware;\n\nexports['default'] = thunk;\n\n/***/ }),\n/* 155 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return rootReducer; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_redux__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__App__ = __webpack_require__(34);\nvar rootReducer=Object(__WEBPACK_IMPORTED_MODULE_0_redux__[\"c\" /* combineReducers */])({app:__WEBPACK_IMPORTED_MODULE_1__App__[\"b\" /* default */]});\n\n/***/ }),\n/* 156 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__synth_synth__ = __webpack_require__(21);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var Drone=function(_React$Component){_inherits(Drone,_React$Component);function Drone(){_classCallCheck(this,Drone);return _possibleConstructorReturn(this,(Drone.__proto__||Object.getPrototypeOf(Drone)).apply(this,arguments));}_createClass(Drone,[{key:\"componentDidMount\",value:function componentDidMount(){var randomSeed=new Date().getTime().toString();__WEBPACK_IMPORTED_MODULE_1__synth_synth__[\"a\" /* play */](2,randomSeed);}},{key:\"render\",value:function render(){return null;}}]);return Drone;}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);/* harmony default export */ __webpack_exports__[\"a\"] = (Drone);\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// static/js/main.1a52cc3e.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/synaesthesia/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 53);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap bdf1309afdedf995622c","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react/index.js\n// module id = 0\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/prop-types/index.js\n// module id = 1\n// module chunks = 0","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n        '`warning(condition, format, ...args)` requires a warning ' +\n        'message argument'\n      );\n    }\n\n    if (format.length < 10 || (/^[s\\W]*$/).test(format)) {\n      throw new Error(\n        'The warning format should be able to uniquely identify this ' +\n        'warning. Please, use a more descriptive format than: ' + format\n      );\n    }\n\n    if (!condition) {\n      var argIndex = 0;\n      var message = 'Warning: ' +\n        format.replace(/%s/g, function() {\n          return args[argIndex++];\n        });\n      if (typeof console !== 'undefined') {\n        console.error(message);\n      }\n      try {\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n      } catch(x) {}\n    }\n  };\n}\n\nmodule.exports = warning;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/warning/browser.js\n// module id = 2\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/invariant/browser.js\n// module id = 3\n// module chunks = 0","(function(root, factory){\n\n\t//UMD\n\tif ( typeof define === \"function\" && define.amd ) {\n\t\tdefine(function() {\n\t\t\treturn factory();\n\t\t});\n\t} else if (typeof module === \"object\") {\n\t\tmodule.exports = factory();\n \t} else {\n\t\troot.Tone = factory();\n\t}\n\n}(this, function(){\n\n\t\"use strict\";\n\t\n\tvar Tone;\n\t//constructs the main Tone object\n\tfunction Main(func){\n\t\tTone = func();\n\t}\n\t//invokes each of the modules with the main Tone object as the argument\n\tfunction Module(func){\n\t\tfunc(Tone);\n\t}\t/**\n\t *  Tone.js\n\t *  @author Yotam Mann\n\t *  @license http://opensource.org/licenses/MIT MIT License\n\t *  @copyright 2014-2017 Yotam Mann\n\t */\n\tMain(function () {\n\t    \n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tTONE\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  @class  Tone is the base class of all other classes.\n\t\t *  @constructor\n\t\t */\n\t    var Tone = function () {\n\t    };\n\t    /**\n\t\t *  @memberOf Tone#\n\t\t *  @returns {string} returns the name of the class as a string\n\t\t */\n\t    Tone.prototype.toString = function () {\n\t        for (var className in Tone) {\n\t            var isLetter = className[0].match(/^[A-Z]$/);\n\t            var sameConstructor = Tone[className] === this.constructor;\n\t            if (Tone.isFunction(Tone[className]) && isLetter && sameConstructor) {\n\t                return className;\n\t            }\n\t        }\n\t        return 'Tone';\n\t    };\n\t    /**\n\t\t *  @memberOf Tone#\n\t\t *  disconnect and dispose\n\t\t *  @returns {Tone} this\n\t\t */\n\t    Tone.prototype.dispose = function () {\n\t        return this;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tGET/SET\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Set the parameters at once. Either pass in an\n\t\t *  object mapping parameters to values, or to set a\n\t\t *  single parameter, by passing in a string and value.\n\t\t *  The last argument is an optional ramp time which\n\t\t *  will ramp any signal values to their destination value\n\t\t *  over the duration of the rampTime.\n\t\t *  @param {Object|string} params\n\t\t *  @param {number=} value\n\t\t *  @param {Time=} rampTime\n\t\t *  @returns {Tone} this\n\t\t *  @memberOf Tone#\n\t\t *  @example\n\t\t * //set values using an object\n\t\t * filter.set({\n\t\t * \t\"frequency\" : 300,\n\t\t * \t\"type\" : highpass\n\t\t * });\n\t\t *  @example\n\t\t * filter.set(\"type\", \"highpass\");\n\t\t *  @example\n\t\t * //ramp to the value 220 over 3 seconds.\n\t\t * oscillator.set({\n\t\t * \t\"frequency\" : 220\n\t\t * }, 3);\n\t\t */\n\t    Tone.prototype.set = function (params, value, rampTime) {\n\t        if (Tone.isObject(params)) {\n\t            rampTime = value;\n\t        } else if (Tone.isString(params)) {\n\t            var tmpObj = {};\n\t            tmpObj[params] = value;\n\t            params = tmpObj;\n\t        }\n\t        paramLoop:\n\t            for (var attr in params) {\n\t                value = params[attr];\n\t                var parent = this;\n\t                if (attr.indexOf('.') !== -1) {\n\t                    var attrSplit = attr.split('.');\n\t                    for (var i = 0; i < attrSplit.length - 1; i++) {\n\t                        parent = parent[attrSplit[i]];\n\t                        if (parent instanceof Tone) {\n\t                            attrSplit.splice(0, i + 1);\n\t                            var innerParam = attrSplit.join('.');\n\t                            parent.set(innerParam, value);\n\t                            continue paramLoop;\n\t                        }\n\t                    }\n\t                    attr = attrSplit[attrSplit.length - 1];\n\t                }\n\t                var param = parent[attr];\n\t                if (Tone.isUndef(param)) {\n\t                    continue;\n\t                }\n\t                if (Tone.Signal && param instanceof Tone.Signal || Tone.Param && param instanceof Tone.Param) {\n\t                    if (param.value !== value) {\n\t                        if (Tone.isUndef(rampTime)) {\n\t                            param.value = value;\n\t                        } else {\n\t                            param.rampTo(value, rampTime);\n\t                        }\n\t                    }\n\t                } else if (param instanceof AudioParam) {\n\t                    if (param.value !== value) {\n\t                        param.value = value;\n\t                    }\n\t                } else if (param instanceof Tone) {\n\t                    param.set(value);\n\t                } else if (param !== value) {\n\t                    parent[attr] = value;\n\t                }\n\t            }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Get the object's attributes. Given no arguments get\n\t\t *  will return all available object properties and their corresponding\n\t\t *  values. Pass in a single attribute to retrieve or an array\n\t\t *  of attributes. The attribute strings can also include a \".\"\n\t\t *  to access deeper properties.\n\t\t *  @memberOf Tone#\n\t\t *  @example\n\t\t * osc.get();\n\t\t * //returns {\"type\" : \"sine\", \"frequency\" : 440, ...etc}\n\t\t *  @example\n\t\t * osc.get(\"type\");\n\t\t * //returns { \"type\" : \"sine\"}\n\t\t * @example\n\t\t * //use dot notation to access deep properties\n\t\t * synth.get([\"envelope.attack\", \"envelope.release\"]);\n\t\t * //returns {\"envelope\" : {\"attack\" : 0.2, \"release\" : 0.4}}\n\t\t *  @param {Array=|string|undefined} params the parameters to get, otherwise will return\n\t\t *  \t\t\t\t\t                  all available.\n\t\t *  @returns {Object}\n\t\t */\n\t    Tone.prototype.get = function (params) {\n\t        if (Tone.isUndef(params)) {\n\t            params = this._collectDefaults(this.constructor);\n\t        } else if (Tone.isString(params)) {\n\t            params = [params];\n\t        }\n\t        var ret = {};\n\t        for (var i = 0; i < params.length; i++) {\n\t            var attr = params[i];\n\t            var parent = this;\n\t            var subRet = ret;\n\t            if (attr.indexOf('.') !== -1) {\n\t                var attrSplit = attr.split('.');\n\t                for (var j = 0; j < attrSplit.length - 1; j++) {\n\t                    var subAttr = attrSplit[j];\n\t                    subRet[subAttr] = subRet[subAttr] || {};\n\t                    subRet = subRet[subAttr];\n\t                    parent = parent[subAttr];\n\t                }\n\t                attr = attrSplit[attrSplit.length - 1];\n\t            }\n\t            var param = parent[attr];\n\t            if (Tone.isObject(params[attr])) {\n\t                subRet[attr] = param.get();\n\t            } else if (Tone.Signal && param instanceof Tone.Signal) {\n\t                subRet[attr] = param.value;\n\t            } else if (Tone.Param && param instanceof Tone.Param) {\n\t                subRet[attr] = param.value;\n\t            } else if (param instanceof AudioParam) {\n\t                subRet[attr] = param.value;\n\t            } else if (param instanceof Tone) {\n\t                subRet[attr] = param.get();\n\t            } else if (!Tone.isFunction(param) && !Tone.isUndef(param)) {\n\t                subRet[attr] = param;\n\t            }\n\t        }\n\t        return ret;\n\t    };\n\t    /**\n\t\t *  collect all of the default attributes in one\n\t\t *  @private\n\t\t *  @param {function} constr the constructor to find the defaults from\n\t\t *  @return {Array} all of the attributes which belong to the class\n\t\t */\n\t    Tone.prototype._collectDefaults = function (constr) {\n\t        var ret = [];\n\t        if (!Tone.isUndef(constr.defaults)) {\n\t            ret = Object.keys(constr.defaults);\n\t        }\n\t        if (!Tone.isUndef(constr._super)) {\n\t            var superDefs = this._collectDefaults(constr._super);\n\t            //filter out repeats\n\t            for (var i = 0; i < superDefs.length; i++) {\n\t                if (ret.indexOf(superDefs[i]) === -1) {\n\t                    ret.push(superDefs[i]);\n\t                }\n\t            }\n\t        }\n\t        return ret;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tDEFAULTS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  @memberOf Tone\n\t\t *  @param  {Array}  values  The arguments array\n\t\t *  @param  {Array}  keys    The names of the arguments\n\t\t *  @param {Function|Object} constr The class constructor\n\t\t *  @return  {Object}  An object composed of the  defaults between the class' defaults\n\t\t *                        and the passed in arguments.\n\t\t */\n\t    Tone.defaults = function (values, keys, constr) {\n\t        var options = {};\n\t        if (values.length === 1 && Tone.isObject(values[0])) {\n\t            options = values[0];\n\t        } else {\n\t            for (var i = 0; i < keys.length; i++) {\n\t                options[keys[i]] = values[i];\n\t            }\n\t        }\n\t        if (!Tone.isUndef(constr.defaults)) {\n\t            return Tone.defaultArg(options, constr.defaults);\n\t        } else if (Tone.isObject(constr)) {\n\t            return Tone.defaultArg(options, constr);\n\t        } else {\n\t            return options;\n\t        }\n\t    };\n\t    /**\n\t\t *  If the `given` parameter is undefined, use the `fallback`.\n\t\t *  If both `given` and `fallback` are object literals, it will\n\t\t *  return a deep copy which includes all of the parameters from both\n\t\t *  objects. If a parameter is undefined in given, it will return\n\t\t *  the fallback property.\n\t\t *  <br><br>\n\t\t *  WARNING: if object is self referential, it will go into an an\n\t\t *  infinite recursive loop.\n\t\t *  @memberOf Tone\n\t\t *  @param  {*} given\n\t\t *  @param  {*} fallback\n\t\t *  @return {*}\n\t\t */\n\t    Tone.defaultArg = function (given, fallback) {\n\t        if (Tone.isObject(given) && Tone.isObject(fallback)) {\n\t            var ret = {};\n\t            //make a deep copy of the given object\n\t            for (var givenProp in given) {\n\t                ret[givenProp] = Tone.defaultArg(fallback[givenProp], given[givenProp]);\n\t            }\n\t            for (var fallbackProp in fallback) {\n\t                ret[fallbackProp] = Tone.defaultArg(given[fallbackProp], fallback[fallbackProp]);\n\t            }\n\t            return ret;\n\t        } else {\n\t            return Tone.isUndef(given) ? fallback : given;\n\t        }\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tCONNECTIONS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  connect together all of the arguments in series\n\t\t *  @param {...AudioParam|Tone|AudioNode} nodes\n\t\t *  @returns {Tone}\n\t\t *  @memberOf Tone\n\t\t *  @static\n\t\t */\n\t    Tone.connectSeries = function () {\n\t        var currentUnit = arguments[0];\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            var toUnit = arguments[i];\n\t            currentUnit.connect(toUnit);\n\t            currentUnit = toUnit;\n\t        }\n\t        return Tone;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    // TYPE CHECKING\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  test if the arg is undefined\n\t\t *  @param {*} arg the argument to test\n\t\t *  @returns {boolean} true if the arg is undefined\n\t\t *  @static\n\t\t *  @memberOf Tone\n\t\t */\n\t    Tone.isUndef = function (val) {\n\t        return typeof val === 'undefined';\n\t    };\n\t    /**\n\t\t *  test if the arg is a function\n\t\t *  @param {*} arg the argument to test\n\t\t *  @returns {boolean} true if the arg is a function\n\t\t *  @static\n\t\t *  @memberOf Tone\n\t\t */\n\t    Tone.isFunction = function (val) {\n\t        return typeof val === 'function';\n\t    };\n\t    /**\n\t\t *  Test if the argument is a number.\n\t\t *  @param {*} arg the argument to test\n\t\t *  @returns {boolean} true if the arg is a number\n\t\t *  @static\n\t\t *  @memberOf Tone\n\t\t */\n\t    Tone.isNumber = function (arg) {\n\t        return typeof arg === 'number';\n\t    };\n\t    /**\n\t\t *  Test if the given argument is an object literal (i.e. `{}`);\n\t\t *  @param {*} arg the argument to test\n\t\t *  @returns {boolean} true if the arg is an object literal.\n\t\t *  @static\n\t\t *  @memberOf Tone\n\t\t */\n\t    Tone.isObject = function (arg) {\n\t        return Object.prototype.toString.call(arg) === '[object Object]' && arg.constructor === Object;\n\t    };\n\t    /**\n\t\t *  Test if the argument is a boolean.\n\t\t *  @param {*} arg the argument to test\n\t\t *  @returns {boolean} true if the arg is a boolean\n\t\t *  @static\n\t\t *  @memberOf Tone\n\t\t */\n\t    Tone.isBoolean = function (arg) {\n\t        return typeof arg === 'boolean';\n\t    };\n\t    /**\n\t\t *  Test if the argument is an Array\n\t\t *  @param {*} arg the argument to test\n\t\t *  @returns {boolean} true if the arg is an array\n\t\t *  @static\n\t\t *  @memberOf Tone\n\t\t */\n\t    Tone.isArray = function (arg) {\n\t        return Array.isArray(arg);\n\t    };\n\t    /**\n\t\t *  Test if the argument is a string.\n\t\t *  @param {*} arg the argument to test\n\t\t *  @returns {boolean} true if the arg is a string\n\t\t *  @static\n\t\t *  @memberOf Tone\n\t\t */\n\t    Tone.isString = function (arg) {\n\t        return typeof arg === 'string';\n\t    };\n\t    /**\n\t\t *  Test if the argument is in the form of a note in scientific pitch notation.\n\t\t *  e.g. \"C4\"\n\t\t *  @param {*} arg the argument to test\n\t\t *  @returns {boolean} true if the arg is a string\n\t\t *  @static\n\t\t *  @memberOf Tone\n\t\t */\n\t    Tone.isNote = function (arg) {\n\t        return Tone.isString(arg) && /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(arg);\n\t    };\n\t    /**\n\t\t *  An empty function.\n\t\t *  @static\n\t\t */\n\t    Tone.noOp = function () {\n\t    };\n\t    /**\n\t\t *  Make the property not writable. Internal use only.\n\t\t *  @private\n\t\t *  @param  {string}  property  the property to make not writable\n\t\t */\n\t    Tone.prototype._readOnly = function (property) {\n\t        if (Array.isArray(property)) {\n\t            for (var i = 0; i < property.length; i++) {\n\t                this._readOnly(property[i]);\n\t            }\n\t        } else {\n\t            Object.defineProperty(this, property, {\n\t                writable: false,\n\t                enumerable: true\n\t            });\n\t        }\n\t    };\n\t    /**\n\t\t *  Make an attribute writeable. Interal use only.\n\t\t *  @private\n\t\t *  @param  {string}  property  the property to make writable\n\t\t */\n\t    Tone.prototype._writable = function (property) {\n\t        if (Array.isArray(property)) {\n\t            for (var i = 0; i < property.length; i++) {\n\t                this._writable(property[i]);\n\t            }\n\t        } else {\n\t            Object.defineProperty(this, property, { writable: true });\n\t        }\n\t    };\n\t    /**\n\t\t * Possible play states.\n\t\t * @enum {string}\n\t\t */\n\t    Tone.State = {\n\t        Started: 'started',\n\t        Stopped: 'stopped',\n\t        Paused: 'paused'\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    // CONVERSIONS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Equal power gain scale. Good for cross-fading.\n\t\t *  @param  {NormalRange} percent (0-1)\n\t\t *  @return {Number}         output gain (0-1)\n\t\t *  @static\n\t\t *  @memberOf Tone\n\t\t */\n\t    Tone.equalPowerScale = function (percent) {\n\t        var piFactor = 0.5 * Math.PI;\n\t        return Math.sin(percent * piFactor);\n\t    };\n\t    /**\n\t\t *  Convert decibels into gain.\n\t\t *  @param  {Decibels} db\n\t\t *  @return {Number}\n\t\t *  @static\n\t\t *  @memberOf Tone\n\t\t */\n\t    Tone.dbToGain = function (db) {\n\t        return Math.pow(2, db / 6);\n\t    };\n\t    /**\n\t\t *  Convert gain to decibels.\n\t\t *  @param  {Number} gain (0-1)\n\t\t *  @return {Decibels}\n\t\t *  @static\n\t\t *  @memberOf Tone\n\t\t */\n\t    Tone.gainToDb = function (gain) {\n\t        return 20 * (Math.log(gain) / Math.LN10);\n\t    };\n\t    /**\n\t\t *  Convert an interval (in semitones) to a frequency ratio.\n\t\t *  @param  {Interval} interval the number of semitones above the base note\n\t\t *  @return {number}          the frequency ratio\n\t\t *  @static\n\t\t *  @memberOf Tone\n\t\t *  @example\n\t\t * tone.intervalToFrequencyRatio(0); // 1\n\t\t * tone.intervalToFrequencyRatio(12); // 2\n\t\t * tone.intervalToFrequencyRatio(-12); // 0.5\n\t\t */\n\t    Tone.intervalToFrequencyRatio = function (interval) {\n\t        return Math.pow(2, interval / 12);\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tTIMING\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Return the current time of the AudioContext clock.\n\t\t *  @return {Number} the currentTime from the AudioContext\n\t\t *  @memberOf Tone#\n\t\t */\n\t    Tone.prototype.now = function () {\n\t        return Tone.context.now();\n\t    };\n\t    /**\n\t\t *  Return the current time of the AudioContext clock.\n\t\t *  @return {Number} the currentTime from the AudioContext\n\t\t *  @static\n\t\t *  @memberOf Tone\n\t\t */\n\t    Tone.now = function () {\n\t        return Tone.context.now();\n\t    };\n\t    /**\n\t\t * Adds warning in the console if the scheduled time has passed.\n\t\t * @type {Time}\n\t\t */\n\t    Tone.isPast = function (time) {\n\t        if (time < Tone.context.currentTime) {\n\t            console.warn('Time \\'' + time + '\\' is in the past. Scheduled time must be \\u2265 AudioContext.currentTime');\n\t        }\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tINHERITANCE\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  have a child inherit all of Tone's (or a parent's) prototype\n\t\t *  to inherit the parent's properties, make sure to call\n\t\t *  Parent.call(this) in the child's constructor\n\t\t *\n\t\t *  based on closure library's inherit function\n\t\t *\n\t\t *  @memberOf Tone\n\t\t *  @static\n\t\t *  @param  {function} \tchild\n\t\t *  @param  {function=} parent (optional) parent to inherit from\n\t\t *                             if no parent is supplied, the child\n\t\t *                             will inherit from Tone\n\t\t */\n\t    Tone.extend = function (child, parent) {\n\t        if (Tone.isUndef(parent)) {\n\t            parent = Tone;\n\t        }\n\t        function TempConstructor() {\n\t        }\n\t        TempConstructor.prototype = parent.prototype;\n\t        child.prototype = new TempConstructor();\n\t        /** @override */\n\t        child.prototype.constructor = child;\n\t        child._super = parent;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tCONTEXT\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  The private audio context shared by all Tone Nodes.\n\t\t *  @private\n\t\t *  @type {Tone.Context}\n\t\t */\n\t    var audioContext = null;\n\t    /**\n\t\t *  A static pointer to the audio context accessible as Tone.context.\n\t\t *  @type {Tone.Context}\n\t\t *  @name context\n\t\t *  @memberOf Tone\n\t\t */\n\t    Object.defineProperty(Tone, 'context', {\n\t        get: function () {\n\t            return audioContext;\n\t        },\n\t        set: function (context) {\n\t            if (Tone.Context && context instanceof Tone.Context) {\n\t                audioContext = context;\n\t            } else {\n\t                audioContext = new Tone.Context(context);\n\t            }\n\t            //initialize the new audio context\n\t            Tone.Context.emit('init', audioContext);\n\t        }\n\t    });\n\t    /**\n\t\t *  The AudioContext\n\t\t *  @type {Tone.Context}\n\t\t *  @name context\n\t\t *  @memberOf Tone#\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.prototype, 'context', {\n\t        get: function () {\n\t            return Tone.context;\n\t        }\n\t    });\n\t    /**\n\t\t *  Tone automatically creates a context on init, but if you are working\n\t\t *  with other libraries which also create an AudioContext, it can be\n\t\t *  useful to set your own. If you are going to set your own context,\n\t\t *  be sure to do it at the start of your code, before creating any objects.\n\t\t *  @static\n\t\t *  @param {AudioContext} ctx The new audio context to set\n\t\t */\n\t    Tone.setContext = function (ctx) {\n\t        Tone.context = ctx;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tATTRIBUTES\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  The number of seconds of 1 processing block (128 samples)\n\t\t *  @type {Number}\n\t\t *  @name blockTime\n\t\t *  @memberOf Tone\n\t\t *  @static\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.prototype, 'blockTime', {\n\t        get: function () {\n\t            return 128 / this.context.sampleRate;\n\t        }\n\t    });\n\t    /**\n\t\t *  The duration in seconds of one sample.\n\t\t *  @type {Number}\n\t\t *  @name sampleTime\n\t\t *  @memberOf Tone\n\t\t *  @static\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.prototype, 'sampleTime', {\n\t        get: function () {\n\t            return 1 / this.context.sampleRate;\n\t        }\n\t    });\n\t    /**\n\t\t *  Whether or not all the technologies that Tone.js relies on are supported by the current browser.\n\t\t *  @type {Boolean}\n\t\t *  @name supported\n\t\t *  @memberOf Tone\n\t\t *  @readOnly\n\t\t *  @static\n\t\t */\n\t    Object.defineProperty(Tone, 'supported', {\n\t        get: function () {\n\t            var hasAudioContext = window.hasOwnProperty('AudioContext') || window.hasOwnProperty('webkitAudioContext');\n\t            var hasPromises = window.hasOwnProperty('Promise');\n\t            var hasWorkers = window.hasOwnProperty('Worker');\n\t            return hasAudioContext && hasPromises && hasWorkers;\n\t        }\n\t    });\n\t    /**\n\t\t *  Boolean value if the audio context has been initialized.\n\t\t *  @type {Boolean}\n\t\t *  @memberOf Tone\n\t\t *  @static\n\t\t *  @name initialized\n\t\t */\n\t    Object.defineProperty(Tone, 'initialized', {\n\t        get: function () {\n\t            return audioContext !== null;\n\t        }\n\t    });\n\t    /**\n\t\t *  Get the context when it becomes available\n\t\t *  @param  {Function}  resolve  Callback when the context is initialized\n\t\t *  @return  {Tone}\n\t\t */\n\t    Tone.getContext = function (resolve) {\n\t        if (Tone.initialized) {\n\t            resolve(Tone.context);\n\t        } else {\n\t            var resCallback = function () {\n\t                resolve(Tone.context);\n\t                Tone.Context.off('init', resCallback);\n\t            };\n\t            Tone.Context.on('init', resCallback);\n\t        }\n\t        return Tone;\n\t    };\n\t    /**\n\t\t * The version number\n\t\t * @type {String}\n\t\t * @static\n\t\t */\n\t    Tone.version = 'r12-dev';\n\t    // allow optional silencing of this log\n\t    if (!window.TONE_SILENCE_VERSION_LOGGING) {\n\t        console.log('%c * Tone.js ' + Tone.version + ' * ', 'background: #000; color: #fff');\n\t    }\n\t    return Tone;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Emitter gives classes which extend it\n\t\t *         the ability to listen for and emit events. \n\t\t *         Inspiration and reference from Jerome Etienne's [MicroEvent](https://github.com/jeromeetienne/microevent.js).\n\t\t *         MIT (c) 2011 Jerome Etienne.\n\t\t *         \n\t\t *  @extends {Tone}\n\t\t */\n\t    Tone.Emitter = function () {\n\t        Tone.call(this);\n\t        /**\n\t\t\t *  Contains all of the events.\n\t\t\t *  @private\n\t\t\t *  @type  {Object}\n\t\t\t */\n\t        this._events = {};\n\t    };\n\t    Tone.extend(Tone.Emitter);\n\t    /**\n\t\t *  Bind a callback to a specific event.\n\t\t *  @param  {String}    event     The name of the event to listen for.\n\t\t *  @param  {Function}  callback  The callback to invoke when the\n\t\t *                                event is emitted\n\t\t *  @return  {Tone.Emitter}    this\n\t\t */\n\t    Tone.Emitter.prototype.on = function (event, callback) {\n\t        //split the event\n\t        var events = event.split(/\\W+/);\n\t        for (var i = 0; i < events.length; i++) {\n\t            var eventName = events[i];\n\t            if (!this._events.hasOwnProperty(eventName)) {\n\t                this._events[eventName] = [];\n\t            }\n\t            this._events[eventName].push(callback);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Remove the event listener.\n\t\t *  @param  {String}    event     The event to stop listening to.\n\t\t *  @param  {Function=}  callback  The callback which was bound to \n\t\t *                                the event with Tone.Emitter.on.\n\t\t *                                If no callback is given, all callbacks\n\t\t *                                events are removed.\n\t\t *  @return  {Tone.Emitter}    this\n\t\t */\n\t    Tone.Emitter.prototype.off = function (event, callback) {\n\t        var events = event.split(/\\W+/);\n\t        for (var ev = 0; ev < events.length; ev++) {\n\t            event = events[ev];\n\t            if (this._events.hasOwnProperty(event)) {\n\t                if (Tone.isUndef(callback)) {\n\t                    this._events[event] = [];\n\t                } else {\n\t                    var eventList = this._events[event];\n\t                    for (var i = 0; i < eventList.length; i++) {\n\t                        if (eventList[i] === callback) {\n\t                            eventList.splice(i, 1);\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Invoke all of the callbacks bound to the event\n\t\t *  with any arguments passed in. \n\t\t *  @param  {String}  event  The name of the event.\n\t\t *  @param {*} args... The arguments to pass to the functions listening.\n\t\t *  @return  {Tone.Emitter}  this\n\t\t */\n\t    Tone.Emitter.prototype.emit = function (event) {\n\t        if (this._events) {\n\t            var args = Array.apply(null, arguments).slice(1);\n\t            if (this._events.hasOwnProperty(event)) {\n\t                var eventList = this._events[event];\n\t                for (var i = 0, len = eventList.length; i < len; i++) {\n\t                    eventList[i].apply(this, args);\n\t                }\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Add Emitter functions (on/off/emit) to the object\n\t\t *  @param  {Object|Function}  object  The object or class to extend.\n\t\t *  @returns {Tone.Emitter}\n\t\t */\n\t    Tone.Emitter.mixin = function (object) {\n\t        var functions = [\n\t            'on',\n\t            'off',\n\t            'emit'\n\t        ];\n\t        object._events = {};\n\t        for (var i = 0; i < functions.length; i++) {\n\t            var func = functions[i];\n\t            var emitterFunc = Tone.Emitter.prototype[func];\n\t            object[func] = emitterFunc;\n\t        }\n\t        return Tone.Emitter;\n\t    };\n\t    /**\n\t\t *  Clean up\n\t\t *  @return  {Tone.Emitter}  this\n\t\t */\n\t    Tone.Emitter.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._events = null;\n\t        return this;\n\t    };\n\t    return Tone.Emitter;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class A Timeline class for scheduling and maintaining state\n\t\t *         along a timeline. All events must have a \"time\" property.\n\t\t *         Internally, events are stored in time order for fast\n\t\t *         retrieval.\n\t\t *  @extends {Tone}\n\t\t *  @param {Positive} [memory=Infinity] The number of previous events that are retained.\n\t\t */\n\t    Tone.Timeline = function () {\n\t        var options = Tone.defaults(arguments, ['memory'], Tone.Timeline);\n\t        Tone.call(this);\n\t        /**\n\t\t\t *  The array of scheduled timeline events\n\t\t\t *  @type  {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._timeline = [];\n\t        /**\n\t\t\t *  An array of items to remove from the list.\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._toRemove = [];\n\t        /**\n\t\t\t *  An array of items to add from the list (once it's done iterating)\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._toAdd = [];\n\t        /**\n\t\t\t *  Flag if the timeline is mid iteration\n\t\t\t *  @private\n\t\t\t *  @type {Boolean}\n\t\t\t */\n\t        this._iterating = false;\n\t        /**\n\t\t\t *  The memory of the timeline, i.e.\n\t\t\t *  how many events in the past it will retain\n\t\t\t *  @type {Positive}\n\t\t\t */\n\t        this.memory = options.memory;\n\t    };\n\t    Tone.extend(Tone.Timeline);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t *  @const\n\t\t */\n\t    Tone.Timeline.defaults = { 'memory': Infinity };\n\t    /**\n\t\t *  The number of items in the timeline.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Timeline#\n\t\t *  @name length\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Timeline.prototype, 'length', {\n\t        get: function () {\n\t            return this._timeline.length;\n\t        }\n\t    });\n\t    /**\n\t\t *  Insert an event object onto the timeline. Events must have a \"time\" attribute.\n\t\t *  @param  {Object}  event  The event object to insert into the\n\t\t *                           timeline.\n\t\t *  @returns {Tone.Timeline} this\n\t\t */\n\t    Tone.Timeline.prototype.add = function (event) {\n\t        //the event needs to have a time attribute\n\t        if (Tone.isUndef(event.time)) {\n\t            throw new Error('Tone.Timeline: events must have a time attribute');\n\t        }\n\t        if (this._iterating) {\n\t            this._toAdd.push(event);\n\t        } else {\n\t            var index = this._search(event.time);\n\t            this._timeline.splice(index + 1, 0, event);\n\t            //if the length is more than the memory, remove the previous ones\n\t            if (this.length > this.memory) {\n\t                var diff = this.length - this.memory;\n\t                this._timeline.splice(0, diff);\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Remove an event from the timeline.\n\t\t *  @param  {Object}  event  The event object to remove from the list.\n\t\t *  @returns {Tone.Timeline} this\n\t\t */\n\t    Tone.Timeline.prototype.remove = function (event) {\n\t        if (this._iterating) {\n\t            this._toRemove.push(event);\n\t        } else {\n\t            var index = this._timeline.indexOf(event);\n\t            if (index !== -1) {\n\t                this._timeline.splice(index, 1);\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Get the nearest event whose time is less than or equal to the given time.\n\t\t *  @param  {Number}  time  The time to query.\n\t\t *  @param  {String}  comparator Which value in the object to compare\n\t\t *  @returns {Object} The event object set after that time.\n\t\t */\n\t    Tone.Timeline.prototype.get = function (time, comparator) {\n\t        comparator = Tone.defaultArg(comparator, 'time');\n\t        var index = this._search(time, comparator);\n\t        if (index !== -1) {\n\t            return this._timeline[index];\n\t        } else {\n\t            return null;\n\t        }\n\t    };\n\t    /**\n\t\t *  Return the first event in the timeline without removing it\n\t\t *  @returns {Object} The first event object\n\t\t */\n\t    Tone.Timeline.prototype.peek = function () {\n\t        return this._timeline[0];\n\t    };\n\t    /**\n\t\t *  Return the first event in the timeline and remove it\n\t\t *  @returns {Object} The first event object\n\t\t */\n\t    Tone.Timeline.prototype.shift = function () {\n\t        return this._timeline.shift();\n\t    };\n\t    /**\n\t\t *  Get the event which is scheduled after the given time.\n\t\t *  @param  {Number}  time  The time to query.\n\t\t *  @param  {String}  comparator Which value in the object to compare\n\t\t *  @returns {Object} The event object after the given time\n\t\t */\n\t    Tone.Timeline.prototype.getAfter = function (time, comparator) {\n\t        comparator = Tone.defaultArg(comparator, 'time');\n\t        var index = this._search(time, comparator);\n\t        if (index + 1 < this._timeline.length) {\n\t            return this._timeline[index + 1];\n\t        } else {\n\t            return null;\n\t        }\n\t    };\n\t    /**\n\t\t *  Get the event before the event at the given time.\n\t\t *  @param  {Number}  time  The time to query.\n\t\t *  @param  {String}  comparator Which value in the object to compare\n\t\t *  @returns {Object} The event object before the given time\n\t\t */\n\t    Tone.Timeline.prototype.getBefore = function (time, comparator) {\n\t        comparator = Tone.defaultArg(comparator, 'time');\n\t        var len = this._timeline.length;\n\t        //if it's after the last item, return the last item\n\t        if (len > 0 && this._timeline[len - 1][comparator] < time) {\n\t            return this._timeline[len - 1];\n\t        }\n\t        var index = this._search(time, comparator);\n\t        if (index - 1 >= 0) {\n\t            return this._timeline[index - 1];\n\t        } else {\n\t            return null;\n\t        }\n\t    };\n\t    /**\n\t\t *  Cancel events after the given time\n\t\t *  @param  {Number}  time  The time to query.\n\t\t *  @returns {Tone.Timeline} this\n\t\t */\n\t    Tone.Timeline.prototype.cancel = function (after) {\n\t        if (this._timeline.length > 1) {\n\t            var index = this._search(after);\n\t            if (index >= 0) {\n\t                if (this._timeline[index].time === after) {\n\t                    //get the first item with that time\n\t                    for (var i = index; i >= 0; i--) {\n\t                        if (this._timeline[i].time === after) {\n\t                            index = i;\n\t                        } else {\n\t                            break;\n\t                        }\n\t                    }\n\t                    this._timeline = this._timeline.slice(0, index);\n\t                } else {\n\t                    this._timeline = this._timeline.slice(0, index + 1);\n\t                }\n\t            } else {\n\t                this._timeline = [];\n\t            }\n\t        } else if (this._timeline.length === 1) {\n\t            //the first item's time\n\t            if (this._timeline[0].time >= after) {\n\t                this._timeline = [];\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Cancel events before or equal to the given time.\n\t\t *  @param  {Number}  time  The time to cancel before.\n\t\t *  @returns {Tone.Timeline} this\n\t\t */\n\t    Tone.Timeline.prototype.cancelBefore = function (time) {\n\t        var index = this._search(time);\n\t        if (index >= 0) {\n\t            this._timeline = this._timeline.slice(index + 1);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t * Returns the previous event if there is one. null otherwise\n\t\t * @param  {Object} event The event to find the previous one of\n\t\t * @return {Object}       The event right before the given event\n\t\t */\n\t    Tone.Timeline.prototype.previousEvent = function (event) {\n\t        var index = this._timeline.indexOf(event);\n\t        if (index > 0) {\n\t            return this._timeline[index - 1];\n\t        } else {\n\t            return null;\n\t        }\n\t    };\n\t    /**\n\t\t *  Does a binary search on the timeline array and returns the\n\t\t *  nearest event index whose time is after or equal to the given time.\n\t\t *  If a time is searched before the first index in the timeline, -1 is returned.\n\t\t *  If the time is after the end, the index of the last item is returned.\n\t\t *  @param  {Number}  time\n\t\t *  @param  {String}  comparator Which value in the object to compare\n\t\t *  @return  {Number} the index in the timeline array\n\t\t *  @private\n\t\t */\n\t    Tone.Timeline.prototype._search = function (time, comparator) {\n\t        if (this._timeline.length === 0) {\n\t            return -1;\n\t        }\n\t        comparator = Tone.defaultArg(comparator, 'time');\n\t        var beginning = 0;\n\t        var len = this._timeline.length;\n\t        var end = len;\n\t        if (len > 0 && this._timeline[len - 1][comparator] <= time) {\n\t            return len - 1;\n\t        }\n\t        while (beginning < end) {\n\t            // calculate the midpoint for roughly equal partition\n\t            var midPoint = Math.floor(beginning + (end - beginning) / 2);\n\t            var event = this._timeline[midPoint];\n\t            var nextEvent = this._timeline[midPoint + 1];\n\t            if (event[comparator] === time) {\n\t                //choose the last one that has the same time\n\t                for (var i = midPoint; i < this._timeline.length; i++) {\n\t                    var testEvent = this._timeline[i];\n\t                    if (testEvent[comparator] === time) {\n\t                        midPoint = i;\n\t                    }\n\t                }\n\t                return midPoint;\n\t            } else if (event[comparator] < time && nextEvent[comparator] > time) {\n\t                return midPoint;\n\t            } else if (event[comparator] > time) {\n\t                //search lower\n\t                end = midPoint;\n\t            } else {\n\t                //search upper\n\t                beginning = midPoint + 1;\n\t            }\n\t        }\n\t        return -1;\n\t    };\n\t    /**\n\t\t *  Internal iterator. Applies extra safety checks for\n\t\t *  removing items from the array.\n\t\t *  @param  {Function}  callback\n\t\t *  @param  {Number=}    lowerBound\n\t\t *  @param  {Number=}    upperBound\n\t\t *  @private\n\t\t */\n\t    Tone.Timeline.prototype._iterate = function (callback, lowerBound, upperBound) {\n\t        this._iterating = true;\n\t        lowerBound = Tone.defaultArg(lowerBound, 0);\n\t        upperBound = Tone.defaultArg(upperBound, this._timeline.length - 1);\n\t        for (var i = lowerBound; i <= upperBound; i++) {\n\t            callback.call(this, this._timeline[i]);\n\t        }\n\t        this._iterating = false;\n\t        this._toRemove.forEach(function (event) {\n\t            this.remove(event);\n\t        }.bind(this));\n\t        this._toRemove = [];\n\t        this._toAdd.forEach(function (event) {\n\t            this.add(event);\n\t        }.bind(this));\n\t        this._toAdd = [];\n\t    };\n\t    /**\n\t\t *  Iterate over everything in the array\n\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t *  @returns {Tone.Timeline} this\n\t\t */\n\t    Tone.Timeline.prototype.forEach = function (callback) {\n\t        this._iterate(callback);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Iterate over everything in the array at or before the given time.\n\t\t *  @param  {Number}  time The time to check if items are before\n\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t *  @returns {Tone.Timeline} this\n\t\t */\n\t    Tone.Timeline.prototype.forEachBefore = function (time, callback) {\n\t        //iterate over the items in reverse so that removing an item doesn't break things\n\t        var upperBound = this._search(time);\n\t        if (upperBound !== -1) {\n\t            this._iterate(callback, 0, upperBound);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Iterate over everything in the array after the given time.\n\t\t *  @param  {Number}  time The time to check if items are before\n\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t *  @returns {Tone.Timeline} this\n\t\t */\n\t    Tone.Timeline.prototype.forEachAfter = function (time, callback) {\n\t        //iterate over the items in reverse so that removing an item doesn't break things\n\t        var lowerBound = this._search(time);\n\t        this._iterate(callback, lowerBound + 1);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Iterate over everything in the array at or after the given time. Similar to\n\t\t *  forEachAfter, but includes the item(s) at the given time.\n\t\t *  @param  {Number}  time The time to check if items are before\n\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t *  @returns {Tone.Timeline} this\n\t\t */\n\t    Tone.Timeline.prototype.forEachFrom = function (time, callback) {\n\t        //iterate over the items in reverse so that removing an item doesn't break things\n\t        var lowerBound = this._search(time);\n\t        //work backwards until the event time is less than time\n\t        while (lowerBound >= 0 && this._timeline[lowerBound].time >= time) {\n\t            lowerBound--;\n\t        }\n\t        this._iterate(callback, lowerBound + 1);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Iterate over everything in the array at the given time\n\t\t *  @param  {Number}  time The time to check if items are before\n\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t *  @returns {Tone.Timeline} this\n\t\t */\n\t    Tone.Timeline.prototype.forEachAtTime = function (time, callback) {\n\t        //iterate over the items in reverse so that removing an item doesn't break things\n\t        var upperBound = this._search(time);\n\t        if (upperBound !== -1) {\n\t            this._iterate(function (event) {\n\t                if (event.time === time) {\n\t                    callback.call(this, event);\n\t                }\n\t            }, 0, upperBound);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return  {Tone.Timeline}  this\n\t\t */\n\t    Tone.Timeline.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._timeline = null;\n\t        this._toRemove = null;\n\t        this._toAdd = null;\n\t        return this;\n\t    };\n\t    return Tone.Timeline;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  shim\n\t\t *  @private\n\t\t */\n\t    if (!window.hasOwnProperty('AudioContext') && window.hasOwnProperty('webkitAudioContext')) {\n\t        window.AudioContext = window.webkitAudioContext;\n\t    }\n\t    /**\n\t\t *  @class Wrapper around the native AudioContext.\n\t\t *  @extends {Tone.Emitter}\n\t\t *  @param {AudioContext=} context optionally pass in a context\n\t\t */\n\t    Tone.Context = function () {\n\t        Tone.Emitter.call(this);\n\t        var options = Tone.defaults(arguments, ['context'], Tone.Context);\n\t        if (!options.context) {\n\t            options.context = new window.AudioContext();\n\t        }\n\t        this._context = options.context;\n\t        // extend all of the methods\n\t        for (var prop in this._context) {\n\t            this._defineProperty(this._context, prop);\n\t        }\n\t        /**\n\t\t\t *  The default latency hint\n\t\t\t *  @type  {String}\n\t\t\t *  @private\n\t\t\t */\n\t        this._latencyHint = options.latencyHint;\n\t        /**\n\t\t\t *  An object containing all of the constants AudioBufferSourceNodes\n\t\t\t *  @type  {Object}\n\t\t\t *  @private\n\t\t\t */\n\t        this._constants = {};\n\t        ///////////////////////////////////////////////////////////////////////\n\t        // WORKER\n\t        ///////////////////////////////////////////////////////////////////////\n\t        /**\n\t\t\t *  The amount of time events are scheduled\n\t\t\t *  into the future\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this.lookAhead = options.lookAhead;\n\t        /**\n\t\t\t *  A reference to the actual computed update interval\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._computedUpdateInterval = 0;\n\t        /**\n\t\t\t *  A reliable callback method\n\t\t\t *  @private\n\t\t\t *  @type  {Ticker}\n\t\t\t */\n\t        this._ticker = new Ticker(this.emit.bind(this, 'tick'), options.clockSource, options.updateInterval);\n\t        ///////////////////////////////////////////////////////////////////////\n\t        // TIMEOUTS\n\t        ///////////////////////////////////////////////////////////////////////\n\t        /**\n\t\t\t *  All of the setTimeout events.\n\t\t\t *  @type  {Tone.Timeline}\n\t\t\t *  @private\n\t\t\t */\n\t        this._timeouts = new Tone.Timeline();\n\t        /**\n\t\t\t *  The timeout id counter\n\t\t\t *  @private\n\t\t\t *  @type {Number}\n\t\t\t */\n\t        this._timeoutIds = 0;\n\t        this.on('tick', this._timeoutLoop.bind(this));\n\t    };\n\t    Tone.extend(Tone.Context, Tone.Emitter);\n\t    Tone.Emitter.mixin(Tone.Context);\n\t    /**\n\t\t * defaults\n\t\t * @static\n\t\t * @type {Object}\n\t\t */\n\t    Tone.Context.defaults = {\n\t        'clockSource': 'worker',\n\t        'latencyHint': 'interactive',\n\t        'lookAhead': 0.1,\n\t        'updateInterval': 0.03\n\t    };\n\t    /**\n\t\t *  Define a property on this Tone.Context. \n\t\t *  This is used to extend the native AudioContext\n\t\t *  @param  {AudioContext}  context\n\t\t *  @param  {String}  prop \n\t\t *  @private\n\t\t */\n\t    Tone.Context.prototype._defineProperty = function (context, prop) {\n\t        if (Tone.isUndef(this[prop])) {\n\t            Object.defineProperty(this, prop, {\n\t                get: function () {\n\t                    if (typeof context[prop] === 'function') {\n\t                        return context[prop].bind(context);\n\t                    } else {\n\t                        return context[prop];\n\t                    }\n\t                },\n\t                set: function (val) {\n\t                    context[prop] = val;\n\t                }\n\t            });\n\t        }\n\t    };\n\t    /**\n\t\t *  The current audio context time\n\t\t *  @return  {Number}\n\t\t */\n\t    Tone.Context.prototype.now = function () {\n\t        return this._context.currentTime + this.lookAhead;\n\t    };\n\t    /**\n\t\t *  Generate a looped buffer at some constant value.\n\t\t *  @param  {Number}  val\n\t\t *  @return  {BufferSourceNode}\n\t\t */\n\t    Tone.Context.prototype.getConstant = function (val) {\n\t        if (this._constants[val]) {\n\t            return this._constants[val];\n\t        } else {\n\t            var buffer = this._context.createBuffer(1, 128, this._context.sampleRate);\n\t            var arr = buffer.getChannelData(0);\n\t            for (var i = 0; i < arr.length; i++) {\n\t                arr[i] = val;\n\t            }\n\t            var constant = this._context.createBufferSource();\n\t            constant.channelCount = 1;\n\t            constant.channelCountMode = 'explicit';\n\t            constant.buffer = buffer;\n\t            constant.loop = true;\n\t            constant.start(0);\n\t            this._constants[val] = constant;\n\t            return constant;\n\t        }\n\t    };\n\t    /**\n\t\t *  The private loop which keeps track of the context scheduled timeouts\n\t\t *  Is invoked from the clock source\n\t\t *  @private\n\t\t */\n\t    Tone.Context.prototype._timeoutLoop = function () {\n\t        var now = this.now();\n\t        while (this._timeouts && this._timeouts.length && this._timeouts.peek().time <= now) {\n\t            this._timeouts.shift().callback();\n\t        }\n\t    };\n\t    /**\n\t\t *  A setTimeout which is gaurenteed by the clock source. \n\t\t *  Also runs in the offline context.\n\t\t *  @param  {Function}  fn       The callback to invoke\n\t\t *  @param  {Seconds}    timeout  The timeout in seconds\n\t\t *  @returns {Number} ID to use when invoking Tone.Context.clearTimeout\n\t\t */\n\t    Tone.Context.prototype.setTimeout = function (fn, timeout) {\n\t        this._timeoutIds++;\n\t        var now = this.now();\n\t        this._timeouts.add({\n\t            callback: fn,\n\t            time: now + timeout,\n\t            id: this._timeoutIds\n\t        });\n\t        return this._timeoutIds;\n\t    };\n\t    /**\n\t\t *  Clears a previously scheduled timeout with Tone.context.setTimeout\n\t\t *  @param  {Number}  id  The ID returned from setTimeout\n\t\t *  @return  {Tone.Context}  this\n\t\t */\n\t    Tone.Context.prototype.clearTimeout = function (id) {\n\t        this._timeouts.forEach(function (event) {\n\t            if (event.id === id) {\n\t                this.remove(event);\n\t            }\n\t        });\n\t        return this;\n\t    };\n\t    /**\n\t\t *  How often the Web Worker callback is invoked.\n\t\t *  This number corresponds to how responsive the scheduling\n\t\t *  can be. Context.updateInterval + Context.lookAhead gives you the\n\t\t *  total latency between scheduling an event and hearing it.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Context#\n\t\t *  @name updateInterval\n\t\t */\n\t    Object.defineProperty(Tone.Context.prototype, 'updateInterval', {\n\t        get: function () {\n\t            return this._ticker.updateInterval;\n\t        },\n\t        set: function (interval) {\n\t            this._ticker.updateInterval = interval;\n\t        }\n\t    });\n\t    /**\n\t\t *  What the source of the clock is, either \"worker\" (Web Worker [default]), \n\t\t *  \"timeout\" (setTimeout), or \"offline\" (none). \n\t\t *  @type {String}\n\t\t *  @memberOf Tone.Context#\n\t\t *  @name clockSource\n\t\t */\n\t    Object.defineProperty(Tone.Context.prototype, 'clockSource', {\n\t        get: function () {\n\t            return this._ticker.type;\n\t        },\n\t        set: function (type) {\n\t            this._ticker.type = type;\n\t        }\n\t    });\n\t    /**\n\t\t *  The type of playback, which affects tradeoffs between audio \n\t\t *  output latency and responsiveness. \n\t\t *  \n\t\t *  In addition to setting the value in seconds, the latencyHint also\n\t\t *  accepts the strings \"interactive\" (prioritizes low latency), \n\t\t *  \"playback\" (prioritizes sustained playback), \"balanced\" (balances\n\t\t *  latency and performance), and \"fastest\" (lowest latency, might glitch more often). \n\t\t *  @type {String|Seconds}\n\t\t *  @memberOf Tone.Context#\n\t\t *  @name latencyHint\n\t\t *  @example\n\t\t * //set the lookAhead to 0.3 seconds\n\t\t * Tone.context.latencyHint = 0.3;\n\t\t */\n\t    Object.defineProperty(Tone.Context.prototype, 'latencyHint', {\n\t        get: function () {\n\t            return this._latencyHint;\n\t        },\n\t        set: function (hint) {\n\t            var lookAhead = hint;\n\t            this._latencyHint = hint;\n\t            if (Tone.isString(hint)) {\n\t                switch (hint) {\n\t                case 'interactive':\n\t                    lookAhead = 0.1;\n\t                    this._context.latencyHint = hint;\n\t                    break;\n\t                case 'playback':\n\t                    lookAhead = 0.8;\n\t                    this._context.latencyHint = hint;\n\t                    break;\n\t                case 'balanced':\n\t                    lookAhead = 0.25;\n\t                    this._context.latencyHint = hint;\n\t                    break;\n\t                case 'fastest':\n\t                    this._context.latencyHint = 'interactive';\n\t                    lookAhead = 0.01;\n\t                    break;\n\t                }\n\t            }\n\t            this.lookAhead = lookAhead;\n\t            this.updateInterval = lookAhead / 3;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up\n\t\t *  @returns {Tone.Context} this\n\t\t */\n\t    Tone.Context.prototype.dispose = function () {\n\t        Tone.Context.emit('close', this);\n\t        Tone.Emitter.prototype.dispose.call(this);\n\t        this._ticker.dispose();\n\t        this._ticker = null;\n\t        this._timeouts.dispose();\n\t        this._timeouts = null;\n\t        for (var con in this._constants) {\n\t            this._constants[con].disconnect();\n\t        }\n\t        this._constants = null;\n\t        this.close();\n\t        return this;\n\t    };\n\t    /**\n\t\t * @class A class which provides a reliable callback using either\n\t\t *        a Web Worker, or if that isn't supported, falls back to setTimeout.\n\t\t * @private\n\t\t */\n\t    var Ticker = function (callback, type, updateInterval) {\n\t        /**\n\t\t\t * Either \"worker\" or \"timeout\"\n\t\t\t * @type {String}\n\t\t\t * @private\n\t\t\t */\n\t        this._type = type;\n\t        /**\n\t\t\t * The update interval of the worker\n\t\t\t * @private\n\t\t\t * @type {Number}\n\t\t\t */\n\t        this._updateInterval = updateInterval;\n\t        /**\n\t\t\t * The callback to invoke at regular intervals\n\t\t\t * @type {Function}\n\t\t\t * @private\n\t\t\t */\n\t        this._callback = Tone.defaultArg(callback, Tone.noOp);\n\t        //create the clock source for the first time\n\t        this._createClock();\n\t    };\n\t    /**\n\t\t * The possible ticker types\n\t\t * @private\n\t\t * @type {Object}\n\t\t */\n\t    Ticker.Type = {\n\t        Worker: 'worker',\n\t        Timeout: 'timeout',\n\t        Offline: 'offline'\n\t    };\n\t    /**\n\t\t *  Generate a web worker\n\t\t *  @return  {WebWorker}\n\t\t *  @private\n\t\t */\n\t    Ticker.prototype._createWorker = function () {\n\t        //URL Shim\n\t        window.URL = window.URL || window.webkitURL;\n\t        var blob = new Blob([//the initial timeout time\n\t            'var timeoutTime = ' + (this._updateInterval * 1000).toFixed(1) + ';' + //onmessage callback\n\t            'self.onmessage = function(msg){' + '\\ttimeoutTime = parseInt(msg.data);' + '};' + //the tick function which posts a message\n\t            //and schedules a new tick\n\t            'function tick(){' + '\\tsetTimeout(tick, timeoutTime);' + '\\tself.postMessage(\\'tick\\');' + '}' + //call tick initially\n\t            'tick();']);\n\t        var blobUrl = URL.createObjectURL(blob);\n\t        var worker = new Worker(blobUrl);\n\t        worker.onmessage = this._callback.bind(this);\n\t        this._worker = worker;\n\t    };\n\t    /**\n\t\t * Create a timeout loop\n\t\t * @private\n\t\t */\n\t    Ticker.prototype._createTimeout = function () {\n\t        this._timeout = setTimeout(function () {\n\t            this._createTimeout();\n\t            this._callback();\n\t        }.bind(this), this._updateInterval * 1000);\n\t    };\n\t    /**\n\t\t * Create the clock source.\n\t\t * @private\n\t\t */\n\t    Ticker.prototype._createClock = function () {\n\t        if (this._type === Ticker.Type.Worker) {\n\t            try {\n\t                this._createWorker();\n\t            } catch (e) {\n\t                // workers not supported, fallback to timeout\n\t                this._type = Ticker.Type.Timeout;\n\t                this._createClock();\n\t            }\n\t        } else if (this._type === Ticker.Type.Timeout) {\n\t            this._createTimeout();\n\t        }\n\t    };\n\t    /**\n\t\t * @memberOf Ticker#\n\t\t * @type {Number}\n\t\t * @name updateInterval\n\t\t * @private\n\t\t */\n\t    Object.defineProperty(Ticker.prototype, 'updateInterval', {\n\t        get: function () {\n\t            return this._updateInterval;\n\t        },\n\t        set: function (interval) {\n\t            this._updateInterval = Math.max(interval, 128 / 44100);\n\t            if (this._type === Ticker.Type.Worker) {\n\t                this._worker.postMessage(Math.max(interval * 1000, 1));\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The type of the ticker, either a worker or a timeout\n\t\t * @memberOf Ticker#\n\t\t * @type {Number}\n\t\t * @name type\n\t\t * @private\n\t\t */\n\t    Object.defineProperty(Ticker.prototype, 'type', {\n\t        get: function () {\n\t            return this._type;\n\t        },\n\t        set: function (type) {\n\t            this._disposeClock();\n\t            this._type = type;\n\t            this._createClock();\n\t        }\n\t    });\n\t    /**\n\t\t * Clean up the current clock source\n\t\t * @private\n\t\t */\n\t    Ticker.prototype._disposeClock = function () {\n\t        if (this._timeout) {\n\t            clearTimeout(this._timeout);\n\t            this._timeout = null;\n\t        }\n\t        if (this._worker) {\n\t            this._worker.terminate();\n\t            this._worker.onmessage = null;\n\t            this._worker = null;\n\t        }\n\t    };\n\t    /**\n\t\t * Clean up\n\t\t * @private\n\t\t */\n\t    Ticker.prototype.dispose = function () {\n\t        this._disposeClock();\n\t        this._callback = null;\n\t    };\n\t    /**\n\t\t *  Shim all connect/disconnect and some deprecated methods which are still in\n\t\t *  some older implementations.\n\t\t *  @private\n\t\t */\n\t    Tone.getContext(function () {\n\t        var nativeConnect = AudioNode.prototype.connect;\n\t        var nativeDisconnect = AudioNode.prototype.disconnect;\n\t        //replace the old connect method\n\t        function toneConnect(B, outNum, inNum) {\n\t            if (B.input) {\n\t                inNum = Tone.defaultArg(inNum, 0);\n\t                if (Tone.isArray(B.input)) {\n\t                    this.connect(B.input[inNum]);\n\t                } else {\n\t                    this.connect(B.input, outNum, inNum);\n\t                }\n\t            } else {\n\t                try {\n\t                    if (B instanceof AudioNode) {\n\t                        nativeConnect.call(this, B, outNum, inNum);\n\t                    } else {\n\t                        nativeConnect.call(this, B, outNum);\n\t                    }\n\t                } catch (e) {\n\t                    throw new Error('error connecting to node: ' + B + '\\n' + e);\n\t                }\n\t            }\n\t        }\n\t        //replace the old disconnect method\n\t        function toneDisconnect(B, outNum, inNum) {\n\t            if (B && B.input && Tone.isArray(B.input)) {\n\t                inNum = Tone.defaultArg(inNum, 0);\n\t                this.disconnect(B.input[inNum], outNum, 0);\n\t            } else if (B && B.input) {\n\t                this.disconnect(B.input, outNum, inNum);\n\t            } else {\n\t                try {\n\t                    nativeDisconnect.apply(this, arguments);\n\t                } catch (e) {\n\t                    throw new Error('error disconnecting node: ' + B + '\\n' + e);\n\t                }\n\t            }\n\t        }\n\t        if (AudioNode.prototype.connect !== toneConnect) {\n\t            AudioNode.prototype.connect = toneConnect;\n\t            AudioNode.prototype.disconnect = toneDisconnect;\n\t        }\n\t    });\n\t    // set the audio context initially\n\t    if (Tone.supported) {\n\t        Tone.context = new Tone.Context();\n\t    } else {\n\t        console.warn('This browser does not support Tone.js');\n\t    }\n\t    return Tone.Context;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class Tone.AudioNode is the base class for classes which process audio.\n\t\t *         AudioNodes have inputs and outputs.\n\t\t *  @param\t{AudioContext=} context\tThe audio context to use with the class\n\t\t *  @extends {Tone}\n\t\t */\n\t    Tone.AudioNode = function () {\n\t        Tone.call(this);\n\t        //use the default context if one is not passed in\n\t        var options = Tone.defaults(arguments, ['context'], { 'context': Tone.context });\n\t        /**\n\t\t\t * The AudioContext of this instance\n\t\t\t * @private\n\t\t\t * @type {AudioContext}\n\t\t\t */\n\t        this._context = options.context;\n\t    };\n\t    Tone.extend(Tone.AudioNode);\n\t    /**\n\t\t * Get the audio context belonging to this instance.\n\t\t * @type {Tone.Context}\n\t\t * @memberOf Tone.AudioNode#\n\t\t * @name context\n\t\t * @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.AudioNode.prototype, 'context', {\n\t        get: function () {\n\t            return this._context;\n\t        }\n\t    });\n\t    /**\n\t\t *  Create input and outputs for this object.\n\t\t *  @param  {Number}  [input=0]   The number of inputs\n\t\t *  @param  {Number}  [outputs=0]  The number of outputs\n\t\t *  @return  {Tone.AudioNode}  this\n\t\t *  @private\n\t\t */\n\t    Tone.AudioNode.prototype.createInsOuts = function (inputs, outputs) {\n\t        if (inputs === 1) {\n\t            this.input = this.context.createGain();\n\t        } else if (inputs > 1) {\n\t            this.input = new Array(inputs);\n\t        }\n\t        if (outputs === 1) {\n\t            this.output = this.context.createGain();\n\t        } else if (outputs > 1) {\n\t            this.output = new Array(outputs);\n\t        }\n\t    };\n\t    /**\n\t\t *  The number of inputs feeding into the AudioNode.\n\t\t *  For source nodes, this will be 0.\n\t\t *  @type {Number}\n\t\t *  @name numberOfInputs\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.AudioNode.prototype, 'numberOfInputs', {\n\t        get: function () {\n\t            if (this.input) {\n\t                if (Tone.isArray(this.input)) {\n\t                    return this.input.length;\n\t                } else {\n\t                    return 1;\n\t                }\n\t            } else {\n\t                return 0;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  The number of outputs coming out of the AudioNode.\n\t\t *  @type {Number}\n\t\t *  @name numberOfOutputs\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.AudioNode.prototype, 'numberOfOutputs', {\n\t        get: function () {\n\t            if (this.output) {\n\t                if (Tone.isArray(this.output)) {\n\t                    return this.output.length;\n\t                } else {\n\t                    return 1;\n\t                }\n\t            } else {\n\t                return 0;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  connect the output of a ToneNode to an AudioParam, AudioNode, or ToneNode\n\t\t *  @param  {Tone | AudioParam | AudioNode} unit\n\t\t *  @param {number} [outputNum=0] optionally which output to connect from\n\t\t *  @param {number} [inputNum=0] optionally which input to connect to\n\t\t *  @returns {Tone.AudioNode} this\n\t\t */\n\t    Tone.AudioNode.prototype.connect = function (unit, outputNum, inputNum) {\n\t        if (Tone.isArray(this.output)) {\n\t            outputNum = Tone.defaultArg(outputNum, 0);\n\t            this.output[outputNum].connect(unit, 0, inputNum);\n\t        } else {\n\t            this.output.connect(unit, outputNum, inputNum);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  disconnect the output\n\t\t *  @param {Number|AudioNode} output Either the output index to disconnect\n\t\t *                                   if the output is an array, or the\n\t\t *                                   node to disconnect from.\n\t\t *  @returns {Tone.AudioNode} this\n\t\t */\n\t    Tone.AudioNode.prototype.disconnect = function (destination, outputNum, inputNum) {\n\t        if (Tone.isArray(this.output)) {\n\t            if (Tone.isNumber(destination)) {\n\t                this.output[destination].disconnect();\n\t            } else {\n\t                outputNum = Tone.defaultArg(outputNum, 0);\n\t                this.output[outputNum].disconnect(destination, 0, inputNum);\n\t            }\n\t        } else {\n\t            this.output.disconnect.apply(this.output, arguments);\n\t        }\n\t    };\n\t    /**\n\t\t *  Connect the output of this node to the rest of the nodes in series.\n\t\t *  @example\n\t\t *  //connect a node to an effect, panVol and then to the master output\n\t\t *  node.chain(effect, panVol, Tone.Master);\n\t\t *  @param {...AudioParam|Tone|AudioNode} nodes\n\t\t *  @returns {Tone.AudioNode} this\n\t\t *  @private\n\t\t */\n\t    Tone.AudioNode.prototype.chain = function () {\n\t        var currentUnit = this;\n\t        for (var i = 0; i < arguments.length; i++) {\n\t            var toUnit = arguments[i];\n\t            currentUnit.connect(toUnit);\n\t            currentUnit = toUnit;\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  connect the output of this node to the rest of the nodes in parallel.\n\t\t *  @param {...AudioParam|Tone|AudioNode} nodes\n\t\t *  @returns {Tone.AudioNode} this\n\t\t *  @private\n\t\t */\n\t    Tone.AudioNode.prototype.fan = function () {\n\t        for (var i = 0; i < arguments.length; i++) {\n\t            this.connect(arguments[i]);\n\t        }\n\t        return this;\n\t    };\n\t    if (window.AudioNode) {\n\t        //give native nodes chain and fan methods\n\t        AudioNode.prototype.chain = Tone.AudioNode.prototype.chain;\n\t        AudioNode.prototype.fan = Tone.AudioNode.prototype.fan;\n\t    }\n\t    /**\n\t\t * Dispose and disconnect\n\t\t * @return {Tone.AudioNode} this\n\t\t */\n\t    Tone.AudioNode.prototype.dispose = function () {\n\t        if (!Tone.isUndef(this.input)) {\n\t            if (this.input instanceof AudioNode) {\n\t                this.input.disconnect();\n\t            }\n\t            this.input = null;\n\t        }\n\t        if (!Tone.isUndef(this.output)) {\n\t            if (this.output instanceof AudioNode) {\n\t                this.output.disconnect();\n\t            }\n\t            this.output = null;\n\t        }\n\t        this._context = null;\n\t        return this;\n\t    };\n\t    return Tone.AudioNode;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Base class for all Signals. Used Internally.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t */\n\t    Tone.SignalBase = function () {\n\t        Tone.AudioNode.call(this);\n\t    };\n\t    Tone.extend(Tone.SignalBase, Tone.AudioNode);\n\t    /**\n\t\t *  When signals connect to other signals or AudioParams,\n\t\t *  they take over the output value of that signal or AudioParam.\n\t\t *  For all other nodes, the behavior is the same as a default <code>connect</code>.\n\t\t *\n\t\t *  @override\n\t\t *  @param {AudioParam|AudioNode|Tone.Signal|Tone} node\n\t\t *  @param {number} [outputNumber=0] The output number to connect from.\n\t\t *  @param {number} [inputNumber=0] The input number to connect to.\n\t\t *  @returns {Tone.SignalBase} this\n\t\t */\n\t    Tone.SignalBase.prototype.connect = function (node, outputNumber, inputNumber) {\n\t        //zero it out so that the signal can have full control\n\t        if (Tone.Signal && Tone.Signal === node.constructor || Tone.Param && Tone.Param === node.constructor || Tone.TimelineSignal && Tone.TimelineSignal === node.constructor) {\n\t            //cancel changes\n\t            node._param.cancelScheduledValues(0);\n\t            //reset the value\n\t            node._param.value = 0;\n\t            //mark the value as overridden\n\t            node.overridden = true;\n\t        } else if (node instanceof AudioParam) {\n\t            node.cancelScheduledValues(0);\n\t            node.value = 0;\n\t        }\n\t        Tone.AudioNode.prototype.connect.call(this, node, outputNumber, inputNumber);\n\t        return this;\n\t    };\n\t    return Tone.SignalBase;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Wraps the native Web Audio API \n\t\t *         [WaveShaperNode](http://webaudio.github.io/web-audio-api/#the-waveshapernode-interface).\n\t\t *\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @constructor\n\t\t *  @param {function|Array|Number} mapping The function used to define the values. \n\t\t *                                    The mapping function should take two arguments: \n\t\t *                                    the first is the value at the current position \n\t\t *                                    and the second is the array position. \n\t\t *                                    If the argument is an array, that array will be\n\t\t *                                    set as the wave shaping function. The input\n\t\t *                                    signal is an AudioRange [-1, 1] value and the output\n\t\t *                                    signal can take on any numerical values. \n\t\t *                                    \n\t\t *  @param {Number} [bufferLen=1024] The length of the WaveShaperNode buffer.\n\t\t *  @example\n\t\t * var timesTwo = new Tone.WaveShaper(function(val){\n\t\t * \treturn val * 2;\n\t\t * }, 2048);\n\t\t *  @example\n\t\t * //a waveshaper can also be constructed with an array of values\n\t\t * var invert = new Tone.WaveShaper([1, -1]);\n\t\t */\n\t    Tone.WaveShaper = function (mapping, bufferLen) {\n\t        Tone.SignalBase.call(this);\n\t        /**\n\t\t\t *  the waveshaper\n\t\t\t *  @type {WaveShaperNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._shaper = this.input = this.output = this.context.createWaveShaper();\n\t        /**\n\t\t\t *  the waveshapers curve\n\t\t\t *  @type {Float32Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._curve = null;\n\t        if (Array.isArray(mapping)) {\n\t            this.curve = mapping;\n\t        } else if (isFinite(mapping) || Tone.isUndef(mapping)) {\n\t            this._curve = new Float32Array(Tone.defaultArg(mapping, 1024));\n\t        } else if (Tone.isFunction(mapping)) {\n\t            this._curve = new Float32Array(Tone.defaultArg(bufferLen, 1024));\n\t            this.setMap(mapping);\n\t        }\n\t    };\n\t    Tone.extend(Tone.WaveShaper, Tone.SignalBase);\n\t    /**\n\t\t *  Uses a mapping function to set the value of the curve. \n\t\t *  @param {function} mapping The function used to define the values. \n\t\t *                            The mapping function take two arguments: \n\t\t *                            the first is the value at the current position \n\t\t *                            which goes from -1 to 1 over the number of elements\n\t\t *                            in the curve array. The second argument is the array position. \n\t\t *  @returns {Tone.WaveShaper} this\n\t\t *  @example\n\t\t * //map the input signal from [-1, 1] to [0, 10]\n\t\t * shaper.setMap(function(val, index){\n\t\t * \treturn (val + 1) * 5;\n\t\t * })\n\t\t */\n\t    Tone.WaveShaper.prototype.setMap = function (mapping) {\n\t        for (var i = 0, len = this._curve.length; i < len; i++) {\n\t            var normalized = i / (len - 1) * 2 - 1;\n\t            this._curve[i] = mapping(normalized, i);\n\t        }\n\t        this._shaper.curve = this._curve;\n\t        return this;\n\t    };\n\t    /**\n\t\t * The array to set as the waveshaper curve. For linear curves\n\t\t * array length does not make much difference, but for complex curves\n\t\t * longer arrays will provide smoother interpolation. \n\t\t * @memberOf Tone.WaveShaper#\n\t\t * @type {Array}\n\t\t * @name curve\n\t\t */\n\t    Object.defineProperty(Tone.WaveShaper.prototype, 'curve', {\n\t        get: function () {\n\t            return this._shaper.curve;\n\t        },\n\t        set: function (mapping) {\n\t            this._curve = new Float32Array(mapping);\n\t            this._shaper.curve = this._curve;\n\t        }\n\t    });\n\t    /**\n\t\t * Specifies what type of oversampling (if any) should be used when \n\t\t * applying the shaping curve. Can either be \"none\", \"2x\" or \"4x\". \n\t\t * @memberOf Tone.WaveShaper#\n\t\t * @type {string}\n\t\t * @name oversample\n\t\t */\n\t    Object.defineProperty(Tone.WaveShaper.prototype, 'oversample', {\n\t        get: function () {\n\t            return this._shaper.oversample;\n\t        },\n\t        set: function (oversampling) {\n\t            if ([\n\t                    'none',\n\t                    '2x',\n\t                    '4x'\n\t                ].indexOf(oversampling) !== -1) {\n\t                this._shaper.oversample = oversampling;\n\t            } else {\n\t                throw new RangeError('Tone.WaveShaper: oversampling must be either \\'none\\', \\'2x\\', or \\'4x\\'');\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.WaveShaper} this\n\t\t */\n\t    Tone.WaveShaper.prototype.dispose = function () {\n\t        Tone.SignalBase.prototype.dispose.call(this);\n\t        this._shaper.disconnect();\n\t        this._shaper = null;\n\t        this._curve = null;\n\t        return this;\n\t    };\n\t    return Tone.WaveShaper;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class Tone.TimeBase is a flexible encoding of time\n\t\t *         which can be evaluated to and from a string.\n\t\t *         Parsing code modified from https://code.google.com/p/tapdigit/\n\t\t *         Copyright 2011 2012 Ariya Hidayat, New BSD License\n\t\t *  @extends {Tone}\n\t\t *  @param  {Time}  val    The time value as a number or string\n\t\t *  @param  {String=}  units  Unit values\n\t\t *  @example\n\t\t * Tone.TimeBase(4, \"n\")\n\t\t * Tone.TimeBase(2, \"t\")\n\t\t * Tone.TimeBase(\"2t\").add(\"1m\")\n\t\t * Tone.TimeBase(\"2t + 1m\");\n\t\t */\n\t    Tone.TimeBase = function (val, units) {\n\t        //allows it to be constructed with or without 'new'\n\t        if (this instanceof Tone.TimeBase) {\n\t            /**\n\t\t\t\t *  Any expressions parsed from the Time\n\t\t\t\t *  @type  {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._expr = this._noOp;\n\t            if (val instanceof Tone.TimeBase) {\n\t                this.copy(val);\n\t            } else if (!Tone.isUndef(units) || Tone.isNumber(val)) {\n\t                //default units\n\t                units = Tone.defaultArg(units, this._defaultUnits);\n\t                var method = this._primaryExpressions[units].method;\n\t                this._expr = method.bind(this, val);\n\t            } else if (Tone.isString(val)) {\n\t                this.set(val);\n\t            } else if (Tone.isUndef(val)) {\n\t                //default expression\n\t                this._expr = this._defaultExpr();\n\t            }\n\t        } else {\n\t            return new Tone.TimeBase(val, units);\n\t        }\n\t    };\n\t    Tone.extend(Tone.TimeBase);\n\t    /**\n\t\t *  Repalce the current time value with the value\n\t\t *  given by the expression string.\n\t\t *  @param  {String}  exprString\n\t\t *  @return {Tone.TimeBase} this\n\t\t */\n\t    Tone.TimeBase.prototype.set = function (exprString) {\n\t        this._expr = this._parseExprString(exprString);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Return a clone of the TimeBase object.\n\t\t *  @return  {Tone.TimeBase} The new cloned Tone.TimeBase\n\t\t */\n\t    Tone.TimeBase.prototype.clone = function () {\n\t        var instance = new this.constructor();\n\t        instance.copy(this);\n\t        return instance;\n\t    };\n\t    /**\n\t\t *  Copies the value of time to this Time\n\t\t *  @param {Tone.TimeBase} time\n\t\t *  @return  {TimeBase}\n\t\t */\n\t    Tone.TimeBase.prototype.copy = function (time) {\n\t        var val = time._expr();\n\t        return this.set(val);\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tABSTRACT SYNTAX TREE PARSER\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  All the primary expressions.\n\t\t *  @private\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.TimeBase.prototype._primaryExpressions = {\n\t        'n': {\n\t            regexp: /^(\\d+)n/i,\n\t            method: function (value) {\n\t                value = parseInt(value);\n\t                if (value === 1) {\n\t                    return this._beatsToUnits(this._timeSignature());\n\t                } else {\n\t                    return this._beatsToUnits(4 / value);\n\t                }\n\t            }\n\t        },\n\t        't': {\n\t            regexp: /^(\\d+)t/i,\n\t            method: function (value) {\n\t                value = parseInt(value);\n\t                return this._beatsToUnits(8 / (parseInt(value) * 3));\n\t            }\n\t        },\n\t        'm': {\n\t            regexp: /^(\\d+)m/i,\n\t            method: function (value) {\n\t                return this._beatsToUnits(parseInt(value) * this._timeSignature());\n\t            }\n\t        },\n\t        'i': {\n\t            regexp: /^(\\d+)i/i,\n\t            method: function (value) {\n\t                return this._ticksToUnits(parseInt(value));\n\t            }\n\t        },\n\t        'hz': {\n\t            regexp: /^(\\d+(?:\\.\\d+)?)hz/i,\n\t            method: function (value) {\n\t                return this._frequencyToUnits(parseFloat(value));\n\t            }\n\t        },\n\t        'tr': {\n\t            regexp: /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?/,\n\t            method: function (m, q, s) {\n\t                var total = 0;\n\t                if (m && m !== '0') {\n\t                    total += this._beatsToUnits(this._timeSignature() * parseFloat(m));\n\t                }\n\t                if (q && q !== '0') {\n\t                    total += this._beatsToUnits(parseFloat(q));\n\t                }\n\t                if (s && s !== '0') {\n\t                    total += this._beatsToUnits(parseFloat(s) / 4);\n\t                }\n\t                return total;\n\t            }\n\t        },\n\t        's': {\n\t            regexp: /^(\\d+(?:\\.\\d+)?s)/,\n\t            method: function (value) {\n\t                return this._secondsToUnits(parseFloat(value));\n\t            }\n\t        },\n\t        'samples': {\n\t            regexp: /^(\\d+)samples/,\n\t            method: function (value) {\n\t                return parseInt(value) / this.context.sampleRate;\n\t            }\n\t        },\n\t        'default': {\n\t            regexp: /^(\\d+(?:\\.\\d+)?)/,\n\t            method: function (value) {\n\t                return this._primaryExpressions[this._defaultUnits].method.call(this, value);\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  All the binary expressions that TimeBase can accept.\n\t\t *  @private\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.TimeBase.prototype._binaryExpressions = {\n\t        '+': {\n\t            regexp: /^\\+/,\n\t            precedence: 2,\n\t            method: function (lh, rh) {\n\t                return lh() + rh();\n\t            }\n\t        },\n\t        '-': {\n\t            regexp: /^\\-/,\n\t            precedence: 2,\n\t            method: function (lh, rh) {\n\t                return lh() - rh();\n\t            }\n\t        },\n\t        '*': {\n\t            regexp: /^\\*/,\n\t            precedence: 1,\n\t            method: function (lh, rh) {\n\t                return lh() * rh();\n\t            }\n\t        },\n\t        '/': {\n\t            regexp: /^\\//,\n\t            precedence: 1,\n\t            method: function (lh, rh) {\n\t                return lh() / rh();\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  All the unary expressions.\n\t\t *  @private\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.TimeBase.prototype._unaryExpressions = {\n\t        'neg': {\n\t            regexp: /^\\-/,\n\t            method: function (lh) {\n\t                return -lh();\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  Syntactic glue which holds expressions together\n\t\t *  @private\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.TimeBase.prototype._syntaxGlue = {\n\t        '(': { regexp: /^\\(/ },\n\t        ')': { regexp: /^\\)/ }\n\t    };\n\t    /**\n\t\t *  tokenize the expression based on the Expressions object\n\t\t *  @param   {string} expr \n\t\t *  @return  {Object}      returns two methods on the tokenized list, next and peek\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._tokenize = function (expr) {\n\t        var position = -1;\n\t        var tokens = [];\n\t        while (expr.length > 0) {\n\t            expr = expr.trim();\n\t            var token = getNextToken(expr, this);\n\t            tokens.push(token);\n\t            expr = expr.substr(token.value.length);\n\t        }\n\t        function getNextToken(expr, context) {\n\t            var expressions = [\n\t                '_binaryExpressions',\n\t                '_unaryExpressions',\n\t                '_primaryExpressions',\n\t                '_syntaxGlue'\n\t            ];\n\t            for (var i = 0; i < expressions.length; i++) {\n\t                var group = context[expressions[i]];\n\t                for (var opName in group) {\n\t                    var op = group[opName];\n\t                    var reg = op.regexp;\n\t                    var match = expr.match(reg);\n\t                    if (match !== null) {\n\t                        return {\n\t                            method: op.method,\n\t                            precedence: op.precedence,\n\t                            regexp: op.regexp,\n\t                            value: match[0]\n\t                        };\n\t                    }\n\t                }\n\t            }\n\t            throw new SyntaxError('Tone.TimeBase: Unexpected token ' + expr);\n\t        }\n\t        return {\n\t            next: function () {\n\t                return tokens[++position];\n\t            },\n\t            peek: function () {\n\t                return tokens[position + 1];\n\t            }\n\t        };\n\t    };\n\t    /**\n\t\t *  Given a token, find the value within the groupName\n\t\t *  @param {Object} token\n\t\t *  @param {String} groupName\n\t\t *  @param {Number} precedence\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._matchGroup = function (token, group, prec) {\n\t        var ret = false;\n\t        if (!Tone.isUndef(token)) {\n\t            for (var opName in group) {\n\t                var op = group[opName];\n\t                if (op.regexp.test(token.value)) {\n\t                    if (!Tone.isUndef(prec)) {\n\t                        if (op.precedence === prec) {\n\t                            return op;\n\t                        }\n\t                    } else {\n\t                        return op;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return ret;\n\t    };\n\t    /**\n\t\t *  Match a binary expression given the token and the precedence\n\t\t *  @param {Lexer} lexer\n\t\t *  @param {Number} precedence\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._parseBinary = function (lexer, precedence) {\n\t        if (Tone.isUndef(precedence)) {\n\t            precedence = 2;\n\t        }\n\t        var expr;\n\t        if (precedence < 0) {\n\t            expr = this._parseUnary(lexer);\n\t        } else {\n\t            expr = this._parseBinary(lexer, precedence - 1);\n\t        }\n\t        var token = lexer.peek();\n\t        while (token && this._matchGroup(token, this._binaryExpressions, precedence)) {\n\t            token = lexer.next();\n\t            expr = token.method.bind(this, expr, this._parseBinary(lexer, precedence - 1));\n\t            token = lexer.peek();\n\t        }\n\t        return expr;\n\t    };\n\t    /**\n\t\t *  Match a unary expression.\n\t\t *  @param {Lexer} lexer\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._parseUnary = function (lexer) {\n\t        var token, expr;\n\t        token = lexer.peek();\n\t        var op = this._matchGroup(token, this._unaryExpressions);\n\t        if (op) {\n\t            token = lexer.next();\n\t            expr = this._parseUnary(lexer);\n\t            return op.method.bind(this, expr);\n\t        }\n\t        return this._parsePrimary(lexer);\n\t    };\n\t    /**\n\t\t *  Match a primary expression (a value).\n\t\t *  @param {Lexer} lexer\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._parsePrimary = function (lexer) {\n\t        var token, expr;\n\t        token = lexer.peek();\n\t        if (Tone.isUndef(token)) {\n\t            throw new SyntaxError('Tone.TimeBase: Unexpected end of expression');\n\t        }\n\t        if (this._matchGroup(token, this._primaryExpressions)) {\n\t            token = lexer.next();\n\t            var matching = token.value.match(token.regexp);\n\t            return token.method.bind(this, matching[1], matching[2], matching[3]);\n\t        }\n\t        if (token && token.value === '(') {\n\t            lexer.next();\n\t            expr = this._parseBinary(lexer);\n\t            token = lexer.next();\n\t            if (!(token && token.value === ')')) {\n\t                throw new SyntaxError('Expected )');\n\t            }\n\t            return expr;\n\t        }\n\t        throw new SyntaxError('Tone.TimeBase: Cannot process token ' + token.value);\n\t    };\n\t    /**\n\t\t *  Recursively parse the string expression into a syntax tree.\n\t\t *  @param   {string} expr \n\t\t *  @return  {Function} the bound method to be evaluated later\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._parseExprString = function (exprString) {\n\t        if (!Tone.isString(exprString)) {\n\t            exprString = exprString.toString();\n\t        }\n\t        var lexer = this._tokenize(exprString);\n\t        var tree = this._parseBinary(lexer);\n\t        return tree;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tDEFAULTS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  The initial expression value\n\t\t *  @return  {Number}  The initial value 0\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._noOp = function () {\n\t        return 0;\n\t    };\n\t    /**\n\t\t *  The default expression value if no arguments are given\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._defaultExpr = function () {\n\t        return this._noOp;\n\t    };\n\t    /**\n\t\t *  The default units if none are given.\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._defaultUnits = 's';\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tUNIT CONVERSIONS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Returns the value of a frequency in the current units\n\t\t *  @param {Frequency} freq\n\t\t *  @return  {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._frequencyToUnits = function (freq) {\n\t        return 1 / freq;\n\t    };\n\t    /**\n\t\t *  Return the value of the beats in the current units\n\t\t *  @param {Number} beats\n\t\t *  @return  {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._beatsToUnits = function (beats) {\n\t        return 60 / Tone.Transport.bpm.value * beats;\n\t    };\n\t    /**\n\t\t *  Returns the value of a second in the current units\n\t\t *  @param {Seconds} seconds\n\t\t *  @return  {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._secondsToUnits = function (seconds) {\n\t        return seconds;\n\t    };\n\t    /**\n\t\t *  Returns the value of a tick in the current time units\n\t\t *  @param {Ticks} ticks\n\t\t *  @return  {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._ticksToUnits = function (ticks) {\n\t        return ticks * (this._beatsToUnits(1) / Tone.Transport.PPQ);\n\t    };\n\t    /**\n\t\t *  Return the time signature.\n\t\t *  @return  {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._timeSignature = function () {\n\t        return Tone.Transport.timeSignature;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tEXPRESSIONS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Push an expression onto the expression list\n\t\t *  @param  {Time}  val\n\t\t *  @param  {String}  type\n\t\t *  @param  {String}  units\n\t\t *  @return  {Tone.TimeBase} \n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._pushExpr = function (val, name, units) {\n\t        //create the expression\n\t        if (!(val instanceof Tone.TimeBase)) {\n\t            val = new this.constructor(val, units);\n\t        }\n\t        this._expr = this._binaryExpressions[name].method.bind(this, this._expr, val._expr);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Add to the current value.\n\t\t *  @param  {Time}  val    The value to add\n\t\t *  @param  {String=}  units  Optional units to use with the value.\n\t\t *  @return  {Tone.TimeBase}  this\n\t\t *  @example\n\t\t * Tone.TimeBase(\"2m\").add(\"1m\"); //\"3m\"\n\t\t */\n\t    Tone.TimeBase.prototype.add = function (val, units) {\n\t        return this._pushExpr(val, '+', units);\n\t    };\n\t    /**\n\t\t *  Subtract the value from the current time.\n\t\t *  @param  {Time}  val    The value to subtract\n\t\t *  @param  {String=}  units  Optional units to use with the value.\n\t\t *  @return  {Tone.TimeBase}  this\n\t\t *  @example\n\t\t * Tone.TimeBase(\"2m\").sub(\"1m\"); //\"1m\"\n\t\t */\n\t    Tone.TimeBase.prototype.sub = function (val, units) {\n\t        return this._pushExpr(val, '-', units);\n\t    };\n\t    /**\n\t\t *  Multiply the current value by the given time.\n\t\t *  @param  {Time}  val    The value to multiply\n\t\t *  @param  {String=}  units  Optional units to use with the value.\n\t\t *  @return  {Tone.TimeBase}  this\n\t\t *  @example\n\t\t * Tone.TimeBase(\"2m\").mult(\"2\"); //\"4m\"\n\t\t */\n\t    Tone.TimeBase.prototype.mult = function (val, units) {\n\t        return this._pushExpr(val, '*', units);\n\t    };\n\t    /**\n\t\t *  Divide the current value by the given time.\n\t\t *  @param  {Time}  val    The value to divide by\n\t\t *  @param  {String=}  units  Optional units to use with the value.\n\t\t *  @return  {Tone.TimeBase}  this\n\t\t *  @example\n\t\t * Tone.TimeBase(\"2m\").div(2); //\"1m\"\n\t\t */\n\t    Tone.TimeBase.prototype.div = function (val, units) {\n\t        return this._pushExpr(val, '/', units);\n\t    };\n\t    /**\n\t\t *  Evaluate the time value. Returns the time\n\t\t *  in seconds.\n\t\t *  @return  {Seconds} \n\t\t */\n\t    Tone.TimeBase.prototype.valueOf = function () {\n\t        return this._expr();\n\t    };\n\t    /**\n\t\t *  Clean up\n\t\t *  @return {Tone.TimeBase} this\n\t\t */\n\t    Tone.TimeBase.prototype.dispose = function () {\n\t        this._expr = null;\n\t    };\n\t    return Tone.TimeBase;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class Tone.Time is a primitive type for encoding Time values. \n\t\t *         Eventually all time values are evaluated to seconds\n\t\t *         using the `eval` method. Tone.Time can be constructed\n\t\t *         with or without the `new` keyword. Tone.Time can be passed\n\t\t *         into the parameter of any method which takes time as an argument. \n\t\t *  @constructor\n\t\t *  @extends {Tone.TimeBase}\n\t\t *  @param  {String|Number}  val    The time value.\n\t\t *  @param  {String=}  units  The units of the value.\n\t\t *  @example\n\t\t * var t = Tone.Time(\"4n\");//encodes a quarter note\n\t\t * t.mult(4); // multiply that value by 4\n\t\t * t.toNotation(); //returns \"1m\"\n\t\t */\n\t    Tone.Time = function (val, units) {\n\t        if (this instanceof Tone.Time) {\n\t            /**\n\t\t\t\t *  If the current clock time should\n\t\t\t\t *  be added to the output\n\t\t\t\t *  @type  {Boolean}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._plusNow = false;\n\t            Tone.TimeBase.call(this, val, units);\n\t        } else {\n\t            return new Tone.Time(val, units);\n\t        }\n\t    };\n\t    Tone.extend(Tone.Time, Tone.TimeBase);\n\t    //clone the expressions so that \n\t    //we can add more without modifying the original\n\t    Tone.Time.prototype._unaryExpressions = Object.create(Tone.TimeBase.prototype._unaryExpressions);\n\t    /*\n\t\t *  Adds an additional unary expression\n\t\t *  which quantizes values to the next subdivision\n\t\t *  @type {Object}\n\t\t *  @private\n\t\t */\n\t    Tone.Time.prototype._unaryExpressions.quantize = {\n\t        regexp: /^@/,\n\t        method: function (rh) {\n\t            return Tone.Transport.nextSubdivision(rh());\n\t        }\n\t    };\n\t    /*\n\t\t *  Adds an additional unary expression\n\t\t *  which adds the current clock time.\n\t\t *  @type {Object}\n\t\t *  @private\n\t\t */\n\t    Tone.Time.prototype._unaryExpressions.now = {\n\t        regexp: /^\\+/,\n\t        method: function (lh) {\n\t            this._plusNow = true;\n\t            return lh();\n\t        }\n\t    };\n\t    /**\n\t\t *  Quantize the time by the given subdivision. Optionally add a\n\t\t *  percentage which will move the time value towards the ideal\n\t\t *  quantized value by that percentage. \n\t\t *  @param  {Number|Time}  val    The subdivision to quantize to\n\t\t *  @param  {NormalRange}  [percent=1]  Move the time value\n\t\t *                                   towards the quantized value by\n\t\t *                                   a percentage.\n\t\t *  @return  {Tone.Time}  this\n\t\t *  @example\n\t\t * Tone.Time(21).quantize(2) //returns 22\n\t\t * Tone.Time(0.6).quantize(\"4n\", 0.5) //returns 0.55\n\t\t */\n\t    Tone.Time.prototype.quantize = function (subdiv, percent) {\n\t        percent = Tone.defaultArg(percent, 1);\n\t        this._expr = function (expr, subdivision, percent) {\n\t            expr = expr();\n\t            subdivision = subdivision.toSeconds();\n\t            var multiple = Math.round(expr / subdivision);\n\t            var ideal = multiple * subdivision;\n\t            var diff = ideal - expr;\n\t            return expr + diff * percent;\n\t        }.bind(this, this._expr, new this.constructor(subdiv), percent);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Adds the clock time to the time expression at the \n\t\t *  moment of evaluation. \n\t\t *  @return  {Tone.Time}  this\n\t\t */\n\t    Tone.Time.prototype.addNow = function () {\n\t        this._plusNow = true;\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Override the default value return when no arguments are passed in.\n\t\t *  The default value is 'now'\n\t\t *  @override\n\t\t *  @private\n\t\t */\n\t    Tone.Time.prototype._defaultExpr = function () {\n\t        this._plusNow = true;\n\t        return this._noOp;\n\t    };\n\t    /**\n\t\t *  Copies the value of time to this Time\n\t\t *  @param {Tone.Time} time\n\t\t *  @return  {Time}\n\t\t */\n\t    Tone.Time.prototype.copy = function (time) {\n\t        Tone.TimeBase.prototype.copy.call(this, time);\n\t        this._plusNow = time._plusNow;\n\t        return this;\n\t    };\n\t    //CONVERSIONS//////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Convert a Time to Notation. Values will be thresholded to the nearest 128th note. \n\t\t *  @return {Notation} \n\t\t *  @example\n\t\t * //if the Transport is at 120bpm:\n\t\t * Tone.Time(2).toNotation();//returns \"1m\"\n\t\t */\n\t    Tone.Time.prototype.toNotation = function () {\n\t        var time = this.toSeconds();\n\t        var testNotations = [\n\t            '1m',\n\t            '2n',\n\t            '4n',\n\t            '8n',\n\t            '16n',\n\t            '32n',\n\t            '64n',\n\t            '128n'\n\t        ];\n\t        var retNotation = this._toNotationHelper(time, testNotations);\n\t        //try the same thing but with tripelets\n\t        var testTripletNotations = [\n\t            '1m',\n\t            '2n',\n\t            '2t',\n\t            '4n',\n\t            '4t',\n\t            '8n',\n\t            '8t',\n\t            '16n',\n\t            '16t',\n\t            '32n',\n\t            '32t',\n\t            '64n',\n\t            '64t',\n\t            '128n'\n\t        ];\n\t        var retTripletNotation = this._toNotationHelper(time, testTripletNotations);\n\t        //choose the simpler expression of the two\n\t        if (retTripletNotation.split('+').length < retNotation.split('+').length) {\n\t            return retTripletNotation;\n\t        } else {\n\t            return retNotation;\n\t        }\n\t    };\n\t    /**\n\t\t *  Helper method for Tone.toNotation\n\t\t *  @param {Number} units \n\t\t *  @param {Array} testNotations\n\t\t *  @return {String}\n\t\t *  @private\n\t\t */\n\t    Tone.Time.prototype._toNotationHelper = function (units, testNotations) {\n\t        //the threshold is the last value in the array\n\t        var threshold = this._notationToUnits(testNotations[testNotations.length - 1]);\n\t        var retNotation = '';\n\t        for (var i = 0; i < testNotations.length; i++) {\n\t            var notationTime = this._notationToUnits(testNotations[i]);\n\t            //account for floating point errors (i.e. round up if the value is 0.999999)\n\t            var multiple = units / notationTime;\n\t            var floatingPointError = 0.000001;\n\t            if (1 - multiple % 1 < floatingPointError) {\n\t                multiple += floatingPointError;\n\t            }\n\t            multiple = Math.floor(multiple);\n\t            if (multiple > 0) {\n\t                if (multiple === 1) {\n\t                    retNotation += testNotations[i];\n\t                } else {\n\t                    retNotation += multiple.toString() + '*' + testNotations[i];\n\t                }\n\t                units -= multiple * notationTime;\n\t                if (units < threshold) {\n\t                    break;\n\t                } else {\n\t                    retNotation += ' + ';\n\t                }\n\t            }\n\t        }\n\t        if (retNotation === '') {\n\t            retNotation = '0';\n\t        }\n\t        return retNotation;\n\t    };\n\t    /**\n\t\t *  Convert a notation value to the current units\n\t\t *  @param  {Notation}  notation \n\t\t *  @return  {Number} \n\t\t *  @private\n\t\t */\n\t    Tone.Time.prototype._notationToUnits = function (notation) {\n\t        var primaryExprs = this._primaryExpressions;\n\t        var notationExprs = [\n\t            primaryExprs.n,\n\t            primaryExprs.t,\n\t            primaryExprs.m\n\t        ];\n\t        for (var i = 0; i < notationExprs.length; i++) {\n\t            var expr = notationExprs[i];\n\t            var match = notation.match(expr.regexp);\n\t            if (match) {\n\t                return expr.method.call(this, match[1]);\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  Return the time encoded as Bars:Beats:Sixteenths.\n\t\t *  @return  {BarsBeatsSixteenths}\n\t\t */\n\t    Tone.Time.prototype.toBarsBeatsSixteenths = function () {\n\t        var quarterTime = this._beatsToUnits(1);\n\t        var quarters = this.toSeconds() / quarterTime;\n\t        var measures = Math.floor(quarters / this._timeSignature());\n\t        var sixteenths = quarters % 1 * 4;\n\t        quarters = Math.floor(quarters) % this._timeSignature();\n\t        sixteenths = sixteenths.toString();\n\t        if (sixteenths.length > 3) {\n\t            // the additional parseFloat removes insignificant trailing zeroes\n\t            sixteenths = parseFloat(parseFloat(sixteenths).toFixed(3));\n\t        }\n\t        var progress = [\n\t            measures,\n\t            quarters,\n\t            sixteenths\n\t        ];\n\t        return progress.join(':');\n\t    };\n\t    /**\n\t\t *  Return the time in ticks.\n\t\t *  @return  {Ticks}\n\t\t */\n\t    Tone.Time.prototype.toTicks = function () {\n\t        var quarterTime = this._beatsToUnits(1);\n\t        var quarters = this.valueOf() / quarterTime;\n\t        return Math.round(quarters * Tone.Transport.PPQ);\n\t    };\n\t    /**\n\t\t *  Return the time in samples\n\t\t *  @return  {Samples}  \n\t\t */\n\t    Tone.Time.prototype.toSamples = function () {\n\t        return this.toSeconds() * this.context.sampleRate;\n\t    };\n\t    /**\n\t\t *  Return the time as a frequency value\n\t\t *  @return  {Frequency} \n\t\t *  @example\n\t\t * Tone.Time(2).toFrequency(); //0.5\n\t\t */\n\t    Tone.Time.prototype.toFrequency = function () {\n\t        return 1 / this.toSeconds();\n\t    };\n\t    /**\n\t\t *  Return the time in seconds.\n\t\t *  @return  {Seconds} \n\t\t */\n\t    Tone.Time.prototype.toSeconds = function () {\n\t        return this.valueOf();\n\t    };\n\t    /**\n\t\t *  Return the time in milliseconds.\n\t\t *  @return  {Milliseconds} \n\t\t */\n\t    Tone.Time.prototype.toMilliseconds = function () {\n\t        return this.toSeconds() * 1000;\n\t    };\n\t    /**\n\t\t *  Return the time in seconds.\n\t\t *  @return  {Seconds} \n\t\t */\n\t    Tone.Time.prototype.valueOf = function () {\n\t        var val = this._expr();\n\t        return val + (this._plusNow ? this.now() : 0);\n\t    };\n\t    return Tone.Time;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class Tone.Frequency is a primitive type for encoding Frequency values.\n\t\t *         Eventually all time values are evaluated to hertz\n\t\t *         using the `eval` method.\n\t\t *  @constructor\n\t\t *  @extends {Tone.TimeBase}\n\t\t *  @param  {String|Number}  val    The time value.\n\t\t *  @param  {String=}  units  The units of the value.\n\t\t *  @example\n\t\t * Tone.Frequency(\"C3\") // 261\n\t\t * Tone.Frequency(38, \"midi\") //\n\t\t * Tone.Frequency(\"C3\").transpose(4);\n\t\t */\n\t    Tone.Frequency = function (val, units) {\n\t        if (this instanceof Tone.Frequency) {\n\t            Tone.TimeBase.call(this, val, units);\n\t        } else {\n\t            return new Tone.Frequency(val, units);\n\t        }\n\t    };\n\t    Tone.extend(Tone.Frequency, Tone.TimeBase);\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tAUGMENT BASE EXPRESSIONS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //clone the expressions so that\n\t    //we can add more without modifying the original\n\t    Tone.Frequency.prototype._primaryExpressions = Object.create(Tone.TimeBase.prototype._primaryExpressions);\n\t    /*\n\t\t *  midi type primary expression\n\t\t *  @type {Object}\n\t\t *  @private\n\t\t */\n\t    Tone.Frequency.prototype._primaryExpressions.midi = {\n\t        regexp: /^(\\d+(?:\\.\\d+)?midi)/,\n\t        method: function (value) {\n\t            return this.midiToFrequency(value);\n\t        }\n\t    };\n\t    /*\n\t\t *  note type primary expression\n\t\t *  @type {Object}\n\t\t *  @private\n\t\t */\n\t    Tone.Frequency.prototype._primaryExpressions.note = {\n\t        regexp: /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,\n\t        method: function (pitch, octave) {\n\t            var index = noteToScaleIndex[pitch.toLowerCase()];\n\t            var noteNumber = index + (parseInt(octave) + 1) * 12;\n\t            return this.midiToFrequency(noteNumber);\n\t        }\n\t    };\n\t    /*\n\t\t *  BeatsBarsSixteenths type primary expression\n\t\t *  @type {Object}\n\t\t *  @private\n\t\t */\n\t    Tone.Frequency.prototype._primaryExpressions.tr = {\n\t        regexp: /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?/,\n\t        method: function (m, q, s) {\n\t            var total = 1;\n\t            if (m && m !== '0') {\n\t                total *= this._beatsToUnits(this._timeSignature() * parseFloat(m));\n\t            }\n\t            if (q && q !== '0') {\n\t                total *= this._beatsToUnits(parseFloat(q));\n\t            }\n\t            if (s && s !== '0') {\n\t                total *= this._beatsToUnits(parseFloat(s) / 4);\n\t            }\n\t            return total;\n\t        }\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tEXPRESSIONS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Transposes the frequency by the given number of semitones.\n\t\t *  @param  {Interval}  interval\n\t\t *  @return  {Tone.Frequency} this\n\t\t *  @example\n\t\t * Tone.Frequency(\"A4\").transpose(3); //\"C5\"\n\t\t */\n\t    Tone.Frequency.prototype.transpose = function (interval) {\n\t        this._expr = function (expr, interval) {\n\t            var val = expr();\n\t            return val * Tone.intervalToFrequencyRatio(interval);\n\t        }.bind(this, this._expr, interval);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Takes an array of semitone intervals and returns\n\t\t *  an array of frequencies transposed by those intervals.\n\t\t *  @param  {Array}  intervals\n\t\t *  @return  {Tone.Frequency} this\n\t\t *  @example\n\t\t * Tone.Frequency(\"A4\").harmonize([0, 3, 7]); //[\"A4\", \"C5\", \"E5\"]\n\t\t */\n\t    Tone.Frequency.prototype.harmonize = function (intervals) {\n\t        this._expr = function (expr, intervals) {\n\t            var val = expr();\n\t            var ret = [];\n\t            for (var i = 0; i < intervals.length; i++) {\n\t                ret[i] = val * Tone.intervalToFrequencyRatio(intervals[i]);\n\t            }\n\t            return ret;\n\t        }.bind(this, this._expr, intervals);\n\t        return this;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tUNIT CONVERSIONS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Return the value of the frequency as a MIDI note\n\t\t *  @return  {MIDI}\n\t\t *  @example\n\t\t * Tone.Frequency(\"C4\").toMidi(); //60\n\t\t */\n\t    Tone.Frequency.prototype.toMidi = function () {\n\t        return this.frequencyToMidi(this.valueOf());\n\t    };\n\t    /**\n\t\t *  Return the value of the frequency in Scientific Pitch Notation\n\t\t *  @return  {Note}\n\t\t *  @example\n\t\t * Tone.Frequency(69, \"midi\").toNote(); //\"A4\"\n\t\t */\n\t    Tone.Frequency.prototype.toNote = function () {\n\t        var freq = this.valueOf();\n\t        var log = Math.log(freq / Tone.Frequency.A4) / Math.LN2;\n\t        var noteNumber = Math.round(12 * log) + 57;\n\t        var octave = Math.floor(noteNumber / 12);\n\t        if (octave < 0) {\n\t            noteNumber += -12 * octave;\n\t        }\n\t        var noteName = scaleIndexToNote[noteNumber % 12];\n\t        return noteName + octave.toString();\n\t    };\n\t    /**\n\t\t *  Return the duration of one cycle in seconds.\n\t\t *  @return  {Seconds}\n\t\t */\n\t    Tone.Frequency.prototype.toSeconds = function () {\n\t        return 1 / this.valueOf();\n\t    };\n\t    /**\n\t\t *  Return the value in Hertz\n\t\t *  @return  {Frequency}\n\t\t */\n\t    Tone.Frequency.prototype.toFrequency = function () {\n\t        return this.valueOf();\n\t    };\n\t    /**\n\t\t *  Return the duration of one cycle in ticks\n\t\t *  @return  {Ticks}\n\t\t */\n\t    Tone.Frequency.prototype.toTicks = function () {\n\t        var quarterTime = this._beatsToUnits(1);\n\t        var quarters = this.valueOf() / quarterTime;\n\t        return Math.floor(quarters * Tone.Transport.PPQ);\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tUNIT CONVERSIONS HELPERS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Returns the value of a frequency in the current units\n\t\t *  @param {Frequency} freq\n\t\t *  @return  {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.Frequency.prototype._frequencyToUnits = function (freq) {\n\t        return freq;\n\t    };\n\t    /**\n\t\t *  Returns the value of a tick in the current time units\n\t\t *  @param {Ticks} ticks\n\t\t *  @return  {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.Frequency.prototype._ticksToUnits = function (ticks) {\n\t        return 1 / (ticks * 60 / (Tone.Transport.bpm.value * Tone.Transport.PPQ));\n\t    };\n\t    /**\n\t\t *  Return the value of the beats in the current units\n\t\t *  @param {Number} beats\n\t\t *  @return  {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.Frequency.prototype._beatsToUnits = function (beats) {\n\t        return 1 / Tone.TimeBase.prototype._beatsToUnits.call(this, beats);\n\t    };\n\t    /**\n\t\t *  Returns the value of a second in the current units\n\t\t *  @param {Seconds} seconds\n\t\t *  @return  {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.Frequency.prototype._secondsToUnits = function (seconds) {\n\t        return 1 / seconds;\n\t    };\n\t    /**\n\t\t *  The default units if none are given.\n\t\t *  @private\n\t\t */\n\t    Tone.Frequency.prototype._defaultUnits = 'hz';\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tFREQUENCY CONVERSIONS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Note to scale index\n\t\t *  @type  {Object}\n\t\t */\n\t    var noteToScaleIndex = {\n\t        'cbb': -2,\n\t        'cb': -1,\n\t        'c': 0,\n\t        'c#': 1,\n\t        'cx': 2,\n\t        'dbb': 0,\n\t        'db': 1,\n\t        'd': 2,\n\t        'd#': 3,\n\t        'dx': 4,\n\t        'ebb': 2,\n\t        'eb': 3,\n\t        'e': 4,\n\t        'e#': 5,\n\t        'ex': 6,\n\t        'fbb': 3,\n\t        'fb': 4,\n\t        'f': 5,\n\t        'f#': 6,\n\t        'fx': 7,\n\t        'gbb': 5,\n\t        'gb': 6,\n\t        'g': 7,\n\t        'g#': 8,\n\t        'gx': 9,\n\t        'abb': 7,\n\t        'ab': 8,\n\t        'a': 9,\n\t        'a#': 10,\n\t        'ax': 11,\n\t        'bbb': 9,\n\t        'bb': 10,\n\t        'b': 11,\n\t        'b#': 12,\n\t        'bx': 13\n\t    };\n\t    /**\n\t\t *  scale index to note (sharps)\n\t\t *  @type  {Array}\n\t\t */\n\t    var scaleIndexToNote = [\n\t        'C',\n\t        'C#',\n\t        'D',\n\t        'D#',\n\t        'E',\n\t        'F',\n\t        'F#',\n\t        'G',\n\t        'G#',\n\t        'A',\n\t        'A#',\n\t        'B'\n\t    ];\n\t    /**\n\t\t *  The [concert pitch](https://en.wikipedia.org/wiki/Concert_pitch)\n\t\t *  A4's values in Hertz.\n\t\t *  @type {Frequency}\n\t\t *  @static\n\t\t */\n\t    Tone.Frequency.A4 = 440;\n\t    /**\n\t\t *  Convert a MIDI note to frequency value.\n\t\t *  @param  {MIDI} midi The midi number to convert.\n\t\t *  @return {Frequency} the corresponding frequency value\n\t\t *  @example\n\t\t * tone.midiToFrequency(69); // returns 440\n\t\t */\n\t    Tone.Frequency.prototype.midiToFrequency = function (midi) {\n\t        return Tone.Frequency.A4 * Math.pow(2, (midi - 69) / 12);\n\t    };\n\t    /**\n\t\t *  Convert a frequency value to a MIDI note.\n\t\t *  @param {Frequency} frequency The value to frequency value to convert.\n\t\t *  @returns  {MIDI}\n\t\t *  @example\n\t\t * tone.midiToFrequency(440); // returns 69\n\t\t */\n\t    Tone.Frequency.prototype.frequencyToMidi = function (frequency) {\n\t        return 69 + Math.round(12 * Math.log(frequency / Tone.Frequency.A4) / Math.LN2);\n\t    };\n\t    return Tone.Frequency;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class Tone.TransportTime is a the time along the Transport's\n\t\t *         timeline. It is similar to Tone.Time, but instead of evaluating\n\t\t *         against the AudioContext's clock, it is evaluated against\n\t\t *         the Transport's position. See [TransportTime wiki](https://github.com/Tonejs/Tone.js/wiki/TransportTime).\n\t\t *  @constructor\n\t\t *  @param  {Time}  val    The time value as a number or string\n\t\t *  @param  {String=}  units  Unit values\n\t\t *  @extends {Tone.Time}\n\t\t */\n\t    Tone.TransportTime = function (val, units) {\n\t        if (this instanceof Tone.TransportTime) {\n\t            Tone.Time.call(this, val, units);\n\t        } else {\n\t            return new Tone.TransportTime(val, units);\n\t        }\n\t    };\n\t    Tone.extend(Tone.TransportTime, Tone.Time);\n\t    //clone the expressions so that \n\t    //we can add more without modifying the original\n\t    Tone.TransportTime.prototype._unaryExpressions = Object.create(Tone.Time.prototype._unaryExpressions);\n\t    /**\n\t\t *  Adds an additional unary expression\n\t\t *  which quantizes values to the next subdivision\n\t\t *  @type {Object}\n\t\t *  @private\n\t\t */\n\t    Tone.TransportTime.prototype._unaryExpressions.quantize = {\n\t        regexp: /^@/,\n\t        method: function (rh) {\n\t            var subdivision = this._secondsToTicks(rh());\n\t            var multiple = Math.ceil(Tone.Transport.ticks / subdivision);\n\t            return this._ticksToUnits(multiple * subdivision);\n\t        }\n\t    };\n\t    /**\n\t\t *  Convert seconds into ticks\n\t\t *  @param {Seconds} seconds\n\t\t *  @return  {Ticks}\n\t\t *  @private\n\t\t */\n\t    Tone.TransportTime.prototype._secondsToTicks = function (seconds) {\n\t        var quarterTime = this._beatsToUnits(1);\n\t        var quarters = seconds / quarterTime;\n\t        return Math.round(quarters * Tone.Transport.PPQ);\n\t    };\n\t    /**\n\t\t *  Evaluate the time expression. Returns values in ticks\n\t\t *  @return {Ticks}\n\t\t */\n\t    Tone.TransportTime.prototype.valueOf = function () {\n\t        var val = this._secondsToTicks(this._expr());\n\t        return val + (this._plusNow ? Tone.Transport.ticks : 0);\n\t    };\n\t    /**\n\t\t *  Return the time in ticks.\n\t\t *  @return  {Ticks}\n\t\t */\n\t    Tone.TransportTime.prototype.toTicks = function () {\n\t        return this.valueOf();\n\t    };\n\t    /**\n\t\t *  Return the time in seconds.\n\t\t *  @return  {Seconds}\n\t\t */\n\t    Tone.TransportTime.prototype.toSeconds = function () {\n\t        var val = this._expr();\n\t        return val + (this._plusNow ? Tone.Transport.seconds : 0);\n\t    };\n\t    /**\n\t\t *  Return the time as a frequency value\n\t\t *  @return  {Frequency} \n\t\t */\n\t    Tone.TransportTime.prototype.toFrequency = function () {\n\t        return 1 / this.toSeconds();\n\t    };\n\t    return Tone.TransportTime;\n\t});\n\tModule(function (Tone) {\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tTYPES\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t * Units which a value can take on.\n\t\t * @enum {String}\n\t\t */\n\t    Tone.Type = {\n\t        /**\n\t\t\t *  Default units\n\t\t\t *  @typedef {Default}\n\t\t\t */\n\t        Default: 'number',\n\t        /**\n\t\t\t *  Time can be described in a number of ways. Read more [Time](https://github.com/Tonejs/Tone.js/wiki/Time).\n\t\t\t *\n\t\t\t *  * Numbers, which will be taken literally as the time (in seconds).\n\t\t\t *  * Notation, (\"4n\", \"8t\") describes time in BPM and time signature relative values.\n\t\t\t *  * TransportTime, (\"4:3:2\") will also provide tempo and time signature relative times\n\t\t\t *  in the form BARS:QUARTERS:SIXTEENTHS.\n\t\t\t *  * Frequency, (\"8hz\") is converted to the length of the cycle in seconds.\n\t\t\t *  * Now-Relative, (\"+1\") prefix any of the above with \"+\" and it will be interpreted as\n\t\t\t *  \"the current time plus whatever expression follows\".\n\t\t\t *  * Expressions, (\"3:0 + 2 - (1m / 7)\") any of the above can also be combined\n\t\t\t *  into a mathematical expression which will be evaluated to compute the desired time.\n\t\t\t *  * No Argument, for methods which accept time, no argument will be interpreted as\n\t\t\t *  \"now\" (i.e. the currentTime).\n\t\t\t *\n\t\t\t *  @typedef {Time}\n\t\t\t */\n\t        Time: 'time',\n\t        /**\n\t\t\t *  Frequency can be described similar to time, except ultimately the\n\t\t\t *  values are converted to frequency instead of seconds. A number\n\t\t\t *  is taken literally as the value in hertz. Additionally any of the\n\t\t\t *  Time encodings can be used. Note names in the form\n\t\t\t *  of NOTE OCTAVE (i.e. C4) are also accepted and converted to their\n\t\t\t *  frequency value.\n\t\t\t *  @typedef {Frequency}\n\t\t\t */\n\t        Frequency: 'frequency',\n\t        /**\n\t\t\t *  TransportTime describes a position along the Transport's timeline. It is\n\t\t\t *  similar to Time in that it uses all the same encodings, but TransportTime specifically\n\t\t\t *  pertains to the Transport's timeline, which is startable, stoppable, loopable, and seekable.\n\t\t\t *  [Read more](https://github.com/Tonejs/Tone.js/wiki/TransportTime)\n\t\t\t *  @typedef {TransportTime}\n\t\t\t */\n\t        TransportTime: 'transportTime',\n\t        /**\n\t\t\t *  Ticks are the basic subunit of the Transport. They are\n\t\t\t *  the smallest unit of time that the Transport supports.\n\t\t\t *  @typedef {Ticks}\n\t\t\t */\n\t        Ticks: 'ticks',\n\t        /**\n\t\t\t *  Normal values are within the range [0, 1].\n\t\t\t *  @typedef {NormalRange}\n\t\t\t */\n\t        NormalRange: 'normalRange',\n\t        /**\n\t\t\t *  AudioRange values are between [-1, 1].\n\t\t\t *  @typedef {AudioRange}\n\t\t\t */\n\t        AudioRange: 'audioRange',\n\t        /**\n\t\t\t *  Decibels are a logarithmic unit of measurement which is useful for volume\n\t\t\t *  because of the logarithmic way that we perceive loudness. 0 decibels\n\t\t\t *  means no change in volume. -10db is approximately half as loud and 10db\n\t\t\t *  is twice is loud.\n\t\t\t *  @typedef {Decibels}\n\t\t\t */\n\t        Decibels: 'db',\n\t        /**\n\t\t\t *  Half-step note increments, i.e. 12 is an octave above the root. and 1 is a half-step up.\n\t\t\t *  @typedef {Interval}\n\t\t\t */\n\t        Interval: 'interval',\n\t        /**\n\t\t\t *  Beats per minute.\n\t\t\t *  @typedef {BPM}\n\t\t\t */\n\t        BPM: 'bpm',\n\t        /**\n\t\t\t *  The value must be greater than or equal to 0.\n\t\t\t *  @typedef {Positive}\n\t\t\t */\n\t        Positive: 'positive',\n\t        /**\n\t\t\t *  Gain is the ratio between input and output of a signal.\n\t\t\t *  A gain of 0 is the same as silencing the signal. A gain of\n\t\t\t *  1, causes no change to the incoming signal.\n\t\t\t *  @typedef {Gain}\n\t\t\t */\n\t        Gain: 'gain',\n\t        /**\n\t\t\t *  A cent is a hundredth of a semitone.\n\t\t\t *  @typedef {Cents}\n\t\t\t */\n\t        Cents: 'cents',\n\t        /**\n\t\t\t *  Angle between 0 and 360.\n\t\t\t *  @typedef {Degrees}\n\t\t\t */\n\t        Degrees: 'degrees',\n\t        /**\n\t\t\t *  A number representing a midi note.\n\t\t\t *  @typedef {MIDI}\n\t\t\t */\n\t        MIDI: 'midi',\n\t        /**\n\t\t\t *  A colon-separated representation of time in the form of\n\t\t\t *  Bars:Beats:Sixteenths.\n\t\t\t *  @typedef {BarsBeatsSixteenths}\n\t\t\t */\n\t        BarsBeatsSixteenths: 'barsBeatsSixteenths',\n\t        /**\n\t\t\t *  Sampling is the reduction of a continuous signal to a discrete signal.\n\t\t\t *  Audio is typically sampled 44100 times per second.\n\t\t\t *  @typedef {Samples}\n\t\t\t */\n\t        Samples: 'samples',\n\t        /**\n\t\t\t *  Hertz are a frequency representation defined as one cycle per second.\n\t\t\t *  @typedef {Hertz}\n\t\t\t */\n\t        Hertz: 'hertz',\n\t        /**\n\t\t\t *  A frequency represented by a letter name,\n\t\t\t *  accidental and octave. This system is known as\n\t\t\t *  [Scientific Pitch Notation](https://en.wikipedia.org/wiki/Scientific_pitch_notation).\n\t\t\t *  @typedef {Note}\n\t\t\t */\n\t        Note: 'note',\n\t        /**\n\t\t\t *  One millisecond is a thousandth of a second.\n\t\t\t *  @typedef {Milliseconds}\n\t\t\t */\n\t        Milliseconds: 'milliseconds',\n\t        /**\n\t\t\t *  Seconds are the time unit of the AudioContext. In the end,\n\t\t\t *  all values need to be evaluated to seconds.\n\t\t\t *  @typedef {Seconds}\n\t\t\t */\n\t        Seconds: 'seconds',\n\t        /**\n\t\t\t *  A string representing a duration relative to a measure.\n\t\t\t *  * \"4n\" = quarter note\n\t\t\t *  * \"2m\" = two measures\n\t\t\t *  * \"8t\" = eighth-note triplet\n\t\t\t *  @typedef {Notation}\n\t\t\t */\n\t        Notation: 'notation'\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    // AUGMENT TONE's PROTOTYPE\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Convert Time into seconds.\n\t\t *\n\t\t *  Unlike the method which it overrides, this takes into account\n\t\t *  transporttime and musical notation.\n\t\t *\n\t\t *  Time : 1.40\n\t\t *  Notation: 4n or 1m or 2t\n\t\t *  Now Relative: +3n\n\t\t *  Math: 3n+16n or even complicated expressions ((3n*2)/6 + 1)\n\t\t *\n\t\t *  @param  {Time} time\n\t\t *  @return {Seconds}\n\t\t */\n\t    Tone.prototype.toSeconds = function (time) {\n\t        if (Tone.isNumber(time)) {\n\t            return time;\n\t        } else if (Tone.isUndef(time)) {\n\t            return this.now();\n\t        } else if (Tone.isString(time)) {\n\t            return new Tone.Time(time).toSeconds();\n\t        } else if (time instanceof Tone.TimeBase) {\n\t            return time.toSeconds();\n\t        }\n\t    };\n\t    /**\n\t\t *  Convert a frequency representation into a number.\n\t\t *  @param  {Frequency} freq\n\t\t *  @return {Hertz}      the frequency in hertz\n\t\t */\n\t    Tone.prototype.toFrequency = function (freq) {\n\t        if (Tone.isNumber(freq)) {\n\t            return freq;\n\t        } else if (Tone.isString(freq) || Tone.isUndef(freq)) {\n\t            return new Tone.Frequency(freq).valueOf();\n\t        } else if (freq instanceof Tone.TimeBase) {\n\t            return freq.toFrequency();\n\t        }\n\t    };\n\t    /**\n\t\t *  Convert a time representation into ticks.\n\t\t *  @param  {Time} time\n\t\t *  @return {Ticks}  the time in ticks\n\t\t */\n\t    Tone.prototype.toTicks = function (time) {\n\t        if (Tone.isNumber(time) || Tone.isString(time)) {\n\t            return new Tone.TransportTime(time).toTicks();\n\t        } else if (Tone.isUndef(time)) {\n\t            return Tone.Transport.ticks;\n\t        } else if (time instanceof Tone.TimeBase) {\n\t            return time.toTicks();\n\t        }\n\t    };\n\t    return Tone;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Param wraps the native Web Audio's AudioParam to provide\n\t\t *         additional unit conversion functionality. It also\n\t\t *         serves as a base-class for classes which have a single,\n\t\t *         automatable parameter.\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @param  {AudioParam}  param  The parameter to wrap.\n\t\t *  @param  {Tone.Type} units The units of the audio param.\n\t\t *  @param  {Boolean} convert If the param should be converted.\n\t\t */\n\t    Tone.Param = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'param',\n\t            'units',\n\t            'convert'\n\t        ], Tone.Param);\n\t        Tone.AudioNode.call(this);\n\t        /**\n\t\t\t *  The native parameter to control\n\t\t\t *  @type  {AudioParam}\n\t\t\t *  @private\n\t\t\t */\n\t        this._param = this.input = options.param;\n\t        /**\n\t\t\t *  The units of the parameter\n\t\t\t *  @type {Tone.Type}\n\t\t\t */\n\t        this.units = options.units;\n\t        /**\n\t\t\t *  If the value should be converted or not\n\t\t\t *  @type {Boolean}\n\t\t\t */\n\t        this.convert = options.convert;\n\t        /**\n\t\t\t *  True if the signal value is being overridden by\n\t\t\t *  a connected signal.\n\t\t\t *  @readOnly\n\t\t\t *  @type  {boolean}\n\t\t\t *  @private\n\t\t\t */\n\t        this.overridden = false;\n\t        if (!Tone.isUndef(options.value)) {\n\t            this.value = options.value;\n\t        }\n\t    };\n\t    Tone.extend(Tone.Param, Tone.AudioNode);\n\t    /**\n\t\t *  Defaults\n\t\t *  @type  {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.Param.defaults = {\n\t        'units': Tone.Type.Default,\n\t        'convert': true,\n\t        'param': undefined\n\t    };\n\t    /**\n\t\t * The current value of the parameter.\n\t\t * @memberOf Tone.Param#\n\t\t * @type {Number}\n\t\t * @name value\n\t\t */\n\t    Object.defineProperty(Tone.Param.prototype, 'value', {\n\t        get: function () {\n\t            return this._toUnits(this._param.value);\n\t        },\n\t        set: function (value) {\n\t            var convertedVal = this._fromUnits(value);\n\t            this._param.cancelScheduledValues(0);\n\t            this._param.value = convertedVal;\n\t        }\n\t    });\n\t    /**\n\t\t *  Convert the given value from the type specified by Tone.Param.units\n\t\t *  into the destination value (such as Gain or Frequency).\n\t\t *  @private\n\t\t *  @param  {*} val the value to convert\n\t\t *  @return {number}     the number which the value should be set to\n\t\t */\n\t    Tone.Param.prototype._fromUnits = function (val) {\n\t        if (this.convert || Tone.isUndef(this.convert)) {\n\t            switch (this.units) {\n\t            case Tone.Type.Time:\n\t                return this.toSeconds(val);\n\t            case Tone.Type.Frequency:\n\t                return this.toFrequency(val);\n\t            case Tone.Type.Decibels:\n\t                return Tone.dbToGain(val);\n\t            case Tone.Type.NormalRange:\n\t                return Math.min(Math.max(val, 0), 1);\n\t            case Tone.Type.AudioRange:\n\t                return Math.min(Math.max(val, -1), 1);\n\t            case Tone.Type.Positive:\n\t                return Math.max(val, 0);\n\t            default:\n\t                return val;\n\t            }\n\t        } else {\n\t            return val;\n\t        }\n\t    };\n\t    /**\n\t\t * Convert the parameters value into the units specified by Tone.Param.units.\n\t\t * @private\n\t\t * @param  {number} val the value to convert\n\t\t * @return {number}\n\t\t */\n\t    Tone.Param.prototype._toUnits = function (val) {\n\t        if (this.convert || Tone.isUndef(this.convert)) {\n\t            switch (this.units) {\n\t            case Tone.Type.Decibels:\n\t                return Tone.gainToDb(val);\n\t            default:\n\t                return val;\n\t            }\n\t        } else {\n\t            return val;\n\t        }\n\t    };\n\t    /**\n\t\t *  the minimum output value\n\t\t *  @type {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.Param.prototype._minOutput = 0.00001;\n\t    /**\n\t\t *  Schedules a parameter value change at the given time.\n\t\t *  @param {*}\tvalue The value to set the signal.\n\t\t *  @param {Time}  time The time when the change should occur.\n\t\t *  @returns {Tone.Param} this\n\t\t *  @example\n\t\t * //set the frequency to \"G4\" in exactly 1 second from now.\n\t\t * freq.setValueAtTime(\"G4\", \"+1\");\n\t\t */\n\t    Tone.Param.prototype.setValueAtTime = function (value, time) {\n\t        time = this.toSeconds(time);\n\t        Tone.isPast(time);\n\t        this._param.setValueAtTime(this._fromUnits(value), time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Creates a schedule point with the current value at the current time.\n\t\t *  This is useful for creating an automation anchor point in order to\n\t\t *  schedule changes from the current value.\n\t\t *\n\t\t *  @param {number=} now (Optionally) pass the now value in.\n\t\t *  @returns {Tone.Param} this\n\t\t */\n\t    Tone.Param.prototype.setRampPoint = function (now) {\n\t        now = Tone.defaultArg(now, this.now());\n\t        this.cancelAndHoldAtTime(this.context.currentTime);\n\t        var currentVal = this._param.value;\n\t        if (currentVal === 0) {\n\t            currentVal = this._minOutput;\n\t        }\n\t        // cancel and hold at the given time\n\t        this._param.setValueAtTime(currentVal, now);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Schedules a linear continuous change in parameter value from the\n\t\t *  previous scheduled parameter value to the given value.\n\t\t *\n\t\t *  @param  {number} value\n\t\t *  @param  {Time} endTime\n\t\t *  @returns {Tone.Param} this\n\t\t */\n\t    Tone.Param.prototype.linearRampToValueAtTime = function (value, endTime) {\n\t        value = this._fromUnits(value);\n\t        endTime = this.toSeconds(endTime);\n\t        Tone.isPast(endTime);\n\t        this._param.linearRampToValueAtTime(value, endTime);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Schedules an exponential continuous change in parameter value from\n\t\t *  the previous scheduled parameter value to the given value.\n\t\t *\n\t\t *  @param  {number} value\n\t\t *  @param  {Time} endTime\n\t\t *  @returns {Tone.Param} this\n\t\t */\n\t    Tone.Param.prototype.exponentialRampToValueAtTime = function (value, endTime) {\n\t        value = this._fromUnits(value);\n\t        value = Math.max(this._minOutput, value);\n\t        endTime = this.toSeconds(endTime);\n\t        Tone.isPast(endTime);\n\t        this._param.exponentialRampToValueAtTime(value, endTime);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Schedules an exponential continuous change in parameter value from\n\t\t *  the current time and current value to the given value over the\n\t\t *  duration of the rampTime.\n\t\t *\n\t\t *  @param  {number} value   The value to ramp to.\n\t\t *  @param  {Time} rampTime the time that it takes the\n\t\t *                               value to ramp from it's current value\n\t\t *  @param {Time}\t[startTime=now] \tWhen the ramp should start.\n\t\t *  @returns {Tone.Param} this\n\t\t *  @example\n\t\t * //exponentially ramp to the value 2 over 4 seconds.\n\t\t * signal.exponentialRampTo(2, 4);\n\t\t */\n\t    Tone.Param.prototype.exponentialRampTo = function (value, rampTime, startTime) {\n\t        startTime = this.toSeconds(startTime);\n\t        this.setRampPoint(startTime);\n\t        this.exponentialRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Schedules an linear continuous change in parameter value from\n\t\t *  the current time and current value to the given value over the\n\t\t *  duration of the rampTime.\n\t\t *\n\t\t *  @param  {number} value   The value to ramp to.\n\t\t *  @param  {Time} rampTime the time that it takes the\n\t\t *                               value to ramp from it's current value\n\t\t *  @param {Time}\t[startTime=now] \tWhen the ramp should start.\n\t\t *  @returns {Tone.Param} this\n\t\t *  @example\n\t\t * //linearly ramp to the value 4 over 3 seconds.\n\t\t * signal.linearRampTo(4, 3);\n\t\t */\n\t    Tone.Param.prototype.linearRampTo = function (value, rampTime, startTime) {\n\t        startTime = this.toSeconds(startTime);\n\t        this.setRampPoint(startTime);\n\t        this.linearRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n\t        return this;\n\t    };\n\t    /**\n\t\t * Convert between Time and time constant. The time\n\t\t * constant returned can be used in setTargetAtTime.\n\t\t * @param  {Time} time The time to convert\n\t\t * @return {Number}      The time constant to get an exponentially approaching\n\t\t *                           curve to over 99% of towards the target value.\n\t\t */\n\t    Tone.Param.prototype.getTimeConstant = function (time) {\n\t        return Math.log(this.toSeconds(time) + 1) / Math.log(200);\n\t    };\n\t    /**\n\t\t *  Start exponentially approaching the target value at the given time. Since it\n\t\t *  is an exponential approach it will continue approaching after the ramp duration. The\n\t\t *  rampTime is the time that it takes to reach over 99% of the way towards the value.\n\t\t *  @param  {number} value   The value to ramp to.\n\t\t *  @param  {Time} rampTime the time that it takes the\n\t\t *                               value to ramp from it's current value\n\t\t *  @param {Time}\t[startTime=now] \tWhen the ramp should start.\n\t\t *  @returns {Tone.Param} this\n\t\t *  @example\n\t\t * //exponentially ramp to the value 2 over 4 seconds.\n\t\t * signal.exponentialRampTo(2, 4);\n\t\t */\n\t    Tone.Param.prototype.targetRampTo = function (value, rampTime, startTime) {\n\t        startTime = this.toSeconds(startTime);\n\t        this.setRampPoint(startTime);\n\t        this.setTargetAtTime(value, startTime, this.getTimeConstant(rampTime));\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Start exponentially approaching the target value at the given time with\n\t\t *  a rate having the given time constant.\n\t\t *  @param {number} value\n\t\t *  @param {Time} startTime\n\t\t *  @param {number} timeConstant\n\t\t *  @returns {Tone.Param} this\n\t\t */\n\t    Tone.Param.prototype.setTargetAtTime = function (value, startTime, timeConstant) {\n\t        value = this._fromUnits(value);\n\t        // The value will never be able to approach without timeConstant > 0.\n\t        // http://www.w3.org/TR/webaudio/#dfn-setTargetAtTime, where the equation\n\t        // is described. 0 results in a division by 0.\n\t        value = Math.max(this._minOutput, value);\n\t        timeConstant = Math.max(this._minOutput, timeConstant);\n\t        this._param.setTargetAtTime(value, this.toSeconds(startTime), timeConstant);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Sets an array of arbitrary parameter values starting at the given time\n\t\t *  for the given duration.\n\t\t *\n\t\t *  @param {Array} values\n\t\t *  @param {Time} startTime\n\t\t *  @param {Time} duration\n\t\t *  @returns {Tone.Param} this\n\t\t */\n\t    Tone.Param.prototype.setValueCurveAtTime = function (values, startTime, duration) {\n\t        duration = this.toSeconds(duration);\n\t        startTime = this.toSeconds(startTime);\n\t        this.setValueAtTime(values[0], startTime);\n\t        var segTime = duration / (values.length - 1);\n\t        for (var i = 1; i < values.length; i++) {\n\t            this._param.linearRampToValueAtTime(this._fromUnits(values[i]), startTime + i * segTime);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Cancels all scheduled parameter changes with times greater than or\n\t\t *  equal to startTime.\n\t\t *\n\t\t *  @param  {Time} startTime\n\t\t *  @returns {Tone.Param} this\n\t\t */\n\t    Tone.Param.prototype.cancelScheduledValues = function (startTime) {\n\t        this._param.cancelScheduledValues(this.toSeconds(startTime));\n\t        return this;\n\t    };\n\t    /**\n\t\t *  This is similar to [cancelScheduledValues](#cancelScheduledValues) except\n\t\t *  it holds the automated value at cancelTime until the next automated event.\n\t\t *  @param  {Time} cancelTime\n\t\t *  @returns {Tone.Param} this\n\t\t */\n\t    Tone.Param.prototype.cancelAndHoldAtTime = function (cancelTime) {\n\t        cancelTime = this.toSeconds(cancelTime);\n\t        if (this._param.cancelAndHoldAtTime) {\n\t            this._param.cancelAndHoldAtTime(cancelTime);\n\t        } else {\n\t            //fallback for unsupported browsers\n\t            //can't cancel and hold at any time in the future\n\t            //just do it immediately for gapless automation curves\n\t            var now = this.context.currentTime;\n\t            this._param.cancelScheduledValues(now);\n\t            var currentVal = this._param.value;\n\t            if (currentVal === 0) {\n\t                currentVal = this._minOutput;\n\t            }\n\t            this._param.setValueAtTime(currentVal, now + this.sampleTime);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Ramps to the given value over the duration of the rampTime.\n\t\t *  Automatically selects the best ramp type (exponential or linear)\n\t\t *  depending on the `units` of the signal\n\t\t *\n\t\t *  @param  {number} value\n\t\t *  @param  {Time} rampTime \tThe time that it takes the\n\t\t *                              value to ramp from it's current value\n\t\t *  @param {Time}\t[startTime=now] \tWhen the ramp should start.\n\t\t *  @returns {Tone.Param} this\n\t\t *  @example\n\t\t * //ramp to the value either linearly or exponentially\n\t\t * //depending on the \"units\" value of the signal\n\t\t * signal.rampTo(0, 10);\n\t\t *  @example\n\t\t * //schedule it to ramp starting at a specific time\n\t\t * signal.rampTo(0, 10, 5)\n\t\t */\n\t    Tone.Param.prototype.rampTo = function (value, rampTime, startTime) {\n\t        rampTime = Tone.defaultArg(rampTime, 0.1);\n\t        if (this.units === Tone.Type.Frequency || this.units === Tone.Type.BPM || this.units === Tone.Type.Decibels) {\n\t            this.exponentialRampTo(value, rampTime, startTime);\n\t        } else {\n\t            this.linearRampTo(value, rampTime, startTime);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Clean up\n\t\t *  @returns {Tone.Param} this\n\t\t */\n\t    Tone.Param.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._param = null;\n\t        return this;\n\t    };\n\t    return Tone.Param;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  createGain shim\n\t\t *  @private\n\t\t */\n\t    if (window.GainNode && !AudioContext.prototype.createGain) {\n\t        AudioContext.prototype.createGain = AudioContext.prototype.createGainNode;\n\t    }\n\t    /**\n\t\t *  @class A thin wrapper around the Native Web Audio GainNode.\n\t\t *         The GainNode is a basic building block of the Web Audio\n\t\t *         API and is useful for routing audio and adjusting gains.\n\t\t *  @extends {Tone}\n\t\t *  @param  {Number=}  gain  The initial gain of the GainNode\n\t\t *  @param {Tone.Type=} units The units of the gain parameter.\n\t\t */\n\t    Tone.Gain = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'gain',\n\t            'units'\n\t        ], Tone.Gain);\n\t        Tone.AudioNode.call(this);\n\t        /**\n\t\t\t *  The GainNode\n\t\t\t *  @type  {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this.input = this.output = this._gainNode = this.context.createGain();\n\t        /**\n\t\t\t *  The gain parameter of the gain node.\n\t\t\t *  @type {Gain}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.gain = new Tone.Param({\n\t            'param': this._gainNode.gain,\n\t            'units': options.units,\n\t            'value': options.gain,\n\t            'convert': options.convert\n\t        });\n\t        this._readOnly('gain');\n\t    };\n\t    Tone.extend(Tone.Gain, Tone.AudioNode);\n\t    /**\n\t\t *  The defaults\n\t\t *  @const\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.Gain.defaults = {\n\t        'gain': 1,\n\t        'convert': true\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return  {Tone.Gain}  this\n\t\t */\n\t    Tone.Gain.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._gainNode.disconnect();\n\t        this._gainNode = null;\n\t        this._writable('gain');\n\t        this.gain.dispose();\n\t        this.gain = null;\n\t    };\n\t    return Tone.Gain;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  A signal is an audio-rate value. Tone.Signal is a core component of the library.\n\t\t *          Unlike a number, Signals can be scheduled with sample-level accuracy. Tone.Signal\n\t\t *          has all of the methods available to native Web Audio \n\t\t *          [AudioParam](http://webaudio.github.io/web-audio-api/#the-audioparam-interface)\n\t\t *          as well as additional conveniences. Read more about working with signals \n\t\t *          [here](https://github.com/Tonejs/Tone.js/wiki/Signals).\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Param}\n\t\t *  @param {Number|AudioParam} [value] Initial value of the signal. If an AudioParam\n\t\t *                                     is passed in, that parameter will be wrapped\n\t\t *                                     and controlled by the Signal. \n\t\t *  @param {string} [units=Number] unit The units the signal is in. \n\t\t *  @example\n\t\t * var signal = new Tone.Signal(10);\n\t\t */\n\t    Tone.Signal = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'value',\n\t            'units'\n\t        ], Tone.Signal);\n\t        var gainNode = Tone.context.createGain();\n\t        options.param = gainNode.gain;\n\t        Tone.Param.call(this, options);\n\t        /**\n\t\t\t * The node where the constant signal value is scaled.\n\t\t\t * @type {GainNode}\n\t\t\t * @private\n\t\t\t */\n\t        this.output = gainNode;\n\t        /**\n\t\t\t * The node where the value is set.\n\t\t\t * @type {Tone.Param}\n\t\t\t * @private\n\t\t\t */\n\t        this.input = this._param = this.output.gain;\n\t        //connect the const output to the node output\n\t        this.context.getConstant(1).connect(this.output);\n\t    };\n\t    Tone.extend(Tone.Signal, Tone.Param);\n\t    /**\n\t\t *  The default values\n\t\t *  @type  {Object}\n\t\t *  @static\n\t\t *  @const\n\t\t */\n\t    Tone.Signal.defaults = {\n\t        'value': 0,\n\t        'units': Tone.Type.Default,\n\t        'convert': true\n\t    };\n\t    /**\n\t\t *  When signals connect to other signals or AudioParams, \n\t\t *  they take over the output value of that signal or AudioParam. \n\t\t *  For all other nodes, the behavior is the same as a default <code>connect</code>. \n\t\t *\n\t\t *  @override\n\t\t *  @param {AudioParam|AudioNode|Tone.Signal|Tone} node \n\t\t *  @param {number} [outputNumber=0] The output number to connect from.\n\t\t *  @param {number} [inputNumber=0] The input number to connect to.\n\t\t *  @returns {Tone.SignalBase} this\n\t\t *  @method\n\t\t */\n\t    Tone.Signal.prototype.connect = Tone.SignalBase.prototype.connect;\n\t    /**\n\t\t *  dispose and disconnect\n\t\t *  @returns {Tone.Signal} this\n\t\t */\n\t    Tone.Signal.prototype.dispose = function () {\n\t        Tone.Param.prototype.dispose.call(this);\n\t        return this;\n\t    };\n\t    return Tone.Signal;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class A signal which adds the method getValueAtTime.\n\t\t *         Code and inspiration from https://github.com/jsantell/web-audio-automation-timeline\n\t\t *  @extends {Tone.Signal}\n\t\t *  @param {Number=} value The initial value of the signal\n\t\t *  @param {String=} units The conversion units of the signal.\n\t\t */\n\t    Tone.TimelineSignal = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'value',\n\t            'units'\n\t        ], Tone.Signal);\n\t        Tone.Signal.call(this, options);\n\t        /**\n\t\t\t *  The scheduled events\n\t\t\t *  @type {Tone.Timeline}\n\t\t\t *  @private\n\t\t\t */\n\t        this._events = new Tone.Timeline(100);\n\t        /**\n\t\t\t *  The initial scheduled value\n\t\t\t *  @type {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._initial = this._fromUnits(this._param.value);\n\t        this.value = options.value;\n\t        //delete the input node so that nothing can overwrite the signal value\n\t        delete this.input;\n\t    };\n\t    Tone.extend(Tone.TimelineSignal, Tone.Signal);\n\t    /**\n\t\t *  The event types of a schedulable signal.\n\t\t *  @enum {String}\n\t\t *  @private\n\t\t */\n\t    Tone.TimelineSignal.Type = {\n\t        Linear: 'linear',\n\t        Exponential: 'exponential',\n\t        Target: 'target',\n\t        Set: 'set'\n\t    };\n\t    /**\n\t\t * The current value of the signal.\n\t\t * @memberOf Tone.TimelineSignal#\n\t\t * @type {Number}\n\t\t * @name value\n\t\t */\n\t    Object.defineProperty(Tone.TimelineSignal.prototype, 'value', {\n\t        get: function () {\n\t            var now = this.now();\n\t            var val = this.getValueAtTime(now);\n\t            return this._toUnits(val);\n\t        },\n\t        set: function (value) {\n\t            if (this._events) {\n\t                var convertedVal = this._fromUnits(value);\n\t                this._initial = convertedVal;\n\t                this.cancelScheduledValues();\n\t                this._param.value = convertedVal;\n\t            }\n\t        }\n\t    });\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tSCHEDULING\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Schedules a parameter value change at the given time.\n\t\t *  @param {*}\tvalue The value to set the signal.\n\t\t *  @param {Time}  time The time when the change should occur.\n\t\t *  @returns {Tone.TimelineSignal} this\n\t\t *  @example\n\t\t * //set the frequency to \"G4\" in exactly 1 second from now.\n\t\t * freq.setValueAtTime(\"G4\", \"+1\");\n\t\t */\n\t    Tone.TimelineSignal.prototype.setValueAtTime = function (value, startTime) {\n\t        value = this._fromUnits(value);\n\t        startTime = this.toSeconds(startTime);\n\t        this._events.add({\n\t            'type': Tone.TimelineSignal.Type.Set,\n\t            'value': value,\n\t            'time': startTime\n\t        });\n\t        //invoke the original event\n\t        this._param.setValueAtTime(value, startTime);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Schedules a linear continuous change in parameter value from the\n\t\t *  previous scheduled parameter value to the given value.\n\t\t *\n\t\t *  @param  {number} value\n\t\t *  @param  {Time} endTime\n\t\t *  @returns {Tone.TimelineSignal} this\n\t\t */\n\t    Tone.TimelineSignal.prototype.linearRampToValueAtTime = function (value, endTime) {\n\t        value = this._fromUnits(value);\n\t        endTime = this.toSeconds(endTime);\n\t        this._events.add({\n\t            'type': Tone.TimelineSignal.Type.Linear,\n\t            'value': value,\n\t            'time': endTime\n\t        });\n\t        this._param.linearRampToValueAtTime(value, endTime);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Schedules an exponential continuous change in parameter value from\n\t\t *  the previous scheduled parameter value to the given value.\n\t\t *\n\t\t *  @param  {number} value\n\t\t *  @param  {Time} endTime\n\t\t *  @returns {Tone.TimelineSignal} this\n\t\t */\n\t    Tone.TimelineSignal.prototype.exponentialRampToValueAtTime = function (value, endTime) {\n\t        //get the previous event and make sure it's not starting from 0\n\t        endTime = this.toSeconds(endTime);\n\t        var beforeEvent = this._searchBefore(endTime);\n\t        if (beforeEvent && beforeEvent.value === 0) {\n\t            //reschedule that event\n\t            this.setValueAtTime(this._minOutput, beforeEvent.time);\n\t        }\n\t        value = this._fromUnits(value);\n\t        var setValue = Math.max(value, this._minOutput);\n\t        this._events.add({\n\t            'type': Tone.TimelineSignal.Type.Exponential,\n\t            'value': setValue,\n\t            'time': endTime\n\t        });\n\t        //if the ramped to value is 0, make it go to the min output, and then set to 0.\n\t        if (value < this._minOutput) {\n\t            this._param.exponentialRampToValueAtTime(this._minOutput, endTime - this.sampleTime);\n\t            this.setValueAtTime(0, endTime);\n\t        } else {\n\t            this._param.exponentialRampToValueAtTime(value, endTime);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Start exponentially approaching the target value at the given time with\n\t\t *  a rate having the given time constant.\n\t\t *  @param {number} value\n\t\t *  @param {Time} startTime\n\t\t *  @param {number} timeConstant\n\t\t *  @returns {Tone.TimelineSignal} this\n\t\t */\n\t    Tone.TimelineSignal.prototype.setTargetAtTime = function (value, startTime, timeConstant) {\n\t        value = this._fromUnits(value);\n\t        value = Math.max(this._minOutput, value);\n\t        timeConstant = Math.max(this._minOutput, timeConstant);\n\t        startTime = this.toSeconds(startTime);\n\t        this._events.add({\n\t            'type': Tone.TimelineSignal.Type.Target,\n\t            'value': value,\n\t            'time': startTime,\n\t            'constant': timeConstant\n\t        });\n\t        this._param.setTargetAtTime(value, startTime, timeConstant);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Set an array of arbitrary values starting at the given time for the given duration.\n\t\t *  @param {Float32Array} values\n\t\t *  @param {Time} startTime\n\t\t *  @param {Time} duration\n\t\t *  @param {NormalRange} [scaling=1] If the values in the curve should be scaled by some value\n\t\t *  @returns {Tone.TimelineSignal} this\n\t\t */\n\t    Tone.TimelineSignal.prototype.setValueCurveAtTime = function (values, startTime, duration, scaling) {\n\t        scaling = Tone.defaultArg(scaling, 1);\n\t        duration = this.toSeconds(duration);\n\t        startTime = this.toSeconds(startTime);\n\t        var segTime = duration / (values.length - 1);\n\t        this.setValueAtTime(values[0] * scaling, startTime);\n\t        for (var i = 1; i < values.length; i++) {\n\t            this.linearRampToValueAtTime(values[i] * scaling, startTime + i * segTime);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Cancels all scheduled parameter changes with times greater than or\n\t\t *  equal to startTime.\n\t\t *  @param  {Time} startTime\n\t\t *  @returns {Tone.TimelineSignal} this\n\t\t */\n\t    Tone.TimelineSignal.prototype.cancelScheduledValues = function (after) {\n\t        after = this.toSeconds(after);\n\t        this._events.cancel(after);\n\t        this._param.cancelScheduledValues(after);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Cancels all scheduled parameter changes with times greater than or\n\t\t *  equal to cancelTime and sets the output of the signal to be the value\n\t\t *  at cancelTime. Similar to (cancelScheduledValues)[#cancelscheduledvalues].\n\t\t *  @param  {Time} cancelTime\n\t\t *  @returns {Tone.TimelineSignal} this\n\t\t */\n\t    Tone.TimelineSignal.prototype.cancelAndHoldAtTime = function (cancelTime) {\n\t        this.setRampPoint(this.toSeconds(cancelTime));\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Sets the computed value at the given time. This provides\n\t\t *  a point from which a linear or exponential curve\n\t\t *  can be scheduled after. Will cancel events after\n\t\t *  the given time and shorten the currently scheduled\n\t\t *  linear or exponential ramp so that it ends at `time` .\n\t\t *  This is to avoid discontinuities and clicks in envelopes.\n\t\t *  @param {Time} time When to set the ramp point\n\t\t *  @returns {Tone.TimelineSignal} this\n\t\t */\n\t    Tone.TimelineSignal.prototype.setRampPoint = function (time) {\n\t        time = this.toSeconds(time);\n\t        //get the value at the given time\n\t        var val = this._toUnits(this.getValueAtTime(time));\n\t        //if there is an event at the given time\n\t        //and that even is not a \"set\"\n\t        var before = this._searchBefore(time);\n\t        if (before && before.time === time) {\n\t            //remove everything after\n\t            this.cancelScheduledValues(time + this.sampleTime);\n\t        } else {\n\t            //reschedule the next event to end at the given time\n\t            var after = this._searchAfter(time);\n\t            if (after) {\n\t                //cancel the next event(s)\n\t                this.cancelScheduledValues(time);\n\t                if (after.type === Tone.TimelineSignal.Type.Linear) {\n\t                    this.linearRampToValueAtTime(val, time);\n\t                } else if (after.type === Tone.TimelineSignal.Type.Exponential) {\n\t                    this.exponentialRampToValueAtTime(val, time);\n\t                }\n\t            }\n\t        }\n\t        this.setValueAtTime(val, time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Do a linear ramp to the given value between the start and finish times.\n\t\t *  @param {Number} value The value to ramp to.\n\t\t *  @param {Time} start The beginning anchor point to do the linear ramp\n\t\t *  @param {Time} finish The ending anchor point by which the value of\n\t\t *                       the signal will equal the given value.\n\t\t *  @returns {Tone.TimelineSignal} this\n\t\t */\n\t    Tone.TimelineSignal.prototype.linearRampToValueBetween = function (value, start, finish) {\n\t        this.setRampPoint(start);\n\t        this.linearRampToValueAtTime(value, finish);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Do a exponential ramp to the given value between the start and finish times.\n\t\t *  @param {Number} value The value to ramp to.\n\t\t *  @param {Time} start The beginning anchor point to do the exponential ramp\n\t\t *  @param {Time} finish The ending anchor point by which the value of\n\t\t *                       the signal will equal the given value.\n\t\t *  @returns {Tone.TimelineSignal} this\n\t\t */\n\t    Tone.TimelineSignal.prototype.exponentialRampToValueBetween = function (value, start, finish) {\n\t        this.setRampPoint(start);\n\t        this.exponentialRampToValueAtTime(value, finish);\n\t        return this;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tGETTING SCHEDULED VALUES\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Returns the value before or equal to the given time\n\t\t *  @param  {Number}  time  The time to query\n\t\t *  @return  {Object}  The event at or before the given time.\n\t\t *  @private\n\t\t */\n\t    Tone.TimelineSignal.prototype._searchBefore = function (time) {\n\t        return this._events.get(time);\n\t    };\n\t    /**\n\t\t *  The event after the given time\n\t\t *  @param  {Number}  time  The time to query.\n\t\t *  @return  {Object}  The next event after the given time\n\t\t *  @private\n\t\t */\n\t    Tone.TimelineSignal.prototype._searchAfter = function (time) {\n\t        return this._events.getAfter(time);\n\t    };\n\t    /**\n\t\t *  Get the scheduled value at the given time. This will\n\t\t *  return the unconverted (raw) value.\n\t\t *  @param  {Number}  time  The time in seconds.\n\t\t *  @return  {Number}  The scheduled value at the given time.\n\t\t */\n\t    Tone.TimelineSignal.prototype.getValueAtTime = function (time) {\n\t        time = this.toSeconds(time);\n\t        var after = this._searchAfter(time);\n\t        var before = this._searchBefore(time);\n\t        var value = this._initial;\n\t        //if it was set by\n\t        if (before === null) {\n\t            value = this._initial;\n\t        } else if (before.type === Tone.TimelineSignal.Type.Target) {\n\t            var previous = this._events.getBefore(before.time);\n\t            var previousVal;\n\t            if (previous === null) {\n\t                previousVal = this._initial;\n\t            } else {\n\t                previousVal = previous.value;\n\t            }\n\t            value = this._exponentialApproach(before.time, previousVal, before.value, before.constant, time);\n\t        } else if (after === null) {\n\t            value = before.value;\n\t        } else if (after.type === Tone.TimelineSignal.Type.Linear) {\n\t            value = this._linearInterpolate(before.time, before.value, after.time, after.value, time);\n\t        } else if (after.type === Tone.TimelineSignal.Type.Exponential) {\n\t            value = this._exponentialInterpolate(before.time, before.value, after.time, after.value, time);\n\t        } else {\n\t            value = before.value;\n\t        }\n\t        return value;\n\t    };\n\t    /**\n\t\t *  When signals connect to other signals or AudioParams,\n\t\t *  they take over the output value of that signal or AudioParam.\n\t\t *  For all other nodes, the behavior is the same as a default <code>connect</code>.\n\t\t *\n\t\t *  @override\n\t\t *  @param {AudioParam|AudioNode|Tone.Signal|Tone} node\n\t\t *  @param {number} [outputNumber=0] The output number to connect from.\n\t\t *  @param {number} [inputNumber=0] The input number to connect to.\n\t\t *  @returns {Tone.TimelineSignal} this\n\t\t *  @method\n\t\t */\n\t    Tone.TimelineSignal.prototype.connect = Tone.SignalBase.prototype.connect;\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tAUTOMATION CURVE CALCULATIONS\n\t    //\tMIT License, copyright (c) 2014 Jordan Santell\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Calculates the the value along the curve produced by setTargetAtTime\n\t\t *  @private\n\t\t */\n\t    Tone.TimelineSignal.prototype._exponentialApproach = function (t0, v0, v1, timeConstant, t) {\n\t        return v1 + (v0 - v1) * Math.exp(-(t - t0) / timeConstant);\n\t    };\n\t    /**\n\t\t *  Calculates the the value along the curve produced by linearRampToValueAtTime\n\t\t *  @private\n\t\t */\n\t    Tone.TimelineSignal.prototype._linearInterpolate = function (t0, v0, t1, v1, t) {\n\t        return v0 + (v1 - v0) * ((t - t0) / (t1 - t0));\n\t    };\n\t    /**\n\t\t *  Calculates the the value along the curve produced by exponentialRampToValueAtTime\n\t\t *  @private\n\t\t */\n\t    Tone.TimelineSignal.prototype._exponentialInterpolate = function (t0, v0, t1, v1, t) {\n\t        v0 = Math.max(this._minOutput, v0);\n\t        return v0 * Math.pow(v1 / v0, (t - t0) / (t1 - t0));\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return {Tone.TimelineSignal} this\n\t\t */\n\t    Tone.TimelineSignal.prototype.dispose = function () {\n\t        Tone.Signal.prototype.dispose.call(this);\n\t        this._events.dispose();\n\t        this._events = null;\n\t    };\n\t    return Tone.TimelineSignal;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Pow applies an exponent to the incoming signal. The incoming signal\n\t\t *         must be AudioRange.\n\t\t *\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @constructor\n\t\t *  @param {Positive} exp The exponent to apply to the incoming signal, must be at least 2. \n\t\t *  @example\n\t\t * var pow = new Tone.Pow(2);\n\t\t * var sig = new Tone.Signal(0.5).connect(pow);\n\t\t * //output of pow is 0.25. \n\t\t */\n\t    Tone.Pow = function (exp) {\n\t        Tone.SignalBase.call(this);\n\t        /**\n\t\t\t * the exponent\n\t\t\t * @private\n\t\t\t * @type {number}\n\t\t\t */\n\t        this._exp = Tone.defaultArg(exp, 1);\n\t        /**\n\t\t\t *  @type {WaveShaperNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._expScaler = this.input = this.output = new Tone.WaveShaper(this._expFunc(this._exp), 8192);\n\t    };\n\t    Tone.extend(Tone.Pow, Tone.SignalBase);\n\t    /**\n\t\t * The value of the exponent.\n\t\t * @memberOf Tone.Pow#\n\t\t * @type {number}\n\t\t * @name value\n\t\t */\n\t    Object.defineProperty(Tone.Pow.prototype, 'value', {\n\t        get: function () {\n\t            return this._exp;\n\t        },\n\t        set: function (exp) {\n\t            this._exp = exp;\n\t            this._expScaler.setMap(this._expFunc(this._exp));\n\t        }\n\t    });\n\t    /**\n\t\t *  the function which maps the waveshaper\n\t\t *  @param   {number} exp\n\t\t *  @return {function}\n\t\t *  @private\n\t\t */\n\t    Tone.Pow.prototype._expFunc = function (exp) {\n\t        return function (val) {\n\t            return Math.pow(Math.abs(val), exp);\n\t        };\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Pow} this\n\t\t */\n\t    Tone.Pow.prototype.dispose = function () {\n\t        Tone.SignalBase.prototype.dispose.call(this);\n\t        this._expScaler.dispose();\n\t        this._expScaler = null;\n\t        return this;\n\t    };\n\t    return Tone.Pow;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Envelope is an [ADSR](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope)\n\t\t *          envelope generator. Tone.Envelope outputs a signal which\n\t\t *          can be connected to an AudioParam or Tone.Signal.\n\t\t *          <img src=\"https://upload.wikimedia.org/wikipedia/commons/e/ea/ADSR_parameter.svg\">\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @param {Time} [attack] The amount of time it takes for the envelope to go from\n\t\t *                         0 to it's maximum value.\n\t\t *  @param {Time} [decay]\tThe period of time after the attack that it takes for the envelope\n\t\t *                       \tto fall to the sustain value.\n\t\t *  @param {NormalRange} [sustain]\tThe percent of the maximum value that the envelope rests at until\n\t\t *                                \tthe release is triggered.\n\t\t *  @param {Time} [release]\tThe amount of time after the release is triggered it takes to reach 0.\n\t\t *  @example\n\t\t * //an amplitude envelope\n\t\t * var gainNode = Tone.context.createGain();\n\t\t * var env = new Tone.Envelope({\n\t\t * \t\"attack\" : 0.1,\n\t\t * \t\"decay\" : 0.2,\n\t\t * \t\"sustain\" : 1,\n\t\t * \t\"release\" : 0.8,\n\t\t * });\n\t\t * env.connect(gainNode.gain);\n\t\t */\n\t    Tone.Envelope = function () {\n\t        //get all of the defaults\n\t        var options = Tone.defaults(arguments, [\n\t            'attack',\n\t            'decay',\n\t            'sustain',\n\t            'release'\n\t        ], Tone.Envelope);\n\t        Tone.AudioNode.call(this);\n\t        /**\n\t\t\t *  When triggerAttack is called, the attack time is the amount of\n\t\t\t *  time it takes for the envelope to reach it's maximum value.\n\t\t\t *  @type {Time}\n\t\t\t */\n\t        this.attack = options.attack;\n\t        /**\n\t\t\t *  After the attack portion of the envelope, the value will fall\n\t\t\t *  over the duration of the decay time to it's sustain value.\n\t\t\t *  @type {Time}\n\t\t\t */\n\t        this.decay = options.decay;\n\t        /**\n\t\t\t * \tThe sustain value is the value\n\t\t\t * \twhich the envelope rests at after triggerAttack is\n\t\t\t * \tcalled, but before triggerRelease is invoked.\n\t\t\t *  @type {NormalRange}\n\t\t\t */\n\t        this.sustain = options.sustain;\n\t        /**\n\t\t\t *  After triggerRelease is called, the envelope's\n\t\t\t *  value will fall to it's miminum value over the\n\t\t\t *  duration of the release time.\n\t\t\t *  @type {Time}\n\t\t\t */\n\t        this.release = options.release;\n\t        /**\n\t\t\t *  the next time the envelope is at standby\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._attackCurve = 'linear';\n\t        /**\n\t\t\t *  the next time the envelope is at standby\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._releaseCurve = 'exponential';\n\t        /**\n\t\t\t *  the signal\n\t\t\t *  @type {Tone.TimelineSignal}\n\t\t\t *  @private\n\t\t\t */\n\t        this._sig = this.output = new Tone.TimelineSignal();\n\t        this._sig.setValueAtTime(0, 0);\n\t        //set the attackCurve initially\n\t        this.attackCurve = options.attackCurve;\n\t        this.releaseCurve = options.releaseCurve;\n\t    };\n\t    Tone.extend(Tone.Envelope, Tone.AudioNode);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t *  @const\n\t\t */\n\t    Tone.Envelope.defaults = {\n\t        'attack': 0.01,\n\t        'decay': 0.1,\n\t        'sustain': 0.5,\n\t        'release': 1,\n\t        'attackCurve': 'linear',\n\t        'releaseCurve': 'exponential'\n\t    };\n\t    /**\n\t\t * Read the current value of the envelope. Useful for\n\t\t * syncronizing visual output to the envelope.\n\t\t * @memberOf Tone.Envelope#\n\t\t * @type {Number}\n\t\t * @name value\n\t\t * @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Envelope.prototype, 'value', {\n\t        get: function () {\n\t            return this.getValueAtTime(this.now());\n\t        }\n\t    });\n\t    /**\n\t\t * The shape of the attack.\n\t\t * Can be any of these strings:\n\t\t * <ul>\n\t\t *   <li>linear</li>\n\t\t *   <li>exponential</li>\n\t\t *   <li>sine</li>\n\t\t *   <li>cosine</li>\n\t\t *   <li>bounce</li>\n\t\t *   <li>ripple</li>\n\t\t *   <li>step</li>\n\t\t * </ul>\n\t\t * Can also be an array which describes the curve. Values\n\t\t * in the array are evenly subdivided and linearly\n\t\t * interpolated over the duration of the attack.\n\t\t * @memberOf Tone.Envelope#\n\t\t * @type {String|Array}\n\t\t * @name attackCurve\n\t\t * @example\n\t\t * env.attackCurve = \"linear\";\n\t\t * @example\n\t\t * //can also be an array\n\t\t * env.attackCurve = [0, 0.2, 0.3, 0.4, 1]\n\t\t */\n\t    Object.defineProperty(Tone.Envelope.prototype, 'attackCurve', {\n\t        get: function () {\n\t            if (Tone.isString(this._attackCurve)) {\n\t                return this._attackCurve;\n\t            } else if (Tone.isArray(this._attackCurve)) {\n\t                //look up the name in the curves array\n\t                for (var type in Tone.Envelope.Type) {\n\t                    if (Tone.Envelope.Type[type].In === this._attackCurve) {\n\t                        return type;\n\t                    }\n\t                }\n\t                //otherwise just return the array\n\t                return this._attackCurve;\n\t            }\n\t        },\n\t        set: function (curve) {\n\t            //check if it's a valid type\n\t            if (Tone.Envelope.Type.hasOwnProperty(curve)) {\n\t                var curveDef = Tone.Envelope.Type[curve];\n\t                if (Tone.isObject(curveDef)) {\n\t                    this._attackCurve = curveDef.In;\n\t                } else {\n\t                    this._attackCurve = curveDef;\n\t                }\n\t            } else if (Tone.isArray(curve)) {\n\t                this._attackCurve = curve;\n\t            } else {\n\t                throw new Error('Tone.Envelope: invalid curve: ' + curve);\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The shape of the release. See the attack curve types.\n\t\t * @memberOf Tone.Envelope#\n\t\t * @type {String|Array}\n\t\t * @name releaseCurve\n\t\t * @example\n\t\t * env.releaseCurve = \"linear\";\n\t\t */\n\t    Object.defineProperty(Tone.Envelope.prototype, 'releaseCurve', {\n\t        get: function () {\n\t            if (Tone.isString(this._releaseCurve)) {\n\t                return this._releaseCurve;\n\t            } else if (Tone.isArray(this._releaseCurve)) {\n\t                //look up the name in the curves array\n\t                for (var type in Tone.Envelope.Type) {\n\t                    if (Tone.Envelope.Type[type].Out === this._releaseCurve) {\n\t                        return type;\n\t                    }\n\t                }\n\t                //otherwise just return the array\n\t                return this._releaseCurve;\n\t            }\n\t        },\n\t        set: function (curve) {\n\t            //check if it's a valid type\n\t            if (Tone.Envelope.Type.hasOwnProperty(curve)) {\n\t                var curveDef = Tone.Envelope.Type[curve];\n\t                if (Tone.isObject(curveDef)) {\n\t                    this._releaseCurve = curveDef.Out;\n\t                } else {\n\t                    this._releaseCurve = curveDef;\n\t                }\n\t            } else if (Tone.isArray(curve)) {\n\t                this._releaseCurve = curve;\n\t            } else {\n\t                throw new Error('Tone.Envelope: invalid curve: ' + curve);\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Trigger the attack/decay portion of the ADSR envelope.\n\t\t *  @param  {Time} [time=now] When the attack should start.\n\t\t *  @param {NormalRange} [velocity=1] The velocity of the envelope scales the vales.\n\t\t *                               number between 0-1\n\t\t *  @returns {Tone.Envelope} this\n\t\t *  @example\n\t\t *  //trigger the attack 0.5 seconds from now with a velocity of 0.2\n\t\t *  env.triggerAttack(\"+0.5\", 0.2);\n\t\t */\n\t    Tone.Envelope.prototype.triggerAttack = function (time, velocity) {\n\t        time = this.toSeconds(time);\n\t        var originalAttack = this.toSeconds(this.attack);\n\t        var attack = originalAttack;\n\t        var decay = this.toSeconds(this.decay);\n\t        velocity = Tone.defaultArg(velocity, 1);\n\t        //check if it's not a complete attack\n\t        var currentValue = this.getValueAtTime(time);\n\t        if (currentValue > 0) {\n\t            //subtract the current value from the attack time\n\t            var attackRate = 1 / attack;\n\t            var remainingDistance = 1 - currentValue;\n\t            //the attack is now the remaining time\n\t            attack = remainingDistance / attackRate;\n\t        }\n\t        //attack\n\t        if (this._attackCurve === 'linear') {\n\t            this._sig.linearRampTo(velocity, attack, time);\n\t        } else if (this._attackCurve === 'exponential') {\n\t            this._sig.targetRampTo(velocity, attack, time);\n\t        } else if (attack > 0) {\n\t            this._sig.setRampPoint(time);\n\t            var curve = this._attackCurve;\n\t            //take only a portion of the curve\n\t            if (attack < originalAttack) {\n\t                var percentComplete = 1 - attack / originalAttack;\n\t                var sliceIndex = Math.floor(percentComplete * this._attackCurve.length);\n\t                curve = this._attackCurve.slice(sliceIndex);\n\t                //the first index is the current value\n\t                curve[0] = currentValue;\n\t            }\n\t            this._sig.setValueCurveAtTime(curve, time, attack, velocity);\n\t        }\n\t        //decay\n\t        this._sig.targetRampTo(velocity * this.sustain, decay, attack + time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Triggers the release of the envelope.\n\t\t *  @param  {Time} [time=now] When the release portion of the envelope should start.\n\t\t *  @returns {Tone.Envelope} this\n\t\t *  @example\n\t\t *  //trigger release immediately\n\t\t *  env.triggerRelease();\n\t\t */\n\t    Tone.Envelope.prototype.triggerRelease = function (time) {\n\t        time = this.toSeconds(time);\n\t        var currentValue = this.getValueAtTime(time);\n\t        if (currentValue > 0) {\n\t            var release = this.toSeconds(this.release);\n\t            if (this._releaseCurve === 'linear') {\n\t                this._sig.linearRampTo(0, release, time);\n\t            } else if (this._releaseCurve === 'exponential') {\n\t                this._sig.targetRampTo(0, release, time);\n\t            } else {\n\t                var curve = this._releaseCurve;\n\t                if (Tone.isArray(curve)) {\n\t                    this._sig.setRampPoint(time);\n\t                    this._sig.setValueCurveAtTime(curve, time, release, currentValue);\n\t                }\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Get the scheduled value at the given time. This will\n\t\t *  return the unconverted (raw) value.\n\t\t *  @param  {Number}  time  The time in seconds.\n\t\t *  @return  {Number}  The scheduled value at the given time.\n\t\t */\n\t    Tone.Envelope.prototype.getValueAtTime = function (time) {\n\t        return this._sig.getValueAtTime(time);\n\t    };\n\t    /**\n\t\t *  triggerAttackRelease is shorthand for triggerAttack, then waiting\n\t\t *  some duration, then triggerRelease.\n\t\t *  @param {Time} duration The duration of the sustain.\n\t\t *  @param {Time} [time=now] When the attack should be triggered.\n\t\t *  @param {number} [velocity=1] The velocity of the envelope.\n\t\t *  @returns {Tone.Envelope} this\n\t\t *  @example\n\t\t * //trigger the attack and then the release after 0.6 seconds.\n\t\t * env.triggerAttackRelease(0.6);\n\t\t */\n\t    Tone.Envelope.prototype.triggerAttackRelease = function (duration, time, velocity) {\n\t        time = this.toSeconds(time);\n\t        this.triggerAttack(time, velocity);\n\t        this.triggerRelease(time + this.toSeconds(duration));\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Cancels all scheduled envelope changes after the given time.\n\t\t *  @param  {Time} after\n\t\t *  @returns {Tone.Envelope} this\n\t\t */\n\t    Tone.Envelope.prototype.cancel = function (after) {\n\t        this._sig.cancelScheduledValues(after);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Borrows the connect method from Tone.Signal.\n\t\t *  @function\n\t\t *  @private\n\t\t */\n\t    Tone.Envelope.prototype.connect = Tone.Signal.prototype.connect;\n\t    /**\n\t \t *  Generate some complex envelope curves.\n\t \t */\n\t    (function _createCurves() {\n\t        var curveLen = 128;\n\t        var i, k;\n\t        //cosine curve\n\t        var cosineCurve = [];\n\t        for (i = 0; i < curveLen; i++) {\n\t            cosineCurve[i] = Math.sin(i / (curveLen - 1) * (Math.PI / 2));\n\t        }\n\t        //ripple curve\n\t        var rippleCurve = [];\n\t        var rippleCurveFreq = 6.4;\n\t        for (i = 0; i < curveLen - 1; i++) {\n\t            k = i / (curveLen - 1);\n\t            var sineWave = Math.sin(k * (Math.PI * 2) * rippleCurveFreq - Math.PI / 2) + 1;\n\t            rippleCurve[i] = sineWave / 10 + k * 0.83;\n\t        }\n\t        rippleCurve[curveLen - 1] = 1;\n\t        //stairs curve\n\t        var stairsCurve = [];\n\t        var steps = 5;\n\t        for (i = 0; i < curveLen; i++) {\n\t            stairsCurve[i] = Math.ceil(i / (curveLen - 1) * steps) / steps;\n\t        }\n\t        //in-out easing curve\n\t        var sineCurve = [];\n\t        for (i = 0; i < curveLen; i++) {\n\t            k = i / (curveLen - 1);\n\t            sineCurve[i] = 0.5 * (1 - Math.cos(Math.PI * k));\n\t        }\n\t        //a bounce curve\n\t        var bounceCurve = [];\n\t        for (i = 0; i < curveLen; i++) {\n\t            k = i / (curveLen - 1);\n\t            var freq = Math.pow(k, 3) * 4 + 0.2;\n\t            var val = Math.cos(freq * Math.PI * 2 * k);\n\t            bounceCurve[i] = Math.abs(val * (1 - k));\n\t        }\n\t        /**\n\t\t\t *  Invert a value curve to make it work for the release\n\t\t\t *  @private\n\t\t\t */\n\t        function invertCurve(curve) {\n\t            var out = new Array(curve.length);\n\t            for (var j = 0; j < curve.length; j++) {\n\t                out[j] = 1 - curve[j];\n\t            }\n\t            return out;\n\t        }\n\t        /**\n\t\t\t *  reverse the curve\n\t\t\t *  @private\n\t\t\t */\n\t        function reverseCurve(curve) {\n\t            return curve.slice(0).reverse();\n\t        }\n\t        /**\n\t\t\t *  attack and release curve arrays\n\t\t\t *  @type  {Object}\n\t\t\t *  @private\n\t\t\t */\n\t        Tone.Envelope.Type = {\n\t            'linear': 'linear',\n\t            'exponential': 'exponential',\n\t            'bounce': {\n\t                In: invertCurve(bounceCurve),\n\t                Out: bounceCurve\n\t            },\n\t            'cosine': {\n\t                In: cosineCurve,\n\t                Out: reverseCurve(cosineCurve)\n\t            },\n\t            'step': {\n\t                In: stairsCurve,\n\t                Out: invertCurve(stairsCurve)\n\t            },\n\t            'ripple': {\n\t                In: rippleCurve,\n\t                Out: invertCurve(rippleCurve)\n\t            },\n\t            'sine': {\n\t                In: sineCurve,\n\t                Out: invertCurve(sineCurve)\n\t            }\n\t        };\n\t    }());\n\t    /**\n\t\t *  Disconnect and dispose.\n\t\t *  @returns {Tone.Envelope} this\n\t\t */\n\t    Tone.Envelope.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._sig.dispose();\n\t        this._sig = null;\n\t        this._attackCurve = null;\n\t        this._releaseCurve = null;\n\t        return this;\n\t    };\n\t    return Tone.Envelope;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.AmplitudeEnvelope is a Tone.Envelope connected to a gain node.\n\t\t *          Unlike Tone.Envelope, which outputs the envelope's value, Tone.AmplitudeEnvelope accepts\n\t\t *          an audio signal as the input and will apply the envelope to the amplitude\n\t\t *          of the signal. Read more about ADSR Envelopes on [Wikipedia](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope).\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Envelope}\n\t\t *  @param {Time|Object} [attack] The amount of time it takes for the envelope to go from\n\t\t *                               0 to it's maximum value.\n\t\t *  @param {Time} [decay]\tThe period of time after the attack that it takes for the envelope\n\t\t *                       \tto fall to the sustain value.\n\t\t *  @param {NormalRange} [sustain]\tThe percent of the maximum value that the envelope rests at until\n\t\t *                                \tthe release is triggered.\n\t\t *  @param {Time} [release]\tThe amount of time after the release is triggered it takes to reach 0.\n\t\t *  @example\n\t\t * var ampEnv = new Tone.AmplitudeEnvelope({\n\t\t * \t\"attack\": 0.1,\n\t\t * \t\"decay\": 0.2,\n\t\t * \t\"sustain\": 1.0,\n\t\t * \t\"release\": 0.8\n\t\t * }).toMaster();\n\t\t * //create an oscillator and connect it\n\t\t * var osc = new Tone.Oscillator().connect(ampEnv).start();\n\t\t * //trigger the envelopes attack and release \"8t\" apart\n\t\t * ampEnv.triggerAttackRelease(\"8t\");\n\t\t */\n\t    Tone.AmplitudeEnvelope = function () {\n\t        Tone.Envelope.apply(this, arguments);\n\t        /**\n\t\t\t *  the input node\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this.input = this.output = new Tone.Gain();\n\t        this._sig.connect(this.output.gain);\n\t    };\n\t    Tone.extend(Tone.AmplitudeEnvelope, Tone.Envelope);\n\t    /**\n\t\t *  Clean up\n\t\t *  @return  {Tone.AmplitudeEnvelope}  this\n\t\t */\n\t    Tone.AmplitudeEnvelope.prototype.dispose = function () {\n\t        Tone.Envelope.prototype.dispose.call(this);\n\t        return this;\n\t    };\n\t    return Tone.AmplitudeEnvelope;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  AnalyserNode.getFloatTimeDomainData polyfill\n\t\t *  @private\n\t\t */\n\t    if (window.AnalyserNode && !AnalyserNode.prototype.getFloatTimeDomainData) {\n\t        //referenced https://github.com/mohayonao/get-float-time-domain-data\n\t        AnalyserNode.prototype.getFloatTimeDomainData = function (array) {\n\t            var uint8 = new Uint8Array(array.length);\n\t            this.getByteTimeDomainData(uint8);\n\t            for (var i = 0; i < uint8.length; i++) {\n\t                array[i] = (uint8[i] - 128) / 128;\n\t            }\n\t        };\n\t    }\n\t    /**\n\t\t *  @class  Wrapper around the native Web Audio's\n\t\t *          [AnalyserNode](http://webaudio.github.io/web-audio-api/#idl-def-AnalyserNode).\n\t\t *          Extracts FFT or Waveform data from the incoming signal.\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @param {String=} type The return type of the analysis, either \"fft\", or \"waveform\".\n\t\t *  @param {Number=} size The size of the FFT. Value must be a power of\n\t\t *                       two in the range 32 to 32768.\n\t\t */\n\t    Tone.Analyser = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'type',\n\t            'size'\n\t        ], Tone.Analyser);\n\t        Tone.AudioNode.call(this);\n\t        /**\n\t\t\t *  The analyser node.\n\t\t\t *  @private\n\t\t\t *  @type {AnalyserNode}\n\t\t\t */\n\t        this._analyser = this.input = this.output = this.context.createAnalyser();\n\t        /**\n\t\t\t *  The analysis type\n\t\t\t *  @type {String}\n\t\t\t *  @private\n\t\t\t */\n\t        this._type = options.type;\n\t        /**\n\t\t\t *  The buffer that the FFT data is written to\n\t\t\t *  @type {TypedArray}\n\t\t\t *  @private\n\t\t\t */\n\t        this._buffer = null;\n\t        //set the values initially\n\t        this.size = options.size;\n\t        this.type = options.type;\n\t    };\n\t    Tone.extend(Tone.Analyser, Tone.AudioNode);\n\t    /**\n\t\t *  The default values.\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.Analyser.defaults = {\n\t        'size': 1024,\n\t        'type': 'fft',\n\t        'smoothing': 0.8\n\t    };\n\t    /**\n\t\t *  Possible return types of analyser.getValue()\n\t\t *  @enum {String}\n\t\t */\n\t    Tone.Analyser.Type = {\n\t        Waveform: 'waveform',\n\t        FFT: 'fft'\n\t    };\n\t    /**\n\t\t *  Run the analysis given the current settings and return the\n\t\t *  result as a TypedArray.\n\t\t *  @returns {TypedArray}\n\t\t */\n\t    Tone.Analyser.prototype.getValue = function () {\n\t        if (this._type === Tone.Analyser.Type.FFT) {\n\t            this._analyser.getFloatFrequencyData(this._buffer);\n\t        } else if (this._type === Tone.Analyser.Type.Waveform) {\n\t            this._analyser.getFloatTimeDomainData(this._buffer);\n\t        }\n\t        return this._buffer;\n\t    };\n\t    /**\n\t\t *  The size of analysis. This must be a power of two in the range 32 to 32768.\n\t\t *  @memberOf Tone.Analyser#\n\t\t *  @type {Number}\n\t\t *  @name size\n\t\t */\n\t    Object.defineProperty(Tone.Analyser.prototype, 'size', {\n\t        get: function () {\n\t            return this._analyser.frequencyBinCount;\n\t        },\n\t        set: function (size) {\n\t            this._analyser.fftSize = size * 2;\n\t            this._buffer = new Float32Array(size);\n\t        }\n\t    });\n\t    /**\n\t\t *  The analysis function returned by analyser.getValue(), either \"fft\" or \"waveform\".\n\t\t *  @memberOf Tone.Analyser#\n\t\t *  @type {String}\n\t\t *  @name type\n\t\t */\n\t    Object.defineProperty(Tone.Analyser.prototype, 'type', {\n\t        get: function () {\n\t            return this._type;\n\t        },\n\t        set: function (type) {\n\t            if (type !== Tone.Analyser.Type.Waveform && type !== Tone.Analyser.Type.FFT) {\n\t                throw new TypeError('Tone.Analyser: invalid type: ' + type);\n\t            }\n\t            this._type = type;\n\t        }\n\t    });\n\t    /**\n\t\t *  0 represents no time averaging with the last analysis frame.\n\t\t *  @memberOf Tone.Analyser#\n\t\t *  @type {NormalRange}\n\t\t *  @name smoothing\n\t\t */\n\t    Object.defineProperty(Tone.Analyser.prototype, 'smoothing', {\n\t        get: function () {\n\t            return this._analyser.smoothingTimeConstant;\n\t        },\n\t        set: function (val) {\n\t            this._analyser.smoothingTimeConstant = val;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return  {Tone.Analyser}  this\n\t\t */\n\t    Tone.Analyser.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._analyser.disconnect();\n\t        this._analyser = null;\n\t        this._buffer = null;\n\t    };\n\t    return Tone.Analyser;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Compressor is a thin wrapper around the Web Audio\n\t\t *         [DynamicsCompressorNode](http://webaudio.github.io/web-audio-api/#the-dynamicscompressornode-interface).\n\t\t *         Compression reduces the volume of loud sounds or amplifies quiet sounds\n\t\t *         by narrowing or \"compressing\" an audio signal's dynamic range.\n\t\t *         Read more on [Wikipedia](https://en.wikipedia.org/wiki/Dynamic_range_compression).\n\t\t *\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @constructor\n\t\t *  @param {Decibels|Object} [threshold] The value above which the compression starts to be applied.\n\t\t *  @param {Positive} [ratio] The gain reduction ratio.\n\t\t *  @example\n\t\t * var comp = new Tone.Compressor(-30, 3);\n\t\t */\n\t    Tone.Compressor = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'threshold',\n\t            'ratio'\n\t        ], Tone.Compressor);\n\t        Tone.AudioNode.call(this);\n\t        /**\n\t\t\t *  the compressor node\n\t\t\t *  @type {DynamicsCompressorNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._compressor = this.input = this.output = this.context.createDynamicsCompressor();\n\t        /**\n\t\t\t *  the threshold vaue\n\t\t\t *  @type {Decibels}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.threshold = new Tone.Param({\n\t            'param': this._compressor.threshold,\n\t            'units': Tone.Type.Decibels,\n\t            'convert': false\n\t        });\n\t        /**\n\t\t\t *  The attack parameter\n\t\t\t *  @type {Time}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.attack = new Tone.Param(this._compressor.attack, Tone.Type.Time);\n\t        /**\n\t\t\t *  The release parameter\n\t\t\t *  @type {Time}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.release = new Tone.Param(this._compressor.release, Tone.Type.Time);\n\t        /**\n\t\t\t *  The knee parameter\n\t\t\t *  @type {Decibels}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.knee = new Tone.Param({\n\t            'param': this._compressor.knee,\n\t            'units': Tone.Type.Decibels,\n\t            'convert': false\n\t        });\n\t        /**\n\t\t\t *  The ratio value\n\t\t\t *  @type {Number}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.ratio = new Tone.Param({\n\t            'param': this._compressor.ratio,\n\t            'convert': false\n\t        });\n\t        //set the defaults\n\t        this._readOnly([\n\t            'knee',\n\t            'release',\n\t            'attack',\n\t            'ratio',\n\t            'threshold'\n\t        ]);\n\t        this.set(options);\n\t    };\n\t    Tone.extend(Tone.Compressor, Tone.AudioNode);\n\t    /**\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Compressor.defaults = {\n\t        'ratio': 12,\n\t        'threshold': -24,\n\t        'release': 0.25,\n\t        'attack': 0.003,\n\t        'knee': 30\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.Compressor} this\n\t\t */\n\t    Tone.Compressor.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._writable([\n\t            'knee',\n\t            'release',\n\t            'attack',\n\t            'ratio',\n\t            'threshold'\n\t        ]);\n\t        this._compressor.disconnect();\n\t        this._compressor = null;\n\t        this.attack.dispose();\n\t        this.attack = null;\n\t        this.release.dispose();\n\t        this.release = null;\n\t        this.threshold.dispose();\n\t        this.threshold = null;\n\t        this.ratio.dispose();\n\t        this.ratio = null;\n\t        this.knee.dispose();\n\t        this.knee = null;\n\t        return this;\n\t    };\n\t    return Tone.Compressor;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Add a signal and a number or two signals. When no value is\n\t\t *         passed into the constructor, Tone.Add will sum <code>input[0]</code>\n\t\t *         and <code>input[1]</code>. If a value is passed into the constructor, \n\t\t *         the it will be added to the input.\n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone.Signal}\n\t\t *  @param {number=} value If no value is provided, Tone.Add will sum the first\n\t\t *                         and second inputs. \n\t\t *  @example\n\t\t * var signal = new Tone.Signal(2);\n\t\t * var add = new Tone.Add(2);\n\t\t * signal.connect(add);\n\t\t * //the output of add equals 4\n\t\t *  @example\n\t\t * //if constructed with no arguments\n\t\t * //it will add the first and second inputs\n\t\t * var add = new Tone.Add();\n\t\t * var sig0 = new Tone.Signal(3).connect(add, 0, 0);\n\t\t * var sig1 = new Tone.Signal(4).connect(add, 0, 1);\n\t\t * //the output of add equals 7. \n\t\t */\n\t    Tone.Add = function (value) {\n\t        Tone.Signal.call(this);\n\t        this.createInsOuts(2, 0);\n\t        /**\n\t\t\t *  the summing node\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._sum = this.input[0] = this.input[1] = this.output = new Tone.Gain();\n\t        /**\n\t\t\t *  @private\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t        this._param = this.input[1] = new Tone.Signal(value);\n\t        this._param.connect(this._sum);\n\t    };\n\t    Tone.extend(Tone.Add, Tone.Signal);\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Add} this\n\t\t */\n\t    Tone.Add.prototype.dispose = function () {\n\t        Tone.Signal.prototype.dispose.call(this);\n\t        this._sum.dispose();\n\t        this._sum = null;\n\t        return this;\n\t    };\n\t    return Tone.Add;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Multiply two incoming signals. Or, if a number is given in the constructor, \n\t\t *          multiplies the incoming signal by that value. \n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Signal}\n\t\t *  @param {number=} value Constant value to multiple. If no value is provided,\n\t\t *                         it will return the product of the first and second inputs\n\t\t *  @example\n\t\t * var mult = new Tone.Multiply();\n\t\t * var sigA = new Tone.Signal(3);\n\t\t * var sigB = new Tone.Signal(4);\n\t\t * sigA.connect(mult, 0, 0);\n\t\t * sigB.connect(mult, 0, 1);\n\t\t * //output of mult is 12.\n\t\t *  @example\n\t\t * var mult = new Tone.Multiply(10);\n\t\t * var sig = new Tone.Signal(2).connect(mult);\n\t\t * //the output of mult is 20. \n\t\t */\n\t    Tone.Multiply = function (value) {\n\t        Tone.Signal.call(this);\n\t        this.createInsOuts(2, 0);\n\t        /**\n\t\t\t *  the input node is the same as the output node\n\t\t\t *  it is also the GainNode which handles the scaling of incoming signal\n\t\t\t *  \n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._mult = this.input[0] = this.output = new Tone.Gain();\n\t        /**\n\t\t\t *  the scaling parameter\n\t\t\t *  @type {AudioParam}\n\t\t\t *  @private\n\t\t\t */\n\t        this._param = this.input[1] = this.output.gain;\n\t        this._param.value = Tone.defaultArg(value, 0);\n\t    };\n\t    Tone.extend(Tone.Multiply, Tone.Signal);\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.Multiply} this\n\t\t */\n\t    Tone.Multiply.prototype.dispose = function () {\n\t        Tone.Signal.prototype.dispose.call(this);\n\t        this._mult.dispose();\n\t        this._mult = null;\n\t        this._param = null;\n\t        return this;\n\t    };\n\t    return Tone.Multiply;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Negate the incoming signal. i.e. an input signal of 10 will output -10\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @example\n\t\t * var neg = new Tone.Negate();\n\t\t * var sig = new Tone.Signal(-2).connect(neg);\n\t\t * //output of neg is positive 2. \n\t\t */\n\t    Tone.Negate = function () {\n\t        Tone.SignalBase.call(this);\n\t        /**\n\t\t\t *  negation is done by multiplying by -1\n\t\t\t *  @type {Tone.Multiply}\n\t\t\t *  @private\n\t\t\t */\n\t        this._multiply = this.input = this.output = new Tone.Multiply(-1);\n\t    };\n\t    Tone.extend(Tone.Negate, Tone.SignalBase);\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.Negate} this\n\t\t */\n\t    Tone.Negate.prototype.dispose = function () {\n\t        Tone.SignalBase.prototype.dispose.call(this);\n\t        this._multiply.dispose();\n\t        this._multiply = null;\n\t        return this;\n\t    };\n\t    return Tone.Negate;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Subtract the signal connected to <code>input[1]</code> from the signal connected \n\t\t *         to <code>input[0]</code>. If an argument is provided in the constructor, the \n\t\t *         signals <code>.value</code> will be subtracted from the incoming signal.\n\t\t *\n\t\t *  @extends {Tone.Signal}\n\t\t *  @constructor\n\t\t *  @param {number=} value The value to subtract from the incoming signal. If the value\n\t\t *                         is omitted, it will subtract the second signal from the first.\n\t\t *  @example\n\t\t * var sub = new Tone.Subtract(1);\n\t\t * var sig = new Tone.Signal(4).connect(sub);\n\t\t * //the output of sub is 3. \n\t\t *  @example\n\t\t * var sub = new Tone.Subtract();\n\t\t * var sigA = new Tone.Signal(10);\n\t\t * var sigB = new Tone.Signal(2.5);\n\t\t * sigA.connect(sub, 0, 0);\n\t\t * sigB.connect(sub, 0, 1);\n\t\t * //output of sub is 7.5\n\t\t */\n\t    Tone.Subtract = function (value) {\n\t        Tone.Signal.call(this);\n\t        this.createInsOuts(2, 0);\n\t        /**\n\t\t\t *  the summing node\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._sum = this.input[0] = this.output = new Tone.Gain();\n\t        /**\n\t\t\t *  negate the input of the second input before connecting it\n\t\t\t *  to the summing node.\n\t\t\t *  @type {Tone.Negate}\n\t\t\t *  @private\n\t\t\t */\n\t        this._neg = new Tone.Negate();\n\t        /**\n\t\t\t *  the node where the value is set\n\t\t\t *  @private\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t        this._param = this.input[1] = new Tone.Signal(value);\n\t        this._param.chain(this._neg, this._sum);\n\t    };\n\t    Tone.extend(Tone.Subtract, Tone.Signal);\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.SignalBase} this\n\t\t */\n\t    Tone.Subtract.prototype.dispose = function () {\n\t        Tone.Signal.prototype.dispose.call(this);\n\t        this._neg.dispose();\n\t        this._neg = null;\n\t        this._sum.disconnect();\n\t        this._sum = null;\n\t        return this;\n\t    };\n\t    return Tone.Subtract;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  GreaterThanZero outputs 1 when the input is strictly greater than zero\n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @example\n\t\t * var gt0 = new Tone.GreaterThanZero();\n\t\t * var sig = new Tone.Signal(0.01).connect(gt0);\n\t\t * //the output of gt0 is 1. \n\t\t * sig.value = 0;\n\t\t * //the output of gt0 is 0. \n\t\t */\n\t    Tone.GreaterThanZero = function () {\n\t        Tone.SignalBase.call(this);\n\t        /**\n\t\t\t *  @type {Tone.WaveShaper}\n\t\t\t *  @private\n\t\t\t */\n\t        this._thresh = this.output = new Tone.WaveShaper(function (val) {\n\t            if (val <= 0) {\n\t                return 0;\n\t            } else {\n\t                return 1;\n\t            }\n\t        }, 127);\n\t        /**\n\t\t\t *  scale the first thresholded signal by a large value.\n\t\t\t *  this will help with values which are very close to 0\n\t\t\t *  @type {Tone.Multiply}\n\t\t\t *  @private\n\t\t\t */\n\t        this._scale = this.input = new Tone.Multiply(10000);\n\t        //connections\n\t        this._scale.connect(this._thresh);\n\t    };\n\t    Tone.extend(Tone.GreaterThanZero, Tone.SignalBase);\n\t    /**\n\t\t *  dispose method\n\t\t *  @returns {Tone.GreaterThanZero} this\n\t\t */\n\t    Tone.GreaterThanZero.prototype.dispose = function () {\n\t        Tone.SignalBase.prototype.dispose.call(this);\n\t        this._scale.dispose();\n\t        this._scale = null;\n\t        this._thresh.dispose();\n\t        this._thresh = null;\n\t        return this;\n\t    };\n\t    return Tone.GreaterThanZero;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Output 1 if the signal is greater than the value, otherwise outputs 0.\n\t\t *          can compare two signals or a signal and a number. \n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone.Signal}\n\t\t *  @param {number} [value=0] the value to compare to the incoming signal\n\t\t *  @example\n\t\t * var gt = new Tone.GreaterThan(2);\n\t\t * var sig = new Tone.Signal(4).connect(gt);\n\t\t * //output of gt is equal 1. \n\t\t */\n\t    Tone.GreaterThan = function (value) {\n\t        Tone.Signal.call(this);\n\t        this.createInsOuts(2, 0);\n\t        /**\n\t\t\t *  subtract the amount from the incoming signal\n\t\t\t *  @type {Tone.Subtract}\n\t\t\t *  @private\n\t\t\t */\n\t        this._param = this.input[0] = new Tone.Subtract(value);\n\t        this.input[1] = this._param.input[1];\n\t        /**\n\t\t\t *  compare that amount to zero\n\t\t\t *  @type {Tone.GreaterThanZero}\n\t\t\t *  @private\n\t\t\t */\n\t        this._gtz = this.output = new Tone.GreaterThanZero();\n\t        //connect\n\t        this._param.connect(this._gtz);\n\t    };\n\t    Tone.extend(Tone.GreaterThan, Tone.Signal);\n\t    /**\n\t\t *  dispose method\n\t\t *  @returns {Tone.GreaterThan} this\n\t\t */\n\t    Tone.GreaterThan.prototype.dispose = function () {\n\t        Tone.Signal.prototype.dispose.call(this);\n\t        this._gtz.dispose();\n\t        this._gtz = null;\n\t        return this;\n\t    };\n\t    return Tone.GreaterThan;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Return the absolute value of an incoming signal. \n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @example\n\t\t * var signal = new Tone.Signal(-1);\n\t\t * var abs = new Tone.Abs();\n\t\t * signal.connect(abs);\n\t\t * //the output of abs is 1. \n\t\t */\n\t    Tone.Abs = function () {\n\t        Tone.SignalBase.call(this);\n\t        /**\n\t\t\t *  @type {Tone.LessThan}\n\t\t\t *  @private\n\t\t\t */\n\t        this._abs = this.input = this.output = new Tone.WaveShaper(function (val) {\n\t            if (val === 0) {\n\t                return 0;\n\t            } else {\n\t                return Math.abs(val);\n\t            }\n\t        }, 127);\n\t    };\n\t    Tone.extend(Tone.Abs, Tone.SignalBase);\n\t    /**\n\t\t *  dispose method\n\t\t *  @returns {Tone.Abs} this\n\t\t */\n\t    Tone.Abs.prototype.dispose = function () {\n\t        Tone.SignalBase.prototype.dispose.call(this);\n\t        this._abs.dispose();\n\t        this._abs = null;\n\t        return this;\n\t    };\n\t    return Tone.Abs;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Signal-rate modulo operator. Only works in AudioRange [-1, 1] and for modulus\n\t\t *         values in the NormalRange. \n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @param {NormalRange} modulus The modulus to apply.\n\t\t *  @example\n\t\t * var mod = new Tone.Modulo(0.2)\n\t\t * var sig = new Tone.Signal(0.5).connect(mod);\n\t\t * //mod outputs 0.1\n\t\t */\n\t    Tone.Modulo = function (modulus) {\n\t        Tone.SignalBase.call(this);\n\t        this.createInsOuts(1, 0);\n\t        /**\n\t\t\t *  A waveshaper gets the integer multiple of \n\t\t\t *  the input signal and the modulus.\n\t\t\t *  @private\n\t\t\t *  @type {Tone.WaveShaper}\n\t\t\t */\n\t        this._shaper = new Tone.WaveShaper(Math.pow(2, 16));\n\t        /**\n\t\t\t *  the integer multiple is multiplied by the modulus\n\t\t\t *  @type  {Tone.Multiply}\n\t\t\t *  @private\n\t\t\t */\n\t        this._multiply = new Tone.Multiply();\n\t        /**\n\t\t\t *  and subtracted from the input signal\n\t\t\t *  @type  {Tone.Subtract}\n\t\t\t *  @private\n\t\t\t */\n\t        this._subtract = this.output = new Tone.Subtract();\n\t        /**\n\t\t\t *  the modulus signal\n\t\t\t *  @type  {Tone.Signal}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modSignal = new Tone.Signal(modulus);\n\t        //connections\n\t        this.input.fan(this._shaper, this._subtract);\n\t        this._modSignal.connect(this._multiply, 0, 0);\n\t        this._shaper.connect(this._multiply, 0, 1);\n\t        this._multiply.connect(this._subtract, 0, 1);\n\t        this._setWaveShaper(modulus);\n\t    };\n\t    Tone.extend(Tone.Modulo, Tone.SignalBase);\n\t    /**\n\t\t *  @param  {number}  mod  the modulus to apply\n\t\t *  @private\n\t\t */\n\t    Tone.Modulo.prototype._setWaveShaper = function (mod) {\n\t        this._shaper.setMap(function (val) {\n\t            var multiple = Math.floor((val + 0.0001) / mod);\n\t            return multiple;\n\t        });\n\t    };\n\t    /**\n\t\t * The modulus value.\n\t\t * @memberOf Tone.Modulo#\n\t\t * @type {NormalRange}\n\t\t * @name value\n\t\t */\n\t    Object.defineProperty(Tone.Modulo.prototype, 'value', {\n\t        get: function () {\n\t            return this._modSignal.value;\n\t        },\n\t        set: function (mod) {\n\t            this._modSignal.value = mod;\n\t            this._setWaveShaper(mod);\n\t        }\n\t    });\n\t    /**\n\t\t * clean up\n\t\t *  @returns {Tone.Modulo} this\n\t\t */\n\t    Tone.Modulo.prototype.dispose = function () {\n\t        Tone.SignalBase.prototype.dispose.call(this);\n\t        this._shaper.dispose();\n\t        this._shaper = null;\n\t        this._multiply.dispose();\n\t        this._multiply = null;\n\t        this._subtract.dispose();\n\t        this._subtract = null;\n\t        this._modSignal.dispose();\n\t        this._modSignal = null;\n\t        return this;\n\t    };\n\t    return Tone.Modulo;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class AudioToGain converts an input in AudioRange [-1,1] to NormalRange [0,1]. \n\t\t *         See Tone.GainToAudio.\n\t\t *\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @constructor\n\t\t *  @example\n\t\t *  var a2g = new Tone.AudioToGain();\n\t\t */\n\t    Tone.AudioToGain = function () {\n\t        Tone.SignalBase.call(this);\n\t        /**\n\t\t\t *  @type {WaveShaperNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._norm = this.input = this.output = new Tone.WaveShaper(function (x) {\n\t            return (x + 1) / 2;\n\t        });\n\t    };\n\t    Tone.extend(Tone.AudioToGain, Tone.SignalBase);\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.AudioToGain} this\n\t\t */\n\t    Tone.AudioToGain.prototype.dispose = function () {\n\t        Tone.SignalBase.prototype.dispose.call(this);\n\t        this._norm.dispose();\n\t        this._norm = null;\n\t        return this;\n\t    };\n\t    return Tone.AudioToGain;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Evaluate an expression at audio rate. <br><br>\n\t\t *         Parsing code modified from https://code.google.com/p/tapdigit/\n\t\t *         Copyright 2011 2012 Ariya Hidayat, New BSD License\n\t\t *\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @constructor\n\t\t *  @param {string} expr the expression to generate\n\t\t *  @example\n\t\t * //adds the signals from input[0] and input[1].\n\t\t * var expr = new Tone.Expr(\"$0 + $1\");\n\t\t */\n\t    Tone.Expr = function () {\n\t        Tone.SignalBase.call(this);\n\t        var expr = this._replacements(Array.prototype.slice.call(arguments));\n\t        var inputCount = this._parseInputs(expr);\n\t        /**\n\t\t\t *  hold onto all of the nodes for disposal\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._nodes = [];\n\t        /**\n\t\t\t *  The inputs. The length is determined by the expression. \n\t\t\t *  @type {Array}\n\t\t\t */\n\t        this.input = new Array(inputCount);\n\t        //create a gain for each input\n\t        for (var i = 0; i < inputCount; i++) {\n\t            this.input[i] = this.context.createGain();\n\t        }\n\t        //parse the syntax tree\n\t        var tree = this._parseTree(expr);\n\t        //evaluate the results\n\t        var result;\n\t        try {\n\t            result = this._eval(tree);\n\t        } catch (e) {\n\t            this._disposeNodes();\n\t            throw new Error('Tone.Expr: Could evaluate expression: ' + expr);\n\t        }\n\t        /**\n\t\t\t *  The output node is the result of the expression\n\t\t\t *  @type {Tone}\n\t\t\t */\n\t        this.output = result;\n\t    };\n\t    Tone.extend(Tone.Expr, Tone.SignalBase);\n\t    //some helpers to cut down the amount of code\n\t    function applyBinary(Constructor, args, self) {\n\t        var op = new Constructor();\n\t        self._eval(args[0]).connect(op, 0, 0);\n\t        self._eval(args[1]).connect(op, 0, 1);\n\t        return op;\n\t    }\n\t    function applyUnary(Constructor, args, self) {\n\t        var op = new Constructor();\n\t        self._eval(args[0]).connect(op, 0, 0);\n\t        return op;\n\t    }\n\t    function getNumber(arg) {\n\t        return arg ? parseFloat(arg) : undefined;\n\t    }\n\t    function literalNumber(arg) {\n\t        return arg && arg.args ? parseFloat(arg.args) : undefined;\n\t    }\n\t    /*\n\t\t *  the Expressions that Tone.Expr can parse.\n\t\t *\n\t\t *  each expression belongs to a group and contains a regexp \n\t\t *  for selecting the operator as well as that operators method\n\t\t *  \n\t\t *  @type {Object}\n\t\t *  @private\n\t\t */\n\t    Tone.Expr._Expressions = {\n\t        //values\n\t        'value': {\n\t            'signal': {\n\t                regexp: /^\\d+\\.\\d+|^\\d+/,\n\t                method: function (arg) {\n\t                    var sig = new Tone.Signal(getNumber(arg));\n\t                    return sig;\n\t                }\n\t            },\n\t            'input': {\n\t                regexp: /^\\$\\d/,\n\t                method: function (arg, self) {\n\t                    return self.input[getNumber(arg.substr(1))];\n\t                }\n\t            }\n\t        },\n\t        //syntactic glue\n\t        'glue': {\n\t            '(': { regexp: /^\\(/ },\n\t            ')': { regexp: /^\\)/ },\n\t            ',': { regexp: /^,/ }\n\t        },\n\t        //functions\n\t        'func': {\n\t            'abs': {\n\t                regexp: /^abs/,\n\t                method: applyUnary.bind(this, Tone.Abs)\n\t            },\n\t            'mod': {\n\t                regexp: /^mod/,\n\t                method: function (args, self) {\n\t                    var modulus = literalNumber(args[1]);\n\t                    var op = new Tone.Modulo(modulus);\n\t                    self._eval(args[0]).connect(op);\n\t                    return op;\n\t                }\n\t            },\n\t            'pow': {\n\t                regexp: /^pow/,\n\t                method: function (args, self) {\n\t                    var exp = literalNumber(args[1]);\n\t                    var op = new Tone.Pow(exp);\n\t                    self._eval(args[0]).connect(op);\n\t                    return op;\n\t                }\n\t            },\n\t            'a2g': {\n\t                regexp: /^a2g/,\n\t                method: function (args, self) {\n\t                    var op = new Tone.AudioToGain();\n\t                    self._eval(args[0]).connect(op);\n\t                    return op;\n\t                }\n\t            }\n\t        },\n\t        //binary expressions\n\t        'binary': {\n\t            '+': {\n\t                regexp: /^\\+/,\n\t                precedence: 1,\n\t                method: applyBinary.bind(this, Tone.Add)\n\t            },\n\t            '-': {\n\t                regexp: /^\\-/,\n\t                precedence: 1,\n\t                method: function (args, self) {\n\t                    //both unary and binary op\n\t                    if (args.length === 1) {\n\t                        return applyUnary(Tone.Negate, args, self);\n\t                    } else {\n\t                        return applyBinary(Tone.Subtract, args, self);\n\t                    }\n\t                }\n\t            },\n\t            '*': {\n\t                regexp: /^\\*/,\n\t                precedence: 0,\n\t                method: applyBinary.bind(this, Tone.Multiply)\n\t            }\n\t        },\n\t        //unary expressions\n\t        'unary': {\n\t            '-': {\n\t                regexp: /^\\-/,\n\t                method: applyUnary.bind(this, Tone.Negate)\n\t            },\n\t            '!': {\n\t                regexp: /^\\!/,\n\t                method: applyUnary.bind(this, Tone.NOT)\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  @param   {string} expr the expression string\n\t\t *  @return  {number}      the input count\n\t\t *  @private\n\t\t */\n\t    Tone.Expr.prototype._parseInputs = function (expr) {\n\t        var inputArray = expr.match(/\\$\\d/g);\n\t        var inputMax = 0;\n\t        if (inputArray !== null) {\n\t            for (var i = 0; i < inputArray.length; i++) {\n\t                var inputNum = parseInt(inputArray[i].substr(1)) + 1;\n\t                inputMax = Math.max(inputMax, inputNum);\n\t            }\n\t        }\n\t        return inputMax;\n\t    };\n\t    /**\n\t\t *  @param   {Array} args \tan array of arguments\n\t\t *  @return  {string} the results of the replacements being replaced\n\t\t *  @private\n\t\t */\n\t    Tone.Expr.prototype._replacements = function (args) {\n\t        var expr = args.shift();\n\t        for (var i = 0; i < args.length; i++) {\n\t            expr = expr.replace(/\\%/i, args[i]);\n\t        }\n\t        return expr;\n\t    };\n\t    /**\n\t\t *  tokenize the expression based on the Expressions object\n\t\t *  @param   {string} expr \n\t\t *  @return  {Object}      returns two methods on the tokenized list, next and peek\n\t\t *  @private\n\t\t */\n\t    Tone.Expr.prototype._tokenize = function (expr) {\n\t        var position = -1;\n\t        var tokens = [];\n\t        while (expr.length > 0) {\n\t            expr = expr.trim();\n\t            var token = getNextToken(expr);\n\t            tokens.push(token);\n\t            expr = expr.substr(token.value.length);\n\t        }\n\t        function getNextToken(expr) {\n\t            for (var type in Tone.Expr._Expressions) {\n\t                var group = Tone.Expr._Expressions[type];\n\t                for (var opName in group) {\n\t                    var op = group[opName];\n\t                    var reg = op.regexp;\n\t                    var match = expr.match(reg);\n\t                    if (match !== null) {\n\t                        return {\n\t                            type: type,\n\t                            value: match[0],\n\t                            method: op.method\n\t                        };\n\t                    }\n\t                }\n\t            }\n\t            throw new SyntaxError('Tone.Expr: Unexpected token ' + expr);\n\t        }\n\t        return {\n\t            next: function () {\n\t                return tokens[++position];\n\t            },\n\t            peek: function () {\n\t                return tokens[position + 1];\n\t            }\n\t        };\n\t    };\n\t    /**\n\t\t *  recursively parse the string expression into a syntax tree\n\t\t *  \n\t\t *  @param   {string} expr \n\t\t *  @return  {Object}\n\t\t *  @private\n\t\t */\n\t    Tone.Expr.prototype._parseTree = function (expr) {\n\t        var lexer = this._tokenize(expr);\n\t        var isUndef = Tone.isUndef.bind(this);\n\t        function matchSyntax(token, syn) {\n\t            return !isUndef(token) && token.type === 'glue' && token.value === syn;\n\t        }\n\t        function matchGroup(token, groupName, prec) {\n\t            var ret = false;\n\t            var group = Tone.Expr._Expressions[groupName];\n\t            if (!isUndef(token)) {\n\t                for (var opName in group) {\n\t                    var op = group[opName];\n\t                    if (op.regexp.test(token.value)) {\n\t                        if (!isUndef(prec)) {\n\t                            if (op.precedence === prec) {\n\t                                return true;\n\t                            }\n\t                        } else {\n\t                            return true;\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t            return ret;\n\t        }\n\t        function parseExpression(precedence) {\n\t            if (isUndef(precedence)) {\n\t                precedence = 5;\n\t            }\n\t            var expr;\n\t            if (precedence < 0) {\n\t                expr = parseUnary();\n\t            } else {\n\t                expr = parseExpression(precedence - 1);\n\t            }\n\t            var token = lexer.peek();\n\t            while (matchGroup(token, 'binary', precedence)) {\n\t                token = lexer.next();\n\t                expr = {\n\t                    operator: token.value,\n\t                    method: token.method,\n\t                    args: [\n\t                        expr,\n\t                        parseExpression(precedence - 1)\n\t                    ]\n\t                };\n\t                token = lexer.peek();\n\t            }\n\t            return expr;\n\t        }\n\t        function parseUnary() {\n\t            var token, expr;\n\t            token = lexer.peek();\n\t            if (matchGroup(token, 'unary')) {\n\t                token = lexer.next();\n\t                expr = parseUnary();\n\t                return {\n\t                    operator: token.value,\n\t                    method: token.method,\n\t                    args: [expr]\n\t                };\n\t            }\n\t            return parsePrimary();\n\t        }\n\t        function parsePrimary() {\n\t            var token, expr;\n\t            token = lexer.peek();\n\t            if (isUndef(token)) {\n\t                throw new SyntaxError('Tone.Expr: Unexpected termination of expression');\n\t            }\n\t            if (token.type === 'func') {\n\t                token = lexer.next();\n\t                return parseFunctionCall(token);\n\t            }\n\t            if (token.type === 'value') {\n\t                token = lexer.next();\n\t                return {\n\t                    method: token.method,\n\t                    args: token.value\n\t                };\n\t            }\n\t            if (matchSyntax(token, '(')) {\n\t                lexer.next();\n\t                expr = parseExpression();\n\t                token = lexer.next();\n\t                if (!matchSyntax(token, ')')) {\n\t                    throw new SyntaxError('Expected )');\n\t                }\n\t                return expr;\n\t            }\n\t            throw new SyntaxError('Tone.Expr: Parse error, cannot process token ' + token.value);\n\t        }\n\t        function parseFunctionCall(func) {\n\t            var token, args = [];\n\t            token = lexer.next();\n\t            if (!matchSyntax(token, '(')) {\n\t                throw new SyntaxError('Tone.Expr: Expected ( in a function call \"' + func.value + '\"');\n\t            }\n\t            token = lexer.peek();\n\t            if (!matchSyntax(token, ')')) {\n\t                args = parseArgumentList();\n\t            }\n\t            token = lexer.next();\n\t            if (!matchSyntax(token, ')')) {\n\t                throw new SyntaxError('Tone.Expr: Expected ) in a function call \"' + func.value + '\"');\n\t            }\n\t            return {\n\t                method: func.method,\n\t                args: args,\n\t                name: name\n\t            };\n\t        }\n\t        function parseArgumentList() {\n\t            var token, expr, args = [];\n\t            while (true) {\n\t                expr = parseExpression();\n\t                if (isUndef(expr)) {\n\t                    // TODO maybe throw exception?\n\t                    break;\n\t                }\n\t                args.push(expr);\n\t                token = lexer.peek();\n\t                if (!matchSyntax(token, ',')) {\n\t                    break;\n\t                }\n\t                lexer.next();\n\t            }\n\t            return args;\n\t        }\n\t        return parseExpression();\n\t    };\n\t    /**\n\t\t *  recursively evaluate the expression tree\n\t\t *  @param   {Object} tree \n\t\t *  @return  {AudioNode}      the resulting audio node from the expression\n\t\t *  @private\n\t\t */\n\t    Tone.Expr.prototype._eval = function (tree) {\n\t        if (!Tone.isUndef(tree)) {\n\t            var node = tree.method(tree.args, this);\n\t            this._nodes.push(node);\n\t            return node;\n\t        }\n\t    };\n\t    /**\n\t\t *  dispose all the nodes\n\t\t *  @private\n\t\t */\n\t    Tone.Expr.prototype._disposeNodes = function () {\n\t        for (var i = 0; i < this._nodes.length; i++) {\n\t            var node = this._nodes[i];\n\t            if (Tone.isFunction(node.dispose)) {\n\t                node.dispose();\n\t            } else if (Tone.isFunction(node.disconnect)) {\n\t                node.disconnect();\n\t            }\n\t            node = null;\n\t            this._nodes[i] = null;\n\t        }\n\t        this._nodes = null;\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t */\n\t    Tone.Expr.prototype.dispose = function () {\n\t        Tone.SignalBase.prototype.dispose.call(this);\n\t        this._disposeNodes();\n\t    };\n\t    return Tone.Expr;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Convert an incoming signal between 0, 1 to an equal power gain scale.\n\t\t *\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @constructor\n\t\t *  @example\n\t\t * var eqPowGain = new Tone.EqualPowerGain();\n\t\t */\n\t    Tone.EqualPowerGain = function () {\n\t        Tone.SignalBase.call(this);\n\t        /**\n\t\t\t *  @type {Tone.WaveShaper}\n\t\t\t *  @private\n\t\t\t */\n\t        this._eqPower = this.input = this.output = new Tone.WaveShaper(function (val) {\n\t            if (Math.abs(val) < 0.001) {\n\t                //should output 0 when input is 0\n\t                return 0;\n\t            } else {\n\t                return Tone.equalPowerScale(val);\n\t            }\n\t        }.bind(this), 4096);\n\t    };\n\t    Tone.extend(Tone.EqualPowerGain, Tone.SignalBase);\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.EqualPowerGain} this\n\t\t */\n\t    Tone.EqualPowerGain.prototype.dispose = function () {\n\t        Tone.SignalBase.prototype.dispose.call(this);\n\t        this._eqPower.dispose();\n\t        this._eqPower = null;\n\t        return this;\n\t    };\n\t    return Tone.EqualPowerGain;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t * @class  Tone.Crossfade provides equal power fading between two inputs.\n\t\t *         More on crossfading technique [here](https://en.wikipedia.org/wiki/Fade_(audio_engineering)#Crossfading).\n\t\t *\n\t\t * @constructor\n\t\t * @extends {Tone.AudioNode}\n\t\t * @param {NormalRange} [initialFade=0.5]\n\t\t * @example\n\t\t * var crossFade = new Tone.CrossFade(0.5);\n\t\t * //connect effect A to crossfade from\n\t\t * //effect output 0 to crossfade input 0\n\t\t * effectA.connect(crossFade, 0, 0);\n\t\t * //connect effect B to crossfade from\n\t\t * //effect output 0 to crossfade input 1\n\t\t * effectB.connect(crossFade, 0, 1);\n\t\t * crossFade.fade.value = 0;\n\t\t * // ^ only effectA is output\n\t\t * crossFade.fade.value = 1;\n\t\t * // ^ only effectB is output\n\t\t * crossFade.fade.value = 0.5;\n\t\t * // ^ the two signals are mixed equally.\n\t\t */\n\t    Tone.CrossFade = function (initialFade) {\n\t        Tone.AudioNode.call(this);\n\t        this.createInsOuts(2, 1);\n\t        /**\n\t\t\t *  Alias for <code>input[0]</code>.\n\t\t\t *  @type {Tone.Gain}\n\t\t\t */\n\t        this.a = this.input[0] = new Tone.Gain();\n\t        /**\n\t\t\t *  Alias for <code>input[1]</code>.\n\t\t\t *  @type {Tone.Gain}\n\t\t\t */\n\t        this.b = this.input[1] = new Tone.Gain();\n\t        /**\n\t\t\t * \tThe mix between the two inputs. A fade value of 0\n\t\t\t * \twill output 100% <code>input[0]</code> and\n\t\t\t * \ta value of 1 will output 100% <code>input[1]</code>.\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.fade = new Tone.Signal(Tone.defaultArg(initialFade, 0.5), Tone.Type.NormalRange);\n\t        /**\n\t\t\t *  equal power gain cross fade\n\t\t\t *  @private\n\t\t\t *  @type {Tone.EqualPowerGain}\n\t\t\t */\n\t        this._equalPowerA = new Tone.EqualPowerGain();\n\t        /**\n\t\t\t *  equal power gain cross fade\n\t\t\t *  @private\n\t\t\t *  @type {Tone.EqualPowerGain}\n\t\t\t */\n\t        this._equalPowerB = new Tone.EqualPowerGain();\n\t        /**\n\t\t\t *  invert the incoming signal\n\t\t\t *  @private\n\t\t\t *  @type {Tone}\n\t\t\t */\n\t        this._invert = new Tone.Expr('1 - $0');\n\t        //connections\n\t        this.a.connect(this.output);\n\t        this.b.connect(this.output);\n\t        this.fade.chain(this._equalPowerB, this.b.gain);\n\t        this.fade.chain(this._invert, this._equalPowerA, this.a.gain);\n\t        this._readOnly('fade');\n\t    };\n\t    Tone.extend(Tone.CrossFade, Tone.AudioNode);\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.CrossFade} this\n\t\t */\n\t    Tone.CrossFade.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._writable('fade');\n\t        this._equalPowerA.dispose();\n\t        this._equalPowerA = null;\n\t        this._equalPowerB.dispose();\n\t        this._equalPowerB = null;\n\t        this.fade.dispose();\n\t        this.fade = null;\n\t        this._invert.dispose();\n\t        this._invert = null;\n\t        this.a.dispose();\n\t        this.a = null;\n\t        this.b.dispose();\n\t        this.b = null;\n\t        return this;\n\t    };\n\t    return Tone.CrossFade;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Filter is a filter which allows for all of the same native methods\n\t\t *          as the [BiquadFilterNode](http://webaudio.github.io/web-audio-api/#the-biquadfilternode-interface).\n\t\t *          Tone.Filter has the added ability to set the filter rolloff at -12\n\t\t *          (default), -24 and -48.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @param {Frequency|Object} [frequency] The cutoff frequency of the filter.\n\t\t *  @param {string=} type The type of filter.\n\t\t *  @param {number=} rolloff The drop in decibels per octave after the cutoff frequency.\n\t\t *                            3 choices: -12, -24, and -48\n\t\t *  @example\n\t\t *  var filter = new Tone.Filter(200, \"highpass\");\n\t\t */\n\t    Tone.Filter = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'frequency',\n\t            'type',\n\t            'rolloff'\n\t        ], Tone.Filter);\n\t        Tone.AudioNode.call(this);\n\t        this.createInsOuts(1, 1);\n\t        /**\n\t\t\t *  the filter(s)\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._filters = [];\n\t        /**\n\t\t\t *  The cutoff frequency of the filter.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The detune parameter\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = new Tone.Signal(0, Tone.Type.Cents);\n\t        /**\n\t\t\t *  The gain of the filter, only used in certain filter types\n\t\t\t *  @type {Number}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.gain = new Tone.Signal({\n\t            'value': options.gain,\n\t            'convert': false\n\t        });\n\t        /**\n\t\t\t *  The Q or Quality of the filter\n\t\t\t *  @type {Positive}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.Q = new Tone.Signal(options.Q);\n\t        /**\n\t\t\t *  the type of the filter\n\t\t\t *  @type {string}\n\t\t\t *  @private\n\t\t\t */\n\t        this._type = options.type;\n\t        /**\n\t\t\t *  the rolloff value of the filter\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._rolloff = options.rolloff;\n\t        //set the rolloff;\n\t        this.rolloff = options.rolloff;\n\t        this._readOnly([\n\t            'detune',\n\t            'frequency',\n\t            'gain',\n\t            'Q'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.Filter, Tone.AudioNode);\n\t    /**\n\t\t *  the default parameters\n\t\t *\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Filter.defaults = {\n\t        'type': 'lowpass',\n\t        'frequency': 350,\n\t        'rolloff': -12,\n\t        'Q': 1,\n\t        'gain': 0\n\t    };\n\t    /**\n\t\t * The type of the filter. Types: \"lowpass\", \"highpass\",\n\t\t * \"bandpass\", \"lowshelf\", \"highshelf\", \"notch\", \"allpass\", or \"peaking\".\n\t\t * @memberOf Tone.Filter#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.Filter.prototype, 'type', {\n\t        get: function () {\n\t            return this._type;\n\t        },\n\t        set: function (type) {\n\t            var types = [\n\t                'lowpass',\n\t                'highpass',\n\t                'bandpass',\n\t                'lowshelf',\n\t                'highshelf',\n\t                'notch',\n\t                'allpass',\n\t                'peaking'\n\t            ];\n\t            if (types.indexOf(type) === -1) {\n\t                throw new TypeError('Tone.Filter: invalid type ' + type);\n\t            }\n\t            this._type = type;\n\t            for (var i = 0; i < this._filters.length; i++) {\n\t                this._filters[i].type = type;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The rolloff of the filter which is the drop in db\n\t\t * per octave. Implemented internally by cascading filters.\n\t\t * Only accepts the values -12, -24, -48 and -96.\n\t\t * @memberOf Tone.Filter#\n\t\t * @type {number}\n\t\t * @name rolloff\n\t\t */\n\t    Object.defineProperty(Tone.Filter.prototype, 'rolloff', {\n\t        get: function () {\n\t            return this._rolloff;\n\t        },\n\t        set: function (rolloff) {\n\t            rolloff = parseInt(rolloff, 10);\n\t            var possibilities = [\n\t                -12,\n\t                -24,\n\t                -48,\n\t                -96\n\t            ];\n\t            var cascadingCount = possibilities.indexOf(rolloff);\n\t            //check the rolloff is valid\n\t            if (cascadingCount === -1) {\n\t                throw new RangeError('Tone.Filter: rolloff can only be -12, -24, -48 or -96');\n\t            }\n\t            cascadingCount += 1;\n\t            this._rolloff = rolloff;\n\t            //first disconnect the filters and throw them away\n\t            this.input.disconnect();\n\t            for (var i = 0; i < this._filters.length; i++) {\n\t                this._filters[i].disconnect();\n\t                this._filters[i] = null;\n\t            }\n\t            this._filters = new Array(cascadingCount);\n\t            for (var count = 0; count < cascadingCount; count++) {\n\t                var filter = this.context.createBiquadFilter();\n\t                filter.type = this._type;\n\t                this.frequency.connect(filter.frequency);\n\t                this.detune.connect(filter.detune);\n\t                this.Q.connect(filter.Q);\n\t                this.gain.connect(filter.gain);\n\t                this._filters[count] = filter;\n\t            }\n\t            //connect them up\n\t            var connectionChain = [this.input].concat(this._filters).concat([this.output]);\n\t            Tone.connectSeries.apply(Tone, connectionChain);\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return {Tone.Filter} this\n\t\t */\n\t    Tone.Filter.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        for (var i = 0; i < this._filters.length; i++) {\n\t            this._filters[i].disconnect();\n\t            this._filters[i] = null;\n\t        }\n\t        this._filters = null;\n\t        this._writable([\n\t            'detune',\n\t            'frequency',\n\t            'gain',\n\t            'Q'\n\t        ]);\n\t        this.frequency.dispose();\n\t        this.Q.dispose();\n\t        this.frequency = null;\n\t        this.Q = null;\n\t        this.detune.dispose();\n\t        this.detune = null;\n\t        this.gain.dispose();\n\t        this.gain = null;\n\t        return this;\n\t    };\n\t    return Tone.Filter;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Split the incoming signal into three bands (low, mid, high)\n\t\t *         with two crossover frequency controls.\n\t\t *\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @constructor\n\t\t *  @param {Frequency|Object} [lowFrequency] the low/mid crossover frequency\n\t\t *  @param {Frequency} [highFrequency] the mid/high crossover frequency\n\t\t */\n\t    Tone.MultibandSplit = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'lowFrequency',\n\t            'highFrequency'\n\t        ], Tone.MultibandSplit);\n\t        Tone.AudioNode.call(this);\n\t        /**\n\t\t\t *  the input\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this.input = new Tone.Gain();\n\t        /**\n\t\t\t *  the outputs\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this.output = new Array(3);\n\t        /**\n\t\t\t *  The low band. Alias for <code>output[0]</code>\n\t\t\t *  @type {Tone.Filter}\n\t\t\t */\n\t        this.low = this.output[0] = new Tone.Filter(0, 'lowpass');\n\t        /**\n\t\t\t *  the lower filter of the mid band\n\t\t\t *  @type {Tone.Filter}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lowMidFilter = new Tone.Filter(0, 'highpass');\n\t        /**\n\t\t\t *  The mid band output. Alias for <code>output[1]</code>\n\t\t\t *  @type {Tone.Filter}\n\t\t\t */\n\t        this.mid = this.output[1] = new Tone.Filter(0, 'lowpass');\n\t        /**\n\t\t\t *  The high band output. Alias for <code>output[2]</code>\n\t\t\t *  @type {Tone.Filter}\n\t\t\t */\n\t        this.high = this.output[2] = new Tone.Filter(0, 'highpass');\n\t        /**\n\t\t\t *  The low/mid crossover frequency.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.lowFrequency = new Tone.Signal(options.lowFrequency, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The mid/high crossover frequency.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.highFrequency = new Tone.Signal(options.highFrequency, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The quality of all the filters\n\t\t\t *  @type {Number}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.Q = new Tone.Signal(options.Q);\n\t        this.input.fan(this.low, this.high);\n\t        this.input.chain(this._lowMidFilter, this.mid);\n\t        //the frequency control signal\n\t        this.lowFrequency.connect(this.low.frequency);\n\t        this.lowFrequency.connect(this._lowMidFilter.frequency);\n\t        this.highFrequency.connect(this.mid.frequency);\n\t        this.highFrequency.connect(this.high.frequency);\n\t        //the Q value\n\t        this.Q.connect(this.low.Q);\n\t        this.Q.connect(this._lowMidFilter.Q);\n\t        this.Q.connect(this.mid.Q);\n\t        this.Q.connect(this.high.Q);\n\t        this._readOnly([\n\t            'high',\n\t            'mid',\n\t            'low',\n\t            'highFrequency',\n\t            'lowFrequency'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.MultibandSplit, Tone.AudioNode);\n\t    /**\n\t\t *  @private\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.MultibandSplit.defaults = {\n\t        'lowFrequency': 400,\n\t        'highFrequency': 2500,\n\t        'Q': 1\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.MultibandSplit} this\n\t\t */\n\t    Tone.MultibandSplit.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._writable([\n\t            'high',\n\t            'mid',\n\t            'low',\n\t            'highFrequency',\n\t            'lowFrequency'\n\t        ]);\n\t        this.low.dispose();\n\t        this.low = null;\n\t        this._lowMidFilter.dispose();\n\t        this._lowMidFilter = null;\n\t        this.mid.dispose();\n\t        this.mid = null;\n\t        this.high.dispose();\n\t        this.high = null;\n\t        this.lowFrequency.dispose();\n\t        this.lowFrequency = null;\n\t        this.highFrequency.dispose();\n\t        this.highFrequency = null;\n\t        this.Q.dispose();\n\t        this.Q = null;\n\t        return this;\n\t    };\n\t    return Tone.MultibandSplit;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.EQ3 is a three band EQ with control over low, mid, and high gain as\n\t\t *         well as the low and high crossover frequencies.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.AudioNode}\n\t\t *\n\t\t *  @param {Decibels|Object} [lowLevel] The gain applied to the lows.\n\t\t *  @param {Decibels} [midLevel] The gain applied to the mid.\n\t\t *  @param {Decibels} [highLevel] The gain applied to the high.\n\t\t *  @example\n\t\t * var eq = new Tone.EQ3(-10, 3, -20);\n\t\t */\n\t    Tone.EQ3 = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'low',\n\t            'mid',\n\t            'high'\n\t        ], Tone.EQ3);\n\t        Tone.AudioNode.call(this);\n\t        /**\n\t\t\t *  the output node\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this.output = new Tone.Gain();\n\t        /**\n\t\t\t *  the multiband split\n\t\t\t *  @type {Tone.MultibandSplit}\n\t\t\t *  @private\n\t\t\t */\n\t        this._multibandSplit = this.input = new Tone.MultibandSplit({\n\t            'lowFrequency': options.lowFrequency,\n\t            'highFrequency': options.highFrequency\n\t        });\n\t        /**\n\t\t\t *  The gain for the lower signals\n\t\t\t *  @type  {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lowGain = new Tone.Gain(options.low, Tone.Type.Decibels);\n\t        /**\n\t\t\t *  The gain for the mid signals\n\t\t\t *  @type  {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._midGain = new Tone.Gain(options.mid, Tone.Type.Decibels);\n\t        /**\n\t\t\t * The gain in decibels of the high part\n\t\t\t * @type {Tone.Gain}\n\t\t\t * @private\n\t\t\t */\n\t        this._highGain = new Tone.Gain(options.high, Tone.Type.Decibels);\n\t        /**\n\t\t\t * The gain in decibels of the low part\n\t\t\t * @type {Decibels}\n\t\t\t * @signal\n\t\t\t */\n\t        this.low = this._lowGain.gain;\n\t        /**\n\t\t\t * The gain in decibels of the mid part\n\t\t\t * @type {Decibels}\n\t\t\t * @signal\n\t\t\t */\n\t        this.mid = this._midGain.gain;\n\t        /**\n\t\t\t * The gain in decibels of the high part\n\t\t\t * @type {Decibels}\n\t\t\t * @signal\n\t\t\t */\n\t        this.high = this._highGain.gain;\n\t        /**\n\t\t\t *  The Q value for all of the filters.\n\t\t\t *  @type {Positive}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.Q = this._multibandSplit.Q;\n\t        /**\n\t\t\t *  The low/mid crossover frequency.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.lowFrequency = this._multibandSplit.lowFrequency;\n\t        /**\n\t\t\t *  The mid/high crossover frequency.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.highFrequency = this._multibandSplit.highFrequency;\n\t        //the frequency bands\n\t        this._multibandSplit.low.chain(this._lowGain, this.output);\n\t        this._multibandSplit.mid.chain(this._midGain, this.output);\n\t        this._multibandSplit.high.chain(this._highGain, this.output);\n\t        this._readOnly([\n\t            'low',\n\t            'mid',\n\t            'high',\n\t            'lowFrequency',\n\t            'highFrequency'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.EQ3, Tone.AudioNode);\n\t    /**\n\t\t *  the default values\n\t\t */\n\t    Tone.EQ3.defaults = {\n\t        'low': 0,\n\t        'mid': 0,\n\t        'high': 0,\n\t        'lowFrequency': 400,\n\t        'highFrequency': 2500\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.EQ3} this\n\t\t */\n\t    Tone.EQ3.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._writable([\n\t            'low',\n\t            'mid',\n\t            'high',\n\t            'lowFrequency',\n\t            'highFrequency'\n\t        ]);\n\t        this._multibandSplit.dispose();\n\t        this._multibandSplit = null;\n\t        this.lowFrequency = null;\n\t        this.highFrequency = null;\n\t        this._lowGain.dispose();\n\t        this._lowGain = null;\n\t        this._midGain.dispose();\n\t        this._midGain = null;\n\t        this._highGain.dispose();\n\t        this._highGain = null;\n\t        this.low = null;\n\t        this.mid = null;\n\t        this.high = null;\n\t        this.Q = null;\n\t        return this;\n\t    };\n\t    return Tone.EQ3;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Performs a linear scaling on an input signal.\n\t\t *          Scales a NormalRange input to between\n\t\t *          outputMin and outputMax.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @param {number} [outputMin=0] The output value when the input is 0. \n\t\t *  @param {number} [outputMax=1]\tThe output value when the input is 1. \n\t\t *  @example\n\t\t * var scale = new Tone.Scale(50, 100);\n\t\t * var signal = new Tone.Signal(0.5).connect(scale);\n\t\t * //the output of scale equals 75\n\t\t */\n\t    Tone.Scale = function (outputMin, outputMax) {\n\t        Tone.SignalBase.call(this);\n\t        /** \n\t\t\t *  @private\n\t\t\t *  @type {number}\n\t\t\t */\n\t        this._outputMin = Tone.defaultArg(outputMin, 0);\n\t        /** \n\t\t\t *  @private\n\t\t\t *  @type {number}\n\t\t\t */\n\t        this._outputMax = Tone.defaultArg(outputMax, 1);\n\t        /** \n\t\t\t *  @private\n\t\t\t *  @type {Tone.Multiply}\n\t\t\t *  @private\n\t\t\t */\n\t        this._scale = this.input = new Tone.Multiply(1);\n\t        /** \n\t\t\t *  @private\n\t\t\t *  @type {Tone.Add}\n\t\t\t *  @private\n\t\t\t */\n\t        this._add = this.output = new Tone.Add(0);\n\t        this._scale.connect(this._add);\n\t        this._setRange();\n\t    };\n\t    Tone.extend(Tone.Scale, Tone.SignalBase);\n\t    /**\n\t\t * The minimum output value. This number is output when \n\t\t * the value input value is 0. \n\t\t * @memberOf Tone.Scale#\n\t\t * @type {number}\n\t\t * @name min\n\t\t */\n\t    Object.defineProperty(Tone.Scale.prototype, 'min', {\n\t        get: function () {\n\t            return this._outputMin;\n\t        },\n\t        set: function (min) {\n\t            this._outputMin = min;\n\t            this._setRange();\n\t        }\n\t    });\n\t    /**\n\t\t * The maximum output value. This number is output when \n\t\t * the value input value is 1. \n\t\t * @memberOf Tone.Scale#\n\t\t * @type {number}\n\t\t * @name max\n\t\t */\n\t    Object.defineProperty(Tone.Scale.prototype, 'max', {\n\t        get: function () {\n\t            return this._outputMax;\n\t        },\n\t        set: function (max) {\n\t            this._outputMax = max;\n\t            this._setRange();\n\t        }\n\t    });\n\t    /**\n\t\t *  set the values\n\t\t *  @private\n\t\t */\n\t    Tone.Scale.prototype._setRange = function () {\n\t        this._add.value = this._outputMin;\n\t        this._scale.value = this._outputMax - this._outputMin;\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Scale} this\n\t\t */\n\t    Tone.Scale.prototype.dispose = function () {\n\t        Tone.SignalBase.prototype.dispose.call(this);\n\t        this._add.dispose();\n\t        this._add = null;\n\t        this._scale.dispose();\n\t        this._scale = null;\n\t        return this;\n\t    };\n\t    return Tone.Scale;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class  Performs an exponential scaling on an input signal.\n\t\t *          Scales a NormalRange value [0,1] exponentially\n\t\t *          to the output range of outputMin to outputMax.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @param {number} [outputMin=0] The output value when the input is 0. \n\t\t *  @param {number} [outputMax=1]\tThe output value when the input is 1. \n\t\t *  @param {number} [exponent=2] The exponent which scales the incoming signal.\n\t\t *  @example\n\t\t * var scaleExp = new Tone.ScaleExp(0, 100, 2);\n\t\t * var signal = new Tone.Signal(0.5).connect(scaleExp);\n\t\t */\n\t    Tone.ScaleExp = function (outputMin, outputMax, exponent) {\n\t        Tone.SignalBase.call(this);\n\t        /**\n\t\t\t *  scale the input to the output range\n\t\t\t *  @type {Tone.Scale}\n\t\t\t *  @private\n\t\t\t */\n\t        this._scale = this.output = new Tone.Scale(outputMin, outputMax);\n\t        /**\n\t\t\t *  @private\n\t\t\t *  @type {Tone.Pow}\n\t\t\t *  @private\n\t\t\t */\n\t        this._exp = this.input = new Tone.Pow(Tone.defaultArg(exponent, 2));\n\t        this._exp.connect(this._scale);\n\t    };\n\t    Tone.extend(Tone.ScaleExp, Tone.SignalBase);\n\t    /**\n\t\t * Instead of interpolating linearly between the <code>min</code> and \n\t\t * <code>max</code> values, setting the exponent will interpolate between\n\t\t * the two values with an exponential curve. \n\t\t * @memberOf Tone.ScaleExp#\n\t\t * @type {number}\n\t\t * @name exponent\n\t\t */\n\t    Object.defineProperty(Tone.ScaleExp.prototype, 'exponent', {\n\t        get: function () {\n\t            return this._exp.value;\n\t        },\n\t        set: function (exp) {\n\t            this._exp.value = exp;\n\t        }\n\t    });\n\t    /**\n\t\t * The minimum output value. This number is output when \n\t\t * the value input value is 0. \n\t\t * @memberOf Tone.ScaleExp#\n\t\t * @type {number}\n\t\t * @name min\n\t\t */\n\t    Object.defineProperty(Tone.ScaleExp.prototype, 'min', {\n\t        get: function () {\n\t            return this._scale.min;\n\t        },\n\t        set: function (min) {\n\t            this._scale.min = min;\n\t        }\n\t    });\n\t    /**\n\t\t * The maximum output value. This number is output when \n\t\t * the value input value is 1. \n\t\t * @memberOf Tone.ScaleExp#\n\t\t * @type {number}\n\t\t * @name max\n\t\t */\n\t    Object.defineProperty(Tone.ScaleExp.prototype, 'max', {\n\t        get: function () {\n\t            return this._scale.max;\n\t        },\n\t        set: function (max) {\n\t            this._scale.max = max;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.ScaleExp} this\n\t\t */\n\t    Tone.ScaleExp.prototype.dispose = function () {\n\t        Tone.SignalBase.prototype.dispose.call(this);\n\t        this._scale.dispose();\n\t        this._scale = null;\n\t        this._exp.dispose();\n\t        this._exp = null;\n\t        return this;\n\t    };\n\t    return Tone.ScaleExp;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  createDelay shim\n\t\t *  @private\n\t\t */\n\t    if (window.DelayNode && !AudioContext.prototype.createDelay) {\n\t        AudioContext.prototype.createDelay = AudioContext.prototype.createDelayNode;\n\t    }\n\t    /**\n\t\t *  @class Wrapper around Web Audio's native [DelayNode](http://webaudio.github.io/web-audio-api/#the-delaynode-interface).\n\t\t *  @extends {Tone}\n\t\t *  @param {Time=} delayTime The delay applied to the incoming signal.\n\t\t *  @param {Time=} maxDelay The maximum delay time.\n\t\t */\n\t    Tone.Delay = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'delayTime',\n\t            'maxDelay'\n\t        ], Tone.Delay);\n\t        Tone.AudioNode.call(this);\n\t        /**\n\t\t\t *  The native delay node\n\t\t\t *  @type {DelayNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delayNode = this.input = this.output = this.context.createDelay(this.toSeconds(options.maxDelay));\n\t        /**\n\t\t\t *  The amount of time the incoming signal is\n\t\t\t *  delayed.\n\t\t\t *  @type {Time}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.delayTime = new Tone.Param({\n\t            'param': this._delayNode.delayTime,\n\t            'units': Tone.Type.Time,\n\t            'value': options.delayTime\n\t        });\n\t        this._readOnly('delayTime');\n\t    };\n\t    Tone.extend(Tone.Delay, Tone.AudioNode);\n\t    /**\n\t\t *  The defaults\n\t\t *  @const\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.Delay.defaults = {\n\t        'maxDelay': 1,\n\t        'delayTime': 0\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return  {Tone.Delay}  this\n\t\t */\n\t    Tone.Delay.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._delayNode.disconnect();\n\t        this._delayNode = null;\n\t        this._writable('delayTime');\n\t        this.delayTime = null;\n\t        return this;\n\t    };\n\t    return Tone.Delay;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Comb filters are basic building blocks for physical modeling. Read more\n\t\t *         about comb filters on [CCRMA's website](https://ccrma.stanford.edu/~jos/pasp/Feedback_Comb_Filters.html).\n\t\t *\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @constructor\n\t\t *  @param {Time|Object} [delayTime] The delay time of the filter.\n\t\t *  @param {NormalRange=} resonance The amount of feedback the filter has.\n\t\t */\n\t    Tone.FeedbackCombFilter = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'delayTime',\n\t            'resonance'\n\t        ], Tone.FeedbackCombFilter);\n\t        Tone.AudioNode.call(this);\n\t        /**\n\t\t\t *  the delay node\n\t\t\t *  @type {DelayNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delay = this.input = this.output = new Tone.Delay(options.delayTime);\n\t        /**\n\t\t\t *  The amount of delay of the comb filter.\n\t\t\t *  @type {Time}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.delayTime = this._delay.delayTime;\n\t        /**\n\t\t\t *  the feedback node\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._feedback = new Tone.Gain(options.resonance, Tone.Type.NormalRange);\n\t        /**\n\t\t\t *  The amount of feedback of the delayed signal.\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.resonance = this._feedback.gain;\n\t        this._delay.chain(this._feedback, this._delay);\n\t        this._readOnly([\n\t            'resonance',\n\t            'delayTime'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.FeedbackCombFilter, Tone.AudioNode);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.FeedbackCombFilter.defaults = {\n\t        'delayTime': 0.1,\n\t        'resonance': 0.5\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.FeedbackCombFilter} this\n\t\t */\n\t    Tone.FeedbackCombFilter.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._writable([\n\t            'resonance',\n\t            'delayTime'\n\t        ]);\n\t        this._delay.dispose();\n\t        this._delay = null;\n\t        this.delayTime = null;\n\t        this._feedback.dispose();\n\t        this._feedback = null;\n\t        this.resonance = null;\n\t        return this;\n\t    };\n\t    return Tone.FeedbackCombFilter;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class  Get the current waveform data of the connected audio source.\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @param {Number=} size The size of the FFT. Value must be a power of\n\t\t *                       two in the range 32 to 32768.\n\t\t */\n\t    Tone.FFT = function () {\n\t        var options = Tone.defaults(arguments, ['size'], Tone.FFT);\n\t        options.type = Tone.Analyser.Type.FFT;\n\t        Tone.AudioNode.call(this);\n\t        /**\n\t\t\t *  The analyser node.\n\t\t\t *  @private\n\t\t\t *  @type {Tone.Analyser}\n\t\t\t */\n\t        this._analyser = this.input = this.output = new Tone.Analyser(options);\n\t    };\n\t    Tone.extend(Tone.FFT, Tone.AudioNode);\n\t    /**\n\t\t *  The default values.\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.FFT.defaults = { 'size': 1024 };\n\t    /**\n\t\t *  Gets the waveform of the audio source. Returns the waveform data\n\t\t *  of length [size](#size) as a Float32Array with values between -1 and 1.\n\t\t *  @returns {TypedArray}\n\t\t */\n\t    Tone.FFT.prototype.getValue = function () {\n\t        return this._analyser.getValue();\n\t    };\n\t    /**\n\t\t *  The size of analysis. This must be a power of two in the range 32 to 32768.\n\t\t *  @memberOf Tone.FFT#\n\t\t *  @type {Number}\n\t\t *  @name size\n\t\t */\n\t    Object.defineProperty(Tone.FFT.prototype, 'size', {\n\t        get: function () {\n\t            return this._analyser.size;\n\t        },\n\t        set: function (size) {\n\t            this._analyser.size = size;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return  {Tone.FFT}  this\n\t\t */\n\t    Tone.FFT.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._analyser.dispose();\n\t        this._analyser = null;\n\t    };\n\t    return Tone.FFT;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Follower is a  crude envelope follower which will follow\n\t\t *          the amplitude of an incoming signal.\n\t\t *          Take care with small (< 0.02) attack or decay values\n\t\t *          as follower has some ripple which is exaggerated\n\t\t *          at these values. Read more about envelope followers (also known\n\t\t *          as envelope detectors) on [Wikipedia](https://en.wikipedia.org/wiki/Envelope_detector).\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @param {Time|Object} [attack] The rate at which the follower rises.\n\t\t *  @param {Time=} release The rate at which the folower falls.\n\t\t *  @example\n\t\t * var follower = new Tone.Follower(0.2, 0.4);\n\t\t */\n\t    Tone.Follower = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'attack',\n\t            'release'\n\t        ], Tone.Follower);\n\t        Tone.AudioNode.call(this);\n\t        this.createInsOuts(1, 1);\n\t        /**\n\t\t\t *  @type {Tone.Abs}\n\t\t\t *  @private\n\t\t\t */\n\t        this._abs = new Tone.Abs();\n\t        /**\n\t\t\t *  the lowpass filter which smooths the input\n\t\t\t *  @type {BiquadFilterNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._filter = this.context.createBiquadFilter();\n\t        this._filter.type = 'lowpass';\n\t        this._filter.frequency.value = 0;\n\t        this._filter.Q.value = -100;\n\t        /**\n\t\t\t *  @type {WaveShaperNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._frequencyValues = new Tone.WaveShaper();\n\t        /**\n\t\t\t *  @type {Tone.Subtract}\n\t\t\t *  @private\n\t\t\t */\n\t        this._sub = new Tone.Subtract();\n\t        /**\n\t\t\t *  @type {Tone.Delay}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delay = new Tone.Delay(this.blockTime);\n\t        /**\n\t\t\t *  this keeps it far from 0, even for very small differences\n\t\t\t *  @type {Tone.Multiply}\n\t\t\t *  @private\n\t\t\t */\n\t        this._mult = new Tone.Multiply(10000);\n\t        /**\n\t\t\t *  @private\n\t\t\t *  @type {number}\n\t\t\t */\n\t        this._attack = options.attack;\n\t        /**\n\t\t\t *  @private\n\t\t\t *  @type {number}\n\t\t\t */\n\t        this._release = options.release;\n\t        //the smoothed signal to get the values\n\t        this.input.chain(this._abs, this._filter, this.output);\n\t        //the difference path\n\t        this._abs.connect(this._sub, 0, 1);\n\t        this._filter.chain(this._delay, this._sub);\n\t        //threshold the difference and use the thresh to set the frequency\n\t        this._sub.chain(this._mult, this._frequencyValues, this._filter.frequency);\n\t        //set the attack and release values in the table\n\t        this._setAttackRelease(this._attack, this._release);\n\t    };\n\t    Tone.extend(Tone.Follower, Tone.AudioNode);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Follower.defaults = {\n\t        'attack': 0.05,\n\t        'release': 0.5\n\t    };\n\t    /**\n\t\t *  sets the attack and release times in the wave shaper\n\t\t *  @param   {Time} attack\n\t\t *  @param   {Time} release\n\t\t *  @private\n\t\t */\n\t    Tone.Follower.prototype._setAttackRelease = function (attack, release) {\n\t        var minTime = this.blockTime;\n\t        attack = Tone.Time(attack).toFrequency();\n\t        release = Tone.Time(release).toFrequency();\n\t        attack = Math.max(attack, minTime);\n\t        release = Math.max(release, minTime);\n\t        this._frequencyValues.setMap(function (val) {\n\t            if (val <= 0) {\n\t                return attack;\n\t            } else {\n\t                return release;\n\t            }\n\t        });\n\t    };\n\t    /**\n\t\t * The attack time.\n\t\t * @memberOf Tone.Follower#\n\t\t * @type {Time}\n\t\t * @name attack\n\t\t */\n\t    Object.defineProperty(Tone.Follower.prototype, 'attack', {\n\t        get: function () {\n\t            return this._attack;\n\t        },\n\t        set: function (attack) {\n\t            this._attack = attack;\n\t            this._setAttackRelease(this._attack, this._release);\n\t        }\n\t    });\n\t    /**\n\t\t * The release time.\n\t\t * @memberOf Tone.Follower#\n\t\t * @type {Time}\n\t\t * @name release\n\t\t */\n\t    Object.defineProperty(Tone.Follower.prototype, 'release', {\n\t        get: function () {\n\t            return this._release;\n\t        },\n\t        set: function (release) {\n\t            this._release = release;\n\t            this._setAttackRelease(this._attack, this._release);\n\t        }\n\t    });\n\t    /**\n\t\t *  Borrows the connect method from Signal so that the output can be used\n\t\t *  as a Tone.Signal control signal.\n\t\t *  @function\n\t\t */\n\t    Tone.Follower.prototype.connect = Tone.Signal.prototype.connect;\n\t    /**\n\t\t *  dispose\n\t\t *  @returns {Tone.Follower} this\n\t\t */\n\t    Tone.Follower.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._filter.disconnect();\n\t        this._filter = null;\n\t        this._frequencyValues.disconnect();\n\t        this._frequencyValues = null;\n\t        this._delay.dispose();\n\t        this._delay = null;\n\t        this._sub.disconnect();\n\t        this._sub = null;\n\t        this._abs.dispose();\n\t        this._abs = null;\n\t        this._mult.dispose();\n\t        this._mult = null;\n\t        this._curve = null;\n\t        return this;\n\t    };\n\t    return Tone.Follower;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.ScaledEnvelop is an envelope which can be scaled \n\t\t *         to any range. It's useful for applying an envelope \n\t\t *         to a frequency or any other non-NormalRange signal \n\t\t *         parameter. \n\t\t *\n\t\t *  @extends {Tone.Envelope}\n\t\t *  @constructor\n\t\t *  @param {Time|Object} [attack]\tthe attack time in seconds\n\t\t *  @param {Time} [decay]\tthe decay time in seconds\n\t\t *  @param {number} [sustain] \ta percentage (0-1) of the full amplitude\n\t\t *  @param {Time} [release]\tthe release time in seconds\n\t\t *  @example\n\t\t *  var scaledEnv = new Tone.ScaledEnvelope({\n\t\t *  \t\"attack\" : 0.2,\n\t\t *  \t\"min\" : 200,\n\t\t *  \t\"max\" : 2000\n\t\t *  });\n\t\t *  scaledEnv.connect(oscillator.frequency);\n\t\t */\n\t    Tone.ScaledEnvelope = function () {\n\t        //get all of the defaults\n\t        var options = Tone.defaults(arguments, [\n\t            'attack',\n\t            'decay',\n\t            'sustain',\n\t            'release'\n\t        ], Tone.Envelope);\n\t        Tone.Envelope.call(this, options);\n\t        options = Tone.defaultArg(options, Tone.ScaledEnvelope.defaults);\n\t        /** \n\t\t\t *  scale the incoming signal by an exponent\n\t\t\t *  @type {Tone.Pow}\n\t\t\t *  @private\n\t\t\t */\n\t        this._exp = this.output = new Tone.Pow(options.exponent);\n\t        /**\n\t\t\t *  scale the signal to the desired range\n\t\t\t *  @type {Tone.Multiply}\n\t\t\t *  @private\n\t\t\t */\n\t        this._scale = this.output = new Tone.Scale(options.min, options.max);\n\t        this._sig.chain(this._exp, this._scale);\n\t    };\n\t    Tone.extend(Tone.ScaledEnvelope, Tone.Envelope);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t */\n\t    Tone.ScaledEnvelope.defaults = {\n\t        'min': 0,\n\t        'max': 1,\n\t        'exponent': 1\n\t    };\n\t    /**\n\t\t * The envelope's min output value. This is the value which it\n\t\t * starts at. \n\t\t * @memberOf Tone.ScaledEnvelope#\n\t\t * @type {number}\n\t\t * @name min\n\t\t */\n\t    Object.defineProperty(Tone.ScaledEnvelope.prototype, 'min', {\n\t        get: function () {\n\t            return this._scale.min;\n\t        },\n\t        set: function (min) {\n\t            this._scale.min = min;\n\t        }\n\t    });\n\t    /**\n\t\t * The envelope's max output value. In other words, the value\n\t\t * at the peak of the attack portion of the envelope. \n\t\t * @memberOf Tone.ScaledEnvelope#\n\t\t * @type {number}\n\t\t * @name max\n\t\t */\n\t    Object.defineProperty(Tone.ScaledEnvelope.prototype, 'max', {\n\t        get: function () {\n\t            return this._scale.max;\n\t        },\n\t        set: function (max) {\n\t            this._scale.max = max;\n\t        }\n\t    });\n\t    /**\n\t\t * The envelope's exponent value. \n\t\t * @memberOf Tone.ScaledEnvelope#\n\t\t * @type {number}\n\t\t * @name exponent\n\t\t */\n\t    Object.defineProperty(Tone.ScaledEnvelope.prototype, 'exponent', {\n\t        get: function () {\n\t            return this._exp.value;\n\t        },\n\t        set: function (exp) {\n\t            this._exp.value = exp;\n\t        }\n\t    });\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.ScaledEnvelope} this\n\t\t */\n\t    Tone.ScaledEnvelope.prototype.dispose = function () {\n\t        Tone.Envelope.prototype.dispose.call(this);\n\t        this._scale.dispose();\n\t        this._scale = null;\n\t        this._exp.dispose();\n\t        this._exp = null;\n\t        return this;\n\t    };\n\t    return Tone.ScaledEnvelope;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.FrequencyEnvelope is a Tone.ScaledEnvelope, but instead of `min` and `max`\n\t\t *         it's got a `baseFrequency` and `octaves` parameter. \n\t\t *\n\t\t *  @extends {Tone.Envelope}\n\t\t *  @constructor\n\t\t *  @param {Time|Object} [attack]\tthe attack time in seconds\n\t\t *  @param {Time} [decay]\tthe decay time in seconds\n\t\t *  @param {number} [sustain] \ta percentage (0-1) of the full amplitude\n\t\t *  @param {Time} [release]\tthe release time in seconds\n\t\t *  @example\n\t\t *  var env = new Tone.FrequencyEnvelope({\n\t\t *  \t\"attack\" : 0.2,\n\t\t *  \t\"baseFrequency\" : \"C2\",\n\t\t *  \t\"octaves\" : 4\n\t\t *  });\n\t\t *  scaledEnv.connect(oscillator.frequency);\n\t\t */\n\t    Tone.FrequencyEnvelope = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'attack',\n\t            'decay',\n\t            'sustain',\n\t            'release'\n\t        ], Tone.Envelope);\n\t        Tone.ScaledEnvelope.call(this, options);\n\t        //merge it with the frequency envelope defaults\n\t        options = Tone.defaultArg(options, Tone.FrequencyEnvelope.defaults);\n\t        /**\n\t\t\t *  Stores the octave value\n\t\t\t *  @type {Positive}\n\t\t\t *  @private\n\t\t\t */\n\t        this._octaves = options.octaves;\n\t        //setup\n\t        this.baseFrequency = options.baseFrequency;\n\t        this.octaves = options.octaves;\n\t    };\n\t    Tone.extend(Tone.FrequencyEnvelope, Tone.Envelope);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t */\n\t    Tone.FrequencyEnvelope.defaults = {\n\t        'baseFrequency': 200,\n\t        'octaves': 4,\n\t        'exponent': 2\n\t    };\n\t    /**\n\t\t * The envelope's mininum output value. This is the value which it\n\t\t * starts at. \n\t\t * @memberOf Tone.FrequencyEnvelope#\n\t\t * @type {Frequency}\n\t\t * @name baseFrequency\n\t\t */\n\t    Object.defineProperty(Tone.FrequencyEnvelope.prototype, 'baseFrequency', {\n\t        get: function () {\n\t            return this._scale.min;\n\t        },\n\t        set: function (min) {\n\t            this._scale.min = this.toFrequency(min);\n\t            //also update the octaves\n\t            this.octaves = this._octaves;\n\t        }\n\t    });\n\t    /**\n\t\t * The number of octaves above the baseFrequency that the\n\t\t * envelope will scale to.\n\t\t * @memberOf Tone.FrequencyEnvelope#\n\t\t * @type {Positive}\n\t\t * @name octaves\n\t\t */\n\t    Object.defineProperty(Tone.FrequencyEnvelope.prototype, 'octaves', {\n\t        get: function () {\n\t            return this._octaves;\n\t        },\n\t        set: function (octaves) {\n\t            this._octaves = octaves;\n\t            this._scale.max = this.baseFrequency * Math.pow(2, octaves);\n\t        }\n\t    });\n\t    /**\n\t\t * The envelope's exponent value. \n\t\t * @memberOf Tone.FrequencyEnvelope#\n\t\t * @type {number}\n\t\t * @name exponent\n\t\t */\n\t    Object.defineProperty(Tone.FrequencyEnvelope.prototype, 'exponent', {\n\t        get: function () {\n\t            return this._exp.value;\n\t        },\n\t        set: function (exp) {\n\t            this._exp.value = exp;\n\t        }\n\t    });\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.FrequencyEnvelope} this\n\t\t */\n\t    Tone.FrequencyEnvelope.prototype.dispose = function () {\n\t        Tone.ScaledEnvelope.prototype.dispose.call(this);\n\t        return this;\n\t    };\n\t    return Tone.FrequencyEnvelope;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Gate only passes a signal through when the incoming\n\t\t *          signal exceeds a specified threshold. To do this, Gate uses\n\t\t *          a Tone.Follower to follow the amplitude of the incoming signal.\n\t\t *          A common implementation of this class is a [Noise Gate](https://en.wikipedia.org/wiki/Noise_gate).\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @param {Decibels|Object} [threshold] The threshold above which the gate will open.\n\t\t *  @param {Time=} attack The follower's attack time\n\t\t *  @param {Time=} release The follower's release time\n\t\t *  @example\n\t\t * var gate = new Tone.Gate(-30, 0.2, 0.3).toMaster();\n\t\t * var mic = new Tone.UserMedia().connect(gate);\n\t\t * //the gate will only pass through the incoming\n\t\t * //signal when it's louder than -30db\n\t\t */\n\t    Tone.Gate = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'threshold',\n\t            'attack',\n\t            'release'\n\t        ], Tone.Gate);\n\t        Tone.AudioNode.call(this);\n\t        this.createInsOuts(1, 1);\n\t        /**\n\t\t\t *  @type {Tone.Follower}\n\t\t\t *  @private\n\t\t\t */\n\t        this._follower = new Tone.Follower(options.attack, options.release);\n\t        /**\n\t\t\t *  @type {Tone.GreaterThan}\n\t\t\t *  @private\n\t\t\t */\n\t        this._gt = new Tone.GreaterThan(Tone.dbToGain(options.threshold));\n\t        //the connections\n\t        this.input.connect(this.output);\n\t        //the control signal\n\t        this.input.chain(this._gt, this._follower, this.output.gain);\n\t    };\n\t    Tone.extend(Tone.Gate, Tone.AudioNode);\n\t    /**\n\t\t *  @const\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Gate.defaults = {\n\t        'attack': 0.1,\n\t        'release': 0.1,\n\t        'threshold': -40\n\t    };\n\t    /**\n\t\t * The threshold of the gate in decibels\n\t\t * @memberOf Tone.Gate#\n\t\t * @type {Decibels}\n\t\t * @name threshold\n\t\t */\n\t    Object.defineProperty(Tone.Gate.prototype, 'threshold', {\n\t        get: function () {\n\t            return Tone.gainToDb(this._gt.value);\n\t        },\n\t        set: function (thresh) {\n\t            this._gt.value = Tone.dbToGain(thresh);\n\t        }\n\t    });\n\t    /**\n\t\t * The attack speed of the gate\n\t\t * @memberOf Tone.Gate#\n\t\t * @type {Time}\n\t\t * @name attack\n\t\t */\n\t    Object.defineProperty(Tone.Gate.prototype, 'attack', {\n\t        get: function () {\n\t            return this._follower.attack;\n\t        },\n\t        set: function (attackTime) {\n\t            this._follower.attack = attackTime;\n\t        }\n\t    });\n\t    /**\n\t\t * The release speed of the gate\n\t\t * @memberOf Tone.Gate#\n\t\t * @type {Time}\n\t\t * @name release\n\t\t */\n\t    Object.defineProperty(Tone.Gate.prototype, 'release', {\n\t        get: function () {\n\t            return this._follower.release;\n\t        },\n\t        set: function (releaseTime) {\n\t            this._follower.release = releaseTime;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Gate} this\n\t\t */\n\t    Tone.Gate.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._follower.dispose();\n\t        this._gt.dispose();\n\t        this._follower = null;\n\t        this._gt = null;\n\t        return this;\n\t    };\n\t    return Tone.Gate;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t * @class Tone.TickSignal extends Tone.TimelineSignal, but adds the capability\n\t\t *        to calculate the number of elapsed ticks. exponential and target curves\n\t\t *        are approximated with multiple linear ramps.\n\t\t *\n\t\t *        Thank you Bruno Dias, H. Sofia Pinto, and David M. Matos, for your [WAC paper](https://smartech.gatech.edu/bitstream/handle/1853/54588/WAC2016-49.pdf)\n\t\t *        describing integrating timing functions for tempo calculations.\n\t\t *\n\t\t * @param {Number} value The initial value of the signal\n\t\t * @extends {Tone.TimelineSignal}\n\t\t */\n\t    Tone.TickSignal = function (value) {\n\t        value = Tone.defaultArg(value, 1);\n\t        Tone.TimelineSignal.call(this, {\n\t            'units': Tone.Type.Ticks,\n\t            'value': value\n\t        });\n\t        //extend the memory\n\t        this._events.memory = Infinity;\n\t    };\n\t    Tone.extend(Tone.TickSignal, Tone.TimelineSignal);\n\t    /**\n\t\t * Wraps Tone.TimelineSignal methods so that they also\n\t\t * record the ticks.\n\t\t * @param  {Function} method\n\t\t * @return {Function}\n\t\t * @private\n\t\t */\n\t    function _wrapScheduleMethods(method) {\n\t        return function (value, time) {\n\t            time = this.toSeconds(time);\n\t            method.apply(this, arguments);\n\t            var event = this._events.get(time);\n\t            var previousEvent = this._events.previousEvent(event);\n\t            var ticksUntilTime = this._getTickUntilEvent(previousEvent, time - this.sampleTime);\n\t            event.ticks = Math.max(ticksUntilTime, 0);\n\t            return this;\n\t        };\n\t    }\n\t    Tone.TickSignal.prototype.setValueAtTime = _wrapScheduleMethods(Tone.TimelineSignal.prototype.setValueAtTime);\n\t    Tone.TickSignal.prototype.linearRampToValueAtTime = _wrapScheduleMethods(Tone.TimelineSignal.prototype.linearRampToValueAtTime);\n\t    /**\n\t\t *  Start exponentially approaching the target value at the given time with\n\t\t *  a rate having the given time constant.\n\t\t *  @param {number} value\n\t\t *  @param {Time} startTime\n\t\t *  @param {number} timeConstant\n\t\t *  @returns {Tone.TickSignal} this\n\t\t */\n\t    Tone.TickSignal.prototype.setTargetAtTime = function (value, time, constant) {\n\t        //aproximate it with multiple linear ramps\n\t        time = this.toSeconds(time);\n\t        this.setRampPoint(time);\n\t        value = this._fromUnits(value);\n\t        //start from previously scheduled value\n\t        var prevEvent = this._events.get(time);\n\t        var segments = 5;\n\t        for (var i = 0; i <= segments; i++) {\n\t            var segTime = constant * i + time;\n\t            var rampVal = this._exponentialApproach(prevEvent.time, prevEvent.value, value, constant, segTime);\n\t            this.linearRampToValueAtTime(this._toUnits(rampVal), segTime);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Schedules an exponential continuous change in parameter value from\n\t\t *  the previous scheduled parameter value to the given value.\n\t\t *  @param  {number} value\n\t\t *  @param  {Time} endTime\n\t\t *  @returns {Tone.TickSignal} this\n\t\t */\n\t    Tone.TickSignal.prototype.exponentialRampToValueAtTime = function (value, time) {\n\t        //aproximate it with multiple linear ramps\n\t        time = this.toSeconds(time);\n\t        value = this._fromUnits(value);\n\t        //start from previously scheduled value\n\t        var prevEvent = this._events.get(time);\n\t        if (prevEvent === null) {\n\t            prevEvent = {\n\t                'value': this._initial,\n\t                'time': 0\n\t            };\n\t        }\n\t        var segments = 5;\n\t        var segmentDur = (time - prevEvent.time) / segments;\n\t        for (var i = 0; i <= segments; i++) {\n\t            var segTime = segmentDur * i + prevEvent.time;\n\t            var rampVal = this._exponentialInterpolate(prevEvent.time, prevEvent.value, time, value, segTime);\n\t            this.linearRampToValueAtTime(this._toUnits(rampVal), segTime);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t * Returns the tick value at the time. Takes into account\n\t\t * any automation curves scheduled on the signal.\n\t\t * @private\n\t\t * @param  {Time} time The time to get the tick count at\n\t\t * @return {Ticks}      The number of ticks which have elapsed at the time\n\t\t *                          given any automations.\n\t\t */\n\t    Tone.TickSignal.prototype._getTickUntilEvent = function (event, time) {\n\t        if (event === null) {\n\t            event = {\n\t                'ticks': 0,\n\t                'time': 0\n\t            };\n\t        }\n\t        var val0 = this.getValueAtTime(event.time);\n\t        var val1 = this.getValueAtTime(time);\n\t        return 0.5 * (time - event.time) * (val0 + val1) + event.ticks;\n\t    };\n\t    /**\n\t\t * Returns the tick value at the time. Takes into account\n\t\t * any automation curves scheduled on the signal.\n\t\t * @param  {Time} time The time to get the tick count at\n\t\t * @return {Ticks}      The number of ticks which have elapsed at the time\n\t\t *                          given any automations.\n\t\t */\n\t    Tone.TickSignal.prototype.getTickAtTime = function (time) {\n\t        time = this.toSeconds(time);\n\t        var event = this._events.get(time);\n\t        return this._getTickUntilEvent(event, time);\n\t    };\n\t    /**\n\t\t * Return the elapsed time of the number of ticks from the given time\n\t\t * @param {Ticks} ticks The number of ticks to calculate\n\t\t * @param  {Time} time The time to get the next tick from\n\t\t * @return {Seconds} The duration of the number of ticks from the given time in seconds\n\t\t */\n\t    Tone.TickSignal.prototype.getDurationOfTicks = function (ticks, time) {\n\t        time = this.toSeconds(time);\n\t        var currentTick = this.getTickAtTime(time);\n\t        return this.getTimeOfTick(currentTick + ticks) - time;\n\t    };\n\t    /**\n\t\t * Given a tick, returns the time that tick occurs at.\n\t\t * @param  {Ticks} tick\n\t\t * @return {Time}      The time that the tick occurs.\n\t\t */\n\t    Tone.TickSignal.prototype.getTimeOfTick = function (tick) {\n\t        var before = this._events.get(tick, 'ticks');\n\t        var after = this._events.getAfter(tick, 'ticks');\n\t        if (before && before.ticks === tick) {\n\t            return before.time;\n\t        } else if (before && after && after.type === Tone.TimelineSignal.Type.Linear && before.value !== after.value) {\n\t            var val0 = this.getValueAtTime(before.time);\n\t            var val1 = this.getValueAtTime(after.time);\n\t            var delta = (val1 - val0) / (after.time - before.time);\n\t            var k = Math.sqrt(Math.pow(val0, 2) - 2 * delta * (before.ticks - tick));\n\t            var sol1 = (-val0 + k) / delta;\n\t            var sol2 = (-val0 - k) / delta;\n\t            return (sol1 > 0 ? sol1 : sol2) + before.time;\n\t        } else if (before) {\n\t            if (before.value === 0) {\n\t                return Infinity;\n\t            } else {\n\t                return before.time + (tick - before.ticks) / before.value;\n\t            }\n\t        } else {\n\t            return tick / this._initial;\n\t        }\n\t    };\n\t    return Tone.TickSignal;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  A Timeline State. Provides the methods: <code>setStateAtTime(\"state\", time)</code>\n\t\t *          and <code>getValueAtTime(time)</code>.\n\t\t *\n\t\t *  @extends {Tone.Timeline}\n\t\t *  @param {String} initial The initial state of the TimelineState. \n\t\t *                          Defaults to <code>undefined</code>\n\t\t */\n\t    Tone.TimelineState = function (initial) {\n\t        Tone.Timeline.call(this);\n\t        /**\n\t\t\t *  The initial state\n\t\t\t *  @private\n\t\t\t *  @type {String}\n\t\t\t */\n\t        this._initial = initial;\n\t    };\n\t    Tone.extend(Tone.TimelineState, Tone.Timeline);\n\t    /**\n\t\t *  Returns the scheduled state scheduled before or at\n\t\t *  the given time.\n\t\t *  @param  {Number}  time  The time to query.\n\t\t *  @return  {String}  The name of the state input in setStateAtTime.\n\t\t */\n\t    Tone.TimelineState.prototype.getValueAtTime = function (time) {\n\t        var event = this.get(time);\n\t        if (event !== null) {\n\t            return event.state;\n\t        } else {\n\t            return this._initial;\n\t        }\n\t    };\n\t    /**\n\t\t *  Add a state to the timeline.\n\t\t *  @param  {String}  state The name of the state to set.\n\t\t *  @param  {Number}  time  The time to query.\n\t\t *  @returns {Tone.TimelineState} this\n\t\t */\n\t    Tone.TimelineState.prototype.setStateAtTime = function (state, time) {\n\t        this.add({\n\t            'state': state,\n\t            'time': time\n\t        });\n\t        return this;\n\t    };\n\t    return Tone.TimelineState;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  A sample accurate clock which provides a callback at the given rate. \n\t\t *          While the callback is not sample-accurate (it is still susceptible to\n\t\t *          loose JS timing), the time passed in as the argument to the callback\n\t\t *          is precise. For most applications, it is better to use Tone.Transport\n\t\t *          instead of the Clock by itself since you can synchronize multiple callbacks.\n\t\t *\n\t\t * \t@constructor\n\t\t *  @extends {Tone.Emitter}\n\t\t * \t@param {function} callback The callback to be invoked with the time of the audio event\n\t\t * \t@param {Frequency} frequency The rate of the callback\n\t\t * \t@example\n\t\t * //the callback will be invoked approximately once a second\n\t\t * //and will print the time exactly once a second apart.\n\t\t * var clock = new Tone.Clock(function(time){\n\t\t * \tconsole.log(time);\n\t\t * }, 1);\n\t\t */\n\t    Tone.Clock = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'callback',\n\t            'frequency'\n\t        ], Tone.Clock);\n\t        Tone.Emitter.call(this);\n\t        /**\n\t\t\t *  The callback function to invoke at the scheduled tick.\n\t\t\t *  @type  {Function}\n\t\t\t */\n\t        this.callback = options.callback;\n\t        /**\n\t\t\t *  The next time the callback is scheduled.\n\t\t\t *  @type {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._nextTick = 0;\n\t        /**\n\t\t\t *  The last state of the clock.\n\t\t\t *  @type  {State}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lastState = Tone.State.Stopped;\n\t        /**\n\t\t\t *  The rate the callback function should be invoked. \n\t\t\t *  @type  {BPM}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.TickSignal(options.frequency, Tone.Type.Frequency);\n\t        this._readOnly('frequency');\n\t        /**\n\t\t\t *  The number of times the callback was invoked. Starts counting at 0\n\t\t\t *  and increments after the callback was invoked. \n\t\t\t *  @type {Ticks}\n\t\t\t *  @readOnly\n\t\t\t */\n\t        this.ticks = 0;\n\t        /**\n\t\t\t *  The state timeline\n\t\t\t *  @type {Tone.TimelineState}\n\t\t\t *  @private\n\t\t\t */\n\t        this._state = new Tone.TimelineState(Tone.State.Stopped);\n\t        /**\n\t\t\t *  The loop function bound to its context. \n\t\t\t *  This is necessary to remove the event in the end.\n\t\t\t *  @type {Function}\n\t\t\t *  @private\n\t\t\t */\n\t        this._boundLoop = this._loop.bind(this);\n\t        //bind a callback to the worker thread\n\t        this.context.on('tick', this._boundLoop);\n\t    };\n\t    Tone.extend(Tone.Clock, Tone.Emitter);\n\t    /**\n\t\t *  The defaults\n\t\t *  @const\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.Clock.defaults = {\n\t        'callback': Tone.noOp,\n\t        'frequency': 1\n\t    };\n\t    /**\n\t\t *  Returns the playback state of the source, either \"started\", \"stopped\" or \"paused\".\n\t\t *  @type {Tone.State}\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.Clock#\n\t\t *  @name state\n\t\t */\n\t    Object.defineProperty(Tone.Clock.prototype, 'state', {\n\t        get: function () {\n\t            return this._state.getValueAtTime(this.now());\n\t        }\n\t    });\n\t    /**\n\t\t *  Start the clock at the given time. Optionally pass in an offset\n\t\t *  of where to start the tick counter from.\n\t\t *  @param  {Time=}  time    The time the clock should start\n\t\t *  @param  {Ticks=}  offset  Where the tick counter starts counting from.\n\t\t *  @return  {Tone.Clock}  this\n\t\t */\n\t    Tone.Clock.prototype.start = function (time, offset) {\n\t        time = this.toSeconds(time);\n\t        if (this._state.getValueAtTime(time) !== Tone.State.Started) {\n\t            this._state.setStateAtTime(Tone.State.Started, time);\n\t            this._state.get(time).offset = offset;\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Stop the clock. Stopping the clock resets the tick counter to 0.\n\t\t *  @param {Time} [time=now] The time when the clock should stop.\n\t\t *  @returns {Tone.Clock} this\n\t\t *  @example\n\t\t * clock.stop();\n\t\t */\n\t    Tone.Clock.prototype.stop = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._state.cancel(time);\n\t        this._state.setStateAtTime(Tone.State.Stopped, time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Pause the clock. Pausing does not reset the tick counter.\n\t\t *  @param {Time} [time=now] The time when the clock should stop.\n\t\t *  @returns {Tone.Clock} this\n\t\t */\n\t    Tone.Clock.prototype.pause = function (time) {\n\t        time = this.toSeconds(time);\n\t        if (this._state.getValueAtTime(time) === Tone.State.Started) {\n\t            this._state.setStateAtTime(Tone.State.Paused, time);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  The scheduling loop.\n\t\t *  @private\n\t\t */\n\t    Tone.Clock.prototype._loop = function () {\n\t        //the end of the update interval\n\t        var endTime = this.now() + this.context.updateInterval;\n\t        //the current event at the time of the loop\n\t        var event = this._state.get(endTime);\n\t        if (event) {\n\t            //state change events\n\t            if (event.state !== this._lastState) {\n\t                this._lastState = event.state;\n\t                switch (event.state) {\n\t                case Tone.State.Started:\n\t                    if (!Tone.isUndef(event.offset)) {\n\t                        this.ticks = event.offset;\n\t                    }\n\t                    this._nextTick = event.time;\n\t                    this.emit('start', event.time, this.ticks);\n\t                    break;\n\t                case Tone.State.Stopped:\n\t                    this.ticks = 0;\n\t                    this.emit('stop', event.time);\n\t                    break;\n\t                case Tone.State.Paused:\n\t                    this.emit('pause', event.time);\n\t                    break;\n\t                }\n\t            }\n\t            //all the tick events\n\t            while (endTime > this._nextTick && this._state) {\n\t                var tickTime = this._nextTick;\n\t                if (this.frequency) {\n\t                    this._nextTick += this.frequency.getDurationOfTicks(1, this._nextTick);\n\t                    if (event.state === Tone.State.Started) {\n\t                        try {\n\t                            this.callback(tickTime);\n\t                            this.ticks++;\n\t                        } catch (e) {\n\t                            this.ticks++;\n\t                            throw e;\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  Returns the scheduled state at the given time.\n\t\t *  @param  {Time}  time  The time to query.\n\t\t *  @return  {String}  The name of the state input in setStateAtTime.\n\t\t *  @example\n\t\t * clock.start(\"+0.1\");\n\t\t * clock.getStateAtTime(\"+0.1\"); //returns \"started\"\n\t\t */\n\t    Tone.Clock.prototype.getStateAtTime = function (time) {\n\t        time = this.toSeconds(time);\n\t        return this._state.getValueAtTime(time);\n\t    };\n\t    /**\n\t\t *  Clean up\n\t\t *  @returns {Tone.Clock} this\n\t\t */\n\t    Tone.Clock.prototype.dispose = function () {\n\t        Tone.Emitter.prototype.dispose.call(this);\n\t        this.context.off('tick', this._boundLoop);\n\t        this._writable('frequency');\n\t        this.frequency.dispose();\n\t        this.frequency = null;\n\t        this._boundLoop = null;\n\t        this._nextTick = Infinity;\n\t        this.callback = null;\n\t        this._state.dispose();\n\t        this._state = null;\n\t    };\n\t    return Tone.Clock;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Similar to Tone.Timeline, but all events represent\n\t\t *         intervals with both \"time\" and \"duration\" times. The \n\t\t *         events are placed in a tree structure optimized\n\t\t *         for querying an intersection point with the timeline\n\t\t *         events. Internally uses an [Interval Tree](https://en.wikipedia.org/wiki/Interval_tree)\n\t\t *         to represent the data.\n\t\t *  @extends {Tone}\n\t\t */\n\t    Tone.IntervalTimeline = function () {\n\t        Tone.call(this);\n\t        /**\n\t\t\t *  The root node of the inteval tree\n\t\t\t *  @type  {IntervalNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._root = null;\n\t        /**\n\t\t\t *  Keep track of the length of the timeline.\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._length = 0;\n\t    };\n\t    Tone.extend(Tone.IntervalTimeline);\n\t    /**\n\t\t *  The event to add to the timeline. All events must \n\t\t *  have a time and duration value\n\t\t *  @param  {Object}  event  The event to add to the timeline\n\t\t *  @return  {Tone.IntervalTimeline}  this\n\t\t */\n\t    Tone.IntervalTimeline.prototype.add = function (event) {\n\t        if (Tone.isUndef(event.time) || Tone.isUndef(event.duration)) {\n\t            throw new Error('Tone.IntervalTimeline: events must have time and duration parameters');\n\t        }\n\t        var node = new IntervalNode(event.time, event.time + event.duration, event);\n\t        if (this._root === null) {\n\t            this._root = node;\n\t        } else {\n\t            this._root.insert(node);\n\t        }\n\t        this._length++;\n\t        // Restructure tree to be balanced\n\t        while (node !== null) {\n\t            node.updateHeight();\n\t            node.updateMax();\n\t            this._rebalance(node);\n\t            node = node.parent;\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Remove an event from the timeline.\n\t\t *  @param  {Object}  event  The event to remove from the timeline\n\t\t *  @return  {Tone.IntervalTimeline}  this\n\t\t */\n\t    Tone.IntervalTimeline.prototype.remove = function (event) {\n\t        if (this._root !== null) {\n\t            var results = [];\n\t            this._root.search(event.time, results);\n\t            for (var i = 0; i < results.length; i++) {\n\t                var node = results[i];\n\t                if (node.event === event) {\n\t                    this._removeNode(node);\n\t                    this._length--;\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  The number of items in the timeline.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.IntervalTimeline#\n\t\t *  @name length\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.IntervalTimeline.prototype, 'length', {\n\t        get: function () {\n\t            return this._length;\n\t        }\n\t    });\n\t    /**\n\t\t *  Remove events whose time time is after the given time\n\t\t *  @param  {Number}  time  The time to query.\n\t\t *  @returns {Tone.IntervalTimeline} this\n\t\t */\n\t    Tone.IntervalTimeline.prototype.cancel = function (after) {\n\t        this.forEachAfter(after, function (event) {\n\t            this.remove(event);\n\t        }.bind(this));\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Set the root node as the given node\n\t\t *  @param {IntervalNode} node\n\t\t *  @private\n\t\t */\n\t    Tone.IntervalTimeline.prototype._setRoot = function (node) {\n\t        this._root = node;\n\t        if (this._root !== null) {\n\t            this._root.parent = null;\n\t        }\n\t    };\n\t    /**\n\t\t *  Replace the references to the node in the node's parent\n\t\t *  with the replacement node.\n\t\t *  @param  {IntervalNode}  node        \n\t\t *  @param  {IntervalNode}  replacement \n\t\t *  @private\n\t\t */\n\t    Tone.IntervalTimeline.prototype._replaceNodeInParent = function (node, replacement) {\n\t        if (node.parent !== null) {\n\t            if (node.isLeftChild()) {\n\t                node.parent.left = replacement;\n\t            } else {\n\t                node.parent.right = replacement;\n\t            }\n\t            this._rebalance(node.parent);\n\t        } else {\n\t            this._setRoot(replacement);\n\t        }\n\t    };\n\t    /**\n\t\t *  Remove the node from the tree and replace it with \n\t\t *  a successor which follows the schema.\n\t\t *  @param  {IntervalNode}  node\n\t\t *  @private\n\t\t */\n\t    Tone.IntervalTimeline.prototype._removeNode = function (node) {\n\t        if (node.left === null && node.right === null) {\n\t            this._replaceNodeInParent(node, null);\n\t        } else if (node.right === null) {\n\t            this._replaceNodeInParent(node, node.left);\n\t        } else if (node.left === null) {\n\t            this._replaceNodeInParent(node, node.right);\n\t        } else {\n\t            var balance = node.getBalance();\n\t            var replacement, temp;\n\t            if (balance > 0) {\n\t                if (node.left.right === null) {\n\t                    replacement = node.left;\n\t                    replacement.right = node.right;\n\t                    temp = replacement;\n\t                } else {\n\t                    replacement = node.left.right;\n\t                    while (replacement.right !== null) {\n\t                        replacement = replacement.right;\n\t                    }\n\t                    replacement.parent.right = replacement.left;\n\t                    temp = replacement.parent;\n\t                    replacement.left = node.left;\n\t                    replacement.right = node.right;\n\t                }\n\t            } else {\n\t                if (node.right.left === null) {\n\t                    replacement = node.right;\n\t                    replacement.left = node.left;\n\t                    temp = replacement;\n\t                } else {\n\t                    replacement = node.right.left;\n\t                    while (replacement.left !== null) {\n\t                        replacement = replacement.left;\n\t                    }\n\t                    replacement.parent = replacement.parent;\n\t                    replacement.parent.left = replacement.right;\n\t                    temp = replacement.parent;\n\t                    replacement.left = node.left;\n\t                    replacement.right = node.right;\n\t                }\n\t            }\n\t            if (node.parent !== null) {\n\t                if (node.isLeftChild()) {\n\t                    node.parent.left = replacement;\n\t                } else {\n\t                    node.parent.right = replacement;\n\t                }\n\t            } else {\n\t                this._setRoot(replacement);\n\t            }\n\t            // this._replaceNodeInParent(node, replacement);\n\t            this._rebalance(temp);\n\t        }\n\t        node.dispose();\n\t    };\n\t    /**\n\t\t *  Rotate the tree to the left\n\t\t *  @param  {IntervalNode}  node\n\t\t *  @private\n\t\t */\n\t    Tone.IntervalTimeline.prototype._rotateLeft = function (node) {\n\t        var parent = node.parent;\n\t        var isLeftChild = node.isLeftChild();\n\t        // Make node.right the new root of this sub tree (instead of node)\n\t        var pivotNode = node.right;\n\t        node.right = pivotNode.left;\n\t        pivotNode.left = node;\n\t        if (parent !== null) {\n\t            if (isLeftChild) {\n\t                parent.left = pivotNode;\n\t            } else {\n\t                parent.right = pivotNode;\n\t            }\n\t        } else {\n\t            this._setRoot(pivotNode);\n\t        }\n\t    };\n\t    /**\n\t\t *  Rotate the tree to the right\n\t\t *  @param  {IntervalNode}  node\n\t\t *  @private\n\t\t */\n\t    Tone.IntervalTimeline.prototype._rotateRight = function (node) {\n\t        var parent = node.parent;\n\t        var isLeftChild = node.isLeftChild();\n\t        // Make node.left the new root of this sub tree (instead of node)\n\t        var pivotNode = node.left;\n\t        node.left = pivotNode.right;\n\t        pivotNode.right = node;\n\t        if (parent !== null) {\n\t            if (isLeftChild) {\n\t                parent.left = pivotNode;\n\t            } else {\n\t                parent.right = pivotNode;\n\t            }\n\t        } else {\n\t            this._setRoot(pivotNode);\n\t        }\n\t    };\n\t    /**\n\t\t *  Balance the BST\n\t\t *  @param  {IntervalNode}  node\n\t\t *  @private\n\t\t */\n\t    Tone.IntervalTimeline.prototype._rebalance = function (node) {\n\t        var balance = node.getBalance();\n\t        if (balance > 1) {\n\t            if (node.left.getBalance() < 0) {\n\t                this._rotateLeft(node.left);\n\t            } else {\n\t                this._rotateRight(node);\n\t            }\n\t        } else if (balance < -1) {\n\t            if (node.right.getBalance() > 0) {\n\t                this._rotateRight(node.right);\n\t            } else {\n\t                this._rotateLeft(node);\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  Get an event whose time and duration span the give time. Will\n\t\t *  return the match whose \"time\" value is closest to the given time.\n\t\t *  @param  {Object}  event  The event to add to the timeline\n\t\t *  @return  {Object}  The event which spans the desired time\n\t\t */\n\t    Tone.IntervalTimeline.prototype.get = function (time) {\n\t        if (this._root !== null) {\n\t            var results = [];\n\t            this._root.search(time, results);\n\t            if (results.length > 0) {\n\t                var max = results[0];\n\t                for (var i = 1; i < results.length; i++) {\n\t                    if (results[i].low > max.low) {\n\t                        max = results[i];\n\t                    }\n\t                }\n\t                return max.event;\n\t            }\n\t        }\n\t        return null;\n\t    };\n\t    /**\n\t\t *  Iterate over everything in the timeline.\n\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t *  @returns {Tone.IntervalTimeline} this\n\t\t */\n\t    Tone.IntervalTimeline.prototype.forEach = function (callback) {\n\t        if (this._root !== null) {\n\t            var allNodes = [];\n\t            this._root.traverse(function (node) {\n\t                allNodes.push(node);\n\t            });\n\t            for (var i = 0; i < allNodes.length; i++) {\n\t                var ev = allNodes[i].event;\n\t                if (ev) {\n\t                    callback(ev);\n\t                }\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Iterate over everything in the array in which the given time\n\t\t *  overlaps with the time and duration time of the event.\n\t\t *  @param  {Number}  time The time to check if items are overlapping\n\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t *  @returns {Tone.IntervalTimeline} this\n\t\t */\n\t    Tone.IntervalTimeline.prototype.forEachAtTime = function (time, callback) {\n\t        if (this._root !== null) {\n\t            var results = [];\n\t            this._root.search(time, results);\n\t            for (var i = results.length - 1; i >= 0; i--) {\n\t                var ev = results[i].event;\n\t                if (ev) {\n\t                    callback(ev);\n\t                }\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Iterate over everything in the array in which the time is greater\n\t\t *  than the given time.\n\t\t *  @param  {Number}  time The time to check if items are before\n\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t *  @returns {Tone.IntervalTimeline} this\n\t\t */\n\t    Tone.IntervalTimeline.prototype.forEachAfter = function (time, callback) {\n\t        if (this._root !== null) {\n\t            var results = [];\n\t            this._root.searchAfter(time, results);\n\t            for (var i = results.length - 1; i >= 0; i--) {\n\t                var ev = results[i].event;\n\t                callback(ev);\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Clean up\n\t\t *  @return  {Tone.IntervalTimeline}  this\n\t\t */\n\t    Tone.IntervalTimeline.prototype.dispose = function () {\n\t        var allNodes = [];\n\t        if (this._root !== null) {\n\t            this._root.traverse(function (node) {\n\t                allNodes.push(node);\n\t            });\n\t        }\n\t        for (var i = 0; i < allNodes.length; i++) {\n\t            allNodes[i].dispose();\n\t        }\n\t        allNodes = null;\n\t        this._root = null;\n\t        return this;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tINTERVAL NODE HELPER\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Represents a node in the binary search tree, with the addition\n\t\t *  of a \"high\" value which keeps track of the highest value of\n\t\t *  its children. \n\t\t *  References: \n\t\t *  https://brooknovak.wordpress.com/2013/12/07/augmented-interval-tree-in-c/\n\t\t *  http://www.mif.vu.lt/~valdas/ALGORITMAI/LITERATURA/Cormen/Cormen.pdf\n\t\t *  @param {Number} low\n\t\t *  @param {Number} high\n\t\t *  @private\n\t\t */\n\t    var IntervalNode = function (low, high, event) {\n\t        //the event container\n\t        this.event = event;\n\t        //the low value\n\t        this.low = low;\n\t        //the high value\n\t        this.high = high;\n\t        //the high value for this and all child nodes\n\t        this.max = this.high;\n\t        //the nodes to the left\n\t        this._left = null;\n\t        //the nodes to the right\n\t        this._right = null;\n\t        //the parent node\n\t        this.parent = null;\n\t        //the number of child nodes\n\t        this.height = 0;\n\t    };\n\t    /** \n\t\t *  Insert a node into the correct spot in the tree\n\t\t *  @param  {IntervalNode}  node\n\t\t */\n\t    IntervalNode.prototype.insert = function (node) {\n\t        if (node.low <= this.low) {\n\t            if (this.left === null) {\n\t                this.left = node;\n\t            } else {\n\t                this.left.insert(node);\n\t            }\n\t        } else {\n\t            if (this.right === null) {\n\t                this.right = node;\n\t            } else {\n\t                this.right.insert(node);\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  Search the tree for nodes which overlap \n\t\t *  with the given point\n\t\t *  @param  {Number}  point  The point to query\n\t\t *  @param  {Array}  results  The array to put the results\n\t\t */\n\t    IntervalNode.prototype.search = function (point, results) {\n\t        // If p is to the right of the rightmost point of any interval\n\t        // in this node and all children, there won't be any matches.\n\t        if (point > this.max) {\n\t            return;\n\t        }\n\t        // Search left children\n\t        if (this.left !== null) {\n\t            this.left.search(point, results);\n\t        }\n\t        // Check this node\n\t        if (this.low <= point && this.high > point) {\n\t            results.push(this);\n\t        }\n\t        // If p is to the left of the time of this interval,\n\t        // then it can't be in any child to the right.\n\t        if (this.low > point) {\n\t            return;\n\t        }\n\t        // Search right children\n\t        if (this.right !== null) {\n\t            this.right.search(point, results);\n\t        }\n\t    };\n\t    /**\n\t\t *  Search the tree for nodes which are less \n\t\t *  than the given point\n\t\t *  @param  {Number}  point  The point to query\n\t\t *  @param  {Array}  results  The array to put the results\n\t\t */\n\t    IntervalNode.prototype.searchAfter = function (point, results) {\n\t        // Check this node\n\t        if (this.low >= point) {\n\t            results.push(this);\n\t            if (this.left !== null) {\n\t                this.left.searchAfter(point, results);\n\t            }\n\t        }\n\t        // search the right side\n\t        if (this.right !== null) {\n\t            this.right.searchAfter(point, results);\n\t        }\n\t    };\n\t    /**\n\t\t *  Invoke the callback on this element and both it's branches\n\t\t *  @param  {Function}  callback\n\t\t */\n\t    IntervalNode.prototype.traverse = function (callback) {\n\t        callback(this);\n\t        if (this.left !== null) {\n\t            this.left.traverse(callback);\n\t        }\n\t        if (this.right !== null) {\n\t            this.right.traverse(callback);\n\t        }\n\t    };\n\t    /**\n\t\t *  Update the height of the node\n\t\t */\n\t    IntervalNode.prototype.updateHeight = function () {\n\t        if (this.left !== null && this.right !== null) {\n\t            this.height = Math.max(this.left.height, this.right.height) + 1;\n\t        } else if (this.right !== null) {\n\t            this.height = this.right.height + 1;\n\t        } else if (this.left !== null) {\n\t            this.height = this.left.height + 1;\n\t        } else {\n\t            this.height = 0;\n\t        }\n\t    };\n\t    /**\n\t\t *  Update the height of the node\n\t\t */\n\t    IntervalNode.prototype.updateMax = function () {\n\t        this.max = this.high;\n\t        if (this.left !== null) {\n\t            this.max = Math.max(this.max, this.left.max);\n\t        }\n\t        if (this.right !== null) {\n\t            this.max = Math.max(this.max, this.right.max);\n\t        }\n\t    };\n\t    /**\n\t\t *  The balance is how the leafs are distributed on the node\n\t\t *  @return  {Number}  Negative numbers are balanced to the right\n\t\t */\n\t    IntervalNode.prototype.getBalance = function () {\n\t        var balance = 0;\n\t        if (this.left !== null && this.right !== null) {\n\t            balance = this.left.height - this.right.height;\n\t        } else if (this.left !== null) {\n\t            balance = this.left.height + 1;\n\t        } else if (this.right !== null) {\n\t            balance = -(this.right.height + 1);\n\t        }\n\t        return balance;\n\t    };\n\t    /**\n\t\t *  @returns {Boolean} true if this node is the left child\n\t\t *  of its parent\n\t\t */\n\t    IntervalNode.prototype.isLeftChild = function () {\n\t        return this.parent !== null && this.parent.left === this;\n\t    };\n\t    /**\n\t\t *  get/set the left node\n\t\t *  @type {IntervalNode}\n\t\t */\n\t    Object.defineProperty(IntervalNode.prototype, 'left', {\n\t        get: function () {\n\t            return this._left;\n\t        },\n\t        set: function (node) {\n\t            this._left = node;\n\t            if (node !== null) {\n\t                node.parent = this;\n\t            }\n\t            this.updateHeight();\n\t            this.updateMax();\n\t        }\n\t    });\n\t    /**\n\t\t *  get/set the right node\n\t\t *  @type {IntervalNode}\n\t\t */\n\t    Object.defineProperty(IntervalNode.prototype, 'right', {\n\t        get: function () {\n\t            return this._right;\n\t        },\n\t        set: function (node) {\n\t            this._right = node;\n\t            if (node !== null) {\n\t                node.parent = this;\n\t            }\n\t            this.updateHeight();\n\t            this.updateMax();\n\t        }\n\t    });\n\t    /**\n\t\t *  null out references.\n\t\t */\n\t    IntervalNode.prototype.dispose = function () {\n\t        this.parent = null;\n\t        this._left = null;\n\t        this._right = null;\n\t        this.event = null;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tEND INTERVAL NODE HELPER\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    return Tone.IntervalTimeline;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class Tone.TransportEvent is an internal class used by (Tone.Transport)[Transport]\n\t\t *         to schedule events. Do no invoke this class directly, it is\n\t\t *         handled from within Tone.Transport.\n\t\t *  @extends {Tone}\n\t\t *  @param {Object} options\n\t\t */\n\t    Tone.TransportEvent = function (Transport, options) {\n\t        options = Tone.defaultArg(options, Tone.TransportEvent.defaults);\n\t        Tone.call(this);\n\t        /**\n\t\t\t * Reference to the Transport that created it\n\t\t\t * @type {Tone.Transport}\n\t\t\t */\n\t        this.Transport = Transport;\n\t        /**\n\t\t\t * The unique id of the event\n\t\t\t * @type {Number}\n\t\t\t */\n\t        this.id = Tone.TransportEvent._eventId++;\n\t        /**\n\t\t\t * The time the event starts\n\t\t\t * @type {Ticks}\n\t\t\t */\n\t        this.time = options.time;\n\t        /**\n\t\t\t * The callback to invoke\n\t\t\t * @type {Function}\n\t\t\t */\n\t        this.callback = options.callback;\n\t        /**\n\t\t\t * If the event should be removed after being created.\n\t\t\t * @type {Boolean}\n\t\t\t * @private\n\t\t\t */\n\t        this._once = options.once;\n\t    };\n\t    Tone.extend(Tone.TransportEvent);\n\t    /**\n\t\t * The defaults\n\t\t * @static\n\t\t * @type {Object}\n\t\t */\n\t    Tone.TransportEvent.defaults = {\n\t        'once': false,\n\t        'callback': Tone.noOp\n\t    };\n\t    /**\n\t\t * Current ID counter\n\t\t * @private\n\t\t * @static\n\t\t * @type {Number}\n\t\t */\n\t    Tone.TransportEvent._eventId = 0;\n\t    /**\n\t\t * Invoke the callback even callback.\n\t\t * @param  {Time} time  The AudioContext time in seconds of the event\n\t\t */\n\t    Tone.TransportEvent.prototype.invoke = function (time) {\n\t        if (this.callback) {\n\t            this.callback(time);\n\t            if (this._once && this.Transport) {\n\t                this.Transport.clear(this.id);\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t * Clean up\n\t\t * @return {Tone.TransportEvent} this\n\t\t */\n\t    Tone.TransportEvent.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this.Transport = null;\n\t        this.callback = null;\n\t        return this;\n\t    };\n\t    return Tone.TransportEvent;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class Tone.TransportRepeatEvent is an internal class used by Tone.Transport\n\t\t *         to schedule repeat events. This class should not be instantiated directly.\n\t\t *  @extends {Tone.TransportEvent}\n\t\t *  @param {Object} options\n\t\t */\n\t    Tone.TransportRepeatEvent = function (Transport, options) {\n\t        Tone.TransportEvent.call(this, Transport, options);\n\t        options = Tone.defaultArg(options, Tone.TransportRepeatEvent.defaults);\n\t        /**\n\t\t\t * When the event should stop repeating\n\t\t\t * @type {Ticks}\n\t\t\t * @private\n\t\t\t */\n\t        this.duration = options.duration;\n\t        /**\n\t\t\t * The interval of the repeated event\n\t\t\t * @type {Ticks}\n\t\t\t * @private\n\t\t\t */\n\t        this._interval = options.interval;\n\t        /**\n\t\t\t * The ID of the current timeline event\n\t\t\t * @type {Number}\n\t\t\t * @private\n\t\t\t */\n\t        this._currentId = -1;\n\t        /**\n\t\t\t * The ID of the next timeline event\n\t\t\t * @type {Number}\n\t\t\t * @private\n\t\t\t */\n\t        this._nextId = -1;\n\t        /**\n\t\t\t  * The time of the next event\n\t\t\t  * @type {Ticks}\n\t\t\t  * @private\n\t\t\t  */\n\t        this._nextTick = this.time;\n\t        /**\n\t\t\t * a reference to the bound start method\n\t\t\t * @type {Function}\n\t\t\t * @private\n\t\t\t */\n\t        this._boundRestart = this._restart.bind(this);\n\t        this.Transport.on('start loopStart', this._boundRestart);\n\t        this._restart();\n\t    };\n\t    Tone.extend(Tone.TransportRepeatEvent, Tone.TransportEvent);\n\t    /**\n\t\t * The defaults\n\t\t * @static\n\t\t * @type {Object}\n\t\t */\n\t    Tone.TransportRepeatEvent.defaults = {\n\t        'duration': Infinity,\n\t        'interval': 1\n\t    };\n\t    /**\n\t\t * Invoke the callback. Returns the tick time which\n\t\t * the next event should be scheduled at.\n\t\t * @param  {Number} time  The AudioContext time in seconds of the event\n\t\t */\n\t    Tone.TransportRepeatEvent.prototype.invoke = function (time) {\n\t        //create more events if necessary\n\t        this._createEvents();\n\t        //call the super class\n\t        Tone.TransportEvent.prototype.invoke.call(this, time);\n\t    };\n\t    /**\n\t\t * Push more events onto the timeline to keep up with the position of the timeline\n\t\t * @private\n\t\t */\n\t    Tone.TransportRepeatEvent.prototype._createEvents = function () {\n\t        // schedule the next event\n\t        var ticks = this.Transport.ticks;\n\t        if (ticks >= this.time && ticks >= this._nextTick && this._nextTick + this._interval < this.time + this.duration) {\n\t            this._nextTick += this._interval;\n\t            this._currentId = this._nextId;\n\t            this._nextId = this.Transport.scheduleOnce(this.invoke.bind(this), Tone.TransportTime(this._nextTick, 'i'));\n\t        }\n\t    };\n\t    /**\n\t\t * Push more events onto the timeline to keep up with the position of the timeline\n\t\t * @private\n\t\t */\n\t    Tone.TransportRepeatEvent.prototype._restart = function () {\n\t        this.Transport.clear(this._currentId);\n\t        this.Transport.clear(this._nextId);\n\t        var ticks = this.Transport.ticks;\n\t        this._nextTick = this.time;\n\t        if (ticks > this.time) {\n\t            this._nextTick = this.time + Math.ceil((ticks - this.time) / this._interval) * this._interval;\n\t        }\n\t        this._currentId = this.Transport.scheduleOnce(this.invoke.bind(this), Tone.TransportTime(this._nextTick, 'i'));\n\t        this._nextTick += this._interval;\n\t        this._nextId = this.Transport.scheduleOnce(this.invoke.bind(this), Tone.TransportTime(this._nextTick, 'i'));\n\t    };\n\t    /**\n\t\t * Clean up\n\t\t * @return {Tone.TransportRepeatEvent} this\n\t\t */\n\t    Tone.TransportRepeatEvent.prototype.dispose = function () {\n\t        this.Transport.clear(this._currentId);\n\t        this.Transport.clear(this._nextId);\n\t        this.Transport.off('start loopStart', this._boundRestart);\n\t        this._boundCreateEvents = null;\n\t        Tone.TransportEvent.prototype.dispose.call(this);\n\t        return this;\n\t    };\n\t    return Tone.TransportRepeatEvent;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Transport for timing musical events.\n\t\t *          Supports tempo curves and time changes. Unlike browser-based timing (setInterval, requestAnimationFrame)\n\t\t *          Tone.Transport timing events pass in the exact time of the scheduled event\n\t\t *          in the argument of the callback function. Pass that time value to the object\n\t\t *          you're scheduling. <br><br>\n\t\t *          A single transport is created for you when the library is initialized.\n\t\t *          <br><br>\n\t\t *          The transport emits the events: \"start\", \"stop\", \"pause\", and \"loop\" which are\n\t\t *          called with the time of that event as the argument.\n\t\t *\n\t\t *  @extends {Tone.Emitter}\n\t\t *  @singleton\n\t\t *  @example\n\t\t * //repeated event every 8th note\n\t\t * Tone.Transport.scheduleRepeat(function(time){\n\t\t * \t//do something with the time\n\t\t * }, \"8n\");\n\t\t *  @example\n\t\t * //schedule an event on the 16th measure\n\t\t * Tone.Transport.schedule(function(time){\n\t\t * \t//do something with the time\n\t\t * }, \"16:0:0\");\n\t\t */\n\t    Tone.Transport = function () {\n\t        Tone.Emitter.call(this);\n\t        Tone.getContext(function () {\n\t            ///////////////////////////////////////////////////////////////////////\n\t            //\tLOOPING\n\t            //////////////////////////////////////////////////////////////////////\n\t            /**\n\t\t\t\t * \tIf the transport loops or not.\n\t\t\t\t *  @type {boolean}\n\t\t\t\t */\n\t            this.loop = false;\n\t            /**\n\t\t\t\t * \tThe loop start position in ticks\n\t\t\t\t *  @type {Ticks}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._loopStart = 0;\n\t            /**\n\t\t\t\t * \tThe loop end position in ticks\n\t\t\t\t *  @type {Ticks}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._loopEnd = 0;\n\t            ///////////////////////////////////////////////////////////////////////\n\t            //\tCLOCK/TEMPO\n\t            //////////////////////////////////////////////////////////////////////\n\t            /**\n\t\t\t\t *  Pulses per quarter is the number of ticks per quarter note.\n\t\t\t\t *  @private\n\t\t\t\t *  @type  {Number}\n\t\t\t\t */\n\t            this._ppq = TransportConstructor.defaults.PPQ;\n\t            /**\n\t\t\t\t *  watches the main oscillator for timing ticks\n\t\t\t\t *  initially starts at 120bpm\n\t\t\t\t *  @private\n\t\t\t\t *  @type {Tone.Clock}\n\t\t\t\t */\n\t            this._clock = new Tone.Clock({\n\t                'callback': this._processTick.bind(this),\n\t                'frequency': 0\n\t            });\n\t            this._bindClockEvents();\n\t            /**\n\t\t\t\t *  The Beats Per Minute of the Transport.\n\t\t\t\t *  @type {BPM}\n\t\t\t\t *  @signal\n\t\t\t\t *  @example\n\t\t\t\t * Tone.Transport.bpm.value = 80;\n\t\t\t\t * //ramp the bpm to 120 over 10 seconds\n\t\t\t\t * Tone.Transport.bpm.rampTo(120, 10);\n\t\t\t\t */\n\t            this.bpm = this._clock.frequency;\n\t            this.bpm._toUnits = this._toUnits.bind(this);\n\t            this.bpm._fromUnits = this._fromUnits.bind(this);\n\t            this.bpm.units = Tone.Type.BPM;\n\t            this.bpm.value = TransportConstructor.defaults.bpm;\n\t            this._readOnly('bpm');\n\t            /**\n\t\t\t\t *  The time signature, or more accurately the numerator\n\t\t\t\t *  of the time signature over a denominator of 4.\n\t\t\t\t *  @type {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._timeSignature = TransportConstructor.defaults.timeSignature;\n\t            ///////////////////////////////////////////////////////////////////////\n\t            //\tTIMELINE EVENTS\n\t            //////////////////////////////////////////////////////////////////////\n\t            /**\n\t\t\t\t *  All the events in an object to keep track by ID\n\t\t\t\t *  @type {Object}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._scheduledEvents = {};\n\t            /**\n\t\t\t\t * \tThe scheduled events.\n\t\t\t\t *  @type {Tone.Timeline}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._timeline = new Tone.Timeline();\n\t            /**\n\t\t\t\t *  Repeated events\n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._repeatedEvents = new Tone.IntervalTimeline();\n\t            /**\n\t\t\t\t *  All of the synced Signals\n\t\t\t\t *  @private\n\t\t\t\t *  @type {Array}\n\t\t\t\t */\n\t            this._syncedSignals = [];\n\t            ///////////////////////////////////////////////////////////////////////\n\t            //\tSWING\n\t            //////////////////////////////////////////////////////////////////////\n\t            /**\n\t\t\t\t *  The subdivision of the swing\n\t\t\t\t *  @type  {Ticks}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._swingTicks = TransportConstructor.defaults.PPQ / 2;\n\t            //8n\n\t            /**\n\t\t\t\t *  The swing amount\n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._swingAmount = 0;\n\t        }.bind(this));\n\t    };\n\t    Tone.extend(Tone.Transport, Tone.Emitter);\n\t    /**\n\t\t *  the defaults\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t *  @static\n\t\t */\n\t    Tone.Transport.defaults = {\n\t        'bpm': 120,\n\t        'swing': 0,\n\t        'swingSubdivision': '8n',\n\t        'timeSignature': 4,\n\t        'loopStart': 0,\n\t        'loopEnd': '4m',\n\t        'PPQ': 192\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    //\tTICKS\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  called on every tick\n\t\t *  @param   {number} tickTime clock relative tick time\n\t\t *  @private\n\t\t */\n\t    Tone.Transport.prototype._processTick = function (tickTime) {\n\t        var ticks = this._clock.ticks;\n\t        //handle swing\n\t        if (this._swingAmount > 0 && ticks % this._ppq !== 0 && //not on a downbeat\n\t            ticks % (this._swingTicks * 2) !== 0) {\n\t            //add some swing\n\t            var progress = ticks % (this._swingTicks * 2) / (this._swingTicks * 2);\n\t            var amount = Math.sin(progress * Math.PI) * this._swingAmount;\n\t            tickTime += Tone.Time(this._swingTicks * 2 / 3, 'i') * amount;\n\t        }\n\t        //do the loop test\n\t        if (this.loop) {\n\t            if (ticks >= this._loopEnd) {\n\t                this.emit('loopEnd', tickTime);\n\t                this._clock.ticks = this._loopStart;\n\t                ticks = this._loopStart;\n\t                this.emit('loopStart', tickTime, this.seconds);\n\t                this.emit('loop', tickTime);\n\t            }\n\t        }\n\t        //invoke the timeline events scheduled on this tick\n\t        this._timeline.forEachAtTime(ticks, function (event) {\n\t            event.invoke(tickTime);\n\t        });\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    //\tSCHEDULABLE EVENTS\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Schedule an event along the timeline.\n\t\t *  @param {Function} callback The callback to be invoked at the time.\n\t\t *  @param {TransportTime}  time The time to invoke the callback at.\n\t\t *  @return {Number} The id of the event which can be used for canceling the event.\n\t\t *  @example\n\t\t * //trigger the callback when the Transport reaches the desired time\n\t\t * Tone.Transport.schedule(function(time){\n\t\t * \tenvelope.triggerAttack(time);\n\t\t * }, \"128i\");\n\t\t */\n\t    Tone.Transport.prototype.schedule = function (callback, time) {\n\t        var event = new Tone.TransportEvent(this, {\n\t            'time': this.toTicks(time),\n\t            'callback': callback\n\t        });\n\t        return this._addEvent(event, this._timeline);\n\t    };\n\t    /**\n\t\t *  Schedule a repeated event along the timeline. The event will fire\n\t\t *  at the `interval` starting at the `startTime` and for the specified\n\t\t *  `duration`.\n\t\t *  @param  {Function}  callback   The callback to invoke.\n\t\t *  @param  {Time}    interval   The duration between successive\n\t\t *                               callbacks. Must be a positive number.\n\t\t *  @param  {TimelinePosition=}    startTime  When along the timeline the events should\n\t\t *                               start being invoked.\n\t\t *  @param {Time} [duration=Infinity] How long the event should repeat.\n\t\t *  @return  {Number}    The ID of the scheduled event. Use this to cancel\n\t\t *                           the event.\n\t\t *  @example\n\t\t * //a callback invoked every eighth note after the first measure\n\t\t * Tone.Transport.scheduleRepeat(callback, \"8n\", \"1m\");\n\t\t */\n\t    Tone.Transport.prototype.scheduleRepeat = function (callback, interval, startTime, duration) {\n\t        var event = new Tone.TransportRepeatEvent(this, {\n\t            'callback': callback,\n\t            'interval': this.toTicks(interval),\n\t            'time': this.toTicks(startTime),\n\t            'duration': this.toTicks(Tone.defaultArg(duration, Infinity))\n\t        });\n\t        //kick it off if the Transport is started\n\t        return this._addEvent(event, this._repeatedEvents);\n\t    };\n\t    /**\n\t\t *  Schedule an event that will be removed after it is invoked.\n\t\t *  Note that if the given time is less than the current transport time,\n\t\t *  the event will be invoked immediately.\n\t\t *  @param {Function} callback The callback to invoke once.\n\t\t *  @param {TransportTime} time The time the callback should be invoked.\n\t\t *  @returns {Number} The ID of the scheduled event.\n\t\t */\n\t    Tone.Transport.prototype.scheduleOnce = function (callback, time) {\n\t        var event = new Tone.TransportEvent(this, {\n\t            'time': this.toTicks(time),\n\t            'callback': callback,\n\t            'once': true\n\t        });\n\t        return this._addEvent(event, this._timeline);\n\t    };\n\t    /**\n\t\t *  Clear the passed in event id from the timeline\n\t\t *  @param {Number} eventId The id of the event.\n\t\t *  @returns {Tone.Transport} this\n\t\t */\n\t    Tone.Transport.prototype.clear = function (eventId) {\n\t        if (this._scheduledEvents.hasOwnProperty(eventId)) {\n\t            var item = this._scheduledEvents[eventId.toString()];\n\t            item.timeline.remove(item.event);\n\t            item.event.dispose();\n\t            delete this._scheduledEvents[eventId.toString()];\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t * Add an event to the correct timeline. Keep track of the\n\t\t * timeline it was added to.\n\t\t * @param {Tone.TransportEvent}\tevent\n\t\t * @param {Tone.Timeline} timeline\n\t\t * @returns {Number} the event id which was just added\n\t\t * @private\n\t\t */\n\t    Tone.Transport.prototype._addEvent = function (event, timeline) {\n\t        this._scheduledEvents[event.id.toString()] = {\n\t            'event': event,\n\t            'timeline': timeline\n\t        };\n\t        timeline.add(event);\n\t        return event.id;\n\t    };\n\t    /**\n\t\t *  Remove scheduled events from the timeline after\n\t\t *  the given time. Repeated events will be removed\n\t\t *  if their startTime is after the given time\n\t\t *  @param {TransportTime} [after=0] Clear all events after\n\t\t *                          this time.\n\t\t *  @returns {Tone.Transport} this\n\t\t */\n\t    Tone.Transport.prototype.cancel = function (after) {\n\t        after = Tone.defaultArg(after, 0);\n\t        after = this.toTicks(after);\n\t        this._timeline.cancel(after);\n\t        this._repeatedEvents.cancel(after);\n\t        return this;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    //\tSTART/STOP/PAUSE\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Bind start/stop/pause events from the clock and emit them.\n\t\t *  @private\n\t\t */\n\t    Tone.Transport.prototype._bindClockEvents = function () {\n\t        this._clock.on('start', function (time, offset) {\n\t            offset = Tone.Time(this._clock.ticks, 'i').toSeconds();\n\t            this.emit('start', time, offset);\n\t        }.bind(this));\n\t        this._clock.on('stop', function (time) {\n\t            this.emit('stop', time);\n\t        }.bind(this));\n\t        this._clock.on('pause', function (time) {\n\t            this.emit('pause', time);\n\t        }.bind(this));\n\t    };\n\t    /**\n\t\t *  Returns the playback state of the source, either \"started\", \"stopped\", or \"paused\"\n\t\t *  @type {Tone.State}\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.Transport#\n\t\t *  @name state\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'state', {\n\t        get: function () {\n\t            return this._clock.getStateAtTime(this.now());\n\t        }\n\t    });\n\t    /**\n\t\t *  Start the transport and all sources synced to the transport.\n\t\t *  @param  {Time} [time=now] The time when the transport should start.\n\t\t *  @param  {TransportTime=} offset The timeline offset to start the transport.\n\t\t *  @returns {Tone.Transport} this\n\t\t *  @example\n\t\t * //start the transport in one second starting at beginning of the 5th measure.\n\t\t * Tone.Transport.start(\"+1\", \"4:0:0\");\n\t\t */\n\t    Tone.Transport.prototype.start = function (time, offset) {\n\t        //start the clock\n\t        if (!Tone.isUndef(offset)) {\n\t            offset = this.toTicks(offset);\n\t        }\n\t        this._clock.start(time, offset);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Stop the transport and all sources synced to the transport.\n\t\t *  @param  {Time} [time=now] The time when the transport should stop.\n\t\t *  @returns {Tone.Transport} this\n\t\t *  @example\n\t\t * Tone.Transport.stop();\n\t\t */\n\t    Tone.Transport.prototype.stop = function (time) {\n\t        this._clock.stop(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Pause the transport and all sources synced to the transport.\n\t\t *  @param  {Time} [time=now]\n\t\t *  @returns {Tone.Transport} this\n\t\t */\n\t    Tone.Transport.prototype.pause = function (time) {\n\t        this._clock.pause(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Toggle the current state of the transport. If it is\n\t\t * started, it will stop it, otherwise it will start the Transport.\n\t\t * @param  {Time=} time The time of the event\n\t\t * @return {Tone.Transport}      this\n\t\t */\n\t    Tone.Transport.prototype.toggle = function (time) {\n\t        time = this.toSeconds(time);\n\t        if (this._clock.getStateAtTime(time) !== Tone.State.Started) {\n\t            this.start(time);\n\t        } else {\n\t            this.stop(time);\n\t        }\n\t        return this;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    //\tSETTERS/GETTERS\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  The time signature as just the numerator over 4.\n\t\t *  For example 4/4 would be just 4 and 6/8 would be 3.\n\t\t *  @memberOf Tone.Transport#\n\t\t *  @type {Number|Array}\n\t\t *  @name timeSignature\n\t\t *  @example\n\t\t * //common time\n\t\t * Tone.Transport.timeSignature = 4;\n\t\t * // 7/8\n\t\t * Tone.Transport.timeSignature = [7, 8];\n\t\t * //this will be reduced to a single number\n\t\t * Tone.Transport.timeSignature; //returns 3.5\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'timeSignature', {\n\t        get: function () {\n\t            return this._timeSignature;\n\t        },\n\t        set: function (timeSig) {\n\t            if (Tone.isArray(timeSig)) {\n\t                timeSig = timeSig[0] / timeSig[1] * 4;\n\t            }\n\t            this._timeSignature = timeSig;\n\t        }\n\t    });\n\t    /**\n\t\t * When the Tone.Transport.loop = true, this is the starting position of the loop.\n\t\t * @memberOf Tone.Transport#\n\t\t * @type {TransportTime}\n\t\t * @name loopStart\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'loopStart', {\n\t        get: function () {\n\t            return Tone.TransportTime(this._loopStart, 'i').toSeconds();\n\t        },\n\t        set: function (startPosition) {\n\t            this._loopStart = this.toTicks(startPosition);\n\t        }\n\t    });\n\t    /**\n\t\t * When the Tone.Transport.loop = true, this is the ending position of the loop.\n\t\t * @memberOf Tone.Transport#\n\t\t * @type {TransportTime}\n\t\t * @name loopEnd\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'loopEnd', {\n\t        get: function () {\n\t            return Tone.TransportTime(this._loopEnd, 'i').toSeconds();\n\t        },\n\t        set: function (endPosition) {\n\t            this._loopEnd = this.toTicks(endPosition);\n\t        }\n\t    });\n\t    /**\n\t\t *  Set the loop start and stop at the same time.\n\t\t *  @param {TransportTime} startPosition\n\t\t *  @param {TransportTime} endPosition\n\t\t *  @returns {Tone.Transport} this\n\t\t *  @example\n\t\t * //loop over the first measure\n\t\t * Tone.Transport.setLoopPoints(0, \"1m\");\n\t\t * Tone.Transport.loop = true;\n\t\t */\n\t    Tone.Transport.prototype.setLoopPoints = function (startPosition, endPosition) {\n\t        this.loopStart = startPosition;\n\t        this.loopEnd = endPosition;\n\t        return this;\n\t    };\n\t    /**\n\t\t *  The swing value. Between 0-1 where 1 equal to\n\t\t *  the note + half the subdivision.\n\t\t *  @memberOf Tone.Transport#\n\t\t *  @type {NormalRange}\n\t\t *  @name swing\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'swing', {\n\t        get: function () {\n\t            return this._swingAmount;\n\t        },\n\t        set: function (amount) {\n\t            //scale the values to a normal range\n\t            this._swingAmount = amount;\n\t        }\n\t    });\n\t    /**\n\t\t *  Set the subdivision which the swing will be applied to.\n\t\t *  The default value is an 8th note. Value must be less\n\t\t *  than a quarter note.\n\t\t *\n\t\t *  @memberOf Tone.Transport#\n\t\t *  @type {Time}\n\t\t *  @name swingSubdivision\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'swingSubdivision', {\n\t        get: function () {\n\t            return Tone.Time(this._swingTicks, 'i').toNotation();\n\t        },\n\t        set: function (subdivision) {\n\t            this._swingTicks = this.toTicks(subdivision);\n\t        }\n\t    });\n\t    /**\n\t\t *  The Transport's position in Bars:Beats:Sixteenths.\n\t\t *  Setting the value will jump to that position right away.\n\t\t *  @memberOf Tone.Transport#\n\t\t *  @type {BarsBeatsSixteenths}\n\t\t *  @name position\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'position', {\n\t        get: function () {\n\t            return Tone.TransportTime(this.ticks, 'i').toBarsBeatsSixteenths();\n\t        },\n\t        set: function (progress) {\n\t            var ticks = this.toTicks(progress);\n\t            this.ticks = ticks;\n\t        }\n\t    });\n\t    /**\n\t\t *  The Transport's position in seconds\n\t\t *  Setting the value will jump to that position right away.\n\t\t *  @memberOf Tone.Transport#\n\t\t *  @type {Seconds}\n\t\t *  @name seconds\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'seconds', {\n\t        get: function () {\n\t            return Tone.TransportTime(this.ticks, 'i').toSeconds();\n\t        },\n\t        set: function (progress) {\n\t            var ticks = this.toTicks(progress);\n\t            this.ticks = ticks;\n\t        }\n\t    });\n\t    /**\n\t\t *  The Transport's loop position as a normalized value. Always\n\t\t *  returns 0 if the transport if loop is not true.\n\t\t *  @memberOf Tone.Transport#\n\t\t *  @name progress\n\t\t *  @type {NormalRange}\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'progress', {\n\t        get: function () {\n\t            if (this.loop) {\n\t                return (this.ticks - this._loopStart) / (this._loopEnd - this._loopStart);\n\t            } else {\n\t                return 0;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  The transports current tick position.\n\t\t *\n\t\t *  @memberOf Tone.Transport#\n\t\t *  @type {Ticks}\n\t\t *  @name ticks\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'ticks', {\n\t        get: function () {\n\t            return this._clock.ticks;\n\t        },\n\t        set: function (t) {\n\t            if (this._clock.ticks !== t) {\n\t                var now = this.now();\n\t                //stop everything synced to the transport\n\t                if (this.state === Tone.State.Started) {\n\t                    this.emit('stop', now);\n\t                    this._clock.ticks = t;\n\t                    //restart it with the new time\n\t                    this.emit('start', now, this.seconds);\n\t                } else {\n\t                    this._clock.ticks = t;\n\t                }\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Pulses Per Quarter note. This is the smallest resolution\n\t\t *  the Transport timing supports. This should be set once\n\t\t *  on initialization and not set again. Changing this value\n\t\t *  after other objects have been created can cause problems.\n\t\t *\n\t\t *  @memberOf Tone.Transport#\n\t\t *  @type {Number}\n\t\t *  @name PPQ\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'PPQ', {\n\t        get: function () {\n\t            return this._ppq;\n\t        },\n\t        set: function (ppq) {\n\t            var bpm = this.bpm.value;\n\t            this._ppq = ppq;\n\t            this.bpm.value = bpm;\n\t        }\n\t    });\n\t    /**\n\t\t *  Convert from BPM to frequency (factoring in PPQ)\n\t\t *  @param  {BPM}  bpm The BPM value to convert to frequency\n\t\t *  @return  {Frequency}  The BPM as a frequency with PPQ factored in.\n\t\t *  @private\n\t\t */\n\t    Tone.Transport.prototype._fromUnits = function (bpm) {\n\t        return 1 / (60 / bpm / this.PPQ);\n\t    };\n\t    /**\n\t\t *  Convert from frequency (with PPQ) into BPM\n\t\t *  @param  {Frequency}  freq The clocks frequency to convert to BPM\n\t\t *  @return  {BPM}  The frequency value as BPM.\n\t\t *  @private\n\t\t */\n\t    Tone.Transport.prototype._toUnits = function (freq) {\n\t        return freq / this.PPQ * 60;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    //\tSYNCING\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Returns the time aligned to the next subdivision\n\t\t *  of the Transport. If the Transport is not started,\n\t\t *  it will return 0.\n\t\t *  Note: this will not work precisely during tempo ramps.\n\t\t *  @param  {Time}  subdivision  The subdivision to quantize to\n\t\t *  @return  {Number}  The context time of the next subdivision.\n\t\t *  @example\n\t\t * Tone.Transport.start(); //the transport must be started\n\t\t * Tone.Transport.nextSubdivision(\"4n\");\n\t\t */\n\t    Tone.Transport.prototype.nextSubdivision = function (subdivision) {\n\t        subdivision = this.toSeconds(subdivision);\n\t        //if the transport's not started, return 0\n\t        var now;\n\t        if (this.state === Tone.State.Started) {\n\t            now = this._clock._nextTick;\n\t        } else {\n\t            return 0;\n\t        }\n\t        var transportPos = Tone.Time(this.ticks, 'i');\n\t        var remainingTime = subdivision - transportPos % subdivision;\n\t        if (remainingTime === 0) {\n\t            remainingTime = subdivision;\n\t        }\n\t        return now + remainingTime;\n\t    };\n\t    /**\n\t\t *  Attaches the signal to the tempo control signal so that\n\t\t *  any changes in the tempo will change the signal in the same\n\t\t *  ratio.\n\t\t *\n\t\t *  @param  {Tone.Signal} signal\n\t\t *  @param {number=} ratio Optionally pass in the ratio between\n\t\t *                         the two signals. Otherwise it will be computed\n\t\t *                         based on their current values.\n\t\t *  @returns {Tone.Transport} this\n\t\t */\n\t    Tone.Transport.prototype.syncSignal = function (signal, ratio) {\n\t        if (!ratio) {\n\t            //get the sync ratio\n\t            if (signal._param.value !== 0) {\n\t                ratio = signal._param.value / this.bpm._param.value;\n\t            } else {\n\t                ratio = 0;\n\t            }\n\t        }\n\t        var ratioSignal = new Tone.Gain(ratio);\n\t        this.bpm.chain(ratioSignal, signal._param);\n\t        this._syncedSignals.push({\n\t            'ratio': ratioSignal,\n\t            'signal': signal,\n\t            'initial': signal._param.value\n\t        });\n\t        signal._param.value = 0;\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Unsyncs a previously synced signal from the transport's control.\n\t\t *  See Tone.Transport.syncSignal.\n\t\t *  @param  {Tone.Signal} signal\n\t\t *  @returns {Tone.Transport} this\n\t\t */\n\t    Tone.Transport.prototype.unsyncSignal = function (signal) {\n\t        for (var i = this._syncedSignals.length - 1; i >= 0; i--) {\n\t            var syncedSignal = this._syncedSignals[i];\n\t            if (syncedSignal.signal === signal) {\n\t                syncedSignal.ratio.dispose();\n\t                syncedSignal.signal._param.value = syncedSignal.initial;\n\t                this._syncedSignals.splice(i, 1);\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Transport} this\n\t\t *  @private\n\t\t */\n\t    Tone.Transport.prototype.dispose = function () {\n\t        Tone.Emitter.prototype.dispose.call(this);\n\t        this._clock.dispose();\n\t        this._clock = null;\n\t        this._writable('bpm');\n\t        this.bpm = null;\n\t        this._timeline.dispose();\n\t        this._timeline = null;\n\t        this._repeatedEvents.dispose();\n\t        this._repeatedEvents = null;\n\t        return this;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    //\tINITIALIZATION\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    var TransportConstructor = Tone.Transport;\n\t    Tone.Transport = new TransportConstructor();\n\t    Tone.Context.on('init', function (context) {\n\t        if (context.Transport instanceof TransportConstructor) {\n\t            Tone.Transport = context.Transport;\n\t        } else {\n\t            Tone.Transport = new TransportConstructor();\n\t        }\n\t        //store the Transport on the context so it can be retrieved later\n\t        context.Transport = Tone.Transport;\n\t    });\n\t    Tone.Context.on('close', function (context) {\n\t        if (context.Transport instanceof TransportConstructor) {\n\t            context.Transport.dispose();\n\t        }\n\t    });\n\t    return Tone.Transport;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Volume is a simple volume node, useful for creating a volume fader.\n\t\t *\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @constructor\n\t\t *  @param {Decibels} [volume=0] the initial volume\n\t\t *  @example\n\t\t * var vol = new Tone.Volume(-12);\n\t\t * instrument.chain(vol, Tone.Master);\n\t\t */\n\t    Tone.Volume = function () {\n\t        var options = Tone.defaults(arguments, ['volume'], Tone.Volume);\n\t        Tone.AudioNode.call(this);\n\t        /**\n\t\t\t * the output node\n\t\t\t * @type {GainNode}\n\t\t\t * @private\n\t\t\t */\n\t        this.output = this.input = new Tone.Gain(options.volume, Tone.Type.Decibels);\n\t        /**\n\t\t\t * The unmuted volume\n\t\t\t * @type {Decibels}\n\t\t\t * @private\n\t\t\t */\n\t        this._unmutedVolume = options.volume;\n\t        /**\n\t\t\t *  The volume control in decibels.\n\t\t\t *  @type {Decibels}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.volume = this.output.gain;\n\t        this._readOnly('volume');\n\t        //set the mute initially\n\t        this.mute = options.mute;\n\t    };\n\t    Tone.extend(Tone.Volume, Tone.AudioNode);\n\t    /**\n\t\t *  Defaults\n\t\t *  @type  {Object}\n\t\t *  @const\n\t\t *  @static\n\t\t */\n\t    Tone.Volume.defaults = {\n\t        'volume': 0,\n\t        'mute': false\n\t    };\n\t    /**\n\t\t * Mute the output.\n\t\t * @memberOf Tone.Volume#\n\t\t * @type {boolean}\n\t\t * @name mute\n\t\t * @example\n\t\t * //mute the output\n\t\t * volume.mute = true;\n\t\t */\n\t    Object.defineProperty(Tone.Volume.prototype, 'mute', {\n\t        get: function () {\n\t            return this.volume.value === -Infinity;\n\t        },\n\t        set: function (mute) {\n\t            if (!this.mute && mute) {\n\t                this._unmutedVolume = this.volume.value;\n\t                //maybe it should ramp here?\n\t                this.volume.value = -Infinity;\n\t            } else if (this.mute && !mute) {\n\t                this.volume.value = this._unmutedVolume;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.Volume} this\n\t\t */\n\t    Tone.Volume.prototype.dispose = function () {\n\t        this.input.dispose();\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._writable('volume');\n\t        this.volume.dispose();\n\t        this.volume = null;\n\t        return this;\n\t    };\n\t    return Tone.Volume;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  A single master output which is connected to the\n\t\t *          AudioDestinationNode (aka your speakers).\n\t\t *          It provides useful conveniences such as the ability\n\t\t *          to set the volume and mute the entire application.\n\t\t *          It also gives you the ability to apply master effects to your application.\n\t\t *          <br><br>\n\t\t *          Like Tone.Transport, A single Tone.Master is created\n\t\t *          on initialization and you do not need to explicitly construct one.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @singleton\n\t\t *  @example\n\t\t * //the audio will go from the oscillator to the speakers\n\t\t * oscillator.connect(Tone.Master);\n\t\t * //a convenience for connecting to the master output is also provided:\n\t\t * oscillator.toMaster();\n\t\t * //the above two examples are equivalent.\n\t\t */\n\t    Tone.Master = function () {\n\t        Tone.AudioNode.call(this);\n\t        Tone.getContext(function () {\n\t            this.createInsOuts(1, 0);\n\t            /**\n\t\t\t\t *  The private volume node\n\t\t\t\t *  @type  {Tone.Volume}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._volume = this.output = new Tone.Volume();\n\t            /**\n\t\t\t\t * The volume of the master output.\n\t\t\t\t * @type {Decibels}\n\t\t\t\t * @signal\n\t\t\t\t */\n\t            this.volume = this._volume.volume;\n\t            this._readOnly('volume');\n\t            //connections\n\t            this.input.chain(this.output, this.context.destination);\n\t        }.bind(this));\n\t    };\n\t    Tone.extend(Tone.Master, Tone.AudioNode);\n\t    /**\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.Master.defaults = {\n\t        'volume': 0,\n\t        'mute': false\n\t    };\n\t    /**\n\t\t * Mute the output.\n\t\t * @memberOf Tone.Master#\n\t\t * @type {boolean}\n\t\t * @name mute\n\t\t * @example\n\t\t * //mute the output\n\t\t * Tone.Master.mute = true;\n\t\t */\n\t    Object.defineProperty(Tone.Master.prototype, 'mute', {\n\t        get: function () {\n\t            return this._volume.mute;\n\t        },\n\t        set: function (mute) {\n\t            this._volume.mute = mute;\n\t        }\n\t    });\n\t    /**\n\t\t *  Add a master effects chain. NOTE: this will disconnect any nodes which were previously\n\t\t *  chained in the master effects chain.\n\t\t *  @param {AudioNode|Tone} args... All arguments will be connected in a row\n\t\t *                                  and the Master will be routed through it.\n\t\t *  @return  {Tone.Master}  this\n\t\t *  @example\n\t\t * //some overall compression to keep the levels in check\n\t\t * var masterCompressor = new Tone.Compressor({\n\t\t * \t\"threshold\" : -6,\n\t\t * \t\"ratio\" : 3,\n\t\t * \t\"attack\" : 0.5,\n\t\t * \t\"release\" : 0.1\n\t\t * });\n\t\t * //give a little boost to the lows\n\t\t * var lowBump = new Tone.Filter(200, \"lowshelf\");\n\t\t * //route everything through the filter\n\t\t * //and compressor before going to the speakers\n\t\t * Tone.Master.chain(lowBump, masterCompressor);\n\t\t */\n\t    Tone.Master.prototype.chain = function () {\n\t        this.input.disconnect();\n\t        this.input.chain.apply(this.input, arguments);\n\t        arguments[arguments.length - 1].connect(this.output);\n\t    };\n\t    /**\n\t\t *  Clean up\n\t\t *  @return  {Tone.Master}  this\n\t\t */\n\t    Tone.Master.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._writable('volume');\n\t        this._volume.dispose();\n\t        this._volume = null;\n\t        this.volume = null;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tAUGMENT TONE's PROTOTYPE\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Connect 'this' to the master output. Shorthand for this.connect(Tone.Master)\n\t\t *  @returns {Tone.AudioNode} this\n\t\t *  @example\n\t\t * //connect an oscillator to the master output\n\t\t * var osc = new Tone.Oscillator().toMaster();\n\t\t */\n\t    Tone.AudioNode.prototype.toMaster = function () {\n\t        this.connect(Tone.Master);\n\t        return this;\n\t    };\n\t    if (window.AudioNode) {\n\t        // Also augment AudioNode's prototype to include toMaster as a convenience\n\t        AudioNode.prototype.toMaster = function () {\n\t            this.connect(Tone.Master);\n\t            return this;\n\t        };\n\t    }\n\t    /**\n\t\t *  initialize the module and listen for new audio contexts\n\t\t */\n\t    var MasterConstructor = Tone.Master;\n\t    Tone.Master = new MasterConstructor();\n\t    Tone.Context.on('init', function (context) {\n\t        // if it already exists, just restore it\n\t        if (context.Master instanceof MasterConstructor) {\n\t            Tone.Master = context.Master;\n\t        } else {\n\t            Tone.Master = new MasterConstructor();\n\t        }\n\t        context.Master = Tone.Master;\n\t    });\n\t    Tone.Context.on('close', function (context) {\n\t        if (context.Master instanceof MasterConstructor) {\n\t            context.Master.dispose();\n\t        }\n\t    });\n\t    return Tone.Master;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Base class for sources. Sources have start/stop methods\n\t\t *          and the ability to be synced to the\n\t\t *          start/stop of Tone.Transport.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @example\n\t\t * //Multiple state change events can be chained together,\n\t\t * //but must be set in the correct order and with ascending times\n\t\t *\n\t\t * // OK\n\t\t * state.start().stop(\"+0.2\");\n\t\t * // AND\n\t\t * state.start().stop(\"+0.2\").start(\"+0.4\").stop(\"+0.7\")\n\t\t *\n\t\t * // BAD\n\t\t * state.stop(\"+0.2\").start();\n\t\t * // OR\n\t\t * state.start(\"+0.3\").stop(\"+0.2\");\n\t\t *\n\t\t */\n\t    Tone.Source = function (options) {\n\t        options = Tone.defaultArg(options, Tone.Source.defaults);\n\t        Tone.AudioNode.call(this);\n\t        /**\n\t\t\t *  The output volume node\n\t\t\t *  @type  {Tone.Volume}\n\t\t\t *  @private\n\t\t\t */\n\t        this._volume = this.output = new Tone.Volume(options.volume);\n\t        /**\n\t\t\t * The volume of the output in decibels.\n\t\t\t * @type {Decibels}\n\t\t\t * @signal\n\t\t\t * @example\n\t\t\t * source.volume.value = -6;\n\t\t\t */\n\t        this.volume = this._volume.volume;\n\t        this._readOnly('volume');\n\t        /**\n\t\t\t * \tKeep track of the scheduled state.\n\t\t\t *  @type {Tone.TimelineState}\n\t\t\t *  @private\n\t\t\t */\n\t        this._state = new Tone.TimelineState(Tone.State.Stopped);\n\t        this._state.memory = 10;\n\t        /**\n\t\t\t *  The synced `start` callback function from the transport\n\t\t\t *  @type {Function}\n\t\t\t *  @private\n\t\t\t */\n\t        this._synced = false;\n\t        /**\n\t\t\t *  Keep track of all of the scheduled event ids\n\t\t\t *  @type  {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._scheduled = [];\n\t        //make the output explicitly stereo\n\t        this._volume.output.output.channelCount = 2;\n\t        this._volume.output.output.channelCountMode = 'explicit';\n\t        //mute initially\n\t        this.mute = options.mute;\n\t    };\n\t    Tone.extend(Tone.Source, Tone.AudioNode);\n\t    /**\n\t\t *  The default parameters\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Source.defaults = {\n\t        'volume': 0,\n\t        'mute': false\n\t    };\n\t    /**\n\t\t *  Returns the playback state of the source, either \"started\" or \"stopped\".\n\t\t *  @type {Tone.State}\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.Source#\n\t\t *  @name state\n\t\t */\n\t    Object.defineProperty(Tone.Source.prototype, 'state', {\n\t        get: function () {\n\t            if (this._synced) {\n\t                if (Tone.Transport.state === Tone.State.Started) {\n\t                    return this._state.getValueAtTime(Tone.Transport.seconds);\n\t                } else {\n\t                    return Tone.State.Stopped;\n\t                }\n\t            } else {\n\t                return this._state.getValueAtTime(this.now());\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * Mute the output.\n\t\t * @memberOf Tone.Source#\n\t\t * @type {boolean}\n\t\t * @name mute\n\t\t * @example\n\t\t * //mute the output\n\t\t * source.mute = true;\n\t\t */\n\t    Object.defineProperty(Tone.Source.prototype, 'mute', {\n\t        get: function () {\n\t            return this._volume.mute;\n\t        },\n\t        set: function (mute) {\n\t            this._volume.mute = mute;\n\t        }\n\t    });\n\t    //overwrite these functions\n\t    Tone.Source.prototype._start = Tone.noOp;\n\t    Tone.Source.prototype._stop = Tone.noOp;\n\t    /**\n\t\t *  Start the source at the specified time. If no time is given,\n\t\t *  start the source now.\n\t\t *  @param  {Time} [time=now] When the source should be started.\n\t\t *  @returns {Tone.Source} this\n\t\t *  @example\n\t\t * source.start(\"+0.5\"); //starts the source 0.5 seconds from now\n\t\t */\n\t    Tone.Source.prototype.start = function (time, offset, duration) {\n\t        if (Tone.isUndef(time) && this._synced) {\n\t            time = Tone.Transport.seconds;\n\t        } else {\n\t            time = this.toSeconds(time);\n\t        }\n\t        //if it's started, stop it and restart it\n\t        if (!this.retrigger && this._state.getValueAtTime(time) === Tone.State.Started) {\n\t            this.stop(time);\n\t        }\n\t        this._state.setStateAtTime(Tone.State.Started, time);\n\t        if (this._synced) {\n\t            // add the offset time to the event\n\t            var event = this._state.get(time);\n\t            event.offset = Tone.defaultArg(offset, 0);\n\t            event.duration = duration;\n\t            var sched = Tone.Transport.schedule(function (t) {\n\t                this._start(t, offset, duration);\n\t            }.bind(this), time);\n\t            this._scheduled.push(sched);\n\t        } else {\n\t            this._start.apply(this, arguments);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Stop the source at the specified time. If no time is given,\n\t\t *  stop the source now.\n\t\t *  @param  {Time} [time=now] When the source should be stopped.\n\t\t *  @returns {Tone.Source} this\n\t\t *  @example\n\t\t * source.stop(); // stops the source immediately\n\t\t */\n\t    Tone.Source.prototype.stop = function (time) {\n\t        if (Tone.isUndef(time) && this._synced) {\n\t            time = Tone.Transport.seconds;\n\t        } else {\n\t            time = this.toSeconds(time);\n\t        }\n\t        this._state.cancel(time);\n\t        this._state.setStateAtTime(Tone.State.Stopped, time);\n\t        if (!this._synced) {\n\t            this._stop.apply(this, arguments);\n\t        } else {\n\t            var sched = Tone.Transport.schedule(this._stop.bind(this), time);\n\t            this._scheduled.push(sched);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Sync the source to the Transport so that all subsequent\n\t\t *  calls to `start` and `stop` are synced to the TransportTime\n\t\t *  instead of the AudioContext time.\n\t\t *\n\t\t *  @returns {Tone.Source} this\n\t\t *  @example\n\t\t * //sync the source so that it plays between 0 and 0.3 on the Transport's timeline\n\t\t * source.sync().start(0).stop(0.3);\n\t\t * //start the transport.\n\t\t * Tone.Transport.start();\n\t\t *\n\t\t *  @example\n\t\t * //start the transport with an offset and the sync'ed sources\n\t\t * //will start in the correct position\n\t\t * source.sync().start(0.1);\n\t\t * //the source will be invoked with an offset of 0.4\n\t\t * Tone.Transport.start(\"+0.5\", 0.5);\n\t\t */\n\t    Tone.Source.prototype.sync = function () {\n\t        this._synced = true;\n\t        this._syncedStart = function (time, offset) {\n\t            if (offset > 0) {\n\t                // get the playback state at that time\n\t                var stateEvent = this._state.get(offset);\n\t                // listen for start events which may occur in the middle of the sync'ed time\n\t                if (stateEvent && stateEvent.state === Tone.State.Started && stateEvent.time !== offset) {\n\t                    // get the offset\n\t                    var startOffset = offset - this.toSeconds(stateEvent.time);\n\t                    var duration;\n\t                    if (stateEvent.duration) {\n\t                        duration = this.toSeconds(stateEvent.duration) - startOffset;\n\t                    }\n\t                    this._start(time, this.toSeconds(stateEvent.offset) + startOffset, duration);\n\t                }\n\t            }\n\t        }.bind(this);\n\t        this._syncedStop = function (time) {\n\t            if (this._state.getValueAtTime(Tone.Transport.seconds) === Tone.State.Started) {\n\t                this._stop(time);\n\t            }\n\t        }.bind(this);\n\t        Tone.Transport.on('start loopStart', this._syncedStart);\n\t        Tone.Transport.on('stop pause loopEnd', this._syncedStop);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Unsync the source to the Transport. See Tone.Source.sync\n\t\t *  @returns {Tone.Source} this\n\t\t */\n\t    Tone.Source.prototype.unsync = function () {\n\t        if (this._synced) {\n\t            Tone.Transport.off('stop pause loopEnd', this._syncedStop);\n\t            Tone.Transport.off('start loopStart', this._syncedStart);\n\t        }\n\t        this._synced = false;\n\t        // clear all of the scheduled ids\n\t        for (var i = 0; i < this._scheduled.length; i++) {\n\t            var id = this._scheduled[i];\n\t            Tone.Transport.clear(id);\n\t        }\n\t        this._scheduled = [];\n\t        this._state.cancel(0);\n\t        return this;\n\t    };\n\t    /**\n\t\t *\tClean up.\n\t\t *  @return {Tone.Source} this\n\t\t */\n\t    Tone.Source.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this.unsync();\n\t        this._scheduled = null;\n\t        this._writable('volume');\n\t        this._volume.dispose();\n\t        this._volume = null;\n\t        this.volume = null;\n\t        this._state.dispose();\n\t        this._state = null;\n\t    };\n\t    return Tone.Source;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  OscillatorNode shim\n\t\t *  @private\n\t\t */\n\t    if (window.OscillatorNode && !OscillatorNode.prototype.start) {\n\t        OscillatorNode.prototype.start = OscillatorNode.prototype.noteOn;\n\t        OscillatorNode.prototype.stop = OscillatorNode.prototype.noteOff;\n\t        if (!OscillatorNode.prototype.setPeriodicWave) {\n\t            OscillatorNode.prototype.setPeriodicWave = OscillatorNode.prototype.setWaveTable;\n\t        }\n\t        if (!AudioContext.prototype.createPeriodicWave) {\n\t            AudioContext.prototype.createPeriodicWave = AudioContext.prototype.createWaveTable;\n\t        }\n\t    }\n\t    /**\n\t\t *  @class Tone.Oscillator supports a number of features including\n\t\t *         phase rotation, multiple oscillator types (see Tone.Oscillator.type),\n\t\t *         and Transport syncing (see Tone.Oscillator.syncFrequency).\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Source}\n\t\t *  @param {Frequency} [frequency] Starting frequency\n\t\t *  @param {string} [type] The oscillator type. Read more about type below.\n\t\t *  @example\n\t\t * //make and start a 440hz sine tone\n\t\t * var osc = new Tone.Oscillator(440, \"sine\").toMaster().start();\n\t\t */\n\t    Tone.Oscillator = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'frequency',\n\t            'type'\n\t        ], Tone.Oscillator);\n\t        Tone.Source.call(this, options);\n\t        /**\n\t\t\t *  the main oscillator\n\t\t\t *  @type {OscillatorNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._oscillator = null;\n\t        /**\n\t\t\t *  The frequency control.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The detune control signal.\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\t        /**\n\t\t\t *  the periodic wave\n\t\t\t *  @type {PeriodicWave}\n\t\t\t *  @private\n\t\t\t */\n\t        this._wave = null;\n\t        /**\n\t\t\t *  The partials of the oscillator\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._partials = Tone.defaultArg(options.partials, [1]);\n\t        /**\n\t\t\t *  the phase of the oscillator\n\t\t\t *  between 0 - 360\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._phase = options.phase;\n\t        /**\n\t\t\t *  the type of the oscillator\n\t\t\t *  @type {string}\n\t\t\t *  @private\n\t\t\t */\n\t        this._type = null;\n\t        //setup\n\t        this.type = options.type;\n\t        this.phase = this._phase;\n\t        this._readOnly([\n\t            'frequency',\n\t            'detune'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.Oscillator, Tone.Source);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Oscillator.defaults = {\n\t        'type': 'sine',\n\t        'frequency': 440,\n\t        'detune': 0,\n\t        'phase': 0,\n\t        'partials': []\n\t    };\n\t    /**\n\t\t *  The Oscillator types\n\t\t *  @enum {String}\n\t\t */\n\t    Tone.Oscillator.Type = {\n\t        Sine: 'sine',\n\t        Triangle: 'triangle',\n\t        Sawtooth: 'sawtooth',\n\t        Square: 'square',\n\t        Custom: 'custom'\n\t    };\n\t    /**\n\t\t *  start the oscillator\n\t\t *  @param  {Time} [time=now]\n\t\t *  @private\n\t\t */\n\t    Tone.Oscillator.prototype._start = function (time) {\n\t        //new oscillator with previous values\n\t        this._oscillator = this.context.createOscillator();\n\t        this._oscillator.setPeriodicWave(this._wave);\n\t        //connect the control signal to the oscillator frequency & detune\n\t        this._oscillator.connect(this.output);\n\t        this.frequency.connect(this._oscillator.frequency);\n\t        this.detune.connect(this._oscillator.detune);\n\t        //start the oscillator\n\t        time = this.toSeconds(time);\n\t        Tone.isPast(time);\n\t        this._oscillator.start(time);\n\t    };\n\t    /**\n\t\t *  stop the oscillator\n\t\t *  @private\n\t\t *  @param  {Time} [time=now] (optional) timing parameter\n\t\t *  @returns {Tone.Oscillator} this\n\t\t */\n\t    Tone.Oscillator.prototype._stop = function (time) {\n\t        if (this._oscillator) {\n\t            time = this.toSeconds(time);\n\t            Tone.isPast(time);\n\t            this._oscillator.stop(time);\n\t            this._oscillator = null;\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Sync the signal to the Transport's bpm. Any changes to the transports bpm,\n\t\t *  will also affect the oscillators frequency.\n\t\t *  @returns {Tone.Oscillator} this\n\t\t *  @example\n\t\t * Tone.Transport.bpm.value = 120;\n\t\t * osc.frequency.value = 440;\n\t\t * //the ration between the bpm and the frequency will be maintained\n\t\t * osc.syncFrequency();\n\t\t * Tone.Transport.bpm.value = 240;\n\t\t * // the frequency of the oscillator is doubled to 880\n\t\t */\n\t    Tone.Oscillator.prototype.syncFrequency = function () {\n\t        Tone.Transport.syncSignal(this.frequency);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Unsync the oscillator's frequency from the Transport.\n\t\t *  See Tone.Oscillator.syncFrequency\n\t\t *  @returns {Tone.Oscillator} this\n\t\t */\n\t    Tone.Oscillator.prototype.unsyncFrequency = function () {\n\t        Tone.Transport.unsyncSignal(this.frequency);\n\t        return this;\n\t    };\n\t    /**\n\t\t * The type of the oscillator: either sine, square, triangle, or sawtooth. Also capable of\n\t\t * setting the first x number of partials of the oscillator. For example: \"sine4\" would\n\t\t * set be the first 4 partials of the sine wave and \"triangle8\" would set the first\n\t\t * 8 partials of the triangle wave.\n\t\t * <br><br>\n\t\t * Uses PeriodicWave internally even for native types so that it can set the phase.\n\t\t * PeriodicWave equations are from the\n\t\t * [Webkit Web Audio implementation](https://code.google.com/p/chromium/codesearch#chromium/src/third_party/WebKit/Source/modules/webaudio/PeriodicWave.cpp&sq=package:chromium).\n\t\t *\n\t\t * @memberOf Tone.Oscillator#\n\t\t * @type {string}\n\t\t * @name type\n\t\t * @example\n\t\t * //set it to a square wave\n\t\t * osc.type = \"square\";\n\t\t * @example\n\t\t * //set the first 6 partials of a sawtooth wave\n\t\t * osc.type = \"sawtooth6\";\n\t\t */\n\t    Object.defineProperty(Tone.Oscillator.prototype, 'type', {\n\t        get: function () {\n\t            return this._type;\n\t        },\n\t        set: function (type) {\n\t            var coefs = this._getRealImaginary(type, this._phase);\n\t            var periodicWave = this.context.createPeriodicWave(coefs[0], coefs[1]);\n\t            this._wave = periodicWave;\n\t            if (this._oscillator !== null) {\n\t                this._oscillator.setPeriodicWave(this._wave);\n\t            }\n\t            this._type = type;\n\t        }\n\t    });\n\t    /**\n\t\t *  Returns the real and imaginary components based\n\t\t *  on the oscillator type.\n\t\t *  @returns {Array} [real, imaginary]\n\t\t *  @private\n\t\t */\n\t    Tone.Oscillator.prototype._getRealImaginary = function (type, phase) {\n\t        var fftSize = 4096;\n\t        var periodicWaveSize = fftSize / 2;\n\t        var real = new Float32Array(periodicWaveSize);\n\t        var imag = new Float32Array(periodicWaveSize);\n\t        var partialCount = 1;\n\t        if (type === Tone.Oscillator.Type.Custom) {\n\t            partialCount = this._partials.length + 1;\n\t            periodicWaveSize = partialCount;\n\t        } else {\n\t            var partial = /^(sine|triangle|square|sawtooth)(\\d+)$/.exec(type);\n\t            if (partial) {\n\t                partialCount = parseInt(partial[2]) + 1;\n\t                type = partial[1];\n\t                partialCount = Math.max(partialCount, 2);\n\t                periodicWaveSize = partialCount;\n\t            }\n\t        }\n\t        for (var n = 1; n < periodicWaveSize; ++n) {\n\t            var piFactor = 2 / (n * Math.PI);\n\t            var b;\n\t            switch (type) {\n\t            case Tone.Oscillator.Type.Sine:\n\t                b = n <= partialCount ? 1 : 0;\n\t                break;\n\t            case Tone.Oscillator.Type.Square:\n\t                b = n & 1 ? 2 * piFactor : 0;\n\t                break;\n\t            case Tone.Oscillator.Type.Sawtooth:\n\t                b = piFactor * (n & 1 ? 1 : -1);\n\t                break;\n\t            case Tone.Oscillator.Type.Triangle:\n\t                if (n & 1) {\n\t                    b = 2 * (piFactor * piFactor) * (n - 1 >> 1 & 1 ? -1 : 1);\n\t                } else {\n\t                    b = 0;\n\t                }\n\t                break;\n\t            case Tone.Oscillator.Type.Custom:\n\t                b = this._partials[n - 1];\n\t                break;\n\t            default:\n\t                throw new TypeError('Tone.Oscillator: invalid type: ' + type);\n\t            }\n\t            if (b !== 0) {\n\t                real[n] = -b * Math.sin(phase * n);\n\t                imag[n] = b * Math.cos(phase * n);\n\t            } else {\n\t                real[n] = 0;\n\t                imag[n] = 0;\n\t            }\n\t        }\n\t        return [\n\t            real,\n\t            imag\n\t        ];\n\t    };\n\t    /**\n\t\t *  Compute the inverse FFT for a given phase.\n\t\t *  @param  {Float32Array}  real\n\t\t *  @param  {Float32Array}  imag\n\t\t *  @param  {NormalRange}  phase\n\t\t *  @return  {AudioRange}\n\t\t *  @private\n\t\t */\n\t    Tone.Oscillator.prototype._inverseFFT = function (real, imag, phase) {\n\t        var sum = 0;\n\t        var len = real.length;\n\t        for (var i = 0; i < len; i++) {\n\t            sum += real[i] * Math.cos(i * phase) + imag[i] * Math.sin(i * phase);\n\t        }\n\t        return sum;\n\t    };\n\t    /**\n\t\t *  Returns the initial value of the oscillator.\n\t\t *  @return  {AudioRange}\n\t\t *  @private\n\t\t */\n\t    Tone.Oscillator.prototype._getInitialValue = function () {\n\t        var coefs = this._getRealImaginary(this._type, 0);\n\t        var real = coefs[0];\n\t        var imag = coefs[1];\n\t        var maxValue = 0;\n\t        var twoPi = Math.PI * 2;\n\t        //check for peaks in 8 places\n\t        for (var i = 0; i < 8; i++) {\n\t            maxValue = Math.max(this._inverseFFT(real, imag, i / 8 * twoPi), maxValue);\n\t        }\n\t        return -this._inverseFFT(real, imag, this._phase) / maxValue;\n\t    };\n\t    /**\n\t\t * The partials of the waveform. A partial represents\n\t\t * the amplitude at a harmonic. The first harmonic is the\n\t\t * fundamental frequency, the second is the octave and so on\n\t\t * following the harmonic series.\n\t\t * Setting this value will automatically set the type to \"custom\".\n\t\t * The value is an empty array when the type is not \"custom\".\n\t\t * @memberOf Tone.Oscillator#\n\t\t * @type {Array}\n\t\t * @name partials\n\t\t * @example\n\t\t * osc.partials = [1, 0.2, 0.01];\n\t\t */\n\t    Object.defineProperty(Tone.Oscillator.prototype, 'partials', {\n\t        get: function () {\n\t            if (this._type !== Tone.Oscillator.Type.Custom) {\n\t                return [];\n\t            } else {\n\t                return this._partials;\n\t            }\n\t        },\n\t        set: function (partials) {\n\t            this._partials = partials;\n\t            this.type = Tone.Oscillator.Type.Custom;\n\t        }\n\t    });\n\t    /**\n\t\t * The phase of the oscillator in degrees.\n\t\t * @memberOf Tone.Oscillator#\n\t\t * @type {Degrees}\n\t\t * @name phase\n\t\t * @example\n\t\t * osc.phase = 180; //flips the phase of the oscillator\n\t\t */\n\t    Object.defineProperty(Tone.Oscillator.prototype, 'phase', {\n\t        get: function () {\n\t            return this._phase * (180 / Math.PI);\n\t        },\n\t        set: function (phase) {\n\t            this._phase = phase * Math.PI / 180;\n\t            //reset the type\n\t            this.type = this._type;\n\t        }\n\t    });\n\t    /**\n\t\t *  Dispose and disconnect.\n\t\t *  @return {Tone.Oscillator} this\n\t\t */\n\t    Tone.Oscillator.prototype.dispose = function () {\n\t        Tone.Source.prototype.dispose.call(this);\n\t        if (this._oscillator !== null) {\n\t            this._oscillator.disconnect();\n\t            this._oscillator = null;\n\t        }\n\t        this._wave = null;\n\t        this._writable([\n\t            'frequency',\n\t            'detune'\n\t        ]);\n\t        this.frequency.dispose();\n\t        this.frequency = null;\n\t        this.detune.dispose();\n\t        this.detune = null;\n\t        this._partials = null;\n\t        return this;\n\t    };\n\t    return Tone.Oscillator;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class Tone.Zero outputs 0's at audio-rate. The reason this has to be\n\t\t *         it's own class is that many browsers optimize out Tone.Signal\n\t\t *         with a value of 0 and will not process nodes further down the graph.\n\t\t *  @extends {Tone.SignalBase}\n\t\t */\n\t    Tone.Zero = function () {\n\t        Tone.SignalBase.call(this);\n\t        /**\n\t\t\t *  The gain node\n\t\t\t *  @type  {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._gain = this.input = this.output = new Tone.Gain();\n\t        this.context.getConstant(0).connect(this._gain);\n\t    };\n\t    Tone.extend(Tone.Zero, Tone.SignalBase);\n\t    /**\n\t\t *  clean up\n\t\t *  @return  {Tone.Zero}  this\n\t\t */\n\t    Tone.Zero.prototype.dispose = function () {\n\t        Tone.SignalBase.prototype.dispose.call(this);\n\t        this._gain.dispose();\n\t        this._gain = null;\n\t        return this;\n\t    };\n\t    return Tone.Zero;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  LFO stands for low frequency oscillator. Tone.LFO produces an output signal\n\t\t *          which can be attached to an AudioParam or Tone.Signal\n\t\t *          in order to modulate that parameter with an oscillator. The LFO can\n\t\t *          also be synced to the transport to start/stop and change when the tempo changes.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @param {Frequency|Object} [frequency] The frequency of the oscillation. Typically, LFOs will be\n\t\t *                               in the frequency range of 0.1 to 10 hertz.\n\t\t *  @param {number=} min The minimum output value of the LFO.\n\t\t *  @param {number=} max The maximum value of the LFO.\n\t\t *  @example\n\t\t * var lfo = new Tone.LFO(\"4n\", 400, 4000);\n\t\t * lfo.connect(filter.frequency);\n\t\t */\n\t    Tone.LFO = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'frequency',\n\t            'min',\n\t            'max'\n\t        ], Tone.LFO);\n\t        Tone.AudioNode.call(this);\n\t        /**\n\t\t\t *  The oscillator.\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t *  @private\n\t\t\t */\n\t        this._oscillator = new Tone.Oscillator({\n\t            'frequency': options.frequency,\n\t            'type': options.type\n\t        });\n\t        /**\n\t\t\t *  the lfo's frequency\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = this._oscillator.frequency;\n\t        /**\n\t\t\t * The amplitude of the LFO, which controls the output range between\n\t\t\t * the min and max output. For example if the min is -10 and the max\n\t\t\t * is 10, setting the amplitude to 0.5 would make the LFO modulate\n\t\t\t * between -5 and 5.\n\t\t\t * @type {Number}\n\t\t\t * @signal\n\t\t\t */\n\t        this.amplitude = this._oscillator.volume;\n\t        this.amplitude.units = Tone.Type.NormalRange;\n\t        this.amplitude.value = options.amplitude;\n\t        /**\n\t\t\t *  The signal which is output when the LFO is stopped\n\t\t\t *  @type  {Tone.Signal}\n\t\t\t *  @private\n\t\t\t */\n\t        this._stoppedSignal = new Tone.Signal(0, Tone.Type.AudioRange);\n\t        /**\n\t\t\t *  Just outputs zeros.\n\t\t\t *  @type {Tone.Zero}\n\t\t\t *  @private\n\t\t\t */\n\t        this._zeros = new Tone.Zero();\n\t        /**\n\t\t\t *  The value that the LFO outputs when it's stopped\n\t\t\t *  @type {AudioRange}\n\t\t\t *  @private\n\t\t\t */\n\t        this._stoppedValue = 0;\n\t        /**\n\t\t\t *  @type {Tone.AudioToGain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._a2g = new Tone.AudioToGain();\n\t        /**\n\t\t\t *  @type {Tone.Scale}\n\t\t\t *  @private\n\t\t\t */\n\t        this._scaler = this.output = new Tone.Scale(options.min, options.max);\n\t        /**\n\t\t\t *  the units of the LFO (used for converting)\n\t\t\t *  @type {Tone.Type}\n\t\t\t *  @private\n\t\t\t */\n\t        this._units = Tone.Type.Default;\n\t        this.units = options.units;\n\t        //connect it up\n\t        this._oscillator.chain(this._a2g, this._scaler);\n\t        this._zeros.connect(this._a2g);\n\t        this._stoppedSignal.connect(this._a2g);\n\t        this._readOnly([\n\t            'amplitude',\n\t            'frequency'\n\t        ]);\n\t        this.phase = options.phase;\n\t    };\n\t    Tone.extend(Tone.LFO, Tone.AudioNode);\n\t    /**\n\t\t *  the default parameters\n\t\t *\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.LFO.defaults = {\n\t        'type': 'sine',\n\t        'min': 0,\n\t        'max': 1,\n\t        'phase': 0,\n\t        'frequency': '4n',\n\t        'amplitude': 1,\n\t        'units': Tone.Type.Default\n\t    };\n\t    /**\n\t\t *  Start the LFO.\n\t\t *  @param  {Time} [time=now] the time the LFO will start\n\t\t *  @returns {Tone.LFO} this\n\t\t */\n\t    Tone.LFO.prototype.start = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._stoppedSignal.setValueAtTime(0, time);\n\t        this._oscillator.start(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Stop the LFO.\n\t\t *  @param  {Time} [time=now] the time the LFO will stop\n\t\t *  @returns {Tone.LFO} this\n\t\t */\n\t    Tone.LFO.prototype.stop = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._stoppedSignal.setValueAtTime(this._stoppedValue, time);\n\t        this._oscillator.stop(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Sync the start/stop/pause to the transport\n\t\t *  and the frequency to the bpm of the transport\n\t\t *  @returns {Tone.LFO} this\n\t\t *  @example\n\t\t *  lfo.frequency.value = \"8n\";\n\t\t *  lfo.sync().start(0)\n\t\t *  //the rate of the LFO will always be an eighth note,\n\t\t *  //even as the tempo changes\n\t\t */\n\t    Tone.LFO.prototype.sync = function () {\n\t        this._oscillator.sync();\n\t        this._oscillator.syncFrequency();\n\t        return this;\n\t    };\n\t    /**\n\t\t *  unsync the LFO from transport control\n\t\t *  @returns {Tone.LFO} this\n\t\t */\n\t    Tone.LFO.prototype.unsync = function () {\n\t        this._oscillator.unsync();\n\t        this._oscillator.unsyncFrequency();\n\t        return this;\n\t    };\n\t    /**\n\t\t * The miniumum output of the LFO.\n\t\t * @memberOf Tone.LFO#\n\t\t * @type {number}\n\t\t * @name min\n\t\t */\n\t    Object.defineProperty(Tone.LFO.prototype, 'min', {\n\t        get: function () {\n\t            return this._toUnits(this._scaler.min);\n\t        },\n\t        set: function (min) {\n\t            min = this._fromUnits(min);\n\t            this._scaler.min = min;\n\t        }\n\t    });\n\t    /**\n\t\t * The maximum output of the LFO.\n\t\t * @memberOf Tone.LFO#\n\t\t * @type {number}\n\t\t * @name max\n\t\t */\n\t    Object.defineProperty(Tone.LFO.prototype, 'max', {\n\t        get: function () {\n\t            return this._toUnits(this._scaler.max);\n\t        },\n\t        set: function (max) {\n\t            max = this._fromUnits(max);\n\t            this._scaler.max = max;\n\t        }\n\t    });\n\t    /**\n\t\t * The type of the oscillator: sine, square, sawtooth, triangle.\n\t\t * @memberOf Tone.LFO#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.LFO.prototype, 'type', {\n\t        get: function () {\n\t            return this._oscillator.type;\n\t        },\n\t        set: function (type) {\n\t            this._oscillator.type = type;\n\t            this._stoppedValue = this._oscillator._getInitialValue();\n\t            this._stoppedSignal.value = this._stoppedValue;\n\t        }\n\t    });\n\t    /**\n\t\t * The phase of the LFO.\n\t\t * @memberOf Tone.LFO#\n\t\t * @type {number}\n\t\t * @name phase\n\t\t */\n\t    Object.defineProperty(Tone.LFO.prototype, 'phase', {\n\t        get: function () {\n\t            return this._oscillator.phase;\n\t        },\n\t        set: function (phase) {\n\t            this._oscillator.phase = phase;\n\t            this._stoppedValue = this._oscillator._getInitialValue();\n\t            this._stoppedSignal.value = this._stoppedValue;\n\t        }\n\t    });\n\t    /**\n\t\t * The output units of the LFO.\n\t\t * @memberOf Tone.LFO#\n\t\t * @type {Tone.Type}\n\t\t * @name units\n\t\t */\n\t    Object.defineProperty(Tone.LFO.prototype, 'units', {\n\t        get: function () {\n\t            return this._units;\n\t        },\n\t        set: function (val) {\n\t            var currentMin = this.min;\n\t            var currentMax = this.max;\n\t            //convert the min and the max\n\t            this._units = val;\n\t            this.min = currentMin;\n\t            this.max = currentMax;\n\t        }\n\t    });\n\t    /**\n\t\t * Mute the output.\n\t\t * @memberOf Tone.LFO#\n\t\t * @type {Boolean}\n\t\t * @name mute\n\t\t */\n\t    Object.defineProperty(Tone.LFO.prototype, 'mute', {\n\t        get: function () {\n\t            return this._oscillator.mute;\n\t        },\n\t        set: function (mute) {\n\t            this._oscillator.mute = mute;\n\t        }\n\t    });\n\t    /**\n\t\t *  Returns the playback state of the source, either \"started\" or \"stopped\".\n\t\t *  @type {Tone.State}\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.LFO#\n\t\t *  @name state\n\t\t */\n\t    Object.defineProperty(Tone.LFO.prototype, 'state', {\n\t        get: function () {\n\t            return this._oscillator.state;\n\t        }\n\t    });\n\t    /**\n\t\t *  Connect the output of the LFO to an AudioParam, AudioNode, or Tone Node.\n\t\t *  Tone.LFO will automatically convert to the destination units of the\n\t\t *  will get the units from the connected node.\n\t\t *  @param  {Tone | AudioParam | AudioNode} node\n\t\t *  @param {number} [outputNum=0] optionally which output to connect from\n\t\t *  @param {number} [inputNum=0] optionally which input to connect to\n\t\t *  @returns {Tone.LFO} this\n\t\t *  @private\n\t\t */\n\t    Tone.LFO.prototype.connect = function (node) {\n\t        if (node.constructor === Tone.Signal || node.constructor === Tone.Param || node.constructor === Tone.TimelineSignal) {\n\t            this.convert = node.convert;\n\t            this.units = node.units;\n\t        }\n\t        Tone.Signal.prototype.connect.apply(this, arguments);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  private method borrowed from Param converts\n\t\t *  units from their destination value\n\t\t *  @function\n\t\t *  @private\n\t\t */\n\t    Tone.LFO.prototype._fromUnits = Tone.Param.prototype._fromUnits;\n\t    /**\n\t\t *  private method borrowed from Param converts\n\t\t *  units to their destination value\n\t\t *  @function\n\t\t *  @private\n\t\t */\n\t    Tone.LFO.prototype._toUnits = Tone.Param.prototype._toUnits;\n\t    /**\n\t\t *  disconnect and dispose\n\t\t *  @returns {Tone.LFO} this\n\t\t */\n\t    Tone.LFO.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._writable([\n\t            'amplitude',\n\t            'frequency'\n\t        ]);\n\t        this._oscillator.dispose();\n\t        this._oscillator = null;\n\t        this._stoppedSignal.dispose();\n\t        this._stoppedSignal = null;\n\t        this._zeros.dispose();\n\t        this._zeros = null;\n\t        this._scaler.dispose();\n\t        this._scaler = null;\n\t        this._a2g.dispose();\n\t        this._a2g = null;\n\t        this.frequency = null;\n\t        this.amplitude = null;\n\t        return this;\n\t    };\n\t    return Tone.LFO;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Limiter will limit the loudness of an incoming signal.\n\t\t *         It is composed of a Tone.Compressor with a fast attack\n\t\t *         and release. Limiters are commonly used to safeguard against\n\t\t *         signal clipping. Unlike a compressor, limiters do not provide\n\t\t *         smooth gain reduction and almost completely prevent\n\t\t *         additional gain above the threshold.\n\t\t *\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @constructor\n\t\t *  @param {number} threshold The theshold above which the limiting is applied.\n\t\t *  @example\n\t\t *  var limiter = new Tone.Limiter(-6);\n\t\t */\n\t    Tone.Limiter = function () {\n\t        var options = Tone.defaults(arguments, ['threshold'], Tone.Limiter);\n\t        Tone.AudioNode.call(this);\n\t        /**\n\t\t\t *  the compressor\n\t\t\t *  @private\n\t\t\t *  @type {Tone.Compressor}\n\t\t\t */\n\t        this._compressor = this.input = this.output = new Tone.Compressor({\n\t            'attack': 0.001,\n\t            'decay': 0.001,\n\t            'threshold': options.threshold\n\t        });\n\t        /**\n\t\t\t * The threshold of of the limiter\n\t\t\t * @type {Decibel}\n\t\t\t * @signal\n\t\t\t */\n\t        this.threshold = this._compressor.threshold;\n\t        this._readOnly('threshold');\n\t    };\n\t    Tone.extend(Tone.Limiter, Tone.AudioNode);\n\t    /**\n\t\t *  The default value\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t *  @static\n\t\t */\n\t    Tone.Limiter.defaults = { 'threshold': -12 };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Limiter} this\n\t\t */\n\t    Tone.Limiter.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._compressor.dispose();\n\t        this._compressor = null;\n\t        this._writable('threshold');\n\t        this.threshold = null;\n\t        return this;\n\t    };\n\t    return Tone.Limiter;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Lowpass is a lowpass feedback comb filter. It is similar to\n\t\t *         Tone.FeedbackCombFilter, but includes a lowpass filter.\n\t\t *\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @constructor\n\t\t *  @param {Time|Object} [delayTime] The delay time of the comb filter\n\t\t *  @param {NormalRange=} resonance The resonance (feedback) of the comb filter\n\t\t *  @param {Frequency=} dampening The cutoff of the lowpass filter dampens the\n\t\t *                                signal as it is fedback.\n\t\t */\n\t    Tone.LowpassCombFilter = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'delayTime',\n\t            'resonance',\n\t            'dampening'\n\t        ], Tone.LowpassCombFilter);\n\t        Tone.AudioNode.call(this);\n\t        this.createInsOuts(1, 1);\n\t        /**\n\t\t\t *  the delay node\n\t\t\t *  @type {DelayNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delay = this.input = new Tone.Delay(options.delayTime);\n\t        /**\n\t\t\t *  The delayTime of the comb filter.\n\t\t\t *  @type {Time}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.delayTime = this._delay.delayTime;\n\t        /**\n\t\t\t *  the lowpass filter\n\t\t\t *  @type  {BiquadFilterNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lowpass = this.output = this.context.createBiquadFilter();\n\t        this._lowpass.Q.value = -3.0102999566398125;\n\t        this._lowpass.type = 'lowpass';\n\t        /**\n\t\t\t *  The dampening control of the feedback\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.dampening = new Tone.Param({\n\t            'param': this._lowpass.frequency,\n\t            'units': Tone.Type.Frequency,\n\t            'value': options.dampening\n\t        });\n\t        /**\n\t\t\t *  the feedback gain\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._feedback = new Tone.Gain(options.resonance, Tone.Type.NormalRange);\n\t        /**\n\t\t\t *  The amount of feedback of the delayed signal.\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.resonance = this._feedback.gain;\n\t        //connections\n\t        this._delay.chain(this._lowpass, this._feedback, this._delay);\n\t        this._readOnly([\n\t            'dampening',\n\t            'resonance',\n\t            'delayTime'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.LowpassCombFilter, Tone.AudioNode);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.LowpassCombFilter.defaults = {\n\t        'delayTime': 0.1,\n\t        'resonance': 0.5,\n\t        'dampening': 3000\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.LowpassCombFilter} this\n\t\t */\n\t    Tone.LowpassCombFilter.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._writable([\n\t            'dampening',\n\t            'resonance',\n\t            'delayTime'\n\t        ]);\n\t        this.dampening.dispose();\n\t        this.dampening = null;\n\t        this.resonance.dispose();\n\t        this.resonance = null;\n\t        this._delay.dispose();\n\t        this._delay = null;\n\t        this.delayTime = null;\n\t        this._lowpass.disconnect();\n\t        this._lowpass = null;\n\t        this._feedback.disconnect();\n\t        this._feedback = null;\n\t        return this;\n\t    };\n\t    return Tone.LowpassCombFilter;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Merge brings two signals into the left and right\n\t\t *          channels of a single stereo channel.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @example\n\t\t * var merge = new Tone.Merge().toMaster();\n\t\t * //routing a sine tone in the left channel\n\t\t * //and noise in the right channel\n\t\t * var osc = new Tone.Oscillator().connect(merge.left);\n\t\t * var noise = new Tone.Noise().connect(merge.right);\n\t\t * //starting our oscillators\n\t\t * noise.start();\n\t\t * osc.start();\n\t\t */\n\t    Tone.Merge = function () {\n\t        Tone.AudioNode.call(this);\n\t        this.createInsOuts(2, 0);\n\t        /**\n\t\t\t *  The left input channel.\n\t\t\t *  Alias for <code>input[0]</code>\n\t\t\t *  @type {GainNode}\n\t\t\t */\n\t        this.left = this.input[0] = new Tone.Gain();\n\t        /**\n\t\t\t *  The right input channel.\n\t\t\t *  Alias for <code>input[1]</code>.\n\t\t\t *  @type {GainNode}\n\t\t\t */\n\t        this.right = this.input[1] = new Tone.Gain();\n\t        /**\n\t\t\t *  the merger node for the two channels\n\t\t\t *  @type {ChannelMergerNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._merger = this.output = this.context.createChannelMerger(2);\n\t        //connections\n\t        this.left.connect(this._merger, 0, 0);\n\t        this.right.connect(this._merger, 0, 1);\n\t        this.left.channelCount = 1;\n\t        this.right.channelCount = 1;\n\t        this.left.channelCountMode = 'explicit';\n\t        this.right.channelCountMode = 'explicit';\n\t    };\n\t    Tone.extend(Tone.Merge, Tone.AudioNode);\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Merge} this\n\t\t */\n\t    Tone.Merge.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this.left.dispose();\n\t        this.left = null;\n\t        this.right.dispose();\n\t        this.right = null;\n\t        this._merger.disconnect();\n\t        this._merger = null;\n\t        return this;\n\t    };\n\t    return Tone.Merge;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Meter gets the [RMS](https://en.wikipedia.org/wiki/Root_mean_square)\n\t\t *          of an input signal with some averaging applied. It can also get the raw\n\t\t *          value of the input signal.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @param {Number} smoothing The amount of smoothing applied between frames.\n\t\t *  @example\n\t\t * var meter = new Tone.Meter();\n\t\t * var mic = new Tone.UserMedia().open();\n\t\t * //connect mic to the meter\n\t\t * mic.connect(meter);\n\t\t * //the current level of the mic input in decibels\n\t\t * var level = meter.getValue();\n\t\t */\n\t    Tone.Meter = function () {\n\t        var options = Tone.defaults(arguments, ['smoothing'], Tone.Meter);\n\t        Tone.AudioNode.call(this);\n\t        /**\n\t\t\t *  The analyser node which computes the levels.\n\t\t\t *  @private\n\t\t\t *  @type  {Tone.Analyser}\n\t\t\t */\n\t        this.input = this.output = this._analyser = new Tone.Analyser('waveform', 1024);\n\t        /**\n\t\t\t *  The amount of carryover between the current and last frame.\n\t\t\t *  Only applied meter for \"level\" type.\n\t\t\t *  @type  {Number}\n\t\t\t */\n\t        this.smoothing = options.smoothing;\n\t    };\n\t    Tone.extend(Tone.Meter, Tone.AudioNode);\n\t    /**\n\t\t *  The defaults\n\t\t *  @type {Object}\n\t\t *  @static\n\t\t *  @const\n\t\t */\n\t    Tone.Meter.defaults = { 'smoothing': 0.8 };\n\t    /**\n\t\t *  Get the current decibel value of the incoming signal\n\t\t *  @returns {Decibels}\n\t\t */\n\t    Tone.Meter.prototype.getLevel = function () {\n\t        this._analyser.type = 'fft';\n\t        var values = this._analyser.getValue();\n\t        var offset = 28;\n\t        // normalizes most signal levels\n\t        // TODO: compute loudness from FFT\n\t        return Math.max.apply(this, values) + offset;\n\t    };\n\t    /**\n\t\t *  Get the signal value of the incoming signal\n\t\t *  @returns {Number}\n\t\t */\n\t    Tone.Meter.prototype.getValue = function () {\n\t        this._analyser.type = 'waveform';\n\t        var value = this._analyser.getValue();\n\t        return value[0];\n\t    };\n\t    /**\n\t\t * A value from 0 -> 1 where 0 represents no time averaging with the last analysis frame.\n\t\t * @memberOf Tone.Meter#\n\t\t * @type {Number}\n\t\t * @name smoothing\n\t\t * @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Meter.prototype, 'smoothing', {\n\t        get: function () {\n\t            return this._analyser.smoothing;\n\t        },\n\t        set: function (val) {\n\t            this._analyser.smoothing = val;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Meter} this\n\t\t */\n\t    Tone.Meter.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._analyser.dispose();\n\t        this._analyser = null;\n\t        return this;\n\t    };\n\t    return Tone.Meter;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *\t@class  Tone.Split splits an incoming signal into left and right channels.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @example\n\t\t * var split = new Tone.Split();\n\t\t * stereoSignal.connect(split);\n\t\t */\n\t    Tone.Split = function () {\n\t        Tone.AudioNode.call(this);\n\t        this.createInsOuts(0, 2);\n\t        /**\n\t\t\t *  @type {ChannelSplitterNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._splitter = this.input = this.context.createChannelSplitter(2);\n\t        this._splitter.channelCount = 2;\n\t        this._splitter.channelCountMode = 'explicit';\n\t        /**\n\t\t\t *  Left channel output.\n\t\t\t *  Alias for <code>output[0]</code>\n\t\t\t *  @type {Tone.Gain}\n\t\t\t */\n\t        this.left = this.output[0] = new Tone.Gain();\n\t        /**\n\t\t\t *  Right channel output.\n\t\t\t *  Alias for <code>output[1]</code>\n\t\t\t *  @type {Tone.Gain}\n\t\t\t */\n\t        this.right = this.output[1] = new Tone.Gain();\n\t        //connections\n\t        this._splitter.connect(this.left, 0, 0);\n\t        this._splitter.connect(this.right, 1, 0);\n\t    };\n\t    Tone.extend(Tone.Split, Tone.AudioNode);\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Split} this\n\t\t */\n\t    Tone.Split.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._splitter.disconnect();\n\t        this.left.dispose();\n\t        this.left = null;\n\t        this.right.dispose();\n\t        this.right = null;\n\t        this._splitter = null;\n\t        return this;\n\t    };\n\t    return Tone.Split;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Mid/Side processing separates the the 'mid' signal\n\t\t *         (which comes out of both the left and the right channel)\n\t\t *         and the 'side' (which only comes out of the the side channels). <br><br>\n\t\t *         <code>\n\t\t *         Mid = (Left+Right)/sqrt(2);   // obtain mid-signal from left and right<br>\n\t\t *         Side = (Left-Right)/sqrt(2);   // obtain side-signal from left and righ<br>\n\t\t *         </code>\n\t\t *\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @constructor\n\t\t */\n\t    Tone.MidSideSplit = function () {\n\t        Tone.AudioNode.call(this);\n\t        this.createInsOuts(0, 2);\n\t        /**\n\t\t\t *  split the incoming signal into left and right channels\n\t\t\t *  @type  {Tone.Split}\n\t\t\t *  @private\n\t\t\t */\n\t        this._split = this.input = new Tone.Split();\n\t        /**\n\t\t\t *  The mid send. Connect to mid processing. Alias for\n\t\t\t *  <code>output[0]</code>\n\t\t\t *  @type {Tone.Expr}\n\t\t\t */\n\t        this.mid = this.output[0] = new Tone.Expr('($0 + $1) * $2');\n\t        /**\n\t\t\t *  The side output. Connect to side processing. Alias for\n\t\t\t *  <code>output[1]</code>\n\t\t\t *  @type {Tone.Expr}\n\t\t\t */\n\t        this.side = this.output[1] = new Tone.Expr('($0 - $1) * $2');\n\t        this._split.connect(this.mid, 0, 0);\n\t        this._split.connect(this.mid, 1, 1);\n\t        this._split.connect(this.side, 0, 0);\n\t        this._split.connect(this.side, 1, 1);\n\t        this.context.getConstant(Math.SQRT1_2).connect(this.mid, 0, 2);\n\t        this.context.getConstant(Math.SQRT1_2).connect(this.side, 0, 2);\n\t    };\n\t    Tone.extend(Tone.MidSideSplit, Tone.AudioNode);\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.MidSideSplit} this\n\t\t */\n\t    Tone.MidSideSplit.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this.mid.dispose();\n\t        this.mid = null;\n\t        this.side.dispose();\n\t        this.side = null;\n\t        this._split.dispose();\n\t        this._split = null;\n\t        return this;\n\t    };\n\t    return Tone.MidSideSplit;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Mid/Side processing separates the the 'mid' signal\n\t\t *         (which comes out of both the left and the right channel)\n\t\t *         and the 'side' (which only comes out of the the side channels).\n\t\t *         MidSideMerge merges the mid and side signal after they've been seperated\n\t\t *         by Tone.MidSideSplit.<br><br>\n\t\t *         <code>\n\t\t *         Left = (Mid+Side)/sqrt(2);   // obtain left signal from mid and side<br>\n\t\t *         Right = (Mid-Side)/sqrt(2);   // obtain right signal from mid and side<br>\n\t\t *         </code>\n\t\t *\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @constructor\n\t\t */\n\t    Tone.MidSideMerge = function () {\n\t        Tone.AudioNode.call(this);\n\t        this.createInsOuts(2, 0);\n\t        /**\n\t\t\t *  The mid signal input. Alias for\n\t\t\t *  <code>input[0]</code>\n\t\t\t *  @type  {Tone.Gain}\n\t\t\t */\n\t        this.mid = this.input[0] = new Tone.Gain();\n\t        /**\n\t\t\t *  recombine the mid/side into Left\n\t\t\t *  @type {Tone.Expr}\n\t\t\t *  @private\n\t\t\t */\n\t        this._left = new Tone.Expr('($0 + $1) * $2');\n\t        /**\n\t\t\t *  The side signal input. Alias for\n\t\t\t *  <code>input[1]</code>\n\t\t\t *  @type  {Tone.Gain}\n\t\t\t */\n\t        this.side = this.input[1] = new Tone.Gain();\n\t        /**\n\t\t\t *  recombine the mid/side into Right\n\t\t\t *  @type {Tone.Expr}\n\t\t\t *  @private\n\t\t\t */\n\t        this._right = new Tone.Expr('($0 - $1) * $2');\n\t        /**\n\t\t\t *  Merge the left/right signal back into a stereo signal.\n\t\t\t *  @type {Tone.Merge}\n\t\t\t *  @private\n\t\t\t */\n\t        this._merge = this.output = new Tone.Merge();\n\t        this.mid.connect(this._left, 0, 0);\n\t        this.side.connect(this._left, 0, 1);\n\t        this.mid.connect(this._right, 0, 0);\n\t        this.side.connect(this._right, 0, 1);\n\t        this._left.connect(this._merge, 0, 0);\n\t        this._right.connect(this._merge, 0, 1);\n\t        this.context.getConstant(Math.SQRT1_2).connect(this._left, 0, 2);\n\t        this.context.getConstant(Math.SQRT1_2).connect(this._right, 0, 2);\n\t    };\n\t    Tone.extend(Tone.MidSideMerge, Tone.AudioNode);\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.MidSideMerge} this\n\t\t */\n\t    Tone.MidSideMerge.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this.mid.dispose();\n\t        this.mid = null;\n\t        this.side.dispose();\n\t        this.side = null;\n\t        this._left.dispose();\n\t        this._left = null;\n\t        this._right.dispose();\n\t        this._right = null;\n\t        this._merge.dispose();\n\t        this._merge = null;\n\t        return this;\n\t    };\n\t    return Tone.MidSideMerge;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.MidSideCompressor applies two different compressors to the mid\n\t\t *         and side signal components. See Tone.MidSideSplit.\n\t\t *\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @param {Object} options The options that are passed to the mid and side\n\t\t *                          compressors.\n\t\t *  @constructor\n\t\t */\n\t    Tone.MidSideCompressor = function (options) {\n\t        Tone.AudioNode.call(this);\n\t        options = Tone.defaultArg(options, Tone.MidSideCompressor.defaults);\n\t        /**\n\t\t\t *  the mid/side split\n\t\t\t *  @type  {Tone.MidSideSplit}\n\t\t\t *  @private\n\t\t\t */\n\t        this._midSideSplit = this.input = new Tone.MidSideSplit();\n\t        /**\n\t\t\t *  the mid/side recombination\n\t\t\t *  @type  {Tone.MidSideMerge}\n\t\t\t *  @private\n\t\t\t */\n\t        this._midSideMerge = this.output = new Tone.MidSideMerge();\n\t        /**\n\t\t\t *  The compressor applied to the mid signal\n\t\t\t *  @type  {Tone.Compressor}\n\t\t\t */\n\t        this.mid = new Tone.Compressor(options.mid);\n\t        /**\n\t\t\t *  The compressor applied to the side signal\n\t\t\t *  @type  {Tone.Compressor}\n\t\t\t */\n\t        this.side = new Tone.Compressor(options.side);\n\t        this._midSideSplit.mid.chain(this.mid, this._midSideMerge.mid);\n\t        this._midSideSplit.side.chain(this.side, this._midSideMerge.side);\n\t        this._readOnly([\n\t            'mid',\n\t            'side'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.MidSideCompressor, Tone.AudioNode);\n\t    /**\n\t\t *  @const\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.MidSideCompressor.defaults = {\n\t        'mid': {\n\t            'ratio': 3,\n\t            'threshold': -24,\n\t            'release': 0.03,\n\t            'attack': 0.02,\n\t            'knee': 16\n\t        },\n\t        'side': {\n\t            'ratio': 6,\n\t            'threshold': -30,\n\t            'release': 0.25,\n\t            'attack': 0.03,\n\t            'knee': 10\n\t        }\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.MidSideCompressor} this\n\t\t */\n\t    Tone.MidSideCompressor.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._writable([\n\t            'mid',\n\t            'side'\n\t        ]);\n\t        this.mid.dispose();\n\t        this.mid = null;\n\t        this.side.dispose();\n\t        this.side = null;\n\t        this._midSideSplit.dispose();\n\t        this._midSideSplit = null;\n\t        this._midSideMerge.dispose();\n\t        this._midSideMerge = null;\n\t        return this;\n\t    };\n\t    return Tone.MidSideCompressor;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Mono coerces the incoming mono or stereo signal into a mono signal\n\t\t *         where both left and right channels have the same value. This can be useful\n\t\t *         for [stereo imaging](https://en.wikipedia.org/wiki/Stereo_imaging).\n\t\t *\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @constructor\n\t\t */\n\t    Tone.Mono = function () {\n\t        Tone.AudioNode.call(this);\n\t        this.createInsOuts(1, 0);\n\t        /**\n\t\t\t *  merge the signal\n\t\t\t *  @type {Tone.Merge}\n\t\t\t *  @private\n\t\t\t */\n\t        this._merge = this.output = new Tone.Merge();\n\t        this.input.connect(this._merge, 0, 0);\n\t        this.input.connect(this._merge, 0, 1);\n\t        this.input.gain.value = Tone.dbToGain(-10);\n\t    };\n\t    Tone.extend(Tone.Mono);\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.Mono} this\n\t\t */\n\t    Tone.Mono.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._merge.dispose();\n\t        this._merge = null;\n\t        return this;\n\t    };\n\t    return Tone.Mono;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class A compressor with seperate controls over low/mid/high dynamics\n\t\t *\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @constructor\n\t\t *  @param {Object} options The low/mid/high compressor settings.\n\t\t *  @example\n\t\t *  var multiband = new Tone.MultibandCompressor({\n\t\t *  \t\"lowFrequency\" : 200,\n\t\t *  \t\"highFrequency\" : 1300\n\t\t *  \t\"low\" : {\n\t\t *  \t\t\"threshold\" : -12\n\t\t *  \t}\n\t\t *  })\n\t\t */\n\t    Tone.MultibandCompressor = function (options) {\n\t        Tone.AudioNode.call(this);\n\t        options = Tone.defaultArg(arguments, Tone.MultibandCompressor.defaults);\n\t        /**\n\t\t\t *  split the incoming signal into high/mid/low\n\t\t\t *  @type {Tone.MultibandSplit}\n\t\t\t *  @private\n\t\t\t */\n\t        this._splitter = this.input = new Tone.MultibandSplit({\n\t            'lowFrequency': options.lowFrequency,\n\t            'highFrequency': options.highFrequency\n\t        });\n\t        /**\n\t\t\t *  low/mid crossover frequency.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.lowFrequency = this._splitter.lowFrequency;\n\t        /**\n\t\t\t *  mid/high crossover frequency.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.highFrequency = this._splitter.highFrequency;\n\t        /**\n\t\t\t *  the output\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this.output = new Tone.Gain();\n\t        /**\n\t\t\t *  The compressor applied to the low frequencies.\n\t\t\t *  @type {Tone.Compressor}\n\t\t\t */\n\t        this.low = new Tone.Compressor(options.low);\n\t        /**\n\t\t\t *  The compressor applied to the mid frequencies.\n\t\t\t *  @type {Tone.Compressor}\n\t\t\t */\n\t        this.mid = new Tone.Compressor(options.mid);\n\t        /**\n\t\t\t *  The compressor applied to the high frequencies.\n\t\t\t *  @type {Tone.Compressor}\n\t\t\t */\n\t        this.high = new Tone.Compressor(options.high);\n\t        //connect the compressor\n\t        this._splitter.low.chain(this.low, this.output);\n\t        this._splitter.mid.chain(this.mid, this.output);\n\t        this._splitter.high.chain(this.high, this.output);\n\t        this._readOnly([\n\t            'high',\n\t            'mid',\n\t            'low',\n\t            'highFrequency',\n\t            'lowFrequency'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.MultibandCompressor, Tone.AudioNode);\n\t    /**\n\t\t *  @const\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.MultibandCompressor.defaults = {\n\t        'low': Tone.Compressor.defaults,\n\t        'mid': Tone.Compressor.defaults,\n\t        'high': Tone.Compressor.defaults,\n\t        'lowFrequency': 250,\n\t        'highFrequency': 2000\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.MultibandCompressor} this\n\t\t */\n\t    Tone.MultibandCompressor.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._splitter.dispose();\n\t        this._writable([\n\t            'high',\n\t            'mid',\n\t            'low',\n\t            'highFrequency',\n\t            'lowFrequency'\n\t        ]);\n\t        this.low.dispose();\n\t        this.mid.dispose();\n\t        this.high.dispose();\n\t        this._splitter = null;\n\t        this.low = null;\n\t        this.mid = null;\n\t        this.high = null;\n\t        this.lowFrequency = null;\n\t        this.highFrequency = null;\n\t        return this;\n\t    };\n\t    return Tone.MultibandCompressor;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Panner is an equal power Left/Right Panner and does not\n\t\t *          support 3D. Panner uses the StereoPannerNode when available.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @param {NormalRange} [initialPan=0] The initail panner value (center).\n\t\t *  @example\n\t\t *  //pan the input signal hard right.\n\t\t *  var panner = new Tone.Panner(1);\n\t\t */\n\t    Tone.Panner = function (initialPan) {\n\t        Tone.AudioNode.call(this);\n\t        if (Tone.Panner.hasStereoPanner) {\n\t            /**\n\t\t\t\t *  the panner node\n\t\t\t\t *  @type {StereoPannerNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._panner = this.input = this.output = this.context.createStereoPanner();\n\t            /**\n\t\t\t\t *  The pan control. -1 = hard left, 1 = hard right.\n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t            this.pan = this._panner.pan;\n\t        } else {\n\t            /**\n\t\t\t\t *  the dry/wet knob\n\t\t\t\t *  @type {Tone.CrossFade}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._crossFade = new Tone.CrossFade();\n\t            /**\n\t\t\t\t *  @type {Tone.Merge}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._merger = this.output = new Tone.Merge();\n\t            /**\n\t\t\t\t *  @type {Tone.Split}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._splitter = this.input = new Tone.Split();\n\t            /**\n\t\t\t\t *  The pan control. -1 = hard left, 1 = hard right.\n\t\t\t\t *  @type {AudioRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t            this.pan = new Tone.Signal(0, Tone.Type.AudioRange);\n\t            /**\n\t\t\t\t *  always sends 0\n\t\t\t\t *  @type {Tone.Zero}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._zero = new Tone.Zero();\n\t            /**\n\t\t\t\t *  The analog to gain conversion\n\t\t\t\t *  @type  {Tone.AudioToGain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._a2g = new Tone.AudioToGain();\n\t            //CONNECTIONS:\n\t            this._zero.connect(this._a2g);\n\t            this.pan.chain(this._a2g, this._crossFade.fade);\n\t            //left channel is a, right channel is b\n\t            this._splitter.connect(this._crossFade, 0, 0);\n\t            this._splitter.connect(this._crossFade, 1, 1);\n\t            //merge it back together\n\t            this._crossFade.a.connect(this._merger, 0, 0);\n\t            this._crossFade.b.connect(this._merger, 0, 1);\n\t        }\n\t        //initial value\n\t        this.pan.value = Tone.defaultArg(initialPan, 0);\n\t        this._readOnly('pan');\n\t    };\n\t    Tone.extend(Tone.Panner, Tone.AudioNode);\n\t    /**\n\t\t *  Indicates if the panner is using the new StereoPannerNode internally\n\t\t *  @type  {Boolean}\n\t\t *  @static\n\t\t *  @private\n\t\t *  @readOnly\n\t\t */\n\t    Tone.Panner.hasStereoPanner = Tone.context && Tone.isFunction(Tone.context.createStereoPanner);\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Panner} this\n\t\t */\n\t    Tone.Panner.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._writable('pan');\n\t        if (Tone.Panner.hasStereoPanner) {\n\t            this._panner.disconnect();\n\t            this._panner = null;\n\t            this.pan = null;\n\t        } else {\n\t            this._zero.dispose();\n\t            this._zero = null;\n\t            this._crossFade.dispose();\n\t            this._crossFade = null;\n\t            this._splitter.dispose();\n\t            this._splitter = null;\n\t            this._merger.dispose();\n\t            this._merger = null;\n\t            this.pan.dispose();\n\t            this.pan = null;\n\t            this._a2g.dispose();\n\t            this._a2g = null;\n\t        }\n\t        return this;\n\t    };\n\t    return Tone.Panner;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  A spatialized panner node which supports equalpower or HRTF panning.\n\t\t *          Tries to normalize the API across various browsers. See Tone.Listener\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @param {Number} positionX The initial x position.\n\t\t *  @param {Number} positionY The initial y position.\n\t\t *  @param {Number} positionZ The initial z position.\n\t\t */\n\t    Tone.Panner3D = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'positionX',\n\t            'positionY',\n\t            'positionZ'\n\t        ], Tone.Panner3D);\n\t        Tone.AudioNode.call(this);\n\t        /**\n\t\t\t *  The panner node\n\t\t\t *  @type {PannerNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._panner = this.input = this.output = this.context.createPanner();\n\t        //set some values\n\t        this._panner.panningModel = options.panningModel;\n\t        this._panner.maxDistance = options.maxDistance;\n\t        this._panner.distanceModel = options.distanceModel;\n\t        this._panner.coneOuterGain = options.coneOuterGain;\n\t        this._panner.coneOuterAngle = options.coneOuterAngle;\n\t        this._panner.coneInnerAngle = options.coneInnerAngle;\n\t        this._panner.refDistance = options.refDistance;\n\t        this._panner.rolloffFactor = options.rolloffFactor;\n\t        /**\n\t\t\t *  Holds the current orientation\n\t\t\t *  @type  {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._orientation = [\n\t            options.orientationX,\n\t            options.orientationY,\n\t            options.orientationZ\n\t        ];\n\t        /**\n\t\t\t *  Holds the current position\n\t\t\t *  @type  {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._position = [\n\t            options.positionX,\n\t            options.positionY,\n\t            options.positionZ\n\t        ];\n\t        // set the default position/orientation\n\t        this.orientationX = options.orientationX;\n\t        this.orientationY = options.orientationY;\n\t        this.orientationZ = options.orientationZ;\n\t        this.positionX = options.positionX;\n\t        this.positionY = options.positionY;\n\t        this.positionZ = options.positionZ;\n\t    };\n\t    Tone.extend(Tone.Panner3D, Tone.AudioNode);\n\t    /**\n\t\t *  Defaults according to the specification\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Panner3D.defaults = {\n\t        'positionX': 0,\n\t        'positionY': 0,\n\t        'positionZ': 0,\n\t        'orientationX': 0,\n\t        'orientationY': 0,\n\t        'orientationZ': 0,\n\t        'panningModel': 'equalpower',\n\t        'maxDistance': 10000,\n\t        'distanceModel': 'inverse',\n\t        'coneOuterGain': 0,\n\t        'coneOuterAngle': 360,\n\t        'coneInnerAngle': 360,\n\t        'refDistance': 1,\n\t        'rolloffFactor': 1\n\t    };\n\t    /**\n\t\t * The ramp time which is applied to the setTargetAtTime\n\t\t * @type {Number}\n\t\t * @private\n\t\t */\n\t    Tone.Panner3D.prototype._rampTimeConstant = 0.01;\n\t    /**\n\t\t *  Sets the position of the source in 3d space.\n\t\t *  @param  {Number}  x\n\t\t *  @param  {Number}  y\n\t\t *  @param  {Number}  z\n\t\t *  @return {Tone.Panner3D} this\n\t\t */\n\t    Tone.Panner3D.prototype.setPosition = function (x, y, z) {\n\t        if (this._panner.positionX) {\n\t            var now = this.now();\n\t            this._panner.positionX.setTargetAtTime(x, now, this._rampTimeConstant);\n\t            this._panner.positionY.setTargetAtTime(y, now, this._rampTimeConstant);\n\t            this._panner.positionZ.setTargetAtTime(z, now, this._rampTimeConstant);\n\t        } else {\n\t            this._panner.setPosition(x, y, z);\n\t        }\n\t        this._position = Array.prototype.slice.call(arguments);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Sets the orientation of the source in 3d space.\n\t\t *  @param  {Number}  x\n\t\t *  @param  {Number}  y\n\t\t *  @param  {Number}  z\n\t\t *  @return {Tone.Panner3D} this\n\t\t */\n\t    Tone.Panner3D.prototype.setOrientation = function (x, y, z) {\n\t        if (this._panner.orientationX) {\n\t            var now = this.now();\n\t            this._panner.orientationX.setTargetAtTime(x, now, this._rampTimeConstant);\n\t            this._panner.orientationY.setTargetAtTime(y, now, this._rampTimeConstant);\n\t            this._panner.orientationZ.setTargetAtTime(z, now, this._rampTimeConstant);\n\t        } else {\n\t            this._panner.setOrientation(x, y, z);\n\t        }\n\t        this._orientation = Array.prototype.slice.call(arguments);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  The x position of the panner object.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name positionX\n\t\t */\n\t    Object.defineProperty(Tone.Panner3D.prototype, 'positionX', {\n\t        set: function (pos) {\n\t            this._position[0] = pos;\n\t            this.setPosition.apply(this, this._position);\n\t        },\n\t        get: function () {\n\t            return this._position[0];\n\t        }\n\t    });\n\t    /**\n\t\t *  The y position of the panner object.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name positionY\n\t\t */\n\t    Object.defineProperty(Tone.Panner3D.prototype, 'positionY', {\n\t        set: function (pos) {\n\t            this._position[1] = pos;\n\t            this.setPosition.apply(this, this._position);\n\t        },\n\t        get: function () {\n\t            return this._position[1];\n\t        }\n\t    });\n\t    /**\n\t\t *  The z position of the panner object.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name positionZ\n\t\t */\n\t    Object.defineProperty(Tone.Panner3D.prototype, 'positionZ', {\n\t        set: function (pos) {\n\t            this._position[2] = pos;\n\t            this.setPosition.apply(this, this._position);\n\t        },\n\t        get: function () {\n\t            return this._position[2];\n\t        }\n\t    });\n\t    /**\n\t\t *  The x orientation of the panner object.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name orientationX\n\t\t */\n\t    Object.defineProperty(Tone.Panner3D.prototype, 'orientationX', {\n\t        set: function (pos) {\n\t            this._orientation[0] = pos;\n\t            this.setOrientation.apply(this, this._orientation);\n\t        },\n\t        get: function () {\n\t            return this._orientation[0];\n\t        }\n\t    });\n\t    /**\n\t\t *  The y orientation of the panner object.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name orientationY\n\t\t */\n\t    Object.defineProperty(Tone.Panner3D.prototype, 'orientationY', {\n\t        set: function (pos) {\n\t            this._orientation[1] = pos;\n\t            this.setOrientation.apply(this, this._orientation);\n\t        },\n\t        get: function () {\n\t            return this._orientation[1];\n\t        }\n\t    });\n\t    /**\n\t\t *  The z orientation of the panner object.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name orientationZ\n\t\t */\n\t    Object.defineProperty(Tone.Panner3D.prototype, 'orientationZ', {\n\t        set: function (pos) {\n\t            this._orientation[2] = pos;\n\t            this.setOrientation.apply(this, this._orientation);\n\t        },\n\t        get: function () {\n\t            return this._orientation[2];\n\t        }\n\t    });\n\t    /**\n\t\t *  Proxy a property on the panner to an exposed public propery\n\t\t *  @param  {String}  prop\n\t\t *  @private\n\t\t */\n\t    Tone.Panner3D._aliasProperty = function (prop) {\n\t        Object.defineProperty(Tone.Panner3D.prototype, prop, {\n\t            set: function (val) {\n\t                this._panner[prop] = val;\n\t            },\n\t            get: function () {\n\t                return this._panner[prop];\n\t            }\n\t        });\n\t    };\n\t    /**\n\t\t *  The panning model. Either \"equalpower\" or \"HRTF\".\n\t\t *  @type {String}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name panningModel\n\t\t */\n\t    Tone.Panner3D._aliasProperty('panningModel');\n\t    /**\n\t\t *  A reference distance for reducing volume as source move further from the listener\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name refDistance\n\t\t */\n\t    Tone.Panner3D._aliasProperty('refDistance');\n\t    /**\n\t\t *  Describes how quickly the volume is reduced as source moves away from listener.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name rolloffFactor\n\t\t */\n\t    Tone.Panner3D._aliasProperty('rolloffFactor');\n\t    /**\n\t\t *  The distance model used by,  \"linear\", \"inverse\", or \"exponential\".\n\t\t *  @type {String}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name distanceModel\n\t\t */\n\t    Tone.Panner3D._aliasProperty('distanceModel');\n\t    /**\n\t\t *  The angle, in degrees, inside of which there will be no volume reduction\n\t\t *  @type {Degrees}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name coneInnerAngle\n\t\t */\n\t    Tone.Panner3D._aliasProperty('coneInnerAngle');\n\t    /**\n\t\t *  The angle, in degrees, outside of which the volume will be reduced\n\t\t *  to a constant value of coneOuterGain\n\t\t *  @type {Degrees}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name coneOuterAngle\n\t\t */\n\t    Tone.Panner3D._aliasProperty('coneOuterAngle');\n\t    /**\n\t\t *  The gain outside of the coneOuterAngle\n\t\t *  @type {Gain}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name coneOuterGain\n\t\t */\n\t    Tone.Panner3D._aliasProperty('coneOuterGain');\n\t    /**\n\t\t *  The maximum distance between source and listener,\n\t\t *  after which the volume will not be reduced any further.\n\t\t *  @type {Positive}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name maxDistance\n\t\t */\n\t    Tone.Panner3D._aliasProperty('maxDistance');\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Panner3D} this\n\t\t */\n\t    Tone.Panner3D.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._panner.disconnect();\n\t        this._panner = null;\n\t        this._orientation = null;\n\t        this._position = null;\n\t        return this;\n\t    };\n\t    return Tone.Panner3D;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.PanVol is a Tone.Panner and Tone.Volume in one.\n\t\t *\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @constructor\n\t\t *  @param {AudioRange} pan the initial pan\n\t\t *  @param {number} volume The output volume.\n\t\t *  @example\n\t\t * //pan the incoming signal left and drop the volume\n\t\t * var panVol = new Tone.PanVol(-0.25, -12);\n\t\t */\n\t    Tone.PanVol = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'pan',\n\t            'volume'\n\t        ], Tone.PanVol);\n\t        Tone.AudioNode.call(this);\n\t        /**\n\t\t\t *  The panning node\n\t\t\t *  @type {Tone.Panner}\n\t\t\t *  @private\n\t\t\t */\n\t        this._panner = this.input = new Tone.Panner(options.pan);\n\t        /**\n\t\t\t *  The L/R panning control.\n\t\t\t *  @type {AudioRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.pan = this._panner.pan;\n\t        /**\n\t\t\t *  The volume node\n\t\t\t *  @type {Tone.Volume}\n\t\t\t *  @private\n\t\t\t */\n\t        this._volume = this.output = new Tone.Volume(options.volume);\n\t        /**\n\t\t\t *  The volume control in decibels.\n\t\t\t *  @type {Decibels}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.volume = this._volume.volume;\n\t        //connections\n\t        this._panner.connect(this._volume);\n\t        this.mute = options.mute;\n\t        this._readOnly([\n\t            'pan',\n\t            'volume'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.PanVol, Tone.AudioNode);\n\t    /**\n\t\t *  The defaults\n\t\t *  @type  {Object}\n\t\t *  @const\n\t\t *  @static\n\t\t */\n\t    Tone.PanVol.defaults = {\n\t        'pan': 0,\n\t        'volume': 0,\n\t        'mute': false\n\t    };\n\t    /**\n\t\t * Mute/unmute the volume\n\t\t * @memberOf Tone.PanVol#\n\t\t * @name mute\n\t\t * @type {Boolean}\n\t\t */\n\t    Object.defineProperty(Tone.PanVol.prototype, 'mute', {\n\t        get: function () {\n\t            return this._volume.mute;\n\t        },\n\t        set: function (mute) {\n\t            this._volume.mute = mute;\n\t        }\n\t    });\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.PanVol} this\n\t\t */\n\t    Tone.PanVol.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._writable([\n\t            'pan',\n\t            'volume'\n\t        ]);\n\t        this._panner.dispose();\n\t        this._panner = null;\n\t        this.pan = null;\n\t        this._volume.dispose();\n\t        this._volume = null;\n\t        this.volume = null;\n\t        return this;\n\t    };\n\t    return Tone.PanVol;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class Tone.Solo lets you isolate a specific audio stream. When\n\t\t *         an instance is set to `solo=true`, it will mute all other instances.\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @example\n\t\t * var soloA = new Tone.Solo()\n\t\t * var soloB = new Tone.Solo()\n\t\t * soloA.solo = true\n\t\t * //no audio will pass through soloB\n\t\t */\n\t    Tone.Solo = function () {\n\t        var options = Tone.defaults(arguments, ['solo'], Tone.Solo);\n\t        Tone.AudioNode.call(this);\n\t        /**\n\t\t\t *  The input and output node\n\t\t\t *  @type  {Tone.Gain}\n\t\t\t */\n\t        this.input = this.output = new Tone.Gain();\n\t        /**\n\t\t\t *  A bound _soloed method\n\t\t\t *  @type  {Function}\n\t\t\t *  @private\n\t\t\t */\n\t        this._soloBind = this._soloed.bind(this);\n\t        //listen for solo events class-wide.\n\t        this.context.on('solo', this._soloBind);\n\t        //set initially\n\t        this.solo = options.solo;\n\t    };\n\t    Tone.extend(Tone.Solo, Tone.AudioNode);\n\t    /**\n\t\t *  The defaults\n\t\t *  @type  {Object}\n\t\t *  @static\n\t\t */\n\t    Tone.Solo.defaults = { solo: false };\n\t    /**\n\t\t *  Isolates this instance and mutes all other instances of Tone.Solo.\n\t\t *  Only one instance can be soloed at a time. A soloed\n\t\t *  instance will report `solo=false` when another instance is soloed.\n\t\t *  @memberOf Tone.Solo#\n\t\t *  @type {Boolean}\n\t\t *  @name solo\n\t\t */\n\t    Object.defineProperty(Tone.Solo.prototype, 'solo', {\n\t        get: function () {\n\t            return this._isSoloed();\n\t        },\n\t        set: function (solo) {\n\t            if (solo) {\n\t                this._addSolo();\n\t            } else {\n\t                this._removeSolo();\n\t            }\n\t            this.context.emit('solo', this);\n\t        }\n\t    });\n\t    /**\n\t\t *  If the current instance is muted, i.e. another instance is soloed\n\t\t *  @memberOf Tone.Solo#\n\t\t *  @type {Boolean}\n\t\t *  @name muted\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Solo.prototype, 'muted', {\n\t        get: function () {\n\t            return this.input.gain.value === 0;\n\t        }\n\t    });\n\t    /**\n\t\t * Add this to the soloed array\n\t\t * @private\n\t\t */\n\t    Tone.Solo.prototype._addSolo = function () {\n\t        if (!Tone.isArray(this.context._currentSolo)) {\n\t            this.context._currentSolo = [];\n\t        }\n\t        if (!this._isSoloed()) {\n\t            this.context._currentSolo.push(this);\n\t        }\n\t    };\n\t    /**\n\t\t * Remove this from the soloed array\n\t\t * @private\n\t\t */\n\t    Tone.Solo.prototype._removeSolo = function () {\n\t        if (this._isSoloed()) {\n\t            var index = this.context._currentSolo.indexOf(this);\n\t            this.context._currentSolo.splice(index, 1);\n\t        }\n\t    };\n\t    /**\n\t\t * @return {Boolean} Is this on the soloed array\n\t\t * @private\n\t\t */\n\t    Tone.Solo.prototype._isSoloed = function () {\n\t        if (Tone.isArray(this.context._currentSolo)) {\n\t            return this.context._currentSolo.length !== 0 && this.context._currentSolo.indexOf(this) !== -1;\n\t        } else {\n\t            return false;\n\t        }\n\t    };\n\t    /**\n\t\t * @return {Boolean} Returns true if no one is soloed\n\t\t * @private\n\t\t */\n\t    Tone.Solo.prototype._noSolos = function () {\n\t        return !Tone.isArray(this.context._currentSolo) || this.context._currentSolo.length === 0;\n\t    };\n\t    /**\n\t\t *  Solo the current instance and unsolo all other instances.\n\t\t *  @param  {Tone.Solo}  instance  The instance which is being soloed/unsoloed.\n\t\t *  @private\n\t\t */\n\t    Tone.Solo.prototype._soloed = function () {\n\t        if (this._isSoloed()) {\n\t            this.input.gain.value = 1;\n\t        } else if (this._noSolos()) {\n\t            //no one is soloed\n\t            this.input.gain.value = 1;\n\t        } else {\n\t            this.input.gain.value = 0;\n\t        }\n\t    };\n\t    /**\n\t\t *  Clean up\n\t\t *  @return  {Tone.Solo}  this\n\t\t */\n\t    Tone.Solo.prototype.dispose = function () {\n\t        this.context.off('solo', this._soloBind);\n\t        this._removeSolo();\n\t        this._soloBind = null;\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        return this;\n\t    };\n\t    return Tone.Solo;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class  Get the current waveform data of the connected audio source.\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @param {Number=} size The size of the FFT. Value must be a power of\n\t\t *                       two in the range 32 to 32768.\n\t\t */\n\t    Tone.Waveform = function () {\n\t        var options = Tone.defaults(arguments, ['size'], Tone.Waveform);\n\t        options.type = Tone.Analyser.Type.Waveform;\n\t        Tone.AudioNode.call(this);\n\t        /**\n\t\t\t *  The analyser node.\n\t\t\t *  @private\n\t\t\t *  @type {Tone.Analyser}\n\t\t\t */\n\t        this._analyser = this.input = this.output = new Tone.Analyser(options);\n\t    };\n\t    Tone.extend(Tone.Waveform, Tone.AudioNode);\n\t    /**\n\t\t *  The default values.\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.Waveform.defaults = { 'size': 1024 };\n\t    /**\n\t\t *  Gets the waveform of the audio source. Returns the waveform data\n\t\t *  of length [size](#size) as a Float32Array with values between -1 and 1.\n\t\t *  @returns {TypedArray}\n\t\t */\n\t    Tone.Waveform.prototype.getValue = function () {\n\t        return this._analyser.getValue();\n\t    };\n\t    /**\n\t\t *  The size of analysis. This must be a power of two in the range 32 to 32768.\n\t\t *  @memberOf Tone.Waveform#\n\t\t *  @type {Number}\n\t\t *  @name size\n\t\t */\n\t    Object.defineProperty(Tone.Waveform.prototype, 'size', {\n\t        get: function () {\n\t            return this._analyser.size;\n\t        },\n\t        set: function (size) {\n\t            this._analyser.size = size;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return  {Tone.Waveform}  this\n\t\t */\n\t    Tone.Waveform.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._analyser.dispose();\n\t        this._analyser = null;\n\t    };\n\t    return Tone.Waveform;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.CtrlInterpolate will interpolate between given values based\n\t\t *         on the \"index\" property. Passing in an array or object literal\n\t\t *         will interpolate each of the parameters. Note (i.e. \"C3\")\n\t\t *         and Time (i.e. \"4n + 2\") can be interpolated. All other values are\n\t\t *         assumed to be numbers. \n\t\t *  @example\n\t\t * var interp = new Tone.CtrlInterpolate([0, 2, 9, 4]);\n\t\t * interp.index = 0.75;\n\t\t * interp.value; //returns 1.5\n\t\t *\n\t\t *  @example\n\t\t * var interp = new Tone.CtrlInterpolate([\n\t\t * \t[2, 4, 5],\n\t\t * \t[9, 3, 2],\n\t\t * ]);\n\t\t * @param {Array} values The array of values to interpolate over\n\t\t * @param {Positive} index The initial interpolation index.\n\t\t * @extends {Tone}\n\t\t */\n\t    Tone.CtrlInterpolate = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'values',\n\t            'index'\n\t        ], Tone.CtrlInterpolate);\n\t        Tone.call(this);\n\t        /**\n\t\t\t *  The values to interpolate between\n\t\t\t *  @type  {Array}\n\t\t\t */\n\t        this.values = options.values;\n\t        /**\n\t\t\t *  The interpolated index between values. For example: a value of 1.5\n\t\t\t *  would interpolate equally between the value at index 1\n\t\t\t *  and the value at index 2. \n\t\t\t *  @example\n\t\t\t * interp.index = 0; \n\t\t\t * interp.value; //returns the value at 0\n\t\t\t * interp.index = 0.5;\n\t\t\t * interp.value; //returns the value between indices 0 and 1. \n\t\t\t *  @type  {Positive}\n\t\t\t */\n\t        this.index = options.index;\n\t    };\n\t    Tone.extend(Tone.CtrlInterpolate);\n\t    /**\n\t\t *  The defaults\n\t\t *  @const\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.CtrlInterpolate.defaults = {\n\t        'index': 0,\n\t        'values': []\n\t    };\n\t    /**\n\t\t *  The current interpolated value based on the index\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.CtrlInterpolate#\n\t\t *  @type {*}\n\t\t *  @name value\n\t\t */\n\t    Object.defineProperty(Tone.CtrlInterpolate.prototype, 'value', {\n\t        get: function () {\n\t            var index = this.index;\n\t            index = Math.min(index, this.values.length - 1);\n\t            var lowerPosition = Math.floor(index);\n\t            var lower = this.values[lowerPosition];\n\t            var upper = this.values[Math.ceil(index)];\n\t            return this._interpolate(index - lowerPosition, lower, upper);\n\t        }\n\t    });\n\t    /**\n\t\t *  Internal interpolation routine\n\t\t *  @param  {NormalRange}  index  The index between the lower and upper\n\t\t *  @param  {*}  lower \n\t\t *  @param  {*}  upper \n\t\t *  @return  {*}  The interpolated value\n\t\t *  @private\n\t\t */\n\t    Tone.CtrlInterpolate.prototype._interpolate = function (index, lower, upper) {\n\t        if (Tone.isArray(lower)) {\n\t            var retArray = [];\n\t            for (var i = 0; i < lower.length; i++) {\n\t                retArray[i] = this._interpolate(index, lower[i], upper[i]);\n\t            }\n\t            return retArray;\n\t        } else if (Tone.isObject(lower)) {\n\t            var retObj = {};\n\t            for (var attr in lower) {\n\t                retObj[attr] = this._interpolate(index, lower[attr], upper[attr]);\n\t            }\n\t            return retObj;\n\t        } else {\n\t            lower = this._toNumber(lower);\n\t            upper = this._toNumber(upper);\n\t            return (1 - index) * lower + index * upper;\n\t        }\n\t    };\n\t    /**\n\t\t *  Convert from the given type into a number\n\t\t *  @param  {Number|String}  value\n\t\t *  @return  {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.CtrlInterpolate.prototype._toNumber = function (val) {\n\t        if (Tone.isNumber(val)) {\n\t            return val;\n\t        } else {\n\t            //otherwise assume that it's Time...\n\t            return this.toSeconds(val);\n\t        }\n\t    };\n\t    /**\n\t\t *  Clean up\n\t\t *  @return  {Tone.CtrlInterpolate}  this\n\t\t */\n\t    Tone.CtrlInterpolate.prototype.dispose = function () {\n\t        this.values = null;\n\t    };\n\t    return Tone.CtrlInterpolate;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.CtrlMarkov represents a Markov Chain where each call\n\t\t *         to Tone.CtrlMarkov.next will move to the next state. If the next\n\t\t *         state choice is an array, the next state is chosen randomly with\n\t\t *         even probability for all of the choices. For a weighted probability\n\t\t *         of the next choices, pass in an object with \"state\" and \"probability\" attributes. \n\t\t *         The probabilities will be normalized and then chosen. If no next options\n\t\t *         are given for the current state, the state will stay there. \n\t\t *  @extends {Tone}\n\t\t *  @example\n\t\t * var chain = new Tone.CtrlMarkov({\n\t\t * \t\"beginning\" : [\"end\", \"middle\"],\n\t\t * \t\"middle\" : \"end\"\n\t\t * });\n\t\t * chain.value = \"beginning\";\n\t\t * chain.next(); //returns \"end\" or \"middle\" with 50% probability\n\t\t *\n\t\t *  @example\n\t\t * var chain = new Tone.CtrlMarkov({\n\t\t * \t\"beginning\" : [{\"value\" : \"end\", \"probability\" : 0.8}, \n\t\t * \t\t\t\t\t{\"value\" : \"middle\", \"probability\" : 0.2}],\n\t\t * \t\"middle\" : \"end\"\n\t\t * });\n\t\t * chain.value = \"beginning\";\n\t\t * chain.next(); //returns \"end\" with 80% probability or \"middle\" with 20%.\n\t\t *  @param {Object} values An object with the state names as the keys\n\t\t *                         and the next state(s) as the values. \n\t\t */\n\t    Tone.CtrlMarkov = function (values, initial) {\n\t        Tone.call(this);\n\t        /**\n\t\t\t *  The Markov values with states as the keys\n\t\t\t *  and next state(s) as the values. \n\t\t\t *  @type {Object}\n\t\t\t */\n\t        this.values = Tone.defaultArg(values, {});\n\t        /**\n\t\t\t *  The current state of the Markov values. The next\n\t\t\t *  state will be evaluated and returned when Tone.CtrlMarkov.next\n\t\t\t *  is invoked.\n\t\t\t *  @type {String}\n\t\t\t */\n\t        this.value = Tone.defaultArg(initial, Object.keys(this.values)[0]);\n\t    };\n\t    Tone.extend(Tone.CtrlMarkov);\n\t    /**\n\t\t *  Returns the next state of the Markov values. \n\t\t *  @return  {String}\n\t\t */\n\t    Tone.CtrlMarkov.prototype.next = function () {\n\t        if (this.values.hasOwnProperty(this.value)) {\n\t            var next = this.values[this.value];\n\t            if (Tone.isArray(next)) {\n\t                var distribution = this._getProbDistribution(next);\n\t                var rand = Math.random();\n\t                var total = 0;\n\t                for (var i = 0; i < distribution.length; i++) {\n\t                    var dist = distribution[i];\n\t                    if (rand > total && rand < total + dist) {\n\t                        var chosen = next[i];\n\t                        if (Tone.isObject(chosen)) {\n\t                            this.value = chosen.value;\n\t                        } else {\n\t                            this.value = chosen;\n\t                        }\n\t                    }\n\t                    total += dist;\n\t                }\n\t            } else {\n\t                this.value = next;\n\t            }\n\t        }\n\t        return this.value;\n\t    };\n\t    /**\n\t\t *  Choose randomly from an array weighted options in the form \n\t\t *  {\"state\" : string, \"probability\" : number} or an array of values\n\t\t *  @param  {Array}  options \n\t\t *  @return  {Array}  The randomly selected choice\n\t\t *  @private\n\t\t */\n\t    Tone.CtrlMarkov.prototype._getProbDistribution = function (options) {\n\t        var distribution = [];\n\t        var total = 0;\n\t        var needsNormalizing = false;\n\t        for (var i = 0; i < options.length; i++) {\n\t            var option = options[i];\n\t            if (Tone.isObject(option)) {\n\t                needsNormalizing = true;\n\t                distribution[i] = option.probability;\n\t            } else {\n\t                distribution[i] = 1 / options.length;\n\t            }\n\t            total += distribution[i];\n\t        }\n\t        if (needsNormalizing) {\n\t            //normalize the values\n\t            for (var j = 0; j < distribution.length; j++) {\n\t                distribution[j] = distribution[j] / total;\n\t            }\n\t        }\n\t        return distribution;\n\t    };\n\t    /**\n\t\t *  Clean up\n\t\t *  @return  {Tone.CtrlMarkov}  this\n\t\t */\n\t    Tone.CtrlMarkov.prototype.dispose = function () {\n\t        this.values = null;\n\t    };\n\t    return Tone.CtrlMarkov;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Generate patterns from an array of values.\n\t\t *         Has a number of arpeggiation and randomized\n\t\t *         selection patterns. \n\t\t *           <ul>\n\t\t *  \t        <li>\"up\" - cycles upward</li>\n\t\t *  \t\t\t<li>\"down\" - cycles downward</li>\n\t\t *  \t\t\t<li>\"upDown\" - up then and down</li>\n\t\t *  \t\t\t<li>\"downUp\" - cycles down then and up</li>\n\t\t *  \t\t\t<li>\"alternateUp\" - jump up two and down one</li>\n\t\t *  \t\t\t<li>\"alternateDown\" - jump down two and up one</li>\n\t\t *  \t\t\t<li>\"random\" - randomly select an index</li>\n\t\t *  \t\t\t<li>\"randomWalk\" - randomly moves one index away from the current position</li>\n\t\t *  \t\t\t<li>\"randomOnce\" - randomly select an index without repeating until all values have been chosen.</li>\n\t\t *     \t\t</ul>\n\t\t *  @param  {Array}  values   An array of options to choose from.\n\t\t *  @param  {Tone.CtrlPattern.Type=}  type  The name of the pattern.\n\t\t *  @extends {Tone}\n\t\t */\n\t    Tone.CtrlPattern = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'values',\n\t            'type'\n\t        ], Tone.CtrlPattern);\n\t        Tone.call(this);\n\t        /**\n\t\t\t *  The array of values to arpeggiate over\n\t\t\t *  @type {Array}\n\t\t\t */\n\t        this.values = options.values;\n\t        /**\n\t\t\t *  The current position in the values array\n\t\t\t *  @type  {Number}\n\t\t\t */\n\t        this.index = 0;\n\t        /**\n\t\t\t *  The type placeholder\n\t\t\t *  @type {Tone.CtrlPattern.Type}\n\t\t\t *  @private\n\t\t\t */\n\t        this._type = null;\n\t        /**\n\t\t\t *  Shuffled values for the RandomOnce type\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._shuffled = null;\n\t        /**\n\t\t\t *  The direction of the movement\n\t\t\t *  @type {String}\n\t\t\t *  @private\n\t\t\t */\n\t        this._direction = null;\n\t        this.type = options.type;\n\t    };\n\t    Tone.extend(Tone.CtrlPattern);\n\t    /**\n\t\t *  The Control Patterns\n\t\t *  @type  {Object}\n\t\t *  @static\n\t\t */\n\t    Tone.CtrlPattern.Type = {\n\t        Up: 'up',\n\t        Down: 'down',\n\t        UpDown: 'upDown',\n\t        DownUp: 'downUp',\n\t        AlternateUp: 'alternateUp',\n\t        AlternateDown: 'alternateDown',\n\t        Random: 'random',\n\t        RandomWalk: 'randomWalk',\n\t        RandomOnce: 'randomOnce'\n\t    };\n\t    /**\n\t\t *  The default values. \n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.CtrlPattern.defaults = {\n\t        'type': Tone.CtrlPattern.Type.Up,\n\t        'values': []\n\t    };\n\t    /**\n\t\t *  The value at the current index of the pattern.\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.CtrlPattern#\n\t\t *  @type {*}\n\t\t *  @name value\n\t\t */\n\t    Object.defineProperty(Tone.CtrlPattern.prototype, 'value', {\n\t        get: function () {\n\t            //some safeguards\n\t            if (this.values.length === 0) {\n\t                return;\n\t            } else if (this.values.length === 1) {\n\t                return this.values[0];\n\t            }\n\t            this.index = Math.min(this.index, this.values.length - 1);\n\t            var val = this.values[this.index];\n\t            if (this.type === Tone.CtrlPattern.Type.RandomOnce) {\n\t                if (this.values.length !== this._shuffled.length) {\n\t                    this._shuffleValues();\n\t                }\n\t                val = this.values[this._shuffled[this.index]];\n\t            }\n\t            return val;\n\t        }\n\t    });\n\t    /**\n\t\t *  The pattern used to select the next\n\t\t *  item from the values array\n\t\t *  @memberOf Tone.CtrlPattern#\n\t\t *  @type {Tone.CtrlPattern.Type}\n\t\t *  @name type\n\t\t */\n\t    Object.defineProperty(Tone.CtrlPattern.prototype, 'type', {\n\t        get: function () {\n\t            return this._type;\n\t        },\n\t        set: function (type) {\n\t            this._type = type;\n\t            this._shuffled = null;\n\t            //the first index\n\t            if (this._type === Tone.CtrlPattern.Type.Up || this._type === Tone.CtrlPattern.Type.UpDown || this._type === Tone.CtrlPattern.Type.RandomOnce || this._type === Tone.CtrlPattern.Type.AlternateUp) {\n\t                this.index = 0;\n\t            } else if (this._type === Tone.CtrlPattern.Type.Down || this._type === Tone.CtrlPattern.Type.DownUp || this._type === Tone.CtrlPattern.Type.AlternateDown) {\n\t                this.index = this.values.length - 1;\n\t            }\n\t            //the direction\n\t            if (this._type === Tone.CtrlPattern.Type.UpDown || this._type === Tone.CtrlPattern.Type.AlternateUp) {\n\t                this._direction = Tone.CtrlPattern.Type.Up;\n\t            } else if (this._type === Tone.CtrlPattern.Type.DownUp || this._type === Tone.CtrlPattern.Type.AlternateDown) {\n\t                this._direction = Tone.CtrlPattern.Type.Down;\n\t            }\n\t            //randoms\n\t            if (this._type === Tone.CtrlPattern.Type.RandomOnce) {\n\t                this._shuffleValues();\n\t            } else if (this._type === Tone.CtrlPattern.Random) {\n\t                this.index = Math.floor(Math.random() * this.values.length);\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Return the next value given the current position\n\t\t *  and pattern.\n\t\t *  @return {*} The next value\n\t\t */\n\t    Tone.CtrlPattern.prototype.next = function () {\n\t        var type = this.type;\n\t        //choose the next index\n\t        if (type === Tone.CtrlPattern.Type.Up) {\n\t            this.index++;\n\t            if (this.index >= this.values.length) {\n\t                this.index = 0;\n\t            }\n\t        } else if (type === Tone.CtrlPattern.Type.Down) {\n\t            this.index--;\n\t            if (this.index < 0) {\n\t                this.index = this.values.length - 1;\n\t            }\n\t        } else if (type === Tone.CtrlPattern.Type.UpDown || type === Tone.CtrlPattern.Type.DownUp) {\n\t            if (this._direction === Tone.CtrlPattern.Type.Up) {\n\t                this.index++;\n\t            } else {\n\t                this.index--;\n\t            }\n\t            if (this.index < 0) {\n\t                this.index = 1;\n\t                this._direction = Tone.CtrlPattern.Type.Up;\n\t            } else if (this.index >= this.values.length) {\n\t                this.index = this.values.length - 2;\n\t                this._direction = Tone.CtrlPattern.Type.Down;\n\t            }\n\t        } else if (type === Tone.CtrlPattern.Type.Random) {\n\t            this.index = Math.floor(Math.random() * this.values.length);\n\t        } else if (type === Tone.CtrlPattern.Type.RandomWalk) {\n\t            if (Math.random() < 0.5) {\n\t                this.index--;\n\t                this.index = Math.max(this.index, 0);\n\t            } else {\n\t                this.index++;\n\t                this.index = Math.min(this.index, this.values.length - 1);\n\t            }\n\t        } else if (type === Tone.CtrlPattern.Type.RandomOnce) {\n\t            this.index++;\n\t            if (this.index >= this.values.length) {\n\t                this.index = 0;\n\t                //reshuffle the values for next time\n\t                this._shuffleValues();\n\t            }\n\t        } else if (type === Tone.CtrlPattern.Type.AlternateUp) {\n\t            if (this._direction === Tone.CtrlPattern.Type.Up) {\n\t                this.index += 2;\n\t                this._direction = Tone.CtrlPattern.Type.Down;\n\t            } else {\n\t                this.index -= 1;\n\t                this._direction = Tone.CtrlPattern.Type.Up;\n\t            }\n\t            if (this.index >= this.values.length) {\n\t                this.index = 0;\n\t                this._direction = Tone.CtrlPattern.Type.Up;\n\t            }\n\t        } else if (type === Tone.CtrlPattern.Type.AlternateDown) {\n\t            if (this._direction === Tone.CtrlPattern.Type.Up) {\n\t                this.index += 1;\n\t                this._direction = Tone.CtrlPattern.Type.Down;\n\t            } else {\n\t                this.index -= 2;\n\t                this._direction = Tone.CtrlPattern.Type.Up;\n\t            }\n\t            if (this.index < 0) {\n\t                this.index = this.values.length - 1;\n\t                this._direction = Tone.CtrlPattern.Type.Down;\n\t            }\n\t        }\n\t        return this.value;\n\t    };\n\t    /**\n\t\t *  Shuffles the values and places the results into the _shuffled\n\t\t *  @private\n\t\t */\n\t    Tone.CtrlPattern.prototype._shuffleValues = function () {\n\t        var copy = [];\n\t        this._shuffled = [];\n\t        for (var i = 0; i < this.values.length; i++) {\n\t            copy[i] = i;\n\t        }\n\t        while (copy.length > 0) {\n\t            var randVal = copy.splice(Math.floor(copy.length * Math.random()), 1);\n\t            this._shuffled.push(randVal[0]);\n\t        }\n\t    };\n\t    /**\n\t\t *  Clean up\n\t\t *  @returns {Tone.CtrlPattern} this\n\t\t */\n\t    Tone.CtrlPattern.prototype.dispose = function () {\n\t        this._shuffled = null;\n\t        this.values = null;\n\t    };\n\t    return Tone.CtrlPattern;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Choose a random value.\n\t\t *  @extends {Tone}\n\t\t *  @example\n\t\t * var randomWalk = new Tone.CtrlRandom({\n\t\t * \t\"min\" : 0,\n\t\t * \t\"max\" : 10,\n\t\t * \t\"integer\" : true\n\t\t * });\n\t\t * randomWalk.eval();\n\t\t *\n\t\t *  @param {Number|Time=} min The minimum return value.\n\t\t *  @param {Number|Time=} max The maximum return value.\n\t\t */\n\t    Tone.CtrlRandom = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'min',\n\t            'max'\n\t        ], Tone.CtrlRandom);\n\t        Tone.call(this);\n\t        /**\n\t\t\t *  The minimum return value\n\t\t\t *  @type  {Number|Time}\n\t\t\t */\n\t        this.min = options.min;\n\t        /**\n\t\t\t *  The maximum return value\n\t\t\t *  @type  {Number|Time}\n\t\t\t */\n\t        this.max = options.max;\n\t        /**\n\t\t\t *  If the return value should be an integer\n\t\t\t *  @type  {Boolean}\n\t\t\t */\n\t        this.integer = options.integer;\n\t    };\n\t    Tone.extend(Tone.CtrlRandom);\n\t    /**\n\t\t *  The defaults\n\t\t *  @const\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.CtrlRandom.defaults = {\n\t        'min': 0,\n\t        'max': 1,\n\t        'integer': false\n\t    };\n\t    /**\n\t\t *  Return a random value between min and max. \n\t\t *  @readOnly\n\t\t *  @memberOf Tone.CtrlRandom#\n\t\t *  @type {*}\n\t\t *  @name value\n\t\t */\n\t    Object.defineProperty(Tone.CtrlRandom.prototype, 'value', {\n\t        get: function () {\n\t            var min = this.toSeconds(this.min);\n\t            var max = this.toSeconds(this.max);\n\t            var rand = Math.random();\n\t            var val = rand * min + (1 - rand) * max;\n\t            if (this.integer) {\n\t                val = Math.floor(val);\n\t            }\n\t            return val;\n\t        }\n\t    });\n\t    return Tone.CtrlRandom;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  AudioBuffer.copyToChannel polyfill\n\t\t *  @private\n\t\t */\n\t    if (window.AudioBuffer && !AudioBuffer.prototype.copyToChannel) {\n\t        AudioBuffer.prototype.copyToChannel = function (src, chanNum, start) {\n\t            var channel = this.getChannelData(chanNum);\n\t            start = start || 0;\n\t            for (var i = 0; i < channel.length; i++) {\n\t                channel[i + start] = src[i];\n\t            }\n\t        };\n\t        AudioBuffer.prototype.copyFromChannel = function (dest, chanNum, start) {\n\t            var channel = this.getChannelData(chanNum);\n\t            start = start || 0;\n\t            for (var i = 0; i < dest.length; i++) {\n\t                dest[i] = channel[i + start];\n\t            }\n\t        };\n\t    }\n\t    /**\n\t\t *  @class  Buffer loading and storage. Tone.Buffer is used internally by all \n\t\t *          classes that make requests for audio files such as Tone.Player,\n\t\t *          Tone.Sampler and Tone.Convolver.\n\t\t *          \n\t\t *          Aside from load callbacks from individual buffers, Tone.Buffer \n\t\t *  \t\tprovides events which keep track of the loading progress \n\t\t *  \t\tof _all_ of the buffers. These are Tone.Buffer.on(\"load\" / \"progress\" / \"error\")\n\t\t *\n\t\t *  @constructor \n\t\t *  @extends {Tone}\n\t\t *  @param {AudioBuffer|String} url The url to load, or the audio buffer to set. \n\t\t *  @param {Function=} onload A callback which is invoked after the buffer is loaded. \n\t\t *                            It's recommended to use `Tone.Buffer.on('load', callback)` instead \n\t\t *                            since it will give you a callback when _all_ buffers are loaded.\n\t\t *  @param {Function=} onerror The callback to invoke if there is an error\n\t\t *  @example\n\t\t * var buffer = new Tone.Buffer(\"path/to/sound.mp3\", function(){\n\t\t * \t//the buffer is now available.\n\t\t * \tvar buff = buffer.get();\n\t\t * });\n\t\t *  @example\n\t\t * //can load provide fallback extension types if the first type is not supported.\n\t\t * var buffer = new Tone.Buffer(\"path/to/sound.[mp3|ogg|wav]\");\n\t\t */\n\t    Tone.Buffer = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'url',\n\t            'onload',\n\t            'onerror'\n\t        ], Tone.Buffer);\n\t        Tone.call(this);\n\t        /**\n\t\t\t *  stores the loaded AudioBuffer\n\t\t\t *  @type {AudioBuffer}\n\t\t\t *  @private\n\t\t\t */\n\t        this._buffer = null;\n\t        /**\n\t\t\t *  indicates if the buffer should be reversed or not\n\t\t\t *  @type {Boolean}\n\t\t\t *  @private\n\t\t\t */\n\t        this._reversed = options.reverse;\n\t        /**\n\t\t\t *  The XHR\n\t\t\t *  @type  {XMLHttpRequest}\n\t\t\t *  @private\n\t\t\t */\n\t        this._xhr = null;\n\t        if (options.url instanceof AudioBuffer || options.url instanceof Tone.Buffer) {\n\t            this.set(options.url);\n\t            // invoke the onload callback\n\t            if (options.onload) {\n\t                options.onload(this);\n\t            }\n\t        } else if (Tone.isString(options.url)) {\n\t            this.load(options.url, options.onload, options.onerror);\n\t        }\n\t    };\n\t    Tone.extend(Tone.Buffer);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Buffer.defaults = {\n\t        'url': undefined,\n\t        'reverse': false\n\t    };\n\t    /**\n\t\t *  Pass in an AudioBuffer or Tone.Buffer to set the value\n\t\t *  of this buffer.\n\t\t *  @param {AudioBuffer|Tone.Buffer} buffer the buffer\n\t\t *  @returns {Tone.Buffer} this\n\t\t */\n\t    Tone.Buffer.prototype.set = function (buffer) {\n\t        if (buffer instanceof Tone.Buffer) {\n\t            this._buffer = buffer.get();\n\t        } else {\n\t            this._buffer = buffer;\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  @return {AudioBuffer} The audio buffer stored in the object.\n\t\t */\n\t    Tone.Buffer.prototype.get = function () {\n\t        return this._buffer;\n\t    };\n\t    /**\n\t\t *  Makes an xhr reqest for the selected url then decodes\n\t\t *  the file as an audio buffer. Invokes\n\t\t *  the callback once the audio buffer loads.\n\t\t *  @param {String} url The url of the buffer to load.\n\t\t *                      filetype support depends on the\n\t\t *                      browser.\n\t\t *  @returns {Promise} returns a Promise which resolves with the Tone.Buffer\n\t\t */\n\t    Tone.Buffer.prototype.load = function (url, onload, onerror) {\n\t        var promise = new Promise(function (load, error) {\n\t            this._xhr = Tone.Buffer.load(url, //success\n\t            function (buff) {\n\t                this._xhr = null;\n\t                this.set(buff);\n\t                load(this);\n\t                if (onload) {\n\t                    onload(this);\n\t                }\n\t            }.bind(this), //error\n\t            function (err) {\n\t                this._xhr = null;\n\t                error(err);\n\t                if (onerror) {\n\t                    onerror(err);\n\t                }\n\t            }.bind(this));\n\t        }.bind(this));\n\t        return promise;\n\t    };\n\t    /**\n\t\t *  dispose and disconnect\n\t\t *  @returns {Tone.Buffer} this\n\t\t */\n\t    Tone.Buffer.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._buffer = null;\n\t        if (this._xhr) {\n\t            Tone.Buffer._removeFromDownloadQueue(this._xhr);\n\t            this._xhr.abort();\n\t            this._xhr = null;\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t * If the buffer is loaded or not\n\t\t * @memberOf Tone.Buffer#\n\t\t * @type {Boolean}\n\t\t * @name loaded\n\t\t * @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Buffer.prototype, 'loaded', {\n\t        get: function () {\n\t            return this.length > 0;\n\t        }\n\t    });\n\t    /**\n\t\t * The duration of the buffer. \n\t\t * @memberOf Tone.Buffer#\n\t\t * @type {Number}\n\t\t * @name duration\n\t\t * @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Buffer.prototype, 'duration', {\n\t        get: function () {\n\t            if (this._buffer) {\n\t                return this._buffer.duration;\n\t            } else {\n\t                return 0;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The length of the buffer in samples\n\t\t * @memberOf Tone.Buffer#\n\t\t * @type {Number}\n\t\t * @name length\n\t\t * @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Buffer.prototype, 'length', {\n\t        get: function () {\n\t            if (this._buffer) {\n\t                return this._buffer.length;\n\t            } else {\n\t                return 0;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The number of discrete audio channels. Returns 0 if no buffer\n\t\t * is loaded.\n\t\t * @memberOf Tone.Buffer#\n\t\t * @type {Number}\n\t\t * @name numberOfChannels\n\t\t * @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Buffer.prototype, 'numberOfChannels', {\n\t        get: function () {\n\t            if (this._buffer) {\n\t                return this._buffer.numberOfChannels;\n\t            } else {\n\t                return 0;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Set the audio buffer from the array. To create a multichannel AudioBuffer,\n\t\t *  pass in a multidimensional array. \n\t\t *  @param {Float32Array} array The array to fill the audio buffer\n\t\t *  @return {Tone.Buffer} this\n\t\t */\n\t    Tone.Buffer.prototype.fromArray = function (array) {\n\t        var isMultidimensional = array[0].length > 0;\n\t        var channels = isMultidimensional ? array.length : 1;\n\t        var len = isMultidimensional ? array[0].length : array.length;\n\t        var buffer = this.context.createBuffer(channels, len, this.context.sampleRate);\n\t        if (!isMultidimensional && channels === 1) {\n\t            array = [array];\n\t        }\n\t        for (var c = 0; c < channels; c++) {\n\t            buffer.copyToChannel(array[c], c);\n\t        }\n\t        this._buffer = buffer;\n\t        return this;\n\t    };\n\t    /**\n\t\t * \tSums muliple channels into 1 channel\n\t\t *  @param {Number=} channel Optionally only copy a single channel from the array.\n\t\t *  @return {Array}\n\t\t */\n\t    Tone.Buffer.prototype.toMono = function (chanNum) {\n\t        if (Tone.isNumber(chanNum)) {\n\t            this.fromArray(this.toArray(chanNum));\n\t        } else {\n\t            var outputArray = new Float32Array(this.length);\n\t            var numChannels = this.numberOfChannels;\n\t            for (var channel = 0; channel < numChannels; channel++) {\n\t                var channelArray = this.toArray(channel);\n\t                for (var i = 0; i < channelArray.length; i++) {\n\t                    outputArray[i] += channelArray[i];\n\t                }\n\t            }\n\t            //divide by the number of channels\n\t            outputArray = outputArray.map(function (sample) {\n\t                return sample / numChannels;\n\t            });\n\t            this.fromArray(outputArray);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t * \tGet the buffer as an array. Single channel buffers will return a 1-dimensional \n\t\t * \tFloat32Array, and multichannel buffers will return multidimensional arrays.\n\t\t *  @param {Number=} channel Optionally only copy a single channel from the array.\n\t\t *  @return {Array}\n\t\t */\n\t    Tone.Buffer.prototype.toArray = function (channel) {\n\t        if (Tone.isNumber(channel)) {\n\t            return this.getChannelData(channel);\n\t        } else if (this.numberOfChannels === 1) {\n\t            return this.toArray(0);\n\t        } else {\n\t            var ret = [];\n\t            for (var c = 0; c < this.numberOfChannels; c++) {\n\t                ret[c] = this.getChannelData(c);\n\t            }\n\t            return ret;\n\t        }\n\t    };\n\t    /**\n\t\t *  Returns the Float32Array representing the PCM audio data for the specific channel.\n\t\t *  @param  {Number}  channel  The channel number to return\n\t\t *  @return  {Float32Array}  The audio as a TypedArray\n\t\t */\n\t    Tone.Buffer.prototype.getChannelData = function (channel) {\n\t        return this._buffer.getChannelData(channel);\n\t    };\n\t    /**\n\t\t *  Cut a subsection of the array and return a buffer of the\n\t\t *  subsection. Does not modify the original buffer\n\t\t *  @param {Time} start The time to start the slice\n\t\t *  @param {Time=} end The end time to slice. If none is given\n\t\t *                     will default to the end of the buffer\n\t\t *  @return {Tone.Buffer} this\n\t\t */\n\t    Tone.Buffer.prototype.slice = function (start, end) {\n\t        end = Tone.defaultArg(end, this.duration);\n\t        var startSamples = Math.floor(this.context.sampleRate * this.toSeconds(start));\n\t        var endSamples = Math.floor(this.context.sampleRate * this.toSeconds(end));\n\t        var replacement = [];\n\t        for (var i = 0; i < this.numberOfChannels; i++) {\n\t            replacement[i] = this.toArray(i).slice(startSamples, endSamples);\n\t        }\n\t        var retBuffer = new Tone.Buffer().fromArray(replacement);\n\t        return retBuffer;\n\t    };\n\t    /**\n\t\t *  Reverse the buffer.\n\t\t *  @private\n\t\t *  @return {Tone.Buffer} this\n\t\t */\n\t    Tone.Buffer.prototype._reverse = function () {\n\t        if (this.loaded) {\n\t            for (var i = 0; i < this.numberOfChannels; i++) {\n\t                Array.prototype.reverse.call(this.getChannelData(i));\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t * Reverse the buffer.\n\t\t * @memberOf Tone.Buffer#\n\t\t * @type {Boolean}\n\t\t * @name reverse\n\t\t */\n\t    Object.defineProperty(Tone.Buffer.prototype, 'reverse', {\n\t        get: function () {\n\t            return this._reversed;\n\t        },\n\t        set: function (rev) {\n\t            if (this._reversed !== rev) {\n\t                this._reversed = rev;\n\t                this._reverse();\n\t            }\n\t        }\n\t    });\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    // STATIC METHODS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //statically inherits Emitter methods\n\t    Tone.Emitter.mixin(Tone.Buffer);\n\t    /**\n\t\t *  the static queue for all of the xhr requests\n\t\t *  @type {Array}\n\t\t *  @private\n\t\t */\n\t    Tone.Buffer._downloadQueue = [];\n\t    /**\n\t\t *  A path which is prefixed before every url.\n\t\t *  @type  {String}\n\t\t *  @static\n\t\t */\n\t    Tone.Buffer.baseUrl = '';\n\t    /**\n\t\t *  Create a Tone.Buffer from the array. To create a multichannel AudioBuffer,\n\t\t *  pass in a multidimensional array. \n\t\t *  @param {Float32Array} array The array to fill the audio buffer\n\t\t *  @return {Tone.Buffer} A Tone.Buffer created from the array\n\t\t */\n\t    Tone.Buffer.fromArray = function (array) {\n\t        return new Tone.Buffer().fromArray(array);\n\t    };\n\t    /**\n\t\t * Remove an xhr request from the download queue\n\t\t * @private\n\t\t */\n\t    Tone.Buffer._removeFromDownloadQueue = function (request) {\n\t        var index = Tone.Buffer._downloadQueue.indexOf(request);\n\t        if (index !== -1) {\n\t            Tone.Buffer._downloadQueue.splice(index, 1);\n\t        }\n\t    };\n\t    /**\n\t\t *  Loads a url using XMLHttpRequest.\n\t\t *  @param {String} url\n\t\t *  @param {Function} onload\n\t\t *  @param {Function} onerror\n\t\t *  @param {Function} onprogress\n\t\t *  @return {XMLHttpRequest}\n\t\t */\n\t    Tone.Buffer.load = function (url, onload, onerror) {\n\t        //default\n\t        onload = Tone.defaultArg(onload, Tone.noOp);\n\t        // test if the url contains multiple extensions\n\t        var matches = url.match(/\\[(.+\\|?)+\\]$/);\n\t        if (matches) {\n\t            var extensions = matches[1].split('|');\n\t            var extension = extensions[0];\n\t            for (var i = 0; i < extensions.length; i++) {\n\t                if (Tone.Buffer.supportsType(extensions[i])) {\n\t                    extension = extensions[i];\n\t                    break;\n\t                }\n\t            }\n\t            url = url.replace(matches[0], extension);\n\t        }\n\t        function onError(e) {\n\t            Tone.Buffer._removeFromDownloadQueue(request);\n\t            Tone.Buffer.emit('error', e);\n\t            if (onerror) {\n\t                onerror(e);\n\t            } else {\n\t                throw e;\n\t            }\n\t        }\n\t        function onProgress() {\n\t            //calculate the progress\n\t            var totalProgress = 0;\n\t            for (var i = 0; i < Tone.Buffer._downloadQueue.length; i++) {\n\t                totalProgress += Tone.Buffer._downloadQueue[i].progress;\n\t            }\n\t            Tone.Buffer.emit('progress', totalProgress / Tone.Buffer._downloadQueue.length);\n\t        }\n\t        var request = new XMLHttpRequest();\n\t        request.open('GET', Tone.Buffer.baseUrl + url, true);\n\t        request.responseType = 'arraybuffer';\n\t        //start out as 0\n\t        request.progress = 0;\n\t        Tone.Buffer._downloadQueue.push(request);\n\t        request.addEventListener('load', function () {\n\t            if (request.status === 200) {\n\t                Tone.context.decodeAudioData(request.response, function (buff) {\n\t                    request.progress = 1;\n\t                    onProgress();\n\t                    onload(buff);\n\t                    Tone.Buffer._removeFromDownloadQueue(request);\n\t                    if (Tone.Buffer._downloadQueue.length === 0) {\n\t                        //emit the event at the end\n\t                        Tone.Buffer.emit('load');\n\t                    }\n\t                }, function () {\n\t                    Tone.Buffer._removeFromDownloadQueue(request);\n\t                    onError('Tone.Buffer: could not decode audio data: ' + url);\n\t                });\n\t            } else {\n\t                onError('Tone.Buffer: could not locate file: ' + url);\n\t            }\n\t        });\n\t        request.addEventListener('error', onError);\n\t        request.addEventListener('progress', function (event) {\n\t            if (event.lengthComputable) {\n\t                //only go to 95%, the last 5% is when the audio is decoded\n\t                request.progress = event.loaded / event.total * 0.95;\n\t                onProgress();\n\t            }\n\t        });\n\t        request.send();\n\t        return request;\n\t    };\n\t    /**\n\t\t *  Stop all of the downloads in progress\n\t\t *  @return {Tone.Buffer}\n\t\t *  @static\n\t\t */\n\t    Tone.Buffer.cancelDownloads = function () {\n\t        Tone.Buffer._downloadQueue.slice().forEach(function (request) {\n\t            Tone.Buffer._removeFromDownloadQueue(request);\n\t            request.abort();\n\t        });\n\t        return Tone.Buffer;\n\t    };\n\t    /**\n\t\t *  Checks a url's extension to see if the current browser can play that file type.\n\t\t *  @param {String} url The url/extension to test\n\t\t *  @return {Boolean} If the file extension can be played\n\t\t *  @static\n\t\t *  @example\n\t\t * Tone.Buffer.supportsType(\"wav\"); //returns true\n\t\t * Tone.Buffer.supportsType(\"path/to/file.wav\"); //returns true\n\t\t */\n\t    Tone.Buffer.supportsType = function (url) {\n\t        var extension = url.split('.');\n\t        extension = extension[extension.length - 1];\n\t        var response = document.createElement('audio').canPlayType('audio/' + extension);\n\t        return response !== '';\n\t    };\n\t    /**\n\t\t *  Returns a Promise which resolves when all of the buffers have loaded\n\t\t *  @return {Promise}\n\t\t */\n\t    Tone.loaded = function () {\n\t        var onload, onerror;\n\t        function removeEvents() {\n\t            //remove the events when it's resolved\n\t            Tone.Buffer.off('load', onload);\n\t            Tone.Buffer.off('error', onerror);\n\t        }\n\t        return new Promise(function (success, fail) {\n\t            onload = function () {\n\t                success();\n\t            };\n\t            onerror = function () {\n\t                fail();\n\t            };\n\t            //add the event listeners\n\t            Tone.Buffer.on('load', onload);\n\t            Tone.Buffer.on('error', onerror);\n\t        }).then(removeEvents).catch(function (e) {\n\t            removeEvents();\n\t            throw new Error(e);\n\t        });\n\t    };\n\t    return Tone.Buffer;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class A data structure for holding multiple buffers.\n\t\t *  \n\t\t *  @param  {Object|Array}    urls      An object literal or array\n\t\t *                                      of urls to load.\n\t\t *  @param  {Function=}  callback  The callback to invoke when\n\t\t *                                 the buffers are loaded. \n\t\t *  @extends {Tone}\n\t\t *  @example\n\t\t * //load a whole bank of piano samples\n\t\t * var pianoSamples = new Tone.Buffers({\n\t\t * \t\"C4\" : \"path/to/C4.mp3\"\n\t\t * \t\"C#4\" : \"path/to/C#4.mp3\"\n\t\t * \t\"D4\" : \"path/to/D4.mp3\"\n\t\t * \t\"D#4\" : \"path/to/D#4.mp3\"\n\t\t * \t...\n\t\t * }, function(){\n\t\t * \t//play one of the samples when they all load\n\t\t * \tplayer.buffer = pianoSamples.get(\"C4\");\n\t\t * \tplayer.start();\n\t\t * });\n\t\t * \t@example\n\t\t * //To pass in additional parameters in the second parameter\n\t\t * var buffers = new Tone.Buffers(urls, {\n\t\t * \t\"onload\" : callback,\n\t\t * \t\"baseUrl\" : \"../path/to/audio/\"\n\t\t * })\n\t\t */\n\t    Tone.Buffers = function (urls) {\n\t        //remove the urls from the options\n\t        var args = Array.prototype.slice.call(arguments);\n\t        args.shift();\n\t        var options = Tone.defaults(args, [\n\t            'onload',\n\t            'baseUrl'\n\t        ], Tone.Buffers);\n\t        Tone.call(this);\n\t        /**\n\t\t\t *  All of the buffers\n\t\t\t *  @type  {Object}\n\t\t\t *  @private\n\t\t\t */\n\t        this._buffers = {};\n\t        /**\n\t\t\t *  A path which is prefixed before every url.\n\t\t\t *  @type  {String}\n\t\t\t */\n\t        this.baseUrl = options.baseUrl;\n\t        this._loadingCount = 0;\n\t        //add each one\n\t        for (var key in urls) {\n\t            this._loadingCount++;\n\t            this.add(key, urls[key], this._bufferLoaded.bind(this, options.onload));\n\t        }\n\t    };\n\t    Tone.extend(Tone.Buffers);\n\t    /**\n\t\t *  Defaults\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.Buffers.defaults = {\n\t        'onload': Tone.noOp,\n\t        'baseUrl': ''\n\t    };\n\t    /**\n\t\t *  True if the buffers object has a buffer by that name.\n\t\t *  @param  {String|Number}  name  The key or index of the \n\t\t *                                 buffer.\n\t\t *  @return  {Boolean}\n\t\t */\n\t    Tone.Buffers.prototype.has = function (name) {\n\t        return this._buffers.hasOwnProperty(name);\n\t    };\n\t    /**\n\t\t *  Get a buffer by name. If an array was loaded, \n\t\t *  then use the array index.\n\t\t *  @param  {String|Number}  name  The key or index of the \n\t\t *                                 buffer.\n\t\t *  @return  {Tone.Buffer}\n\t\t */\n\t    Tone.Buffers.prototype.get = function (name) {\n\t        if (this.has(name)) {\n\t            return this._buffers[name];\n\t        } else {\n\t            throw new Error('Tone.Buffers: no buffer named ' + name);\n\t        }\n\t    };\n\t    /**\n\t\t *  A buffer was loaded. decrement the counter.\n\t\t *  @param  {Function}  callback \n\t\t *  @private\n\t\t */\n\t    Tone.Buffers.prototype._bufferLoaded = function (callback) {\n\t        this._loadingCount--;\n\t        if (this._loadingCount === 0 && callback) {\n\t            callback(this);\n\t        }\n\t    };\n\t    /**\n\t\t * If the buffers are loaded or not\n\t\t * @memberOf Tone.Buffers#\n\t\t * @type {Boolean}\n\t\t * @name loaded\n\t\t * @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Buffers.prototype, 'loaded', {\n\t        get: function () {\n\t            var isLoaded = true;\n\t            for (var buffName in this._buffers) {\n\t                var buff = this.get(buffName);\n\t                isLoaded = isLoaded && buff.loaded;\n\t            }\n\t            return isLoaded;\n\t        }\n\t    });\n\t    /**\n\t\t *  Add a buffer by name and url to the Buffers\n\t\t *  @param  {String}    name      A unique name to give\n\t\t *                                the buffer\n\t\t *  @param  {String|Tone.Buffer|Audiobuffer}  url  Either the url of the bufer, \n\t\t *                                                 or a buffer which will be added\n\t\t *                                                 with the given name.\n\t\t *  @param  {Function=}  callback  The callback to invoke \n\t\t *                                 when the url is loaded.\n\t\t */\n\t    Tone.Buffers.prototype.add = function (name, url, callback) {\n\t        callback = Tone.defaultArg(callback, Tone.noOp);\n\t        if (url instanceof Tone.Buffer) {\n\t            this._buffers[name] = url;\n\t            callback(this);\n\t        } else if (url instanceof AudioBuffer) {\n\t            this._buffers[name] = new Tone.Buffer(url);\n\t            callback(this);\n\t        } else if (Tone.isString(url)) {\n\t            this._buffers[name] = new Tone.Buffer(this.baseUrl + url, callback);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return  {Tone.Buffers} this\n\t\t */\n\t    Tone.Buffers.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        for (var name in this._buffers) {\n\t            this._buffers[name].dispose();\n\t        }\n\t        this._buffers = null;\n\t        return this;\n\t    };\n\t    return Tone.Buffers;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  buses are another way of routing audio\n\t\t *\n\t\t *  augments Tone.prototype to include send and recieve\n\t\t */\n\t    /**\n\t\t  *  All of the routes\n\t\t  *  \n\t\t  *  @type {Object}\n\t\t  *  @static\n\t\t  *  @private\n\t\t  */\n\t    var Buses = {};\n\t    /**\n\t\t *  Send this signal to the channel name. \n\t\t *  @param  {String} channelName A named channel to send the signal to.\n\t\t *  @param  {Decibels} amount The amount of the source to send to the bus. \n\t\t *  @return {GainNode} The gain node which connects this node to the desired channel. \n\t\t *                     Can be used to adjust the levels of the send.\n\t\t *  @example\n\t\t * source.send(\"reverb\", -12);\n\t\t */\n\t    Tone.prototype.send = function (channelName, amount) {\n\t        if (!Buses.hasOwnProperty(channelName)) {\n\t            Buses[channelName] = this.context.createGain();\n\t        }\n\t        amount = Tone.defaultArg(amount, 0);\n\t        var sendKnob = new Tone.Gain(amount, Tone.Type.Decibels);\n\t        this.output.chain(sendKnob, Buses[channelName]);\n\t        return sendKnob;\n\t    };\n\t    /**\n\t\t *  Recieve the input from the desired channelName to the input\n\t\t *\n\t\t *  @param  {String} channelName A named channel to send the signal to.\n\t\t *  @param  {Number=} channelNumber The channel to connect to\n\t\t *  @returns {Tone} this\n\t\t *  @example\n\t\t * reverbEffect.receive(\"reverb\");\n\t\t */\n\t    Tone.prototype.receive = function (channelName, inputNum) {\n\t        if (!Buses.hasOwnProperty(channelName)) {\n\t            Buses[channelName] = this.context.createGain();\n\t        }\n\t        Buses[channelName].connect(this, 0, inputNum);\n\t        return this;\n\t    };\n\t    //remove all the send/receives when a new audio context is passed in\n\t    Tone.Context.on('init', function (context) {\n\t        if (context.Buses) {\n\t            Buses = context.Buses;\n\t        } else {\n\t            Buses = {};\n\t            context.Buses = Buses;\n\t        }\n\t    });\n\t    return Tone;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Draw is useful for synchronizing visuals and audio events.\n\t\t *         Callbacks from Tone.Transport or any of the Tone.Event classes\n\t\t *         always happen _before_ the scheduled time and are not synchronized\n\t\t *         to the animation frame so they are not good for triggering tightly\n\t\t *         synchronized visuals and sound. Tone.Draw makes it easy to schedule\n\t\t *         callbacks using the AudioContext time and uses requestAnimationFrame.\n\t\t *         \n\t\t *  @singleton\n\t\t *  @extends {Tone}\n\t\t *  @example\n\t\t * Tone.Transport.schedule(function(time){\n\t\t * \t//use the time argument to schedule a callback with Tone.Draw\n\t\t * \tTone.Draw.schedule(function(){\n\t\t * \t\t//do drawing or DOM manipulation here\n\t\t * \t}, time)\n\t\t * }, \"+0.5\")\n\t\t */\n\t    Tone.Draw = function () {\n\t        Tone.call(this);\n\t        /**\n\t\t\t *  All of the events.\n\t\t\t *  @type  {Tone.Timeline}\n\t\t\t *  @private\n\t\t\t */\n\t        this._events = new Tone.Timeline();\n\t        /**\n\t\t\t *  The duration after which events are not invoked.\n\t\t\t *  @type  {Number}\n\t\t\t *  @default 0.25\n\t\t\t */\n\t        this.expiration = 0.25;\n\t        /**\n\t\t\t *  The amount of time before the scheduled time \n\t\t\t *  that the callback can be invoked. Default is\n\t\t\t *  half the time of an animation frame (0.008 seconds).\n\t\t\t *  @type  {Number}\n\t\t\t *  @default 0.008\n\t\t\t */\n\t        this.anticipation = 0.008;\n\t        /**\n\t\t\t *  The draw loop\n\t\t\t *  @type  {Function}\n\t\t\t *  @private\n\t\t\t */\n\t        this._boundDrawLoop = this._drawLoop.bind(this);\n\t    };\n\t    Tone.extend(Tone.Draw);\n\t    /**\n\t\t *  Schedule a function at the given time to be invoked\n\t\t *  on the nearest animation frame.\n\t\t *  @param  {Function}  callback  Callback is invoked at the given time.\n\t\t *  @param  {Time}    time      The time relative to the AudioContext time\n\t\t *                              to invoke the callback.\n\t\t *  @return  {Tone.Draw}    this\n\t\t */\n\t    Tone.Draw.prototype.schedule = function (callback, time) {\n\t        this._events.add({\n\t            callback: callback,\n\t            time: this.toSeconds(time)\n\t        });\n\t        //start the draw loop on the first event\n\t        if (this._events.length === 1) {\n\t            requestAnimationFrame(this._boundDrawLoop);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Cancel events scheduled after the given time\n\t\t *  @param  {Time=}  after  Time after which scheduled events will \n\t\t *                          be removed from the scheduling timeline.\n\t\t *  @return  {Tone.Draw}  this\n\t\t */\n\t    Tone.Draw.prototype.cancel = function (after) {\n\t        this._events.cancel(this.toSeconds(after));\n\t        return this;\n\t    };\n\t    /**\n\t\t *  The draw loop\n\t\t *  @private\n\t\t */\n\t    Tone.Draw.prototype._drawLoop = function () {\n\t        var now = Tone.now();\n\t        while (this._events.length && this._events.peek().time - this.anticipation <= now) {\n\t            var event = this._events.shift();\n\t            if (now - event.time <= this.expiration) {\n\t                event.callback();\n\t            }\n\t        }\n\t        if (this._events.length > 0) {\n\t            requestAnimationFrame(this._boundDrawLoop);\n\t        }\n\t    };\n\t    //make a singleton\n\t    Tone.Draw = new Tone.Draw();\n\t    return Tone.Draw;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Both Tone.Panner3D and Tone.Listener have a position in 3D space \n\t\t *          using a right-handed cartesian coordinate system. \n\t\t *          The units used in the coordinate system are not defined; \n\t\t *          these coordinates are independent/invariant of any particular \n\t\t *          units such as meters or feet. Tone.Panner3D objects have an forward \n\t\t *          vector representing the direction the sound is projecting. Additionally, \n\t\t *          they have a sound cone representing how directional the sound is. \n\t\t *          For example, the sound could be omnidirectional, in which case it would \n\t\t *          be heard anywhere regardless of its forward, or it can be more directional \n\t\t *          and heard only if it is facing the listener. Tone.Listener objects \n\t\t *          (representing a person's ears) have an forward and up vector \n\t\t *          representing in which direction the person is facing. Because both the \n\t\t *          source stream and the listener can be moving, they both have a velocity \n\t\t *          vector representing both the speed and direction of movement. Taken together, \n\t\t *          these two velocities can be used to generate a doppler shift effect which changes the pitch.\n\t\t *          <br><br>\n\t\t *          Note: the position of the Listener will have no effect on nodes not connected to a Tone.Panner3D\n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @singleton\n\t\t */\n\t    Tone.Listener = function () {\n\t        Tone.call(this);\n\t        /**\n\t\t\t *  Holds the current forward orientation\n\t\t\t *  @type  {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._orientation = [\n\t            0,\n\t            0,\n\t            0,\n\t            0,\n\t            0,\n\t            0\n\t        ];\n\t        /**\n\t\t\t *  Holds the current position\n\t\t\t *  @type  {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._position = [\n\t            0,\n\t            0,\n\t            0\n\t        ];\n\t        Tone.getContext(function () {\n\t            // set the default position/forward\n\t            this.set(ListenerConstructor.defaults);\n\t        }.bind(this));\n\t    };\n\t    Tone.extend(Tone.Listener);\n\t    /**\n\t\t *  Defaults according to the specification\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Listener.defaults = {\n\t        'positionX': 0,\n\t        'positionY': 0,\n\t        'positionZ': 0,\n\t        'forwardX': 0,\n\t        'forwardY': 0,\n\t        'forwardZ': 1,\n\t        'upX': 0,\n\t        'upY': 1,\n\t        'upZ': 0\n\t    };\n\t    /**\n\t\t * The ramp time which is applied to the setTargetAtTime\n\t\t * @type {Number}\n\t\t * @private\n\t\t */\n\t    Tone.Listener.prototype._rampTimeConstant = 0.01;\n\t    /**\n\t\t *  Sets the position of the listener in 3d space.\t\n\t\t *  @param  {Number}  x\n\t\t *  @param  {Number}  y\n\t\t *  @param  {Number}  z\n\t\t *  @return {Tone.Listener} this\n\t\t */\n\t    Tone.Listener.prototype.setPosition = function (x, y, z) {\n\t        if (this.context.listener.positionX) {\n\t            var now = this.now();\n\t            this.context.listener.positionX.setTargetAtTime(x, now, this._rampTimeConstant);\n\t            this.context.listener.positionY.setTargetAtTime(y, now, this._rampTimeConstant);\n\t            this.context.listener.positionZ.setTargetAtTime(z, now, this._rampTimeConstant);\n\t        } else {\n\t            this.context.listener.setPosition(x, y, z);\n\t        }\n\t        this._position = Array.prototype.slice.call(arguments);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Sets the orientation of the listener using two vectors, the forward\n\t\t *  vector (which direction the listener is facing) and the up vector \n\t\t *  (which the up direction of the listener). An up vector\n\t\t *  of 0, 0, 1 is equivalent to the listener standing up in the Z direction. \n\t\t *  @param  {Number}  x\n\t\t *  @param  {Number}  y\n\t\t *  @param  {Number}  z\n\t\t *  @param  {Number}  upX\n\t\t *  @param  {Number}  upY\n\t\t *  @param  {Number}  upZ\n\t\t *  @return {Tone.Listener} this\n\t\t */\n\t    Tone.Listener.prototype.setOrientation = function (x, y, z, upX, upY, upZ) {\n\t        if (this.context.listener.forwardX) {\n\t            var now = this.now();\n\t            this.context.listener.forwardX.setTargetAtTime(x, now, this._rampTimeConstant);\n\t            this.context.listener.forwardY.setTargetAtTime(y, now, this._rampTimeConstant);\n\t            this.context.listener.forwardZ.setTargetAtTime(z, now, this._rampTimeConstant);\n\t            this.context.listener.upX.setTargetAtTime(upX, now, this._rampTimeConstant);\n\t            this.context.listener.upY.setTargetAtTime(upY, now, this._rampTimeConstant);\n\t            this.context.listener.upZ.setTargetAtTime(upZ, now, this._rampTimeConstant);\n\t        } else {\n\t            this.context.listener.setOrientation(x, y, z, upX, upY, upZ);\n\t        }\n\t        this._orientation = Array.prototype.slice.call(arguments);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  The x position of the panner object.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Listener#\n\t\t *  @name positionX\n\t\t */\n\t    Object.defineProperty(Tone.Listener.prototype, 'positionX', {\n\t        set: function (pos) {\n\t            this._position[0] = pos;\n\t            this.setPosition.apply(this, this._position);\n\t        },\n\t        get: function () {\n\t            return this._position[0];\n\t        }\n\t    });\n\t    /**\n\t\t *  The y position of the panner object.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Listener#\n\t\t *  @name positionY\n\t\t */\n\t    Object.defineProperty(Tone.Listener.prototype, 'positionY', {\n\t        set: function (pos) {\n\t            this._position[1] = pos;\n\t            this.setPosition.apply(this, this._position);\n\t        },\n\t        get: function () {\n\t            return this._position[1];\n\t        }\n\t    });\n\t    /**\n\t\t *  The z position of the panner object.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Listener#\n\t\t *  @name positionZ\n\t\t */\n\t    Object.defineProperty(Tone.Listener.prototype, 'positionZ', {\n\t        set: function (pos) {\n\t            this._position[2] = pos;\n\t            this.setPosition.apply(this, this._position);\n\t        },\n\t        get: function () {\n\t            return this._position[2];\n\t        }\n\t    });\n\t    /**\n\t\t *  The x coordinate of the listeners front direction. i.e. \n\t\t *  which way they are facing.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Listener#\n\t\t *  @name forwardX\n\t\t */\n\t    Object.defineProperty(Tone.Listener.prototype, 'forwardX', {\n\t        set: function (pos) {\n\t            this._orientation[0] = pos;\n\t            this.setOrientation.apply(this, this._orientation);\n\t        },\n\t        get: function () {\n\t            return this._orientation[0];\n\t        }\n\t    });\n\t    /**\n\t\t *  The y coordinate of the listeners front direction. i.e. \n\t\t *  which way they are facing.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Listener#\n\t\t *  @name forwardY\n\t\t */\n\t    Object.defineProperty(Tone.Listener.prototype, 'forwardY', {\n\t        set: function (pos) {\n\t            this._orientation[1] = pos;\n\t            this.setOrientation.apply(this, this._orientation);\n\t        },\n\t        get: function () {\n\t            return this._orientation[1];\n\t        }\n\t    });\n\t    /**\n\t\t *  The z coordinate of the listeners front direction. i.e. \n\t\t *  which way they are facing.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Listener#\n\t\t *  @name forwardZ\n\t\t */\n\t    Object.defineProperty(Tone.Listener.prototype, 'forwardZ', {\n\t        set: function (pos) {\n\t            this._orientation[2] = pos;\n\t            this.setOrientation.apply(this, this._orientation);\n\t        },\n\t        get: function () {\n\t            return this._orientation[2];\n\t        }\n\t    });\n\t    /**\n\t\t *  The x coordinate of the listener's up direction. i.e.\n\t\t *  the direction the listener is standing in.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Listener#\n\t\t *  @name upX\n\t\t */\n\t    Object.defineProperty(Tone.Listener.prototype, 'upX', {\n\t        set: function (pos) {\n\t            this._orientation[3] = pos;\n\t            this.setOrientation.apply(this, this._orientation);\n\t        },\n\t        get: function () {\n\t            return this._orientation[3];\n\t        }\n\t    });\n\t    /**\n\t\t *  The y coordinate of the listener's up direction. i.e.\n\t\t *  the direction the listener is standing in.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Listener#\n\t\t *  @name upY\n\t\t */\n\t    Object.defineProperty(Tone.Listener.prototype, 'upY', {\n\t        set: function (pos) {\n\t            this._orientation[4] = pos;\n\t            this.setOrientation.apply(this, this._orientation);\n\t        },\n\t        get: function () {\n\t            return this._orientation[4];\n\t        }\n\t    });\n\t    /**\n\t\t *  The z coordinate of the listener's up direction. i.e.\n\t\t *  the direction the listener is standing in.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Listener#\n\t\t *  @name upZ\n\t\t */\n\t    Object.defineProperty(Tone.Listener.prototype, 'upZ', {\n\t        set: function (pos) {\n\t            this._orientation[5] = pos;\n\t            this.setOrientation.apply(this, this._orientation);\n\t        },\n\t        get: function () {\n\t            return this._orientation[5];\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Listener} this\n\t\t */\n\t    Tone.Listener.prototype.dispose = function () {\n\t        this._orientation = null;\n\t        this._position = null;\n\t        return this;\n\t    };\n\t    //SINGLETON SETUP\n\t    var ListenerConstructor = Tone.Listener;\n\t    Tone.Listener = new ListenerConstructor();\n\t    Tone.Context.on('init', function (context) {\n\t        if (context.Listener instanceof ListenerConstructor) {\n\t            //a single listener object\n\t            Tone.Listener = context.Listener;\n\t        } else {\n\t            //make new Listener insides\n\t            Tone.Listener = new ListenerConstructor();\n\t        }\n\t        context.Listener = Tone.Listener;\n\t    });\n\t    //END SINGLETON SETUP\n\t    return Tone.Listener;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  shim\n\t\t *  @private\n\t\t */\n\t    if (!window.hasOwnProperty('OfflineAudioContext') && window.hasOwnProperty('webkitOfflineAudioContext')) {\n\t        window.OfflineAudioContext = window.webkitOfflineAudioContext;\n\t    }\n\t    /**\n\t\t *  @class Wrapper around the OfflineAudioContext\n\t\t *  @extends {Tone.Context}\n\t\t *  @param  {Number}  channels  The number of channels to render\n\t\t *  @param  {Number}  duration  The duration to render in samples\n\t\t *  @param {Number} sampleRate the sample rate to render at\n\t\t */\n\t    Tone.OfflineContext = function (channels, duration, sampleRate) {\n\t        /**\n\t\t\t *  The offline context\n\t\t\t *  @private\n\t\t\t *  @type  {OfflineAudioContext}\n\t\t\t */\n\t        var offlineContext = new OfflineAudioContext(channels, duration * sampleRate, sampleRate);\n\t        //wrap the methods/members\n\t        Tone.Context.call(this, {\n\t            'context': offlineContext,\n\t            'clockSource': 'offline',\n\t            'lookAhead': 0,\n\t            'updateInterval': 128 / sampleRate\n\t        });\n\t        /**\n\t\t\t *  A private reference to the duration\n\t\t\t *  @private\n\t\t\t *  @type  {Number}\n\t\t\t */\n\t        this._duration = duration;\n\t        /**\n\t\t\t *  An artificial clock source\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._currentTime = 0;\n\t    };\n\t    Tone.extend(Tone.OfflineContext, Tone.Context);\n\t    /**\n\t\t *  Override the now method to point to the internal clock time\n\t\t *  @return  {Number}\n\t\t */\n\t    Tone.OfflineContext.prototype.now = function () {\n\t        return this._currentTime;\n\t    };\n\t    /**\n\t\t *  Render the output of the OfflineContext\n\t\t *  @return  {Promise}\n\t\t */\n\t    Tone.OfflineContext.prototype.render = function () {\n\t        while (this._duration - this._currentTime >= 0) {\n\t            //invoke all the callbacks on that time\n\t            this.emit('tick');\n\t            //increment the clock\n\t            this._currentTime += this.blockTime;\n\t        }\n\t        //promise returned is not yet implemented in all browsers\n\t        return new Promise(function (done) {\n\t            this._context.oncomplete = function (e) {\n\t                done(e.renderedBuffer);\n\t            };\n\t            this._context.startRendering();\n\t        }.bind(this));\n\t    };\n\t    /**\n\t\t *  Close the context\n\t\t *  @return  {Number}\n\t\t */\n\t    Tone.OfflineContext.prototype.close = function () {\n\t        this._context = null;\n\t    };\n\t    return Tone.OfflineContext;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  Generate a buffer by rendering all of the Tone.js code within the callback using the OfflineAudioContext. \n\t\t *  The OfflineAudioContext is capable of rendering much faster than real time in many cases. \n\t\t *  The callback function also passes in an offline instance of Tone.Transport which can be used\n\t\t *  to schedule events along the Transport. \n\t\t *  @param  {Function}  callback  All Tone.js nodes which are created and scheduled within this callback are recorded into the output Buffer.\n\t\t *  @param  {Time}  duration     the amount of time to record for.\n\t\t *  @return  {Promise}  The promise which is invoked with the Tone.Buffer of the recorded output.\n\t\t *  @example\n\t\t * //render 2 seconds of the oscillator\n\t\t * Tone.Offline(function(){\n\t\t * \t//only nodes created in this callback will be recorded\n\t\t * \tvar oscillator = new Tone.Oscillator().toMaster().start(0)\n\t\t * \t//schedule their events\n\t\t * }, 2).then(function(buffer){\n\t\t * \t//do something with the output buffer\n\t\t * })\n\t\t * @example\n\t\t * //can also schedule events along the Transport\n\t\t * //using the passed in Offline Transport\n\t\t * Tone.Offline(function(Transport){\n\t\t * \tvar osc = new Tone.Oscillator().toMaster()\n\t\t * \tTransport.schedule(function(time){\n\t\t * \t\tosc.start(time).stop(time + 0.1)\n\t\t * \t}, 1)\n\t\t * \tTransport.start(0.2)\n\t\t * }, 4).then(function(buffer){\n\t\t * \t//do something with the output buffer\n\t\t * })\n\t\t */\n\t    Tone.Offline = function (callback, duration) {\n\t        //set the OfflineAudioContext\n\t        var sampleRate = Tone.context.sampleRate;\n\t        var originalContext = Tone.context;\n\t        var context = new Tone.OfflineContext(2, duration, sampleRate);\n\t        Tone.context = context;\n\t        //invoke the callback/scheduling\n\t        callback(Tone.Transport);\n\t        //process the audio\n\t        var rendered = context.render();\n\t        //return the original AudioContext\n\t        Tone.context = originalContext;\n\t        //return the audio\n\t        return rendered.then(function (buffer) {\n\t            //wrap it in a Tone.Buffer\n\t            return new Tone.Buffer(buffer);\n\t        });\n\t    };\n\t    return Tone.Offline;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t * \t@class  Tone.Effect is the base class for effects. Connect the effect between\n\t\t * \t        the effectSend and effectReturn GainNodes, then control the amount of\n\t\t * \t        effect which goes to the output using the wet control.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @param {NormalRange|Object} [wet] The starting wet value.\n\t\t */\n\t    Tone.Effect = function () {\n\t        var options = Tone.defaults(arguments, ['wet'], Tone.Effect);\n\t        Tone.AudioNode.call(this);\n\t        this.createInsOuts(1, 1);\n\t        /**\n\t\t\t *  the drywet knob to control the amount of effect\n\t\t\t *  @type {Tone.CrossFade}\n\t\t\t *  @private\n\t\t\t */\n\t        this._dryWet = new Tone.CrossFade(options.wet);\n\t        /**\n\t\t\t *  The wet control is how much of the effected\n\t\t\t *  will pass through to the output. 1 = 100% effected\n\t\t\t *  signal, 0 = 100% dry signal.\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.wet = this._dryWet.fade;\n\t        /**\n\t\t\t *  connect the effectSend to the input of hte effect\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this.effectSend = new Tone.Gain();\n\t        /**\n\t\t\t *  connect the output of the effect to the effectReturn\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this.effectReturn = new Tone.Gain();\n\t        //connections\n\t        this.input.connect(this._dryWet.a);\n\t        this.input.connect(this.effectSend);\n\t        this.effectReturn.connect(this._dryWet.b);\n\t        this._dryWet.connect(this.output);\n\t        this._readOnly(['wet']);\n\t    };\n\t    Tone.extend(Tone.Effect, Tone.AudioNode);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Effect.defaults = { 'wet': 1 };\n\t    /**\n\t\t *  chains the effect in between the effectSend and effectReturn\n\t\t *  @param  {Tone} effect\n\t\t *  @private\n\t\t *  @returns {Tone.Effect} this\n\t\t */\n\t    Tone.Effect.prototype.connectEffect = function (effect) {\n\t        this.effectSend.chain(effect, this.effectReturn);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Effect} this\n\t\t */\n\t    Tone.Effect.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._dryWet.dispose();\n\t        this._dryWet = null;\n\t        this.effectSend.dispose();\n\t        this.effectSend = null;\n\t        this.effectReturn.dispose();\n\t        this.effectReturn = null;\n\t        this._writable(['wet']);\n\t        this.wet = null;\n\t        return this;\n\t    };\n\t    return Tone.Effect;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.AutoFilter is a Tone.Filter with a Tone.LFO connected to the filter cutoff frequency.\n\t\t *         Setting the LFO rate and depth allows for control over the filter modulation rate \n\t\t *         and depth.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Effect}\n\t\t *  @param {Time|Object} [frequency] The rate of the LFO.\n\t\t *  @param {Frequency=} baseFrequency The lower value of the LFOs oscillation\n\t \t *  @param {Frequency=} octaves The number of octaves above the baseFrequency\n\t\t *  @example\n\t\t * //create an autofilter and start it's LFO\n\t\t * var autoFilter = new Tone.AutoFilter(\"4n\").toMaster().start();\n\t\t * //route an oscillator through the filter and start it\n\t\t * var oscillator = new Tone.Oscillator().connect(autoFilter).start();\n\t\t */\n\t    Tone.AutoFilter = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'frequency',\n\t            'baseFrequency',\n\t            'octaves'\n\t        ], Tone.AutoFilter);\n\t        Tone.Effect.call(this, options);\n\t        /**\n\t\t\t *  the lfo which drives the filter cutoff\n\t\t\t *  @type {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfo = new Tone.LFO({\n\t            'frequency': options.frequency,\n\t            'amplitude': options.depth\n\t        });\n\t        /**\n\t\t\t * The range of the filter modulating between the min and max frequency. \n\t\t\t * 0 = no modulation. 1 = full modulation.\n\t\t\t * @type {NormalRange}\n\t\t\t * @signal\n\t\t\t */\n\t        this.depth = this._lfo.amplitude;\n\t        /**\n\t\t\t * How fast the filter modulates between min and max. \n\t\t\t * @type {Frequency}\n\t\t\t * @signal\n\t\t\t */\n\t        this.frequency = this._lfo.frequency;\n\t        /**\n\t\t\t *  The filter node\n\t\t\t *  @type {Tone.Filter}\n\t\t\t */\n\t        this.filter = new Tone.Filter(options.filter);\n\t        /**\n\t\t\t *  The octaves placeholder\n\t\t\t *  @type {Positive}\n\t\t\t *  @private\n\t\t\t */\n\t        this._octaves = 0;\n\t        //connections\n\t        this.connectEffect(this.filter);\n\t        this._lfo.connect(this.filter.frequency);\n\t        this.type = options.type;\n\t        this._readOnly([\n\t            'frequency',\n\t            'depth'\n\t        ]);\n\t        this.octaves = options.octaves;\n\t        this.baseFrequency = options.baseFrequency;\n\t    };\n\t    //extend Effect\n\t    Tone.extend(Tone.AutoFilter, Tone.Effect);\n\t    /**\n\t\t *  defaults\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.AutoFilter.defaults = {\n\t        'frequency': 1,\n\t        'type': 'sine',\n\t        'depth': 1,\n\t        'baseFrequency': 200,\n\t        'octaves': 2.6,\n\t        'filter': {\n\t            'type': 'lowpass',\n\t            'rolloff': -12,\n\t            'Q': 1\n\t        }\n\t    };\n\t    /**\n\t\t * Start the effect.\n\t\t * @param {Time} [time=now] When the LFO will start. \n\t\t * @returns {Tone.AutoFilter} this\n\t\t */\n\t    Tone.AutoFilter.prototype.start = function (time) {\n\t        this._lfo.start(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Stop the effect.\n\t\t * @param {Time} [time=now] When the LFO will stop. \n\t\t * @returns {Tone.AutoFilter} this\n\t\t */\n\t    Tone.AutoFilter.prototype.stop = function (time) {\n\t        this._lfo.stop(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Sync the filter to the transport.\n\t\t * @param {Time} [delay=0] Delay time before starting the effect after the\n\t\t *                               Transport has started. \n\t\t * @returns {Tone.AutoFilter} this\n\t\t */\n\t    Tone.AutoFilter.prototype.sync = function (delay) {\n\t        this._lfo.sync(delay);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Unsync the filter from the transport.\n\t\t * @returns {Tone.AutoFilter} this\n\t\t */\n\t    Tone.AutoFilter.prototype.unsync = function () {\n\t        this._lfo.unsync();\n\t        return this;\n\t    };\n\t    /**\n\t\t * Type of oscillator attached to the AutoFilter. \n\t\t * Possible values: \"sine\", \"square\", \"triangle\", \"sawtooth\".\n\t\t * @memberOf Tone.AutoFilter#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.AutoFilter.prototype, 'type', {\n\t        get: function () {\n\t            return this._lfo.type;\n\t        },\n\t        set: function (type) {\n\t            this._lfo.type = type;\n\t        }\n\t    });\n\t    /**\n\t\t * The minimum value of the filter's cutoff frequency.\n\t\t * @memberOf Tone.AutoFilter#\n\t\t * @type {Frequency}\n\t\t * @name min\n\t\t */\n\t    Object.defineProperty(Tone.AutoFilter.prototype, 'baseFrequency', {\n\t        get: function () {\n\t            return this._lfo.min;\n\t        },\n\t        set: function (freq) {\n\t            this._lfo.min = this.toFrequency(freq);\n\t            //and set the max\n\t            this.octaves = this._octaves;\n\t        }\n\t    });\n\t    /**\n\t\t * The maximum value of the filter's cutoff frequency. \n\t\t * @memberOf Tone.AutoFilter#\n\t\t * @type {Positive}\n\t\t * @name octaves\n\t\t */\n\t    Object.defineProperty(Tone.AutoFilter.prototype, 'octaves', {\n\t        get: function () {\n\t            return this._octaves;\n\t        },\n\t        set: function (oct) {\n\t            this._octaves = oct;\n\t            this._lfo.max = this.baseFrequency * Math.pow(2, oct);\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.AutoFilter} this\n\t\t */\n\t    Tone.AutoFilter.prototype.dispose = function () {\n\t        Tone.Effect.prototype.dispose.call(this);\n\t        this._lfo.dispose();\n\t        this._lfo = null;\n\t        this.filter.dispose();\n\t        this.filter = null;\n\t        this._writable([\n\t            'frequency',\n\t            'depth'\n\t        ]);\n\t        this.frequency = null;\n\t        this.depth = null;\n\t        return this;\n\t    };\n\t    return Tone.AutoFilter;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.AutoPanner is a Tone.Panner with an LFO connected to the pan amount. \n\t\t *         More on using autopanners [here](https://www.ableton.com/en/blog/autopan-chopper-effect-and-more-liveschool/).\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Effect}\n\t\t *  @param {Frequency|Object} [frequency] Rate of left-right oscillation. \n\t\t *  @example\n\t\t * //create an autopanner and start it's LFO\n\t\t * var autoPanner = new Tone.AutoPanner(\"4n\").toMaster().start();\n\t\t * //route an oscillator through the panner and start it\n\t\t * var oscillator = new Tone.Oscillator().connect(autoPanner).start();\n\t\t */\n\t    Tone.AutoPanner = function () {\n\t        var options = Tone.defaults(arguments, ['frequency'], Tone.AutoPanner);\n\t        Tone.Effect.call(this, options);\n\t        /**\n\t\t\t *  the lfo which drives the panning\n\t\t\t *  @type {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfo = new Tone.LFO({\n\t            'frequency': options.frequency,\n\t            'amplitude': options.depth,\n\t            'min': -1,\n\t            'max': 1\n\t        });\n\t        /**\n\t\t\t * The amount of panning between left and right. \n\t\t\t * 0 = always center. 1 = full range between left and right. \n\t\t\t * @type {NormalRange}\n\t\t\t * @signal\n\t\t\t */\n\t        this.depth = this._lfo.amplitude;\n\t        /**\n\t\t\t *  the panner node which does the panning\n\t\t\t *  @type {Tone.Panner}\n\t\t\t *  @private\n\t\t\t */\n\t        this._panner = new Tone.Panner();\n\t        /**\n\t\t\t * How fast the panner modulates between left and right. \n\t\t\t * @type {Frequency}\n\t\t\t * @signal\n\t\t\t */\n\t        this.frequency = this._lfo.frequency;\n\t        //connections\n\t        this.connectEffect(this._panner);\n\t        this._lfo.connect(this._panner.pan);\n\t        this.type = options.type;\n\t        this._readOnly([\n\t            'depth',\n\t            'frequency'\n\t        ]);\n\t    };\n\t    //extend Effect\n\t    Tone.extend(Tone.AutoPanner, Tone.Effect);\n\t    /**\n\t\t *  defaults\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.AutoPanner.defaults = {\n\t        'frequency': 1,\n\t        'type': 'sine',\n\t        'depth': 1\n\t    };\n\t    /**\n\t\t * Start the effect.\n\t\t * @param {Time} [time=now] When the LFO will start. \n\t\t * @returns {Tone.AutoPanner} this\n\t\t */\n\t    Tone.AutoPanner.prototype.start = function (time) {\n\t        this._lfo.start(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Stop the effect.\n\t\t * @param {Time} [time=now] When the LFO will stop. \n\t\t * @returns {Tone.AutoPanner} this\n\t\t */\n\t    Tone.AutoPanner.prototype.stop = function (time) {\n\t        this._lfo.stop(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Sync the panner to the transport.\n\t\t * @param {Time} [delay=0] Delay time before starting the effect after the\n\t\t *                               Transport has started. \n\t\t * @returns {Tone.AutoPanner} this\n\t\t */\n\t    Tone.AutoPanner.prototype.sync = function (delay) {\n\t        this._lfo.sync(delay);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Unsync the panner from the transport\n\t\t * @returns {Tone.AutoPanner} this\n\t\t */\n\t    Tone.AutoPanner.prototype.unsync = function () {\n\t        this._lfo.unsync();\n\t        return this;\n\t    };\n\t    /**\n\t\t * Type of oscillator attached to the AutoFilter. \n\t\t * Possible values: \"sine\", \"square\", \"triangle\", \"sawtooth\".\n\t\t * @memberOf Tone.AutoFilter#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.AutoPanner.prototype, 'type', {\n\t        get: function () {\n\t            return this._lfo.type;\n\t        },\n\t        set: function (type) {\n\t            this._lfo.type = type;\n\t        }\n\t    });\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.AutoPanner} this\n\t\t */\n\t    Tone.AutoPanner.prototype.dispose = function () {\n\t        Tone.Effect.prototype.dispose.call(this);\n\t        this._lfo.dispose();\n\t        this._lfo = null;\n\t        this._panner.dispose();\n\t        this._panner = null;\n\t        this._writable([\n\t            'depth',\n\t            'frequency'\n\t        ]);\n\t        this.frequency = null;\n\t        this.depth = null;\n\t        return this;\n\t    };\n\t    return Tone.AutoPanner;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.AutoWah connects a Tone.Follower to a bandpass filter (Tone.Filter).\n\t\t *          The frequency of the filter is adjusted proportionally to the \n\t\t *          incoming signal's amplitude. Inspiration from [Tuna.js](https://github.com/Dinahmoe/tuna).\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Effect}\n\t\t *  @param {Frequency|Object} [baseFrequency] The frequency the filter is set \n\t\t *                                            to at the low point of the wah\n\t\t *  @param {Positive} [octaves] The number of octaves above the baseFrequency\n\t\t *                                the filter will sweep to when fully open\n\t\t *  @param {Decibels} [sensitivity] The decibel threshold sensitivity for \n\t\t *                                   the incoming signal. Normal range of -40 to 0. \n\t\t *  @example\n\t\t * var autoWah = new Tone.AutoWah(50, 6, -30).toMaster();\n\t\t * //initialize the synth and connect to autowah\n\t\t * var synth = new Synth.connect(autoWah);\n\t\t * //Q value influences the effect of the wah - default is 2\n\t\t * autoWah.Q.value = 6;\n\t\t * //more audible on higher notes\n\t\t * synth.triggerAttackRelease(\"C4\", \"8n\")\n\t\t */\n\t    Tone.AutoWah = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'baseFrequency',\n\t            'octaves',\n\t            'sensitivity'\n\t        ], Tone.AutoWah);\n\t        Tone.Effect.call(this, options);\n\t        /**\n\t\t\t *  The envelope follower. Set the attack/release\n\t\t\t *  timing to adjust how the envelope is followed. \n\t\t\t *  @type {Tone.Follower}\n\t\t\t *  @private\n\t\t\t */\n\t        this.follower = new Tone.Follower(options.follower);\n\t        /**\n\t\t\t *  scales the follower value to the frequency domain\n\t\t\t *  @type {Tone}\n\t\t\t *  @private\n\t\t\t */\n\t        this._sweepRange = new Tone.ScaleExp(0, 1, 0.5);\n\t        /**\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._baseFrequency = options.baseFrequency;\n\t        /**\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._octaves = options.octaves;\n\t        /**\n\t\t\t *  the input gain to adjust the sensitivity\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._inputBoost = new Tone.Gain();\n\t        /**\n\t\t\t *  @type {BiquadFilterNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._bandpass = new Tone.Filter({\n\t            'rolloff': -48,\n\t            'frequency': 0,\n\t            'Q': options.Q\n\t        });\n\t        /**\n\t\t\t *  @type {Tone.Filter}\n\t\t\t *  @private\n\t\t\t */\n\t        this._peaking = new Tone.Filter(0, 'peaking');\n\t        this._peaking.gain.value = options.gain;\n\t        /**\n\t\t\t * The gain of the filter.\n\t\t\t * @type {Number}\n\t\t\t * @signal\n\t\t\t */\n\t        this.gain = this._peaking.gain;\n\t        /**\n\t\t\t * The quality of the filter.\n\t\t\t * @type {Positive}\n\t\t\t * @signal\n\t\t\t */\n\t        this.Q = this._bandpass.Q;\n\t        //the control signal path\n\t        this.effectSend.chain(this._inputBoost, this.follower, this._sweepRange);\n\t        this._sweepRange.connect(this._bandpass.frequency);\n\t        this._sweepRange.connect(this._peaking.frequency);\n\t        //the filtered path\n\t        this.effectSend.chain(this._bandpass, this._peaking, this.effectReturn);\n\t        //set the initial value\n\t        this._setSweepRange();\n\t        this.sensitivity = options.sensitivity;\n\t        this._readOnly([\n\t            'gain',\n\t            'Q'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.AutoWah, Tone.Effect);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.AutoWah.defaults = {\n\t        'baseFrequency': 100,\n\t        'octaves': 6,\n\t        'sensitivity': 0,\n\t        'Q': 2,\n\t        'gain': 2,\n\t        'follower': {\n\t            'attack': 0.3,\n\t            'release': 0.5\n\t        }\n\t    };\n\t    /**\n\t\t * The number of octaves that the filter will sweep above the \n\t\t * baseFrequency. \n\t\t * @memberOf Tone.AutoWah#\n\t\t * @type {Number}\n\t\t * @name octaves\n\t\t */\n\t    Object.defineProperty(Tone.AutoWah.prototype, 'octaves', {\n\t        get: function () {\n\t            return this._octaves;\n\t        },\n\t        set: function (octaves) {\n\t            this._octaves = octaves;\n\t            this._setSweepRange();\n\t        }\n\t    });\n\t    /**\n\t\t * The base frequency from which the sweep will start from.\n\t\t * @memberOf Tone.AutoWah#\n\t\t * @type {Frequency}\n\t\t * @name baseFrequency\n\t\t */\n\t    Object.defineProperty(Tone.AutoWah.prototype, 'baseFrequency', {\n\t        get: function () {\n\t            return this._baseFrequency;\n\t        },\n\t        set: function (baseFreq) {\n\t            this._baseFrequency = baseFreq;\n\t            this._setSweepRange();\n\t        }\n\t    });\n\t    /**\n\t\t * The sensitivity to control how responsive to the input signal the filter is. \n\t\t * @memberOf Tone.AutoWah#\n\t\t * @type {Decibels}\n\t\t * @name sensitivity\n\t\t */\n\t    Object.defineProperty(Tone.AutoWah.prototype, 'sensitivity', {\n\t        get: function () {\n\t            return Tone.gainToDb(1 / this._inputBoost.gain.value);\n\t        },\n\t        set: function (sensitivy) {\n\t            this._inputBoost.gain.value = 1 / Tone.dbToGain(sensitivy);\n\t        }\n\t    });\n\t    /**\n\t\t *  sets the sweep range of the scaler\n\t\t *  @private\n\t\t */\n\t    Tone.AutoWah.prototype._setSweepRange = function () {\n\t        this._sweepRange.min = this._baseFrequency;\n\t        this._sweepRange.max = Math.min(this._baseFrequency * Math.pow(2, this._octaves), this.context.sampleRate / 2);\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.AutoWah} this\n\t\t */\n\t    Tone.AutoWah.prototype.dispose = function () {\n\t        Tone.Effect.prototype.dispose.call(this);\n\t        this.follower.dispose();\n\t        this.follower = null;\n\t        this._sweepRange.dispose();\n\t        this._sweepRange = null;\n\t        this._bandpass.dispose();\n\t        this._bandpass = null;\n\t        this._peaking.dispose();\n\t        this._peaking = null;\n\t        this._inputBoost.dispose();\n\t        this._inputBoost = null;\n\t        this._writable([\n\t            'gain',\n\t            'Q'\n\t        ]);\n\t        this.gain = null;\n\t        this.Q = null;\n\t        return this;\n\t    };\n\t    return Tone.AutoWah;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Bitcrusher downsamples the incoming signal to a different bitdepth. \n\t\t *         Lowering the bitdepth of the signal creates distortion. Read more about Bitcrushing\n\t\t *         on [Wikipedia](https://en.wikipedia.org/wiki/Bitcrusher).\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Effect}\n\t\t *  @param {Number} bits The number of bits to downsample the signal. Nominal range\n\t\t *                       of 1 to 8. \n\t\t *  @example\n\t\t * //initialize crusher and route a synth through it\n\t\t * var crusher = new Tone.BitCrusher(4).toMaster();\n\t\t * var synth = new Tone.MonoSynth().connect(crusher);\n\t\t */\n\t    Tone.BitCrusher = function () {\n\t        var options = Tone.defaults(arguments, ['bits'], Tone.BitCrusher);\n\t        Tone.Effect.call(this, options);\n\t        var invStepSize = 1 / Math.pow(2, options.bits - 1);\n\t        /**\n\t\t\t *  Subtract the input signal and the modulus of the input signal\n\t\t\t *  @type {Tone.Subtract}\n\t\t\t *  @private\n\t\t\t */\n\t        this._subtract = new Tone.Subtract();\n\t        /**\n\t\t\t *  The mod function\n\t\t\t *  @type  {Tone.Modulo}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulo = new Tone.Modulo(invStepSize);\n\t        /**\n\t\t\t *  keeps track of the bits\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._bits = options.bits;\n\t        //connect it up\n\t        this.effectSend.fan(this._subtract, this._modulo);\n\t        this._modulo.connect(this._subtract, 0, 1);\n\t        this._subtract.connect(this.effectReturn);\n\t    };\n\t    Tone.extend(Tone.BitCrusher, Tone.Effect);\n\t    /**\n\t\t *  the default values\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.BitCrusher.defaults = { 'bits': 4 };\n\t    /**\n\t\t * The bit depth of the effect. Nominal range of 1-8. \n\t\t * @memberOf Tone.BitCrusher#\n\t\t * @type {number}\n\t\t * @name bits\n\t\t */\n\t    Object.defineProperty(Tone.BitCrusher.prototype, 'bits', {\n\t        get: function () {\n\t            return this._bits;\n\t        },\n\t        set: function (bits) {\n\t            this._bits = bits;\n\t            var invStepSize = 1 / Math.pow(2, bits - 1);\n\t            this._modulo.value = invStepSize;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.BitCrusher} this\n\t\t */\n\t    Tone.BitCrusher.prototype.dispose = function () {\n\t        Tone.Effect.prototype.dispose.call(this);\n\t        this._subtract.dispose();\n\t        this._subtract = null;\n\t        this._modulo.dispose();\n\t        this._modulo = null;\n\t        return this;\n\t    };\n\t    return Tone.BitCrusher;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.ChebyShev is a Chebyshev waveshaper, an effect which is good \n\t\t *         for making different types of distortion sounds.\n\t\t *         Note that odd orders sound very different from even ones, \n\t\t *         and order = 1 is no change. \n\t\t *         Read more at [music.columbia.edu](http://music.columbia.edu/cmc/musicandcomputers/chapter4/04_06.php).\n\t\t *\n\t\t *  @extends {Tone.Effect}\n\t\t *  @constructor\n\t\t *  @param {Positive|Object} [order] The order of the chebyshev polynomial. Normal range between 1-100. \n\t\t *  @example\n\t\t * //create a new cheby\n\t\t * var cheby = new Tone.Chebyshev(50);\n\t\t * //create a monosynth connected to our cheby\n\t\t * synth = new Tone.MonoSynth().connect(cheby);\n\t\t */\n\t    Tone.Chebyshev = function () {\n\t        var options = Tone.defaults(arguments, ['order'], Tone.Chebyshev);\n\t        Tone.Effect.call(this, options);\n\t        /**\n\t\t\t *  @type {WaveShaperNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._shaper = new Tone.WaveShaper(4096);\n\t        /**\n\t\t\t * holds onto the order of the filter\n\t\t\t * @type {number}\n\t\t\t * @private\n\t\t\t */\n\t        this._order = options.order;\n\t        this.connectEffect(this._shaper);\n\t        this.order = options.order;\n\t        this.oversample = options.oversample;\n\t    };\n\t    Tone.extend(Tone.Chebyshev, Tone.Effect);\n\t    /**\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Chebyshev.defaults = {\n\t        'order': 1,\n\t        'oversample': 'none'\n\t    };\n\t    /**\n\t\t *  get the coefficient for that degree\n\t\t *  @param {number} x the x value\n\t\t *  @param   {number} degree \n\t\t *  @param {Object} memo memoize the computed value. \n\t\t *                       this speeds up computation greatly. \n\t\t *  @return  {number}       the coefficient \n\t\t *  @private\n\t\t */\n\t    Tone.Chebyshev.prototype._getCoefficient = function (x, degree, memo) {\n\t        if (memo.hasOwnProperty(degree)) {\n\t            return memo[degree];\n\t        } else if (degree === 0) {\n\t            memo[degree] = 0;\n\t        } else if (degree === 1) {\n\t            memo[degree] = x;\n\t        } else {\n\t            memo[degree] = 2 * x * this._getCoefficient(x, degree - 1, memo) - this._getCoefficient(x, degree - 2, memo);\n\t        }\n\t        return memo[degree];\n\t    };\n\t    /**\n\t\t * The order of the Chebyshev polynomial which creates\n\t\t * the equation which is applied to the incoming \n\t\t * signal through a Tone.WaveShaper. The equations\n\t\t * are in the form:<br>\n\t\t * order 2: 2x^2 + 1<br>\n\t\t * order 3: 4x^3 + 3x <br>\n\t\t * @memberOf Tone.Chebyshev#\n\t\t * @type {Positive}\n\t\t * @name order\n\t\t */\n\t    Object.defineProperty(Tone.Chebyshev.prototype, 'order', {\n\t        get: function () {\n\t            return this._order;\n\t        },\n\t        set: function (order) {\n\t            this._order = order;\n\t            var curve = new Array(4096);\n\t            var len = curve.length;\n\t            for (var i = 0; i < len; ++i) {\n\t                var x = i * 2 / len - 1;\n\t                if (x === 0) {\n\t                    //should output 0 when input is 0\n\t                    curve[i] = 0;\n\t                } else {\n\t                    curve[i] = this._getCoefficient(x, order, {});\n\t                }\n\t            }\n\t            this._shaper.curve = curve;\n\t        }\n\t    });\n\t    /**\n\t\t * The oversampling of the effect. Can either be \"none\", \"2x\" or \"4x\".\n\t\t * @memberOf Tone.Chebyshev#\n\t\t * @type {string}\n\t\t * @name oversample\n\t\t */\n\t    Object.defineProperty(Tone.Chebyshev.prototype, 'oversample', {\n\t        get: function () {\n\t            return this._shaper.oversample;\n\t        },\n\t        set: function (oversampling) {\n\t            this._shaper.oversample = oversampling;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.Chebyshev} this\n\t\t */\n\t    Tone.Chebyshev.prototype.dispose = function () {\n\t        Tone.Effect.prototype.dispose.call(this);\n\t        this._shaper.dispose();\n\t        this._shaper = null;\n\t        return this;\n\t    };\n\t    return Tone.Chebyshev;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Base class for Stereo effects. Provides effectSendL/R and effectReturnL/R.\n\t\t *\n\t\t *\t@constructor\n\t\t *\t@extends {Tone.Effect}\n\t\t */\n\t    Tone.StereoEffect = function () {\n\t        //get the defaults\n\t        Tone.AudioNode.call(this);\n\t        var options = Tone.defaults(arguments, ['wet'], Tone.Effect);\n\t        this.createInsOuts(1, 1);\n\t        /**\n\t\t\t *  the drywet knob to control the amount of effect\n\t\t\t *  @type {Tone.CrossFade}\n\t\t\t *  @private\n\t\t\t */\n\t        this._dryWet = new Tone.CrossFade(options.wet);\n\t        /**\n\t\t\t *  The wet control, i.e. how much of the effected\n\t\t\t *  will pass through to the output.\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.wet = this._dryWet.fade;\n\t        /**\n\t\t\t *  then split it\n\t\t\t *  @type {Tone.Split}\n\t\t\t *  @private\n\t\t\t */\n\t        this._split = new Tone.Split();\n\t        /**\n\t\t\t *  the effects send LEFT\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this.effectSendL = this._split.left;\n\t        /**\n\t\t\t *  the effects send RIGHT\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this.effectSendR = this._split.right;\n\t        /**\n\t\t\t *  the stereo effect merger\n\t\t\t *  @type {Tone.Merge}\n\t\t\t *  @private\n\t\t\t */\n\t        this._merge = new Tone.Merge();\n\t        /**\n\t\t\t *  the effect return LEFT\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this.effectReturnL = this._merge.left;\n\t        /**\n\t\t\t *  the effect return RIGHT\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this.effectReturnR = this._merge.right;\n\t        //connections\n\t        this.input.connect(this._split);\n\t        //dry wet connections\n\t        this.input.connect(this._dryWet, 0, 0);\n\t        this._merge.connect(this._dryWet, 0, 1);\n\t        this._dryWet.connect(this.output);\n\t        this._readOnly(['wet']);\n\t    };\n\t    Tone.extend(Tone.StereoEffect, Tone.Effect);\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.StereoEffect} this\n\t\t */\n\t    Tone.StereoEffect.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._dryWet.dispose();\n\t        this._dryWet = null;\n\t        this._split.dispose();\n\t        this._split = null;\n\t        this._merge.dispose();\n\t        this._merge = null;\n\t        this.effectSendL = null;\n\t        this.effectSendR = null;\n\t        this.effectReturnL = null;\n\t        this.effectReturnR = null;\n\t        this._writable(['wet']);\n\t        this.wet = null;\n\t        return this;\n\t    };\n\t    return Tone.StereoEffect;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t * \t@class  Tone.FeedbackEffect provides a loop between an \n\t\t * \t        audio source and its own output. This is a base-class\n\t\t * \t        for feedback effects. \n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Effect}\n\t\t *  @param {NormalRange|Object} [feedback] The initial feedback value.\n\t\t */\n\t    Tone.FeedbackEffect = function () {\n\t        var options = Tone.defaults(arguments, ['feedback'], Tone.FeedbackEffect);\n\t        Tone.Effect.call(this, options);\n\t        /**\n\t\t\t *  the gain which controls the feedback\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._feedbackGain = new Tone.Gain(options.feedback, Tone.Type.NormalRange);\n\t        /**\n\t\t\t *  The amount of signal which is fed back into the effect input. \n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.feedback = this._feedbackGain.gain;\n\t        //the feedback loop\n\t        this.effectReturn.chain(this._feedbackGain, this.effectSend);\n\t        this._readOnly(['feedback']);\n\t    };\n\t    Tone.extend(Tone.FeedbackEffect, Tone.Effect);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.FeedbackEffect.defaults = { 'feedback': 0.125 };\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.FeedbackEffect} this\n\t\t */\n\t    Tone.FeedbackEffect.prototype.dispose = function () {\n\t        Tone.Effect.prototype.dispose.call(this);\n\t        this._writable(['feedback']);\n\t        this._feedbackGain.dispose();\n\t        this._feedbackGain = null;\n\t        this.feedback = null;\n\t        return this;\n\t    };\n\t    return Tone.FeedbackEffect;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Just like a stereo feedback effect, but the feedback is routed from left to right\n\t\t *         and right to left instead of on the same channel.\n\t\t *\n\t\t *\t@constructor\n\t\t *\t@extends {Tone.StereoEffect}\n\t\t */\n\t    Tone.StereoXFeedbackEffect = function () {\n\t        var options = Tone.defaults(arguments, ['feedback'], Tone.FeedbackEffect);\n\t        Tone.StereoEffect.call(this, options);\n\t        /**\n\t\t\t *  The amount of feedback from the output\n\t\t\t *  back into the input of the effect (routed\n\t\t\t *  across left and right channels).\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.feedback = new Tone.Signal(options.feedback, Tone.Type.NormalRange);\n\t        /**\n\t\t\t *  the left side feeback\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._feedbackLR = new Tone.Gain();\n\t        /**\n\t\t\t *  the right side feeback\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._feedbackRL = new Tone.Gain();\n\t        //connect it up\n\t        this.effectReturnL.chain(this._feedbackLR, this.effectSendR);\n\t        this.effectReturnR.chain(this._feedbackRL, this.effectSendL);\n\t        this.feedback.fan(this._feedbackLR.gain, this._feedbackRL.gain);\n\t        this._readOnly(['feedback']);\n\t    };\n\t    Tone.extend(Tone.StereoXFeedbackEffect, Tone.StereoEffect);\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.StereoXFeedbackEffect} this\n\t\t */\n\t    Tone.StereoXFeedbackEffect.prototype.dispose = function () {\n\t        Tone.StereoEffect.prototype.dispose.call(this);\n\t        this._writable(['feedback']);\n\t        this.feedback.dispose();\n\t        this.feedback = null;\n\t        this._feedbackLR.dispose();\n\t        this._feedbackLR = null;\n\t        this._feedbackRL.dispose();\n\t        this._feedbackRL = null;\n\t        return this;\n\t    };\n\t    return Tone.StereoXFeedbackEffect;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Chorus is a stereo chorus effect with feedback composed of \n\t\t *         a left and right delay with a Tone.LFO applied to the delayTime of each channel. \n\t\t *         Inspiration from [Tuna.js](https://github.com/Dinahmoe/tuna/blob/master/tuna.js).\n\t\t *         Read more on the chorus effect on [SoundOnSound](http://www.soundonsound.com/sos/jun04/articles/synthsecrets.htm).\n\t\t *\n\t\t *\t@constructor\n\t\t *\t@extends {Tone.StereoXFeedbackEffect}\n\t\t *\t@param {Frequency|Object} [frequency] The frequency of the LFO.\n\t\t *\t@param {Milliseconds} [delayTime] The delay of the chorus effect in ms. \n\t\t *\t@param {NormalRange} [depth] The depth of the chorus.\n\t\t *\t@example\n\t\t * var chorus = new Tone.Chorus(4, 2.5, 0.5);\n\t\t * var synth = new Tone.PolySynth(4, Tone.MonoSynth).connect(chorus);\n\t\t * synth.triggerAttackRelease([\"C3\",\"E3\",\"G3\"], \"8n\");\n\t\t */\n\t    Tone.Chorus = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'frequency',\n\t            'delayTime',\n\t            'depth'\n\t        ], Tone.Chorus);\n\t        Tone.StereoXFeedbackEffect.call(this, options);\n\t        /**\n\t\t\t *  the depth of the chorus\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._depth = options.depth;\n\t        /**\n\t\t\t *  the delayTime\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delayTime = options.delayTime / 1000;\n\t        /**\n\t\t\t *  the lfo which controls the delayTime\n\t\t\t *  @type {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfoL = new Tone.LFO({\n\t            'frequency': options.frequency,\n\t            'min': 0,\n\t            'max': 1\n\t        });\n\t        /**\n\t\t\t *  another LFO for the right side with a 180 degree phase diff\n\t\t\t *  @type {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfoR = new Tone.LFO({\n\t            'frequency': options.frequency,\n\t            'min': 0,\n\t            'max': 1,\n\t            'phase': 180\n\t        });\n\t        /**\n\t\t\t *  delay for left\n\t\t\t *  @type {Tone.Delay}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delayNodeL = new Tone.Delay();\n\t        /**\n\t\t\t *  delay for right\n\t\t\t *  @type {Tone.Delay}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delayNodeR = new Tone.Delay();\n\t        /**\n\t\t\t * The frequency of the LFO which modulates the delayTime. \n\t\t\t * @type {Frequency}\n\t\t\t * @signal\n\t\t\t */\n\t        this.frequency = this._lfoL.frequency;\n\t        //connections\n\t        this.effectSendL.chain(this._delayNodeL, this.effectReturnL);\n\t        this.effectSendR.chain(this._delayNodeR, this.effectReturnR);\n\t        //and pass through to make the detune apparent\n\t        this.effectSendL.connect(this.effectReturnL);\n\t        this.effectSendR.connect(this.effectReturnR);\n\t        //lfo setup\n\t        this._lfoL.connect(this._delayNodeL.delayTime);\n\t        this._lfoR.connect(this._delayNodeR.delayTime);\n\t        //start the lfo\n\t        this._lfoL.start();\n\t        this._lfoR.start();\n\t        //have one LFO frequency control the other\n\t        this._lfoL.frequency.connect(this._lfoR.frequency);\n\t        //set the initial values\n\t        this.depth = this._depth;\n\t        this.frequency.value = options.frequency;\n\t        this.type = options.type;\n\t        this._readOnly(['frequency']);\n\t        this.spread = options.spread;\n\t    };\n\t    Tone.extend(Tone.Chorus, Tone.StereoXFeedbackEffect);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Chorus.defaults = {\n\t        'frequency': 1.5,\n\t        'delayTime': 3.5,\n\t        'depth': 0.7,\n\t        'feedback': 0.1,\n\t        'type': 'sine',\n\t        'spread': 180\n\t    };\n\t    /**\n\t\t * The depth of the effect. A depth of 1 makes the delayTime\n\t\t * modulate between 0 and 2*delayTime (centered around the delayTime). \n\t\t * @memberOf Tone.Chorus#\n\t\t * @type {NormalRange}\n\t\t * @name depth\n\t\t */\n\t    Object.defineProperty(Tone.Chorus.prototype, 'depth', {\n\t        get: function () {\n\t            return this._depth;\n\t        },\n\t        set: function (depth) {\n\t            this._depth = depth;\n\t            var deviation = this._delayTime * depth;\n\t            this._lfoL.min = Math.max(this._delayTime - deviation, 0);\n\t            this._lfoL.max = this._delayTime + deviation;\n\t            this._lfoR.min = Math.max(this._delayTime - deviation, 0);\n\t            this._lfoR.max = this._delayTime + deviation;\n\t        }\n\t    });\n\t    /**\n\t\t * The delayTime in milliseconds of the chorus. A larger delayTime\n\t\t * will give a more pronounced effect. Nominal range a delayTime\n\t\t * is between 2 and 20ms. \n\t\t * @memberOf Tone.Chorus#\n\t\t * @type {Milliseconds}\n\t\t * @name delayTime\n\t\t */\n\t    Object.defineProperty(Tone.Chorus.prototype, 'delayTime', {\n\t        get: function () {\n\t            return this._delayTime * 1000;\n\t        },\n\t        set: function (delayTime) {\n\t            this._delayTime = delayTime / 1000;\n\t            this.depth = this._depth;\n\t        }\n\t    });\n\t    /**\n\t\t * The oscillator type of the LFO. \n\t\t * @memberOf Tone.Chorus#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.Chorus.prototype, 'type', {\n\t        get: function () {\n\t            return this._lfoL.type;\n\t        },\n\t        set: function (type) {\n\t            this._lfoL.type = type;\n\t            this._lfoR.type = type;\n\t        }\n\t    });\n\t    /** \n\t\t * Amount of stereo spread. When set to 0, both LFO's will be panned centrally.\n\t\t * When set to 180, LFO's will be panned hard left and right respectively.\n\t\t * @memberOf Tone.Chorus#\n\t\t * @type {Degrees}\n\t\t * @name spread\n\t\t */\n\t    Object.defineProperty(Tone.Chorus.prototype, 'spread', {\n\t        get: function () {\n\t            return this._lfoR.phase - this._lfoL.phase;\n\t        },\n\t        set: function (spread) {\n\t            this._lfoL.phase = 90 - spread / 2;\n\t            this._lfoR.phase = spread / 2 + 90;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.Chorus} this\n\t\t */\n\t    Tone.Chorus.prototype.dispose = function () {\n\t        Tone.StereoXFeedbackEffect.prototype.dispose.call(this);\n\t        this._lfoL.dispose();\n\t        this._lfoL = null;\n\t        this._lfoR.dispose();\n\t        this._lfoR = null;\n\t        this._delayNodeL.dispose();\n\t        this._delayNodeL = null;\n\t        this._delayNodeR.dispose();\n\t        this._delayNodeR = null;\n\t        this._writable('frequency');\n\t        this.frequency = null;\n\t        return this;\n\t    };\n\t    return Tone.Chorus;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Convolver is a wrapper around the Native Web Audio \n\t\t *          [ConvolverNode](http://webaudio.github.io/web-audio-api/#the-convolvernode-interface).\n\t\t *          Convolution is useful for reverb and filter emulation. Read more about convolution reverb on\n\t\t *          [Wikipedia](https://en.wikipedia.org/wiki/Convolution_reverb).\n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone.Effect}\n\t\t *  @param {string|Tone.Buffer|Object} [url] The URL of the impulse response or the Tone.Buffer\n\t\t *                                           contianing the impulse response. \n\t\t *  @param {Function} onload The callback to invoke when the url is loaded.\n\t\t *  @example\n\t\t * //initializing the convolver with an impulse response\n\t\t * var convolver = new Tone.Convolver(\"./path/to/ir.wav\").toMaster();\n\t\t */\n\t    Tone.Convolver = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'url',\n\t            'onload'\n\t        ], Tone.Convolver);\n\t        Tone.Effect.call(this, options);\n\t        /**\n\t\t\t *  convolver node\n\t\t\t *  @type {ConvolverNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._convolver = this.context.createConvolver();\n\t        /**\n\t\t\t *  the convolution buffer\n\t\t\t *  @type {Tone.Buffer}\n\t\t\t *  @private\n\t\t\t */\n\t        this._buffer = new Tone.Buffer();\n\t        if (Tone.isString(options.url)) {\n\t            this._buffer.load(options.url, function (buffer) {\n\t                this.buffer = buffer;\n\t                options.onload();\n\t            }.bind(this));\n\t        } else if (options.url) {\n\t            this.buffer = options.url;\n\t            options.onload();\n\t        }\n\t        this.connectEffect(this._convolver);\n\t    };\n\t    Tone.extend(Tone.Convolver, Tone.Effect);\n\t    /**\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.Convolver.defaults = { 'onload': Tone.noOp };\n\t    /**\n\t\t *  The convolver's buffer\n\t\t *  @memberOf Tone.Convolver#\n\t\t *  @type {AudioBuffer}\n\t\t *  @name buffer\n\t\t */\n\t    Object.defineProperty(Tone.Convolver.prototype, 'buffer', {\n\t        get: function () {\n\t            return this._buffer.get();\n\t        },\n\t        set: function (buffer) {\n\t            this._buffer.set(buffer);\n\t            this._convolver.buffer = this._buffer.get();\n\t        }\n\t    });\n\t    /**\n\t\t *  Load an impulse response url as an audio buffer.\n\t\t *  Decodes the audio asynchronously and invokes\n\t\t *  the callback once the audio buffer loads.\n\t\t *  @param {string} url The url of the buffer to load.\n\t\t *                      filetype support depends on the\n\t\t *                      browser.\n\t\t *  @param  {function=} callback\n\t\t *  @returns {Promise}\n\t\t */\n\t    Tone.Convolver.prototype.load = function (url, callback) {\n\t        return this._buffer.load(url, function (buff) {\n\t            this.buffer = buff;\n\t            if (callback) {\n\t                callback();\n\t            }\n\t        }.bind(this));\n\t    };\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.Convolver} this\n\t\t */\n\t    Tone.Convolver.prototype.dispose = function () {\n\t        Tone.Effect.prototype.dispose.call(this);\n\t        this._convolver.disconnect();\n\t        this._convolver = null;\n\t        this._buffer.dispose();\n\t        this._buffer = null;\n\t        return this;\n\t    };\n\t    return Tone.Convolver;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Distortion is a simple distortion effect using Tone.WaveShaper.\n\t\t *         Algorithm from [a stackoverflow answer](http://stackoverflow.com/a/22313408).\n\t\t *\n\t\t *  @extends {Tone.Effect}\n\t\t *  @constructor\n\t\t *  @param {Number|Object} [distortion] The amount of distortion (nominal range of 0-1)\n\t\t *  @example\n\t\t * var dist = new Tone.Distortion(0.8).toMaster();\n\t\t * var fm = new Tone.SimpleFM().connect(dist);\n\t\t * //this sounds good on bass notes\n\t\t * fm.triggerAttackRelease(\"A1\", \"8n\");\n\t\t */\n\t    Tone.Distortion = function () {\n\t        var options = Tone.defaults(arguments, ['distortion'], Tone.Distortion);\n\t        Tone.Effect.call(this, options);\n\t        /**\n\t\t\t *  @type {Tone.WaveShaper}\n\t\t\t *  @private\n\t\t\t */\n\t        this._shaper = new Tone.WaveShaper(4096);\n\t        /**\n\t\t\t * holds the distortion amount\n\t\t\t * @type {number}\n\t\t\t * @private\n\t\t\t */\n\t        this._distortion = options.distortion;\n\t        this.connectEffect(this._shaper);\n\t        this.distortion = options.distortion;\n\t        this.oversample = options.oversample;\n\t    };\n\t    Tone.extend(Tone.Distortion, Tone.Effect);\n\t    /**\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Distortion.defaults = {\n\t        'distortion': 0.4,\n\t        'oversample': 'none'\n\t    };\n\t    /**\n\t\t * The amount of distortion.\n\t\t * @memberOf Tone.Distortion#\n\t\t * @type {NormalRange}\n\t\t * @name distortion\n\t\t */\n\t    Object.defineProperty(Tone.Distortion.prototype, 'distortion', {\n\t        get: function () {\n\t            return this._distortion;\n\t        },\n\t        set: function (amount) {\n\t            this._distortion = amount;\n\t            var k = amount * 100;\n\t            var deg = Math.PI / 180;\n\t            this._shaper.setMap(function (x) {\n\t                if (Math.abs(x) < 0.001) {\n\t                    //should output 0 when input is 0\n\t                    return 0;\n\t                } else {\n\t                    return (3 + k) * x * 20 * deg / (Math.PI + k * Math.abs(x));\n\t                }\n\t            });\n\t        }\n\t    });\n\t    /**\n\t\t * The oversampling of the effect. Can either be \"none\", \"2x\" or \"4x\".\n\t\t * @memberOf Tone.Distortion#\n\t\t * @type {string}\n\t\t * @name oversample\n\t\t */\n\t    Object.defineProperty(Tone.Distortion.prototype, 'oversample', {\n\t        get: function () {\n\t            return this._shaper.oversample;\n\t        },\n\t        set: function (oversampling) {\n\t            this._shaper.oversample = oversampling;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.Distortion} this\n\t\t */\n\t    Tone.Distortion.prototype.dispose = function () {\n\t        Tone.Effect.prototype.dispose.call(this);\n\t        this._shaper.dispose();\n\t        this._shaper = null;\n\t        return this;\n\t    };\n\t    return Tone.Distortion;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.FeedbackDelay is a DelayNode in which part of output\n\t\t *          signal is fed back into the delay. \n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.FeedbackEffect}\n\t\t *  @param {Time|Object} [delayTime] The delay applied to the incoming signal. \n\t\t *  @param {NormalRange=} feedback The amount of the effected signal which \n\t\t *                            is fed back through the delay.\n\t\t *  @example\n\t\t * var feedbackDelay = new Tone.FeedbackDelay(\"8n\", 0.5).toMaster();\n\t\t * var tom = new Tone.DrumSynth({\n\t\t * \t\"octaves\" : 4,\n\t\t * \t\"pitchDecay\" : 0.1\n\t\t * }).connect(feedbackDelay);\n\t\t * tom.triggerAttackRelease(\"A2\",\"32n\");\n\t\t */\n\t    Tone.FeedbackDelay = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'delayTime',\n\t            'feedback'\n\t        ], Tone.FeedbackDelay);\n\t        Tone.FeedbackEffect.call(this, options);\n\t        /**\n\t\t\t *  the delay node\n\t\t\t *  @type {Tone.Delay}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delayNode = new Tone.Delay(options.delayTime);\n\t        /**\n\t\t\t *  The delayTime of the DelayNode. \n\t\t\t *  @type {Time}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.delayTime = this._delayNode.delayTime;\n\t        // connect it up\n\t        this.connectEffect(this._delayNode);\n\t        this._readOnly(['delayTime']);\n\t    };\n\t    Tone.extend(Tone.FeedbackDelay, Tone.FeedbackEffect);\n\t    /**\n\t\t *  The default values. \n\t\t *  @const\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.FeedbackDelay.defaults = { 'delayTime': 0.25 };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.FeedbackDelay} this\n\t\t */\n\t    Tone.FeedbackDelay.prototype.dispose = function () {\n\t        Tone.FeedbackEffect.prototype.dispose.call(this);\n\t        this._delayNode.dispose();\n\t        this._delayNode = null;\n\t        this._writable(['delayTime']);\n\t        this.delayTime = null;\n\t        return this;\n\t    };\n\t    return Tone.FeedbackDelay;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  an array of comb filter delay values from Freeverb implementation\n\t\t *  @static\n\t\t *  @private\n\t\t *  @type {Array}\n\t\t */\n\t    var combFilterTunings = [\n\t        1557 / 44100,\n\t        1617 / 44100,\n\t        1491 / 44100,\n\t        1422 / 44100,\n\t        1277 / 44100,\n\t        1356 / 44100,\n\t        1188 / 44100,\n\t        1116 / 44100\n\t    ];\n\t    /**\n\t\t *  an array of allpass filter frequency values from Freeverb implementation\n\t\t *  @private\n\t\t *  @static\n\t\t *  @type {Array}\n\t\t */\n\t    var allpassFilterFrequencies = [\n\t        225,\n\t        556,\n\t        441,\n\t        341\n\t    ];\n\t    /**\n\t\t *  @class Tone.Freeverb is a reverb based on [Freeverb](https://ccrma.stanford.edu/~jos/pasp/Freeverb.html).\n\t\t *         Read more on reverb on [Sound On Sound](https://web.archive.org/web/20160404083902/http://www.soundonsound.com:80/sos/feb01/articles/synthsecrets.asp).\n\t\t *\n\t\t *  @extends {Tone.Effect}\n\t\t *  @constructor\n\t\t *  @param {NormalRange|Object} [roomSize] Correlated to the decay time.\n\t\t *  @param {Frequency} [dampening] The cutoff frequency of a lowpass filter as part\n\t\t *                                 of the reverb.\n\t\t *  @example\n\t\t * var freeverb = new Tone.Freeverb().toMaster();\n\t\t * freeverb.dampening.value = 1000;\n\t\t * //routing synth through the reverb\n\t\t * var synth = new Tone.AMSynth().connect(freeverb);\n\t\t */\n\t    Tone.Freeverb = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'roomSize',\n\t            'dampening'\n\t        ], Tone.Freeverb);\n\t        Tone.StereoEffect.call(this, options);\n\t        /**\n\t\t\t *  The roomSize value between. A larger roomSize\n\t\t\t *  will result in a longer decay.\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.roomSize = new Tone.Signal(options.roomSize, Tone.Type.NormalRange);\n\t        /**\n\t\t\t *  The amount of dampening of the reverberant signal.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.dampening = new Tone.Signal(options.dampening, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  the comb filters\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._combFilters = [];\n\t        /**\n\t\t\t *  the allpass filters on the left\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._allpassFiltersL = [];\n\t        /**\n\t\t\t *  the allpass filters on the right\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._allpassFiltersR = [];\n\t        //make the allpass filters on the right\n\t        for (var l = 0; l < allpassFilterFrequencies.length; l++) {\n\t            var allpassL = this.context.createBiquadFilter();\n\t            allpassL.type = 'allpass';\n\t            allpassL.frequency.value = allpassFilterFrequencies[l];\n\t            this._allpassFiltersL.push(allpassL);\n\t        }\n\t        //make the allpass filters on the left\n\t        for (var r = 0; r < allpassFilterFrequencies.length; r++) {\n\t            var allpassR = this.context.createBiquadFilter();\n\t            allpassR.type = 'allpass';\n\t            allpassR.frequency.value = allpassFilterFrequencies[r];\n\t            this._allpassFiltersR.push(allpassR);\n\t        }\n\t        //make the comb filters\n\t        for (var c = 0; c < combFilterTunings.length; c++) {\n\t            var lfpf = new Tone.LowpassCombFilter(combFilterTunings[c]);\n\t            if (c < combFilterTunings.length / 2) {\n\t                this.effectSendL.chain(lfpf, this._allpassFiltersL[0]);\n\t            } else {\n\t                this.effectSendR.chain(lfpf, this._allpassFiltersR[0]);\n\t            }\n\t            this.roomSize.connect(lfpf.resonance);\n\t            this.dampening.connect(lfpf.dampening);\n\t            this._combFilters.push(lfpf);\n\t        }\n\t        //chain the allpass filters togetehr\n\t        Tone.connectSeries.apply(Tone, this._allpassFiltersL);\n\t        Tone.connectSeries.apply(Tone, this._allpassFiltersR);\n\t        this._allpassFiltersL[this._allpassFiltersL.length - 1].connect(this.effectReturnL);\n\t        this._allpassFiltersR[this._allpassFiltersR.length - 1].connect(this.effectReturnR);\n\t        this._readOnly([\n\t            'roomSize',\n\t            'dampening'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.Freeverb, Tone.StereoEffect);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Freeverb.defaults = {\n\t        'roomSize': 0.7,\n\t        'dampening': 3000\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Freeverb} this\n\t\t */\n\t    Tone.Freeverb.prototype.dispose = function () {\n\t        Tone.StereoEffect.prototype.dispose.call(this);\n\t        for (var al = 0; al < this._allpassFiltersL.length; al++) {\n\t            this._allpassFiltersL[al].disconnect();\n\t            this._allpassFiltersL[al] = null;\n\t        }\n\t        this._allpassFiltersL = null;\n\t        for (var ar = 0; ar < this._allpassFiltersR.length; ar++) {\n\t            this._allpassFiltersR[ar].disconnect();\n\t            this._allpassFiltersR[ar] = null;\n\t        }\n\t        this._allpassFiltersR = null;\n\t        for (var cf = 0; cf < this._combFilters.length; cf++) {\n\t            this._combFilters[cf].dispose();\n\t            this._combFilters[cf] = null;\n\t        }\n\t        this._combFilters = null;\n\t        this._writable([\n\t            'roomSize',\n\t            'dampening'\n\t        ]);\n\t        this.roomSize.dispose();\n\t        this.roomSize = null;\n\t        this.dampening.dispose();\n\t        this.dampening = null;\n\t        return this;\n\t    };\n\t    return Tone.Freeverb;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  an array of the comb filter delay time values\n\t\t *  @private\n\t\t *  @static\n\t\t *  @type {Array}\n\t\t */\n\t    var combFilterDelayTimes = [\n\t        1687 / 25000,\n\t        1601 / 25000,\n\t        2053 / 25000,\n\t        2251 / 25000\n\t    ];\n\t    /**\n\t\t *  the resonances of each of the comb filters\n\t\t *  @private\n\t\t *  @static\n\t\t *  @type {Array}\n\t\t */\n\t    var combFilterResonances = [\n\t        0.773,\n\t        0.802,\n\t        0.753,\n\t        0.733\n\t    ];\n\t    /**\n\t\t *  the allpass filter frequencies\n\t\t *  @private\n\t\t *  @static\n\t\t *  @type {Array}\n\t\t */\n\t    var allpassFilterFreqs = [\n\t        347,\n\t        113,\n\t        37\n\t    ];\n\t    /**\n\t\t *  @class Tone.JCReverb is a simple [Schroeder Reverberator](https://ccrma.stanford.edu/~jos/pasp/Schroeder_Reverberators.html)\n\t\t *         tuned by John Chowning in 1970.\n\t\t *         It is made up of three allpass filters and four Tone.FeedbackCombFilter. \n\t\t *         \n\t\t *\n\t\t *  @extends {Tone.Effect}\n\t\t *  @constructor\n\t\t *  @param {NormalRange|Object} [roomSize] Coorelates to the decay time.\n\t\t *  @example\n\t\t * var reverb = new Tone.JCReverb(0.4).connect(Tone.Master);\n\t\t * var delay = new Tone.FeedbackDelay(0.5); \n\t\t * //connecting the synth to reverb through delay\n\t\t * var synth = new Tone.DuoSynth().chain(delay, reverb);\n\t\t * synth.triggerAttackRelease(\"A4\",\"8n\");\n\t\t */\n\t    Tone.JCReverb = function () {\n\t        var options = Tone.defaults(arguments, ['roomSize'], Tone.JCReverb);\n\t        Tone.StereoEffect.call(this, options);\n\t        /**\n\t\t\t *  room size control values between [0,1]\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.roomSize = new Tone.Signal(options.roomSize, Tone.Type.NormalRange);\n\t        /**\n\t\t\t *  scale the room size\n\t\t\t *  @type {Tone.Scale}\n\t\t\t *  @private\n\t\t\t */\n\t        this._scaleRoomSize = new Tone.Scale(-0.733, 0.197);\n\t        /**\n\t\t\t *  a series of allpass filters\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._allpassFilters = [];\n\t        /**\n\t\t\t *  parallel feedback comb filters\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._feedbackCombFilters = [];\n\t        //make the allpass filters\n\t        for (var af = 0; af < allpassFilterFreqs.length; af++) {\n\t            var allpass = this.context.createBiquadFilter();\n\t            allpass.type = 'allpass';\n\t            allpass.frequency.value = allpassFilterFreqs[af];\n\t            this._allpassFilters.push(allpass);\n\t        }\n\t        //and the comb filters\n\t        for (var cf = 0; cf < combFilterDelayTimes.length; cf++) {\n\t            var fbcf = new Tone.FeedbackCombFilter(combFilterDelayTimes[cf], 0.1);\n\t            this._scaleRoomSize.connect(fbcf.resonance);\n\t            fbcf.resonance.value = combFilterResonances[cf];\n\t            this._allpassFilters[this._allpassFilters.length - 1].connect(fbcf);\n\t            if (cf < combFilterDelayTimes.length / 2) {\n\t                fbcf.connect(this.effectReturnL);\n\t            } else {\n\t                fbcf.connect(this.effectReturnR);\n\t            }\n\t            this._feedbackCombFilters.push(fbcf);\n\t        }\n\t        //chain the allpass filters together\n\t        this.roomSize.connect(this._scaleRoomSize);\n\t        Tone.connectSeries.apply(Tone, this._allpassFilters);\n\t        this.effectSendL.connect(this._allpassFilters[0]);\n\t        this.effectSendR.connect(this._allpassFilters[0]);\n\t        this._readOnly(['roomSize']);\n\t    };\n\t    Tone.extend(Tone.JCReverb, Tone.StereoEffect);\n\t    /**\n\t\t *  the default values\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.JCReverb.defaults = { 'roomSize': 0.5 };\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.JCReverb} this\n\t\t */\n\t    Tone.JCReverb.prototype.dispose = function () {\n\t        Tone.StereoEffect.prototype.dispose.call(this);\n\t        for (var apf = 0; apf < this._allpassFilters.length; apf++) {\n\t            this._allpassFilters[apf].disconnect();\n\t            this._allpassFilters[apf] = null;\n\t        }\n\t        this._allpassFilters = null;\n\t        for (var fbcf = 0; fbcf < this._feedbackCombFilters.length; fbcf++) {\n\t            this._feedbackCombFilters[fbcf].dispose();\n\t            this._feedbackCombFilters[fbcf] = null;\n\t        }\n\t        this._feedbackCombFilters = null;\n\t        this._writable(['roomSize']);\n\t        this.roomSize.dispose();\n\t        this.roomSize = null;\n\t        this._scaleRoomSize.dispose();\n\t        this._scaleRoomSize = null;\n\t        return this;\n\t    };\n\t    return Tone.JCReverb;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Mid/Side processing separates the the 'mid' signal \n\t\t *         (which comes out of both the left and the right channel) \n\t\t *         and the 'side' (which only comes out of the the side channels) \n\t\t *         and effects them separately before being recombined.\n\t\t *         Applies a Mid/Side seperation and recombination.\n\t\t *         Algorithm found in [kvraudio forums](http://www.kvraudio.com/forum/viewtopic.php?t=212587).\n\t\t *         <br><br>\n\t\t *         This is a base-class for Mid/Side Effects. \n\t\t *\n\t\t *  @extends {Tone.Effect}\n\t\t *  @constructor\n\t\t */\n\t    Tone.MidSideEffect = function () {\n\t        Tone.Effect.apply(this, arguments);\n\t        /**\n\t\t\t *  The mid/side split\n\t\t\t *  @type  {Tone.MidSideSplit}\n\t\t\t *  @private\n\t\t\t */\n\t        this._midSideSplit = new Tone.MidSideSplit();\n\t        /**\n\t\t\t *  The mid/side merge\n\t\t\t *  @type  {Tone.MidSideMerge}\n\t\t\t *  @private\n\t\t\t */\n\t        this._midSideMerge = new Tone.MidSideMerge();\n\t        /**\n\t\t\t *  The mid send. Connect to mid processing\n\t\t\t *  @type {Tone.Expr}\n\t\t\t *  @private\n\t\t\t */\n\t        this.midSend = this._midSideSplit.mid;\n\t        /**\n\t\t\t *  The side send. Connect to side processing\n\t\t\t *  @type {Tone.Expr}\n\t\t\t *  @private\n\t\t\t */\n\t        this.sideSend = this._midSideSplit.side;\n\t        /**\n\t\t\t *  The mid return connection\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this.midReturn = this._midSideMerge.mid;\n\t        /**\n\t\t\t *  The side return connection\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this.sideReturn = this._midSideMerge.side;\n\t        //the connections\n\t        this.effectSend.connect(this._midSideSplit);\n\t        this._midSideMerge.connect(this.effectReturn);\n\t    };\n\t    Tone.extend(Tone.MidSideEffect, Tone.Effect);\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.MidSideEffect} this\n\t\t */\n\t    Tone.MidSideEffect.prototype.dispose = function () {\n\t        Tone.Effect.prototype.dispose.call(this);\n\t        this._midSideSplit.dispose();\n\t        this._midSideSplit = null;\n\t        this._midSideMerge.dispose();\n\t        this._midSideMerge = null;\n\t        this.midSend = null;\n\t        this.sideSend = null;\n\t        this.midReturn = null;\n\t        this.sideReturn = null;\n\t        return this;\n\t    };\n\t    return Tone.MidSideEffect;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Phaser is a phaser effect. Phasers work by changing the phase\n\t\t *         of different frequency components of an incoming signal. Read more on \n\t\t *         [Wikipedia](https://en.wikipedia.org/wiki/Phaser_(effect)). \n\t\t *         Inspiration for this phaser comes from [Tuna.js](https://github.com/Dinahmoe/tuna/).\n\t\t *\n\t\t *\t@extends {Tone.StereoEffect}\n\t\t *\t@constructor\n\t\t *\t@param {Frequency|Object} [frequency] The speed of the phasing. \n\t\t *\t@param {number} [octaves] The octaves of the effect. \n\t\t *\t@param {Frequency} [baseFrequency] The base frequency of the filters. \n\t\t *\t@example\n\t\t * var phaser = new Tone.Phaser({\n\t\t * \t\"frequency\" : 15, \n\t\t * \t\"octaves\" : 5, \n\t\t * \t\"baseFrequency\" : 1000\n\t\t * }).toMaster();\n\t\t * var synth = new Tone.FMSynth().connect(phaser);\n\t\t * synth.triggerAttackRelease(\"E3\", \"2n\");\n\t\t */\n\t    Tone.Phaser = function () {\n\t        //set the defaults\n\t        var options = Tone.defaults(arguments, [\n\t            'frequency',\n\t            'octaves',\n\t            'baseFrequency'\n\t        ], Tone.Phaser);\n\t        Tone.StereoEffect.call(this, options);\n\t        /**\n\t\t\t *  the lfo which controls the frequency on the left side\n\t\t\t *  @type {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfoL = new Tone.LFO(options.frequency, 0, 1);\n\t        /**\n\t\t\t *  the lfo which controls the frequency on the right side\n\t\t\t *  @type {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfoR = new Tone.LFO(options.frequency, 0, 1);\n\t        this._lfoR.phase = 180;\n\t        /**\n\t\t\t *  the base modulation frequency\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._baseFrequency = options.baseFrequency;\n\t        /**\n\t\t\t *  the octaves of the phasing\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._octaves = options.octaves;\n\t        /**\n\t\t\t *  The quality factor of the filters\n\t\t\t *  @type {Positive}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.Q = new Tone.Signal(options.Q, Tone.Type.Positive);\n\t        /**\n\t\t\t *  the array of filters for the left side\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._filtersL = this._makeFilters(options.stages, this._lfoL, this.Q);\n\t        /**\n\t\t\t *  the array of filters for the left side\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._filtersR = this._makeFilters(options.stages, this._lfoR, this.Q);\n\t        /**\n\t\t\t * the frequency of the effect\n\t\t\t * @type {Tone.Signal}\n\t\t\t */\n\t        this.frequency = this._lfoL.frequency;\n\t        this.frequency.value = options.frequency;\n\t        //connect them up\n\t        this.effectSendL.connect(this._filtersL[0]);\n\t        this.effectSendR.connect(this._filtersR[0]);\n\t        this._filtersL[options.stages - 1].connect(this.effectReturnL);\n\t        this._filtersR[options.stages - 1].connect(this.effectReturnR);\n\t        //control the frequency with one LFO\n\t        this._lfoL.frequency.connect(this._lfoR.frequency);\n\t        //set the options\n\t        this.baseFrequency = options.baseFrequency;\n\t        this.octaves = options.octaves;\n\t        //start the lfo\n\t        this._lfoL.start();\n\t        this._lfoR.start();\n\t        this._readOnly([\n\t            'frequency',\n\t            'Q'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.Phaser, Tone.StereoEffect);\n\t    /**\n\t\t *  defaults\n\t\t *  @static\n\t\t *  @type {object}\n\t\t */\n\t    Tone.Phaser.defaults = {\n\t        'frequency': 0.5,\n\t        'octaves': 3,\n\t        'stages': 10,\n\t        'Q': 10,\n\t        'baseFrequency': 350\n\t    };\n\t    /**\n\t\t *  @param {number} stages\n\t\t *  @returns {Array} the number of filters all connected together\n\t\t *  @private\n\t\t */\n\t    Tone.Phaser.prototype._makeFilters = function (stages, connectToFreq, Q) {\n\t        var filters = new Array(stages);\n\t        //make all the filters\n\t        for (var i = 0; i < stages; i++) {\n\t            var filter = this.context.createBiquadFilter();\n\t            filter.type = 'allpass';\n\t            Q.connect(filter.Q);\n\t            connectToFreq.connect(filter.frequency);\n\t            filters[i] = filter;\n\t        }\n\t        Tone.connectSeries.apply(Tone, filters);\n\t        return filters;\n\t    };\n\t    /**\n\t\t * The number of octaves the phase goes above\n\t\t * the baseFrequency\n\t\t * @memberOf Tone.Phaser#\n\t\t * @type {Positive}\n\t\t * @name octaves\n\t\t */\n\t    Object.defineProperty(Tone.Phaser.prototype, 'octaves', {\n\t        get: function () {\n\t            return this._octaves;\n\t        },\n\t        set: function (octaves) {\n\t            this._octaves = octaves;\n\t            var max = this._baseFrequency * Math.pow(2, octaves);\n\t            this._lfoL.max = max;\n\t            this._lfoR.max = max;\n\t        }\n\t    });\n\t    /**\n\t\t * The the base frequency of the filters. \n\t\t * @memberOf Tone.Phaser#\n\t\t * @type {number}\n\t\t * @name baseFrequency\n\t\t */\n\t    Object.defineProperty(Tone.Phaser.prototype, 'baseFrequency', {\n\t        get: function () {\n\t            return this._baseFrequency;\n\t        },\n\t        set: function (freq) {\n\t            this._baseFrequency = freq;\n\t            this._lfoL.min = freq;\n\t            this._lfoR.min = freq;\n\t            this.octaves = this._octaves;\n\t        }\n\t    });\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.Phaser} this\n\t\t */\n\t    Tone.Phaser.prototype.dispose = function () {\n\t        Tone.StereoEffect.prototype.dispose.call(this);\n\t        this._writable([\n\t            'frequency',\n\t            'Q'\n\t        ]);\n\t        this.Q.dispose();\n\t        this.Q = null;\n\t        this._lfoL.dispose();\n\t        this._lfoL = null;\n\t        this._lfoR.dispose();\n\t        this._lfoR = null;\n\t        for (var i = 0; i < this._filtersL.length; i++) {\n\t            this._filtersL[i].disconnect();\n\t            this._filtersL[i] = null;\n\t        }\n\t        this._filtersL = null;\n\t        for (var j = 0; j < this._filtersR.length; j++) {\n\t            this._filtersR[j].disconnect();\n\t            this._filtersR[j] = null;\n\t        }\n\t        this._filtersR = null;\n\t        this.frequency = null;\n\t        return this;\n\t    };\n\t    return Tone.Phaser;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.PingPongDelay is a feedback delay effect where the echo is heard\n\t\t *          first in one channel and next in the opposite channel. In a stereo\n\t\t *          system these are the right and left channels.\n\t\t *          PingPongDelay in more simplified terms is two Tone.FeedbackDelays \n\t\t *          with independent delay values. Each delay is routed to one channel\n\t\t *          (left or right), and the channel triggered second will always \n\t\t *          trigger at the same interval after the first.\n\t\t *\n\t\t * \t@constructor\n\t\t * \t@extends {Tone.StereoXFeedbackEffect}\n\t\t *  @param {Time|Object} [delayTime] The delayTime between consecutive echos.\n\t\t *  @param {NormalRange=} feedback The amount of the effected signal which \n\t\t *                                 is fed back through the delay.\n\t\t *  @example\n\t\t * var pingPong = new Tone.PingPongDelay(\"4n\", 0.2).toMaster();\n\t\t * var drum = new Tone.DrumSynth().connect(pingPong);\n\t\t * drum.triggerAttackRelease(\"C4\", \"32n\");\n\t\t */\n\t    Tone.PingPongDelay = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'delayTime',\n\t            'feedback'\n\t        ], Tone.PingPongDelay);\n\t        Tone.StereoXFeedbackEffect.call(this, options);\n\t        /**\n\t\t\t *  the delay node on the left side\n\t\t\t *  @type {Tone.Delay}\n\t\t\t *  @private\n\t\t\t */\n\t        this._leftDelay = new Tone.Delay(0, options.maxDelayTime);\n\t        /**\n\t\t\t *  the delay node on the right side\n\t\t\t *  @type {Tone.Delay}\n\t\t\t *  @private\n\t\t\t */\n\t        this._rightDelay = new Tone.Delay(0, options.maxDelayTime);\n\t        /**\n\t\t\t *  the predelay on the right side\n\t\t\t *  @type {Tone.Delay}\n\t\t\t *  @private\n\t\t\t */\n\t        this._rightPreDelay = new Tone.Delay(0, options.maxDelayTime);\n\t        /**\n\t\t\t *  the delay time signal\n\t\t\t *  @type {Time}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.delayTime = new Tone.Signal(options.delayTime, Tone.Type.Time);\n\t        //connect it up\n\t        this.effectSendL.chain(this._leftDelay, this.effectReturnL);\n\t        this.effectSendR.chain(this._rightPreDelay, this._rightDelay, this.effectReturnR);\n\t        this.delayTime.fan(this._leftDelay.delayTime, this._rightDelay.delayTime, this._rightPreDelay.delayTime);\n\t        //rearranged the feedback to be after the rightPreDelay\n\t        this._feedbackLR.disconnect();\n\t        this._feedbackLR.connect(this._rightDelay);\n\t        this._readOnly(['delayTime']);\n\t    };\n\t    Tone.extend(Tone.PingPongDelay, Tone.StereoXFeedbackEffect);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.PingPongDelay.defaults = {\n\t        'delayTime': 0.25,\n\t        'maxDelayTime': 1\n\t    };\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.PingPongDelay} this\n\t\t */\n\t    Tone.PingPongDelay.prototype.dispose = function () {\n\t        Tone.StereoXFeedbackEffect.prototype.dispose.call(this);\n\t        this._leftDelay.dispose();\n\t        this._leftDelay = null;\n\t        this._rightDelay.dispose();\n\t        this._rightDelay = null;\n\t        this._rightPreDelay.dispose();\n\t        this._rightPreDelay = null;\n\t        this._writable(['delayTime']);\n\t        this.delayTime.dispose();\n\t        this.delayTime = null;\n\t        return this;\n\t    };\n\t    return Tone.PingPongDelay;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.PitchShift does near-realtime pitch shifting to the incoming signal. \n\t\t *         The effect is achieved by speeding up or slowing down the delayTime\n\t\t *         of a DelayNode using a sawtooth wave. \n\t\t *         Algorithm found in [this pdf](http://dsp-book.narod.ru/soundproc.pdf).\n\t\t *         Additional reference by [Miller Pucket](http://msp.ucsd.edu/techniques/v0.11/book-html/node115.html).\n\t\t *         \n\t\t *  @extends {Tone.FeedbackEffect}\n\t\t *  @param {Interval=} pitch The interval to transpose the incoming signal by. \n\t\t */\n\t    Tone.PitchShift = function () {\n\t        var options = Tone.defaults(arguments, ['pitch'], Tone.PitchShift);\n\t        Tone.FeedbackEffect.call(this, options);\n\t        /**\n\t\t\t *  The pitch signal\n\t\t\t *  @type  {Tone.Signal}\n\t\t\t *  @private\n\t\t\t */\n\t        this._frequency = new Tone.Signal(0);\n\t        /**\n\t\t\t *  Uses two DelayNodes to cover up the jump in\n\t\t\t *  the sawtooth wave. \n\t\t\t *  @type  {DelayNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delayA = new Tone.Delay(0, 1);\n\t        /**\n\t\t\t *  The first LFO.\n\t\t\t *  @type  {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfoA = new Tone.LFO({\n\t            'min': 0,\n\t            'max': 0.1,\n\t            'type': 'sawtooth'\n\t        }).connect(this._delayA.delayTime);\n\t        /**\n\t\t\t *  The second DelayNode\n\t\t\t *  @type  {DelayNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delayB = new Tone.Delay(0, 1);\n\t        /**\n\t\t\t *  The first LFO.\n\t\t\t *  @type  {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfoB = new Tone.LFO({\n\t            'min': 0,\n\t            'max': 0.1,\n\t            'type': 'sawtooth',\n\t            'phase': 180\n\t        }).connect(this._delayB.delayTime);\n\t        /**\n\t\t\t *  Crossfade quickly between the two delay lines\n\t\t\t *  to cover up the jump in the sawtooth wave\n\t\t\t *  @type  {Tone.CrossFade}\n\t\t\t *  @private\n\t\t\t */\n\t        this._crossFade = new Tone.CrossFade();\n\t        /**\n\t\t\t *  LFO which alternates between the two\n\t\t\t *  delay lines to cover up the disparity in the\n\t\t\t *  sawtooth wave. \n\t\t\t *  @type  {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._crossFadeLFO = new Tone.LFO({\n\t            'min': 0,\n\t            'max': 1,\n\t            'type': 'triangle',\n\t            'phase': 90\n\t        }).connect(this._crossFade.fade);\n\t        /**\n\t\t\t *  The delay node\n\t\t\t *  @type {Tone.Delay}\n\t\t\t *  @private\n\t\t\t */\n\t        this._feedbackDelay = new Tone.Delay(options.delayTime);\n\t        /**\n\t\t\t *  The amount of delay on the input signal\n\t\t\t *  @type {Time}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.delayTime = this._feedbackDelay.delayTime;\n\t        this._readOnly('delayTime');\n\t        /**\n\t\t\t *  Hold the current pitch\n\t\t\t *  @type {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._pitch = options.pitch;\n\t        /**\n\t\t\t *  Hold the current windowSize\n\t\t\t *  @type {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._windowSize = options.windowSize;\n\t        //connect the two delay lines up\n\t        this._delayA.connect(this._crossFade.a);\n\t        this._delayB.connect(this._crossFade.b);\n\t        //connect the frequency\n\t        this._frequency.fan(this._lfoA.frequency, this._lfoB.frequency, this._crossFadeLFO.frequency);\n\t        //route the input\n\t        this.effectSend.fan(this._delayA, this._delayB);\n\t        this._crossFade.chain(this._feedbackDelay, this.effectReturn);\n\t        //start the LFOs at the same time\n\t        var now = this.now();\n\t        this._lfoA.start(now);\n\t        this._lfoB.start(now);\n\t        this._crossFadeLFO.start(now);\n\t        //set the initial value\n\t        this.windowSize = this._windowSize;\n\t    };\n\t    Tone.extend(Tone.PitchShift, Tone.FeedbackEffect);\n\t    /**\n\t\t *  default values\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.PitchShift.defaults = {\n\t        'pitch': 0,\n\t        'windowSize': 0.1,\n\t        'delayTime': 0,\n\t        'feedback': 0\n\t    };\n\t    /**\n\t\t * Repitch the incoming signal by some interval (measured\n\t\t * in semi-tones). \n\t\t * @memberOf Tone.PitchShift#\n\t\t * @type {Interval}\n\t\t * @name pitch\n\t\t * @example\n\t\t * pitchShift.pitch = -12; //down one octave\n\t\t * pitchShift.pitch = 7; //up a fifth\n\t\t */\n\t    Object.defineProperty(Tone.PitchShift.prototype, 'pitch', {\n\t        get: function () {\n\t            return this._pitch;\n\t        },\n\t        set: function (interval) {\n\t            this._pitch = interval;\n\t            var factor = 0;\n\t            if (interval < 0) {\n\t                this._lfoA.min = 0;\n\t                this._lfoA.max = this._windowSize;\n\t                this._lfoB.min = 0;\n\t                this._lfoB.max = this._windowSize;\n\t                factor = Tone.intervalToFrequencyRatio(interval - 1) + 1;\n\t            } else {\n\t                this._lfoA.min = this._windowSize;\n\t                this._lfoA.max = 0;\n\t                this._lfoB.min = this._windowSize;\n\t                this._lfoB.max = 0;\n\t                factor = Tone.intervalToFrequencyRatio(interval) - 1;\n\t            }\n\t            this._frequency.value = factor * (1.2 / this._windowSize);\n\t        }\n\t    });\n\t    /**\n\t\t * The window size corresponds roughly to the sample length in a looping sampler. \n\t\t * Smaller values are desirable for a less noticeable delay time of the pitch shifted\n\t\t * signal, but larger values will result in smoother pitch shifting for larger intervals. \n\t\t * A nominal range of 0.03 to 0.1 is recommended. \n\t\t * @memberOf Tone.PitchShift#\n\t\t * @type {Time}\n\t\t * @name windowSize\n\t\t * @example\n\t\t * pitchShift.windowSize = 0.1;\n\t\t */\n\t    Object.defineProperty(Tone.PitchShift.prototype, 'windowSize', {\n\t        get: function () {\n\t            return this._windowSize;\n\t        },\n\t        set: function (size) {\n\t            this._windowSize = this.toSeconds(size);\n\t            this.pitch = this._pitch;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return  {Tone.PitchShift}  this\n\t\t */\n\t    Tone.PitchShift.prototype.dispose = function () {\n\t        Tone.FeedbackEffect.prototype.dispose.call(this);\n\t        this._frequency.dispose();\n\t        this._frequency = null;\n\t        this._delayA.disconnect();\n\t        this._delayA = null;\n\t        this._delayB.disconnect();\n\t        this._delayB = null;\n\t        this._lfoA.dispose();\n\t        this._lfoA = null;\n\t        this._lfoB.dispose();\n\t        this._lfoB = null;\n\t        this._crossFade.dispose();\n\t        this._crossFade = null;\n\t        this._crossFadeLFO.dispose();\n\t        this._crossFadeLFO = null;\n\t        this._writable('delayTime');\n\t        this._feedbackDelay.dispose();\n\t        this._feedbackDelay = null;\n\t        this.delayTime = null;\n\t        return this;\n\t    };\n\t    return Tone.PitchShift;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Base class for stereo feedback effects where the effectReturn\n\t\t *         is fed back into the same channel. \n\t\t *\n\t\t *\t@constructor\n\t\t *\t@extends {Tone.StereoEffect}\n\t\t */\n\t    Tone.StereoFeedbackEffect = function () {\n\t        var options = Tone.defaults(arguments, ['feedback'], Tone.FeedbackEffect);\n\t        Tone.StereoEffect.call(this, options);\n\t        /**\n\t\t\t *  controls the amount of feedback\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.feedback = new Tone.Signal(options.feedback, Tone.Type.NormalRange);\n\t        /**\n\t\t\t *  the left side feeback\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._feedbackL = new Tone.Gain();\n\t        /**\n\t\t\t *  the right side feeback\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._feedbackR = new Tone.Gain();\n\t        //connect it up\n\t        this.effectReturnL.chain(this._feedbackL, this.effectSendL);\n\t        this.effectReturnR.chain(this._feedbackR, this.effectSendR);\n\t        this.feedback.fan(this._feedbackL.gain, this._feedbackR.gain);\n\t        this._readOnly(['feedback']);\n\t    };\n\t    Tone.extend(Tone.StereoFeedbackEffect, Tone.StereoEffect);\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.StereoFeedbackEffect} this\n\t\t */\n\t    Tone.StereoFeedbackEffect.prototype.dispose = function () {\n\t        Tone.StereoEffect.prototype.dispose.call(this);\n\t        this._writable(['feedback']);\n\t        this.feedback.dispose();\n\t        this.feedback = null;\n\t        this._feedbackL.dispose();\n\t        this._feedbackL = null;\n\t        this._feedbackR.dispose();\n\t        this._feedbackR = null;\n\t        return this;\n\t    };\n\t    return Tone.StereoFeedbackEffect;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Applies a width factor to the mid/side seperation. \n\t\t *         0 is all mid and 1 is all side.\n\t\t *         Algorithm found in [kvraudio forums](http://www.kvraudio.com/forum/viewtopic.php?t=212587).\n\t\t *         <br><br>\n\t\t *         <code>\n\t\t *         Mid *= 2*(1-width)<br>\n\t\t *         Side *= 2*width\n\t\t *         </code>\n\t\t *\n\t\t *  @extends {Tone.MidSideEffect}\n\t\t *  @constructor\n\t\t *  @param {NormalRange|Object} [width] The stereo width. A width of 0 is mono and 1 is stereo. 0.5 is no change.\n\t\t */\n\t    Tone.StereoWidener = function () {\n\t        var options = Tone.defaults(arguments, ['width'], Tone.StereoWidener);\n\t        Tone.MidSideEffect.call(this, options);\n\t        /**\n\t\t\t *  The width control. 0 = 100% mid. 1 = 100% side. 0.5 = no change. \n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.width = new Tone.Signal(options.width, Tone.Type.NormalRange);\n\t        /**\n\t\t\t *  Mid multiplier\n\t\t\t *  @type {Tone.Expr}\n\t\t\t *  @private\n\t\t\t */\n\t        this._midMult = new Tone.Expr('$0 * ($1 * (1 - $2))');\n\t        /**\n\t\t\t *  Side multiplier\n\t\t\t *  @type {Tone.Expr}\n\t\t\t *  @private\n\t\t\t */\n\t        this._sideMult = new Tone.Expr('$0 * ($1 * $2)');\n\t        /**\n\t\t\t *  constant output of 2\n\t\t\t *  @type {Tone}\n\t\t\t *  @private\n\t\t\t */\n\t        this._two = new Tone.Signal(2);\n\t        //the mid chain\n\t        this._two.connect(this._midMult, 0, 1);\n\t        this.width.connect(this._midMult, 0, 2);\n\t        //the side chain\n\t        this._two.connect(this._sideMult, 0, 1);\n\t        this.width.connect(this._sideMult, 0, 2);\n\t        //connect it to the effect send/return\n\t        this.midSend.chain(this._midMult, this.midReturn);\n\t        this.sideSend.chain(this._sideMult, this.sideReturn);\n\t        this._readOnly(['width']);\n\t    };\n\t    Tone.extend(Tone.StereoWidener, Tone.MidSideEffect);\n\t    /**\n\t\t *  the default values\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.StereoWidener.defaults = { 'width': 0.5 };\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.StereoWidener} this\n\t\t */\n\t    Tone.StereoWidener.prototype.dispose = function () {\n\t        Tone.MidSideEffect.prototype.dispose.call(this);\n\t        this._writable(['width']);\n\t        this.width.dispose();\n\t        this.width = null;\n\t        this._midMult.dispose();\n\t        this._midMult = null;\n\t        this._sideMult.dispose();\n\t        this._sideMult = null;\n\t        this._two.dispose();\n\t        this._two = null;\n\t        return this;\n\t    };\n\t    return Tone.StereoWidener;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Tremolo modulates the amplitude of an incoming signal using a Tone.LFO.\n\t\t *         The type, frequency, and depth of the LFO is controllable.\n\t\t *\n\t\t *  @extends {Tone.StereoEffect}\n\t\t *  @constructor\n\t\t *  @param {Frequency} [frequency] The rate of the effect.\n\t\t *  @param {NormalRange} [depth] The depth of the effect.\n\t\t *  @example\n\t\t * //create a tremolo and start it's LFO\n\t\t * var tremolo = new Tone.Tremolo(9, 0.75).toMaster().start();\n\t\t * //route an oscillator through the tremolo and start it\n\t\t * var oscillator = new Tone.Oscillator().connect(tremolo).start();\n\t\t */\n\t    Tone.Tremolo = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'frequency',\n\t            'depth'\n\t        ], Tone.Tremolo);\n\t        Tone.StereoEffect.call(this, options);\n\t        /**\n\t\t\t *  The tremelo LFO in the left channel\n\t\t\t *  @type  {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfoL = new Tone.LFO({\n\t            'phase': options.spread,\n\t            'min': 1,\n\t            'max': 0\n\t        });\n\t        /**\n\t\t\t *  The tremelo LFO in the left channel\n\t\t\t *  @type  {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfoR = new Tone.LFO({\n\t            'phase': options.spread,\n\t            'min': 1,\n\t            'max': 0\n\t        });\n\t        /**\n\t\t\t *  Where the gain is multiplied\n\t\t\t *  @type  {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._amplitudeL = new Tone.Gain();\n\t        /**\n\t\t\t *  Where the gain is multiplied\n\t\t\t *  @type  {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._amplitudeR = new Tone.Gain();\n\t        /**\n\t\t\t *  The frequency of the tremolo.\n\t\t\t *  @type  {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The depth of the effect. A depth of 0, has no effect\n\t\t\t *  on the amplitude, and a depth of 1 makes the amplitude\n\t\t\t *  modulate fully between 0 and 1.\n\t\t\t *  @type  {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.depth = new Tone.Signal(options.depth, Tone.Type.NormalRange);\n\t        this._readOnly([\n\t            'frequency',\n\t            'depth'\n\t        ]);\n\t        this.effectSendL.chain(this._amplitudeL, this.effectReturnL);\n\t        this.effectSendR.chain(this._amplitudeR, this.effectReturnR);\n\t        this._lfoL.connect(this._amplitudeL.gain);\n\t        this._lfoR.connect(this._amplitudeR.gain);\n\t        this.frequency.fan(this._lfoL.frequency, this._lfoR.frequency);\n\t        this.depth.fan(this._lfoR.amplitude, this._lfoL.amplitude);\n\t        this.type = options.type;\n\t        this.spread = options.spread;\n\t    };\n\t    Tone.extend(Tone.Tremolo, Tone.StereoEffect);\n\t    /**\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Tremolo.defaults = {\n\t        'frequency': 10,\n\t        'type': 'sine',\n\t        'depth': 0.5,\n\t        'spread': 180\n\t    };\n\t    /**\n\t\t * Start the tremolo.\n\t\t * @param {Time} [time=now] When the tremolo begins.\n\t\t * @returns {Tone.Tremolo} this\n\t\t */\n\t    Tone.Tremolo.prototype.start = function (time) {\n\t        this._lfoL.start(time);\n\t        this._lfoR.start(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Stop the tremolo.\n\t\t * @param {Time} [time=now] When the tremolo stops.\n\t\t * @returns {Tone.Tremolo} this\n\t\t */\n\t    Tone.Tremolo.prototype.stop = function (time) {\n\t        this._lfoL.stop(time);\n\t        this._lfoR.stop(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Sync the effect to the transport.\n\t\t * @param {Time} [delay=0] Delay time before starting the effect after the\n\t\t *                              Transport has started.\n\t\t * @returns {Tone.AutoFilter} this\n\t\t */\n\t    Tone.Tremolo.prototype.sync = function (delay) {\n\t        this._lfoL.sync(delay);\n\t        this._lfoR.sync(delay);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Unsync the filter from the transport\n\t\t * @returns {Tone.Tremolo} this\n\t\t */\n\t    Tone.Tremolo.prototype.unsync = function () {\n\t        this._lfoL.unsync();\n\t        this._lfoR.unsync();\n\t        return this;\n\t    };\n\t    /**\n\t\t * The Tremolo's oscillator type.\n\t\t * @memberOf Tone.Tremolo#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.Tremolo.prototype, 'type', {\n\t        get: function () {\n\t            return this._lfoL.type;\n\t        },\n\t        set: function (type) {\n\t            this._lfoL.type = type;\n\t            this._lfoR.type = type;\n\t        }\n\t    });\n\t    /** \n\t\t * Amount of stereo spread. When set to 0, both LFO's will be panned centrally.\n\t\t * When set to 180, LFO's will be panned hard left and right respectively.\n\t\t * @memberOf Tone.Tremolo#\n\t\t * @type {Degrees}\n\t\t * @name spread\n\t\t */\n\t    Object.defineProperty(Tone.Tremolo.prototype, 'spread', {\n\t        get: function () {\n\t            return this._lfoR.phase - this._lfoL.phase;    //180\n\t        },\n\t        set: function (spread) {\n\t            this._lfoL.phase = 90 - spread / 2;\n\t            this._lfoR.phase = spread / 2 + 90;\n\t        }\n\t    });\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.Tremolo} this\n\t\t */\n\t    Tone.Tremolo.prototype.dispose = function () {\n\t        Tone.StereoEffect.prototype.dispose.call(this);\n\t        this._writable([\n\t            'frequency',\n\t            'depth'\n\t        ]);\n\t        this._lfoL.dispose();\n\t        this._lfoL = null;\n\t        this._lfoR.dispose();\n\t        this._lfoR = null;\n\t        this._amplitudeL.dispose();\n\t        this._amplitudeL = null;\n\t        this._amplitudeR.dispose();\n\t        this._amplitudeR = null;\n\t        this.frequency = null;\n\t        this.depth = null;\n\t        return this;\n\t    };\n\t    return Tone.Tremolo;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class A Vibrato effect composed of a Tone.Delay and a Tone.LFO. The LFO\n\t\t *         modulates the delayTime of the delay, causing the pitch to rise\n\t\t *         and fall. \n\t\t *  @extends {Tone.Effect}\n\t\t *  @param {Frequency} frequency The frequency of the vibrato.\n\t\t *  @param {NormalRange} depth The amount the pitch is modulated.\n\t\t */\n\t    Tone.Vibrato = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'frequency',\n\t            'depth'\n\t        ], Tone.Vibrato);\n\t        Tone.Effect.call(this, options);\n\t        /**\n\t\t\t *  The delay node used for the vibrato effect\n\t\t\t *  @type {Tone.Delay}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delayNode = new Tone.Delay(0, options.maxDelay);\n\t        /**\n\t\t\t *  The LFO used to control the vibrato\n\t\t\t *  @type {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfo = new Tone.LFO({\n\t            'type': options.type,\n\t            'min': 0,\n\t            'max': options.maxDelay,\n\t            'frequency': options.frequency,\n\t            'phase': -90    //offse the phase so the resting position is in the center\n\t        }).start().connect(this._delayNode.delayTime);\n\t        /**\n\t\t\t *  The frequency of the vibrato\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = this._lfo.frequency;\n\t        /**\n\t\t\t *  The depth of the vibrato. \n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.depth = this._lfo.amplitude;\n\t        this.depth.value = options.depth;\n\t        this._readOnly([\n\t            'frequency',\n\t            'depth'\n\t        ]);\n\t        this.effectSend.chain(this._delayNode, this.effectReturn);\n\t    };\n\t    Tone.extend(Tone.Vibrato, Tone.Effect);\n\t    /**\n\t\t *  The defaults\n\t\t *  @type  {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.Vibrato.defaults = {\n\t        'maxDelay': 0.005,\n\t        'frequency': 5,\n\t        'depth': 0.1,\n\t        'type': 'sine'\n\t    };\n\t    /**\n\t\t * Type of oscillator attached to the Vibrato.\n\t\t * @memberOf Tone.Vibrato#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.Vibrato.prototype, 'type', {\n\t        get: function () {\n\t            return this._lfo.type;\n\t        },\n\t        set: function (type) {\n\t            this._lfo.type = type;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Vibrato} this\n\t\t */\n\t    Tone.Vibrato.prototype.dispose = function () {\n\t        Tone.Effect.prototype.dispose.call(this);\n\t        this._delayNode.dispose();\n\t        this._delayNode = null;\n\t        this._lfo.dispose();\n\t        this._lfo = null;\n\t        this._writable([\n\t            'frequency',\n\t            'depth'\n\t        ]);\n\t        this.frequency = null;\n\t        this.depth = null;\n\t    };\n\t    return Tone.Vibrato;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Event abstracts away Tone.Transport.schedule and provides a schedulable\n\t\t *          callback for a single or repeatable events along the timeline. \n\t\t *\n\t\t *  @extends {Tone}\n\t\t *  @param {function} callback The callback to invoke at the time. \n\t\t *  @param {*} value The value or values which should be passed to\n\t\t *                      the callback function on invocation.  \n\t\t *  @example\n\t\t * var chord = new Tone.Event(function(time, chord){\n\t\t * \t//the chord as well as the exact time of the event\n\t\t * \t//are passed in as arguments to the callback function\n\t\t * }, [\"D4\", \"E4\", \"F4\"]);\n\t\t * //start the chord at the beginning of the transport timeline\n\t\t * chord.start();\n\t\t * //loop it every measure for 8 measures\n\t\t * chord.loop = 8;\n\t\t * chord.loopEnd = \"1m\";\n\t\t */\n\t    Tone.Event = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'callback',\n\t            'value'\n\t        ], Tone.Event);\n\t        Tone.call(this);\n\t        /**\n\t\t\t *  Loop value\n\t\t\t *  @type  {Boolean|Positive}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loop = options.loop;\n\t        /**\n\t\t\t *  The callback to invoke. \n\t\t\t *  @type  {Function}\n\t\t\t */\n\t        this.callback = options.callback;\n\t        /**\n\t\t\t *  The value which is passed to the\n\t\t\t *  callback function.\n\t\t\t *  @type  {*}\n\t\t\t *  @private\n\t\t\t */\n\t        this.value = options.value;\n\t        /**\n\t\t\t *  When the note is scheduled to start.\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loopStart = this.toTicks(options.loopStart);\n\t        /**\n\t\t\t *  When the note is scheduled to start.\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loopEnd = this.toTicks(options.loopEnd);\n\t        /**\n\t\t\t *  Tracks the scheduled events\n\t\t\t *  @type {Tone.TimelineState}\n\t\t\t *  @private\n\t\t\t */\n\t        this._state = new Tone.TimelineState(Tone.State.Stopped);\n\t        /**\n\t\t\t *  The playback speed of the note. A speed of 1\n\t\t\t *  is no change. \n\t\t\t *  @private\n\t\t\t *  @type {Positive}\n\t\t\t */\n\t        this._playbackRate = 1;\n\t        /**\n\t\t\t *  A delay time from when the event is scheduled to start\n\t\t\t *  @type {Ticks}\n\t\t\t *  @private\n\t\t\t */\n\t        this._startOffset = 0;\n\t        /**\n\t\t\t *  private holder of probability value\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @private\n\t\t\t */\n\t        this._probability = options.probability;\n\t        /**\n\t\t\t *  the amount of variation from the\n\t\t\t *  given time. \n\t\t\t *  @type {Boolean|Time}\n\t\t\t *  @private\n\t\t\t */\n\t        this._humanize = options.humanize;\n\t        /**\n\t\t\t *  If mute is true, the callback won't be\n\t\t\t *  invoked.\n\t\t\t *  @type {Boolean}\n\t\t\t */\n\t        this.mute = options.mute;\n\t        //set the initial values\n\t        this.playbackRate = options.playbackRate;\n\t    };\n\t    Tone.extend(Tone.Event);\n\t    /**\n\t\t *  The default values\n\t\t *  @type  {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.Event.defaults = {\n\t        'callback': Tone.noOp,\n\t        'loop': false,\n\t        'loopEnd': '1m',\n\t        'loopStart': 0,\n\t        'playbackRate': 1,\n\t        'value': null,\n\t        'probability': 1,\n\t        'mute': false,\n\t        'humanize': false\n\t    };\n\t    /**\n\t\t *  Reschedule all of the events along the timeline\n\t\t *  with the updated values.\n\t\t *  @param {Time} after Only reschedules events after the given time.\n\t\t *  @return  {Tone.Event}  this\n\t\t *  @private\n\t\t */\n\t    Tone.Event.prototype._rescheduleEvents = function (after) {\n\t        //if no argument is given, schedules all of the events\n\t        after = Tone.defaultArg(after, -1);\n\t        this._state.forEachFrom(after, function (event) {\n\t            var duration;\n\t            if (event.state === Tone.State.Started) {\n\t                if (!Tone.isUndef(event.id)) {\n\t                    Tone.Transport.clear(event.id);\n\t                }\n\t                var startTick = event.time + Math.round(this.startOffset / this._playbackRate);\n\t                if (this._loop) {\n\t                    duration = Infinity;\n\t                    if (Tone.isNumber(this._loop)) {\n\t                        duration = this._loop * this._getLoopDuration();\n\t                    }\n\t                    var nextEvent = this._state.getAfter(startTick);\n\t                    if (nextEvent !== null) {\n\t                        duration = Math.min(duration, nextEvent.time - startTick);\n\t                    }\n\t                    if (duration !== Infinity) {\n\t                        //schedule a stop since it's finite duration\n\t                        this._state.setStateAtTime(Tone.State.Stopped, startTick + duration + 1);\n\t                        duration = Tone.Time(duration, 'i');\n\t                    }\n\t                    var interval = Tone.Time(this._getLoopDuration(), 'i');\n\t                    event.id = Tone.Transport.scheduleRepeat(this._tick.bind(this), interval, Tone.TransportTime(startTick, 'i'), duration);\n\t                } else {\n\t                    event.id = Tone.Transport.schedule(this._tick.bind(this), startTick + 'i');\n\t                }\n\t            }\n\t        }.bind(this));\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Returns the playback state of the note, either \"started\" or \"stopped\".\n\t\t *  @type {String}\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.Event#\n\t\t *  @name state\n\t\t */\n\t    Object.defineProperty(Tone.Event.prototype, 'state', {\n\t        get: function () {\n\t            return this._state.getValueAtTime(Tone.Transport.ticks);\n\t        }\n\t    });\n\t    /**\n\t\t *  The start from the scheduled start time\n\t\t *  @type {Ticks}\n\t\t *  @memberOf Tone.Event#\n\t\t *  @name startOffset\n\t\t *  @private\n\t\t */\n\t    Object.defineProperty(Tone.Event.prototype, 'startOffset', {\n\t        get: function () {\n\t            return this._startOffset;\n\t        },\n\t        set: function (offset) {\n\t            this._startOffset = offset;\n\t        }\n\t    });\n\t    /**\n\t\t *  The probability of the notes being triggered.\n\t\t *  @memberOf Tone.Event#\n\t\t *  @type {NormalRange}\n\t\t *  @name probability\n\t\t */\n\t    Object.defineProperty(Tone.Event.prototype, 'probability', {\n\t        get: function () {\n\t            return this._probability;\n\t        },\n\t        set: function (prob) {\n\t            this._probability = prob;\n\t        }\n\t    });\n\t    /**\n\t\t *  If set to true, will apply small random variation\n\t\t *  to the callback time. If the value is given as a time, it will randomize\n\t\t *  by that amount.\n\t\t *  @example\n\t\t * event.humanize = true;\n\t\t *  @type {Boolean|Time}\n\t\t *  @name humanize\n\t\t */\n\t    Object.defineProperty(Tone.Event.prototype, 'humanize', {\n\t        get: function () {\n\t            return this._humanize;\n\t        },\n\t        set: function (variation) {\n\t            this._humanize = variation;\n\t        }\n\t    });\n\t    /**\n\t\t *  Start the note at the given time. \n\t\t *  @param  {TimelinePosition}  time  When the note should start.\n\t\t *  @return  {Tone.Event}  this\n\t\t */\n\t    Tone.Event.prototype.start = function (time) {\n\t        time = this.toTicks(time);\n\t        if (this._state.getValueAtTime(time) === Tone.State.Stopped) {\n\t            this._state.add({\n\t                'state': Tone.State.Started,\n\t                'time': time,\n\t                'id': undefined\n\t            });\n\t            this._rescheduleEvents(time);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Stop the Event at the given time.\n\t\t *  @param  {TimelinePosition}  time  When the note should stop.\n\t\t *  @return  {Tone.Event}  this\n\t\t */\n\t    Tone.Event.prototype.stop = function (time) {\n\t        this.cancel(time);\n\t        time = this.toTicks(time);\n\t        if (this._state.getValueAtTime(time) === Tone.State.Started) {\n\t            this._state.setStateAtTime(Tone.State.Stopped, time);\n\t            var previousEvent = this._state.getBefore(time);\n\t            var reschedulTime = time;\n\t            if (previousEvent !== null) {\n\t                reschedulTime = previousEvent.time;\n\t            }\n\t            this._rescheduleEvents(reschedulTime);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Cancel all scheduled events greater than or equal to the given time\n\t\t *  @param  {TimelinePosition}  [time=0]  The time after which events will be cancel.\n\t\t *  @return  {Tone.Event}  this\n\t\t */\n\t    Tone.Event.prototype.cancel = function (time) {\n\t        time = Tone.defaultArg(time, -Infinity);\n\t        time = this.toTicks(time);\n\t        this._state.forEachFrom(time, function (event) {\n\t            Tone.Transport.clear(event.id);\n\t        });\n\t        this._state.cancel(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  The callback function invoker. Also \n\t\t *  checks if the Event is done playing\n\t\t *  @param  {Number}  time  The time of the event in seconds\n\t\t *  @private\n\t\t */\n\t    Tone.Event.prototype._tick = function (time) {\n\t        if (!this.mute && this._state.getValueAtTime(Tone.Transport.ticks) === Tone.State.Started) {\n\t            if (this.probability < 1 && Math.random() > this.probability) {\n\t                return;\n\t            }\n\t            if (this.humanize) {\n\t                var variation = 0.02;\n\t                if (!Tone.isBoolean(this.humanize)) {\n\t                    variation = this.toSeconds(this.humanize);\n\t                }\n\t                time += (Math.random() * 2 - 1) * variation;\n\t            }\n\t            this.callback(time, this.value);\n\t        }\n\t    };\n\t    /**\n\t\t *  Get the duration of the loop.\n\t\t *  @return  {Ticks}\n\t\t *  @private\n\t\t */\n\t    Tone.Event.prototype._getLoopDuration = function () {\n\t        return Math.round((this._loopEnd - this._loopStart) / this._playbackRate);\n\t    };\n\t    /**\n\t\t *  If the note should loop or not\n\t\t *  between Tone.Event.loopStart and \n\t\t *  Tone.Event.loopEnd. An integer\n\t\t *  value corresponds to the number of\n\t\t *  loops the Event does after it starts.\n\t\t *  @memberOf Tone.Event#\n\t\t *  @type {Boolean|Positive}\n\t\t *  @name loop\n\t\t */\n\t    Object.defineProperty(Tone.Event.prototype, 'loop', {\n\t        get: function () {\n\t            return this._loop;\n\t        },\n\t        set: function (loop) {\n\t            this._loop = loop;\n\t            this._rescheduleEvents();\n\t        }\n\t    });\n\t    /**\n\t\t * \tThe playback rate of the note. Defaults to 1.\n\t\t *  @memberOf Tone.Event#\n\t\t *  @type {Positive}\n\t\t *  @name playbackRate\n\t\t *  @example\n\t\t * note.loop = true;\n\t\t * //repeat the note twice as fast\n\t\t * note.playbackRate = 2;\n\t\t */\n\t    Object.defineProperty(Tone.Event.prototype, 'playbackRate', {\n\t        get: function () {\n\t            return this._playbackRate;\n\t        },\n\t        set: function (rate) {\n\t            this._playbackRate = rate;\n\t            this._rescheduleEvents();\n\t        }\n\t    });\n\t    /**\n\t\t *  The loopEnd point is the time the event will loop\n\t\t *  if Tone.Event.loop is true.\n\t\t *  @memberOf Tone.Event#\n\t\t *  @type {TransportTime}\n\t\t *  @name loopEnd\n\t\t */\n\t    Object.defineProperty(Tone.Event.prototype, 'loopEnd', {\n\t        get: function () {\n\t            return Tone.TransportTime(this._loopEnd, 'i').toNotation();\n\t        },\n\t        set: function (loopEnd) {\n\t            this._loopEnd = this.toTicks(loopEnd);\n\t            if (this._loop) {\n\t                this._rescheduleEvents();\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  The time when the loop should start. \n\t\t *  @memberOf Tone.Event#\n\t\t *  @type {TransportTime}\n\t\t *  @name loopStart\n\t\t */\n\t    Object.defineProperty(Tone.Event.prototype, 'loopStart', {\n\t        get: function () {\n\t            return Tone.TransportTime(this._loopStart, 'i').toNotation();\n\t        },\n\t        set: function (loopStart) {\n\t            this._loopStart = this.toTicks(loopStart);\n\t            if (this._loop) {\n\t                this._rescheduleEvents();\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  The current progress of the loop interval.\n\t\t *  Returns 0 if the event is not started yet or\n\t\t *  it is not set to loop.\n\t\t *  @memberOf Tone.Event#\n\t\t *  @type {NormalRange}\n\t\t *  @name progress\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Event.prototype, 'progress', {\n\t        get: function () {\n\t            if (this._loop) {\n\t                var ticks = Tone.Transport.ticks;\n\t                var lastEvent = this._state.get(ticks);\n\t                if (lastEvent !== null && lastEvent.state === Tone.State.Started) {\n\t                    var loopDuration = this._getLoopDuration();\n\t                    var progress = (ticks - lastEvent.time) % loopDuration;\n\t                    return progress / loopDuration;\n\t                } else {\n\t                    return 0;\n\t                }\n\t            } else {\n\t                return 0;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up\n\t\t *  @return  {Tone.Event}  this\n\t\t */\n\t    Tone.Event.prototype.dispose = function () {\n\t        this.cancel();\n\t        this._state.dispose();\n\t        this._state = null;\n\t        this.callback = null;\n\t        this.value = null;\n\t    };\n\t    return Tone.Event;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class Tone.Loop creates a looped callback at the \n\t\t *         specified interval. The callback can be \n\t\t *         started, stopped and scheduled along\n\t\t *         the Transport's timeline. \n\t\t *  @example\n\t\t * var loop = new Tone.Loop(function(time){\n\t\t * \t//triggered every eighth note. \n\t\t * \tconsole.log(time);\n\t\t * }, \"8n\").start(0);\n\t\t * Tone.Transport.start();\n\t\t *  @extends {Tone}\n\t\t *  @param {Function} callback The callback to invoke with the event.\n\t\t *  @param {Time} interval The time between successive callback calls. \n\t\t */\n\t    Tone.Loop = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'callback',\n\t            'interval'\n\t        ], Tone.Loop);\n\t        Tone.call(this);\n\t        /**\n\t\t\t *  The event which produces the callbacks\n\t\t\t */\n\t        this._event = new Tone.Event({\n\t            'callback': this._tick.bind(this),\n\t            'loop': true,\n\t            'loopEnd': options.interval,\n\t            'playbackRate': options.playbackRate,\n\t            'probability': options.probability\n\t        });\n\t        /**\n\t\t\t *  The callback to invoke with the next event in the pattern\n\t\t\t *  @type {Function}\n\t\t\t */\n\t        this.callback = options.callback;\n\t        //set the iterations\n\t        this.iterations = options.iterations;\n\t    };\n\t    Tone.extend(Tone.Loop);\n\t    /**\n\t\t *  The defaults\n\t\t *  @const\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.Loop.defaults = {\n\t        'interval': '4n',\n\t        'callback': Tone.noOp,\n\t        'playbackRate': 1,\n\t        'iterations': Infinity,\n\t        'probability': true,\n\t        'mute': false\n\t    };\n\t    /**\n\t\t *  Start the loop at the specified time along the Transport's\n\t\t *  timeline.\n\t\t *  @param  {TimelinePosition=}  time  When to start the Loop.\n\t\t *  @return  {Tone.Loop}  this\n\t\t */\n\t    Tone.Loop.prototype.start = function (time) {\n\t        this._event.start(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Stop the loop at the given time.\n\t\t *  @param  {TimelinePosition=}  time  When to stop the Arpeggio\n\t\t *  @return  {Tone.Loop}  this\n\t\t */\n\t    Tone.Loop.prototype.stop = function (time) {\n\t        this._event.stop(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Cancel all scheduled events greater than or equal to the given time\n\t\t *  @param  {TimelinePosition}  [time=0]  The time after which events will be cancel.\n\t\t *  @return  {Tone.Loop}  this\n\t\t */\n\t    Tone.Loop.prototype.cancel = function (time) {\n\t        this._event.cancel(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Internal function called when the notes should be called\n\t\t *  @param  {Number}  time  The time the event occurs\n\t\t *  @private\n\t\t */\n\t    Tone.Loop.prototype._tick = function (time) {\n\t        this.callback(time);\n\t    };\n\t    /**\n\t\t *  The state of the Loop, either started or stopped.\n\t\t *  @memberOf Tone.Loop#\n\t\t *  @type {String}\n\t\t *  @name state\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Loop.prototype, 'state', {\n\t        get: function () {\n\t            return this._event.state;\n\t        }\n\t    });\n\t    /**\n\t\t *  The progress of the loop as a value between 0-1. 0, when\n\t\t *  the loop is stopped or done iterating. \n\t\t *  @memberOf Tone.Loop#\n\t\t *  @type {NormalRange}\n\t\t *  @name progress\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Loop.prototype, 'progress', {\n\t        get: function () {\n\t            return this._event.progress;\n\t        }\n\t    });\n\t    /**\n\t\t *  The time between successive callbacks. \n\t\t *  @example\n\t\t * loop.interval = \"8n\"; //loop every 8n\n\t\t *  @memberOf Tone.Loop#\n\t\t *  @type {Time}\n\t\t *  @name interval\n\t\t */\n\t    Object.defineProperty(Tone.Loop.prototype, 'interval', {\n\t        get: function () {\n\t            return this._event.loopEnd;\n\t        },\n\t        set: function (interval) {\n\t            this._event.loopEnd = interval;\n\t        }\n\t    });\n\t    /**\n\t\t *  The playback rate of the loop. The normal playback rate is 1 (no change). \n\t\t *  A `playbackRate` of 2 would be twice as fast. \n\t\t *  @memberOf Tone.Loop#\n\t\t *  @type {Time}\n\t\t *  @name playbackRate\n\t\t */\n\t    Object.defineProperty(Tone.Loop.prototype, 'playbackRate', {\n\t        get: function () {\n\t            return this._event.playbackRate;\n\t        },\n\t        set: function (rate) {\n\t            this._event.playbackRate = rate;\n\t        }\n\t    });\n\t    /**\n\t\t *  Random variation +/-0.01s to the scheduled time. \n\t\t *  Or give it a time value which it will randomize by.\n\t\t *  @type {Boolean|Time}\n\t\t *  @memberOf Tone.Loop#\n\t\t *  @name humanize\n\t\t */\n\t    Object.defineProperty(Tone.Loop.prototype, 'humanize', {\n\t        get: function () {\n\t            return this._event.humanize;\n\t        },\n\t        set: function (variation) {\n\t            this._event.humanize = variation;\n\t        }\n\t    });\n\t    /**\n\t\t *  The probably of the callback being invoked.\n\t\t *  @memberOf Tone.Loop#\n\t\t *  @type {NormalRange}\n\t\t *  @name probability\n\t\t */\n\t    Object.defineProperty(Tone.Loop.prototype, 'probability', {\n\t        get: function () {\n\t            return this._event.probability;\n\t        },\n\t        set: function (prob) {\n\t            this._event.probability = prob;\n\t        }\n\t    });\n\t    /**\n\t\t *  Muting the Loop means that no callbacks are invoked.\n\t\t *  @memberOf Tone.Loop#\n\t\t *  @type {Boolean}\n\t\t *  @name mute\n\t\t */\n\t    Object.defineProperty(Tone.Loop.prototype, 'mute', {\n\t        get: function () {\n\t            return this._event.mute;\n\t        },\n\t        set: function (mute) {\n\t            this._event.mute = mute;\n\t        }\n\t    });\n\t    /**\n\t\t *  The number of iterations of the loop. The default\n\t\t *  value is Infinity (loop forever).\n\t\t *  @memberOf Tone.Loop#\n\t\t *  @type {Positive}\n\t\t *  @name iterations\n\t\t */\n\t    Object.defineProperty(Tone.Loop.prototype, 'iterations', {\n\t        get: function () {\n\t            if (this._event.loop === true) {\n\t                return Infinity;\n\t            } else {\n\t                return this._event.loop;\n\t            }\n\t        },\n\t        set: function (iters) {\n\t            if (iters === Infinity) {\n\t                this._event.loop = true;\n\t            } else {\n\t                this._event.loop = iters;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up\n\t\t *  @return  {Tone.Loop}  this\n\t\t */\n\t    Tone.Loop.prototype.dispose = function () {\n\t        this._event.dispose();\n\t        this._event = null;\n\t        this.callback = null;\n\t    };\n\t    return Tone.Loop;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Part is a collection Tone.Events which can be\n\t\t *         started/stopped and looped as a single unit.\n\t\t *\n\t\t *  @extends {Tone.Event}\n\t\t *  @param {Function} callback The callback to invoke on each event\n\t\t *  @param {Array} events the array of events\n\t\t *  @example\n\t\t * var part = new Tone.Part(function(time, note){\n\t\t * \t//the notes given as the second element in the array\n\t\t * \t//will be passed in as the second argument\n\t\t * \tsynth.triggerAttackRelease(note, \"8n\", time);\n\t\t * }, [[0, \"C2\"], [\"0:2\", \"C3\"], [\"0:3:2\", \"G2\"]]);\n\t\t *  @example\n\t\t * //use an array of objects as long as the object has a \"time\" attribute\n\t\t * var part = new Tone.Part(function(time, value){\n\t\t * \t//the value is an object which contains both the note and the velocity\n\t\t * \tsynth.triggerAttackRelease(value.note, \"8n\", time, value.velocity);\n\t\t * }, [{\"time\" : 0, \"note\" : \"C3\", \"velocity\": 0.9}, \n\t\t * \t   {\"time\" : \"0:2\", \"note\" : \"C4\", \"velocity\": 0.5}\n\t\t * ]).start(0);\n\t\t */\n\t    Tone.Part = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'callback',\n\t            'events'\n\t        ], Tone.Part);\n\t        Tone.Event.call(this, options);\n\t        /**\n\t\t\t *  An array of Objects. \n\t\t\t *  @type  {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._events = [];\n\t        //add the events\n\t        for (var i = 0; i < options.events.length; i++) {\n\t            if (Array.isArray(options.events[i])) {\n\t                this.add(options.events[i][0], options.events[i][1]);\n\t            } else {\n\t                this.add(options.events[i]);\n\t            }\n\t        }\n\t    };\n\t    Tone.extend(Tone.Part, Tone.Event);\n\t    /**\n\t\t *  The default values\n\t\t *  @type  {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.Part.defaults = {\n\t        'callback': Tone.noOp,\n\t        'loop': false,\n\t        'loopEnd': '1m',\n\t        'loopStart': 0,\n\t        'playbackRate': 1,\n\t        'probability': 1,\n\t        'humanize': false,\n\t        'mute': false,\n\t        'events': []\n\t    };\n\t    /**\n\t\t *  Start the part at the given time. \n\t\t *  @param  {TransportTime}  time    When to start the part.\n\t\t *  @param  {Time=}  offset  The offset from the start of the part\n\t\t *                           to begin playing at.\n\t\t *  @return  {Tone.Part}  this\n\t\t */\n\t    Tone.Part.prototype.start = function (time, offset) {\n\t        var ticks = this.toTicks(time);\n\t        if (this._state.getValueAtTime(ticks) !== Tone.State.Started) {\n\t            if (this._loop) {\n\t                offset = Tone.defaultArg(offset, this._loopStart);\n\t            } else {\n\t                offset = Tone.defaultArg(offset, 0);\n\t            }\n\t            offset = this.toTicks(offset);\n\t            this._state.add({\n\t                'state': Tone.State.Started,\n\t                'time': ticks,\n\t                'offset': offset\n\t            });\n\t            this._forEach(function (event) {\n\t                this._startNote(event, ticks, offset);\n\t            });\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Start the event in the given event at the correct time given\n\t\t *  the ticks and offset and looping.\n\t\t *  @param  {Tone.Event}  event \n\t\t *  @param  {Ticks}  ticks\n\t\t *  @param  {Ticks}  offset\n\t\t *  @private\n\t\t */\n\t    Tone.Part.prototype._startNote = function (event, ticks, offset) {\n\t        ticks -= offset;\n\t        if (this._loop) {\n\t            if (event.startOffset >= this._loopStart && event.startOffset < this._loopEnd) {\n\t                if (event.startOffset < offset) {\n\t                    //start it on the next loop\n\t                    ticks += this._getLoopDuration();\n\t                }\n\t                event.start(Tone.TransportTime(ticks, 'i'));\n\t            } else if (event.startOffset < this._loopStart && event.startOffset >= offset) {\n\t                event.loop = false;\n\t                event.start(Tone.TransportTime(ticks, 'i'));\n\t            }\n\t        } else {\n\t            if (event.startOffset >= offset) {\n\t                event.start(Tone.TransportTime(ticks, 'i'));\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  The start from the scheduled start time\n\t\t *  @type {Ticks}\n\t\t *  @memberOf Tone.Part#\n\t\t *  @name startOffset\n\t\t *  @private\n\t\t */\n\t    Object.defineProperty(Tone.Part.prototype, 'startOffset', {\n\t        get: function () {\n\t            return this._startOffset;\n\t        },\n\t        set: function (offset) {\n\t            this._startOffset = offset;\n\t            this._forEach(function (event) {\n\t                event.startOffset += this._startOffset;\n\t            });\n\t        }\n\t    });\n\t    /**\n\t\t *  Stop the part at the given time.\n\t\t *  @param  {TimelinePosition}  time  When to stop the part.\n\t\t *  @return  {Tone.Part}  this\n\t\t */\n\t    Tone.Part.prototype.stop = function (time) {\n\t        var ticks = this.toTicks(time);\n\t        this._state.cancel(ticks);\n\t        this._state.setStateAtTime(Tone.State.Stopped, ticks);\n\t        this._forEach(function (event) {\n\t            event.stop(time);\n\t        });\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Get/Set an Event's value at the given time. \n\t\t *  If a value is passed in and no event exists at\n\t\t *  the given time, one will be created with that value. \n\t\t *  If two events are at the same time, the first one will\n\t\t *  be returned.\n\t\t *  @example\n\t\t * part.at(\"1m\"); //returns the part at the first measure\n\t\t *\n\t\t * part.at(\"2m\", \"C2\"); //set the value at \"2m\" to C2. \n\t\t * //if an event didn't exist at that time, it will be created.\n\t\t *  @param {TransportTime} time The time of the event to get or set.\n\t\t *  @param {*=} value If a value is passed in, the value of the\n\t\t *                    event at the given time will be set to it.\n\t\t *  @return {Tone.Event} the event at the time\n\t\t */\n\t    Tone.Part.prototype.at = function (time, value) {\n\t        time = Tone.TransportTime(time);\n\t        var tickTime = Tone.Time(1, 'i').toSeconds();\n\t        for (var i = 0; i < this._events.length; i++) {\n\t            var event = this._events[i];\n\t            if (Math.abs(time.toTicks() - event.startOffset) < tickTime) {\n\t                if (!Tone.isUndef(value)) {\n\t                    event.value = value;\n\t                }\n\t                return event;\n\t            }\n\t        }\n\t        //if there was no event at that time, create one\n\t        if (!Tone.isUndef(value)) {\n\t            this.add(time, value);\n\t            //return the new event\n\t            return this._events[this._events.length - 1];\n\t        } else {\n\t            return null;\n\t        }\n\t    };\n\t    /**\n\t\t *  Add a an event to the part. \n\t\t *  @param {Time} time The time the note should start.\n\t\t *                            If an object is passed in, it should\n\t\t *                            have a 'time' attribute and the rest\n\t\t *                            of the object will be used as the 'value'.\n\t\t *  @param  {Tone.Event|*}  value \n\t\t *  @returns {Tone.Part} this\n\t\t *  @example\n\t\t * part.add(\"1m\", \"C#+11\");\n\t\t */\n\t    Tone.Part.prototype.add = function (time, value) {\n\t        //extract the parameters\n\t        if (time.hasOwnProperty('time')) {\n\t            value = time;\n\t            time = value.time;\n\t        }\n\t        time = this.toTicks(time);\n\t        var event;\n\t        if (value instanceof Tone.Event) {\n\t            event = value;\n\t            event.callback = this._tick.bind(this);\n\t        } else {\n\t            event = new Tone.Event({\n\t                'callback': this._tick.bind(this),\n\t                'value': value\n\t            });\n\t        }\n\t        //the start offset\n\t        event.startOffset = time;\n\t        //initialize the values\n\t        event.set({\n\t            'loopEnd': this.loopEnd,\n\t            'loopStart': this.loopStart,\n\t            'loop': this.loop,\n\t            'humanize': this.humanize,\n\t            'playbackRate': this.playbackRate,\n\t            'probability': this.probability\n\t        });\n\t        this._events.push(event);\n\t        //start the note if it should be played right now\n\t        this._restartEvent(event);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Restart the given event\n\t\t *  @param  {Tone.Event}  event \n\t\t *  @private\n\t\t */\n\t    Tone.Part.prototype._restartEvent = function (event) {\n\t        this._state.forEach(function (stateEvent) {\n\t            if (stateEvent.state === Tone.State.Started) {\n\t                this._startNote(event, stateEvent.time, stateEvent.offset);\n\t            } else {\n\t                //stop the note\n\t                event.stop(Tone.TransportTime(stateEvent.time, 'i'));\n\t            }\n\t        }.bind(this));\n\t    };\n\t    /**\n\t\t *  Remove an event from the part. Will recursively iterate\n\t\t *  into nested parts to find the event.\n\t\t *  @param {Time} time The time of the event\n\t\t *  @param {*} value Optionally select only a specific event value\n\t\t *  @return  {Tone.Part}  this\n\t\t */\n\t    Tone.Part.prototype.remove = function (time, value) {\n\t        //extract the parameters\n\t        if (time.hasOwnProperty('time')) {\n\t            value = time;\n\t            time = value.time;\n\t        }\n\t        time = this.toTicks(time);\n\t        for (var i = this._events.length - 1; i >= 0; i--) {\n\t            var event = this._events[i];\n\t            if (event instanceof Tone.Part) {\n\t                event.remove(time, value);\n\t            } else {\n\t                if (event.startOffset === time) {\n\t                    if (Tone.isUndef(value) || !Tone.isUndef(value) && event.value === value) {\n\t                        this._events.splice(i, 1);\n\t                        event.dispose();\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Remove all of the notes from the group. \n\t\t *  @return  {Tone.Part}  this\n\t\t */\n\t    Tone.Part.prototype.removeAll = function () {\n\t        this._forEach(function (event) {\n\t            event.dispose();\n\t        });\n\t        this._events = [];\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Cancel scheduled state change events: i.e. \"start\" and \"stop\".\n\t\t *  @param {TimelinePosition} after The time after which to cancel the scheduled events.\n\t\t *  @return  {Tone.Part}  this\n\t\t */\n\t    Tone.Part.prototype.cancel = function (after) {\n\t        this._forEach(function (event) {\n\t            event.cancel(after);\n\t        });\n\t        this._state.cancel(this.toTicks(after));\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Iterate over all of the events\n\t\t *  @param {Function} callback\n\t\t *  @param {Object} ctx The context\n\t\t *  @private\n\t\t */\n\t    Tone.Part.prototype._forEach = function (callback, ctx) {\n\t        if (this._events) {\n\t            ctx = Tone.defaultArg(ctx, this);\n\t            for (var i = this._events.length - 1; i >= 0; i--) {\n\t                var e = this._events[i];\n\t                if (e instanceof Tone.Part) {\n\t                    e._forEach(callback, ctx);\n\t                } else {\n\t                    callback.call(ctx, e);\n\t                }\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Set the attribute of all of the events\n\t\t *  @param  {String}  attr  the attribute to set\n\t\t *  @param  {*}  value      The value to set it to\n\t\t *  @private\n\t\t */\n\t    Tone.Part.prototype._setAll = function (attr, value) {\n\t        this._forEach(function (event) {\n\t            event[attr] = value;\n\t        });\n\t    };\n\t    /**\n\t\t *  Internal tick method\n\t\t *  @param  {Number}  time  The time of the event in seconds\n\t\t *  @private\n\t\t */\n\t    Tone.Part.prototype._tick = function (time, value) {\n\t        if (!this.mute) {\n\t            this.callback(time, value);\n\t        }\n\t    };\n\t    /**\n\t\t *  Determine if the event should be currently looping\n\t\t *  given the loop boundries of this Part.\n\t\t *  @param  {Tone.Event}  event  The event to test\n\t\t *  @private\n\t\t */\n\t    Tone.Part.prototype._testLoopBoundries = function (event) {\n\t        if (event.startOffset < this._loopStart || event.startOffset >= this._loopEnd) {\n\t            event.cancel(0);\n\t        } else {\n\t            //reschedule it if it's stopped\n\t            if (event.state === Tone.State.Stopped) {\n\t                this._restartEvent(event);\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  The probability of the notes being triggered.\n\t\t *  @memberOf Tone.Part#\n\t\t *  @type {NormalRange}\n\t\t *  @name probability\n\t\t */\n\t    Object.defineProperty(Tone.Part.prototype, 'probability', {\n\t        get: function () {\n\t            return this._probability;\n\t        },\n\t        set: function (prob) {\n\t            this._probability = prob;\n\t            this._setAll('probability', prob);\n\t        }\n\t    });\n\t    /**\n\t\t *  If set to true, will apply small random variation\n\t\t *  to the callback time. If the value is given as a time, it will randomize\n\t\t *  by that amount.\n\t\t *  @example\n\t\t * event.humanize = true;\n\t\t *  @type {Boolean|Time}\n\t\t *  @name humanize\n\t\t */\n\t    Object.defineProperty(Tone.Part.prototype, 'humanize', {\n\t        get: function () {\n\t            return this._humanize;\n\t        },\n\t        set: function (variation) {\n\t            this._humanize = variation;\n\t            this._setAll('humanize', variation);\n\t        }\n\t    });\n\t    /**\n\t\t *  If the part should loop or not\n\t\t *  between Tone.Part.loopStart and \n\t\t *  Tone.Part.loopEnd. An integer\n\t\t *  value corresponds to the number of\n\t\t *  loops the Part does after it starts.\n\t\t *  @memberOf Tone.Part#\n\t\t *  @type {Boolean|Positive}\n\t\t *  @name loop\n\t\t *  @example\n\t\t * //loop the part 8 times\n\t\t * part.loop = 8;\n\t\t */\n\t    Object.defineProperty(Tone.Part.prototype, 'loop', {\n\t        get: function () {\n\t            return this._loop;\n\t        },\n\t        set: function (loop) {\n\t            this._loop = loop;\n\t            this._forEach(function (event) {\n\t                event._loopStart = this._loopStart;\n\t                event._loopEnd = this._loopEnd;\n\t                event.loop = loop;\n\t                this._testLoopBoundries(event);\n\t            });\n\t        }\n\t    });\n\t    /**\n\t\t *  The loopEnd point determines when it will \n\t\t *  loop if Tone.Part.loop is true.\n\t\t *  @memberOf Tone.Part#\n\t\t *  @type {TransportTime}\n\t\t *  @name loopEnd\n\t\t */\n\t    Object.defineProperty(Tone.Part.prototype, 'loopEnd', {\n\t        get: function () {\n\t            return Tone.TransportTime(this._loopEnd, 'i').toNotation();\n\t        },\n\t        set: function (loopEnd) {\n\t            this._loopEnd = this.toTicks(loopEnd);\n\t            if (this._loop) {\n\t                this._forEach(function (event) {\n\t                    event.loopEnd = loopEnd;\n\t                    this._testLoopBoundries(event);\n\t                });\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  The loopStart point determines when it will \n\t\t *  loop if Tone.Part.loop is true.\n\t\t *  @memberOf Tone.Part#\n\t\t *  @type {TransportTime}\n\t\t *  @name loopStart\n\t\t */\n\t    Object.defineProperty(Tone.Part.prototype, 'loopStart', {\n\t        get: function () {\n\t            return Tone.TransportTime(this._loopStart, 'i').toNotation();\n\t        },\n\t        set: function (loopStart) {\n\t            this._loopStart = this.toTicks(loopStart);\n\t            if (this._loop) {\n\t                this._forEach(function (event) {\n\t                    event.loopStart = this.loopStart;\n\t                    this._testLoopBoundries(event);\n\t                });\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * \tThe playback rate of the part\n\t\t *  @memberOf Tone.Part#\n\t\t *  @type {Positive}\n\t\t *  @name playbackRate\n\t\t */\n\t    Object.defineProperty(Tone.Part.prototype, 'playbackRate', {\n\t        get: function () {\n\t            return this._playbackRate;\n\t        },\n\t        set: function (rate) {\n\t            this._playbackRate = rate;\n\t            this._setAll('playbackRate', rate);\n\t        }\n\t    });\n\t    /**\n\t\t * \tThe number of scheduled notes in the part. \n\t\t *  @memberOf Tone.Part#\n\t\t *  @type {Positive}\n\t\t *  @name length\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Part.prototype, 'length', {\n\t        get: function () {\n\t            return this._events.length;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up\n\t\t *  @return  {Tone.Part}  this\n\t\t */\n\t    Tone.Part.prototype.dispose = function () {\n\t        this.removeAll();\n\t        this._state.dispose();\n\t        this._state = null;\n\t        this.callback = null;\n\t        this._events = null;\n\t        return this;\n\t    };\n\t    return Tone.Part;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class Tone.Pattern arpeggiates between the given notes\n\t\t *         in a number of patterns. See Tone.CtrlPattern for\n\t\t *         a full list of patterns.\n\t\t *  @example\n\t\t * var pattern = new Tone.Pattern(function(time, note){\n\t\t *   //the order of the notes passed in depends on the pattern\n\t\t * }, [\"C2\", \"D4\", \"E5\", \"A6\"], \"upDown\");\n\t\t *  @extends {Tone.Loop}\n\t\t *  @param {Function} callback The callback to invoke with the\n\t\t *                             event.\n\t\t *  @param {Array} values The values to arpeggiate over.\n\t\t */\n\t    Tone.Pattern = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'callback',\n\t            'values',\n\t            'pattern'\n\t        ], Tone.Pattern);\n\t        Tone.Loop.call(this, options);\n\t        /**\n\t\t\t *  The pattern manager\n\t\t\t *  @type {Tone.CtrlPattern}\n\t\t\t *  @private\n\t\t\t */\n\t        this._pattern = new Tone.CtrlPattern({\n\t            'values': options.values,\n\t            'type': options.pattern,\n\t            'index': options.index\n\t        });\n\t    };\n\t    Tone.extend(Tone.Pattern, Tone.Loop);\n\t    /**\n\t\t *  The defaults\n\t\t *  @const\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.Pattern.defaults = {\n\t        'pattern': Tone.CtrlPattern.Type.Up,\n\t        'callback': Tone.noOp,\n\t        'values': []\n\t    };\n\t    /**\n\t\t *  Internal function called when the notes should be called\n\t\t *  @param  {Number}  time  The time the event occurs\n\t\t *  @private\n\t\t */\n\t    Tone.Pattern.prototype._tick = function (time) {\n\t        this.callback(time, this._pattern.value);\n\t        this._pattern.next();\n\t    };\n\t    /**\n\t\t *  The current index in the values array.\n\t\t *  @memberOf Tone.Pattern#\n\t\t *  @type {Positive}\n\t\t *  @name index\n\t\t */\n\t    Object.defineProperty(Tone.Pattern.prototype, 'index', {\n\t        get: function () {\n\t            return this._pattern.index;\n\t        },\n\t        set: function (i) {\n\t            this._pattern.index = i;\n\t        }\n\t    });\n\t    /**\n\t\t *  The array of events.\n\t\t *  @memberOf Tone.Pattern#\n\t\t *  @type {Array}\n\t\t *  @name values\n\t\t */\n\t    Object.defineProperty(Tone.Pattern.prototype, 'values', {\n\t        get: function () {\n\t            return this._pattern.values;\n\t        },\n\t        set: function (vals) {\n\t            this._pattern.values = vals;\n\t        }\n\t    });\n\t    /**\n\t\t *  The current value of the pattern.\n\t\t *  @memberOf Tone.Pattern#\n\t\t *  @type {*}\n\t\t *  @name value\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Pattern.prototype, 'value', {\n\t        get: function () {\n\t            return this._pattern.value;\n\t        }\n\t    });\n\t    /**\n\t\t *  The pattern type. See Tone.CtrlPattern for the full list of patterns.\n\t\t *  @memberOf Tone.Pattern#\n\t\t *  @type {String}\n\t\t *  @name pattern\n\t\t */\n\t    Object.defineProperty(Tone.Pattern.prototype, 'pattern', {\n\t        get: function () {\n\t            return this._pattern.type;\n\t        },\n\t        set: function (pattern) {\n\t            this._pattern.type = pattern;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up\n\t\t *  @return  {Tone.Pattern}  this\n\t\t */\n\t    Tone.Pattern.prototype.dispose = function () {\n\t        Tone.Loop.prototype.dispose.call(this);\n\t        this._pattern.dispose();\n\t        this._pattern = null;\n\t    };\n\t    return Tone.Pattern;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class A sequence is an alternate notation of a part. Instead\n\t\t *         of passing in an array of [time, event] pairs, pass\n\t\t *         in an array of events which will be spaced at the\n\t\t *         given subdivision. Sub-arrays will subdivide that beat\n\t\t *         by the number of items are in the array. \n\t\t *         Sequence notation inspiration from [Tidal](http://yaxu.org/tidal/)\n\t\t *  @param  {Function}  callback  The callback to invoke with every note\n\t\t *  @param  {Array}    events  The sequence\n\t\t *  @param  {Time} subdivision  The subdivision between which events are placed. \n\t\t *  @extends {Tone.Part}\n\t\t *  @example\n\t\t * var seq = new Tone.Sequence(function(time, note){\n\t\t * \tconsole.log(note);\n\t\t * //straight quater notes\n\t\t * }, [\"C4\", \"E4\", \"G4\", \"A4\"], \"4n\");\n\t\t *  @example\n\t\t * var seq = new Tone.Sequence(function(time, note){\n\t\t * \tconsole.log(note);\n\t\t * //subdivisions are given as subarrays\n\t\t * }, [\"C4\", [\"E4\", \"D4\", \"E4\"], \"G4\", [\"A4\", \"G4\"]]);\n\t\t */\n\t    Tone.Sequence = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'callback',\n\t            'events',\n\t            'subdivision'\n\t        ], Tone.Sequence);\n\t        //remove the events\n\t        var events = options.events;\n\t        delete options.events;\n\t        Tone.Part.call(this, options);\n\t        /**\n\t\t\t *  The subdivison of each note\n\t\t\t *  @type  {Ticks}\n\t\t\t *  @private\n\t\t\t */\n\t        this._subdivision = this.toTicks(options.subdivision);\n\t        //if no time was passed in, the loop end is the end of the cycle\n\t        if (Tone.isUndef(options.loopEnd) && !Tone.isUndef(events)) {\n\t            this._loopEnd = events.length * this._subdivision;\n\t        }\n\t        //defaults to looping\n\t        this._loop = true;\n\t        //add all of the events\n\t        if (!Tone.isUndef(events)) {\n\t            for (var i = 0; i < events.length; i++) {\n\t                this.add(i, events[i]);\n\t            }\n\t        }\n\t    };\n\t    Tone.extend(Tone.Sequence, Tone.Part);\n\t    /**\n\t\t *  The default values.\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.Sequence.defaults = { 'subdivision': '4n' };\n\t    /**\n\t\t *  The subdivision of the sequence. This can only be \n\t\t *  set in the constructor. The subdivision is the \n\t\t *  interval between successive steps. \n\t\t *  @type {Time}\n\t\t *  @memberOf Tone.Sequence#\n\t\t *  @name subdivision\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Sequence.prototype, 'subdivision', {\n\t        get: function () {\n\t            return Tone.Time(this._subdivision, 'i').toNotation();\n\t        }\n\t    });\n\t    /**\n\t\t *  Get/Set an index of the sequence. If the index contains a subarray, \n\t\t *  a Tone.Sequence representing that sub-array will be returned. \n\t\t *  @example\n\t\t * var sequence = new Tone.Sequence(playNote, [\"E4\", \"C4\", \"F#4\", [\"A4\", \"Bb3\"]])\n\t\t * sequence.at(0)// => returns \"E4\"\n\t\t * //set a value\n\t\t * sequence.at(0, \"G3\");\n\t\t * //get a nested sequence\n\t\t * sequence.at(3).at(1)// => returns \"Bb3\"\n\t\t * @param {Positive} index The index to get or set\n\t\t * @param {*} value Optionally pass in the value to set at the given index.\n\t\t */\n\t    Tone.Sequence.prototype.at = function (index, value) {\n\t        //if the value is an array, \n\t        if (Tone.isArray(value)) {\n\t            //remove the current event at that index\n\t            this.remove(index);\n\t        }\n\t        //call the parent's method\n\t        return Tone.Part.prototype.at.call(this, this._indexTime(index), value);\n\t    };\n\t    /**\n\t\t *  Add an event at an index, if there's already something\n\t\t *  at that index, overwrite it. If `value` is an array, \n\t\t *  it will be parsed as a subsequence.\n\t\t *  @param {Number} index The index to add the event to\n\t\t *  @param {*} value The value to add at that index\n\t\t *  @returns {Tone.Sequence} this\n\t\t */\n\t    Tone.Sequence.prototype.add = function (index, value) {\n\t        if (value === null) {\n\t            return this;\n\t        }\n\t        if (Tone.isArray(value)) {\n\t            //make a subsequence and add that to the sequence\n\t            var subSubdivision = Math.round(this._subdivision / value.length);\n\t            value = new Tone.Sequence(this._tick.bind(this), value, Tone.Time(subSubdivision, 'i'));\n\t        }\n\t        Tone.Part.prototype.add.call(this, this._indexTime(index), value);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Remove a value from the sequence by index\n\t\t *  @param {Number} index The index of the event to remove\n\t\t *  @returns {Tone.Sequence} this\n\t\t */\n\t    Tone.Sequence.prototype.remove = function (index, value) {\n\t        Tone.Part.prototype.remove.call(this, this._indexTime(index), value);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Get the time of the index given the Sequence's subdivision\n\t\t *  @param  {Number}  index \n\t\t *  @return  {Time}  The time of that index\n\t\t *  @private\n\t\t */\n\t    Tone.Sequence.prototype._indexTime = function (index) {\n\t        if (index instanceof Tone.TransportTime) {\n\t            return index;\n\t        } else {\n\t            return Tone.TransportTime(index * this._subdivision + this.startOffset, 'i');\n\t        }\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return {Tone.Sequence} this\n\t\t */\n\t    Tone.Sequence.prototype.dispose = function () {\n\t        Tone.Part.prototype.dispose.call(this);\n\t        return this;\n\t    };\n\t    return Tone.Sequence;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.PulseOscillator is a pulse oscillator with control over pulse width,\n\t\t *         also known as the duty cycle. At 50% duty cycle (width = 0.5) the wave is \n\t\t *         a square and only odd-numbered harmonics are present. At all other widths \n\t\t *         even-numbered harmonics are present. Read more \n\t\t *         [here](https://wigglewave.wordpress.com/2014/08/16/pulse-waveforms-and-harmonics/).\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Source}\n\t\t *  @param {Frequency} [frequency] The frequency of the oscillator\n\t\t *  @param {NormalRange} [width] The width of the pulse\n\t\t *  @example\n\t\t * var pulse = new Tone.PulseOscillator(\"E5\", 0.4).toMaster().start();\n\t\t */\n\t    Tone.PulseOscillator = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'frequency',\n\t            'width'\n\t        ], Tone.Oscillator);\n\t        Tone.Source.call(this, options);\n\t        /**\n\t\t\t *  The width of the pulse. \n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.width = new Tone.Signal(options.width, Tone.Type.NormalRange);\n\t        /**\n\t\t\t *  gate the width amount\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._widthGate = new Tone.Gain();\n\t        /**\n\t\t\t *  the sawtooth oscillator\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t *  @private\n\t\t\t */\n\t        this._sawtooth = new Tone.Oscillator({\n\t            frequency: options.frequency,\n\t            detune: options.detune,\n\t            type: 'sawtooth',\n\t            phase: options.phase\n\t        });\n\t        /**\n\t\t\t *  The frequency control.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = this._sawtooth.frequency;\n\t        /**\n\t\t\t *  The detune in cents. \n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = this._sawtooth.detune;\n\t        /**\n\t\t\t *  Threshold the signal to turn it into a square\n\t\t\t *  @type {Tone.WaveShaper}\n\t\t\t *  @private\n\t\t\t */\n\t        this._thresh = new Tone.WaveShaper(function (val) {\n\t            if (val < 0) {\n\t                return -1;\n\t            } else {\n\t                return 1;\n\t            }\n\t        });\n\t        //connections\n\t        this._sawtooth.chain(this._thresh, this.output);\n\t        this.width.chain(this._widthGate, this._thresh);\n\t        this._readOnly([\n\t            'width',\n\t            'frequency',\n\t            'detune'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.PulseOscillator, Tone.Source);\n\t    /**\n\t\t *  The default parameters.\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.PulseOscillator.defaults = {\n\t        'frequency': 440,\n\t        'detune': 0,\n\t        'phase': 0,\n\t        'width': 0.2\n\t    };\n\t    /**\n\t\t *  start the oscillator\n\t\t *  @param  {Time} time \n\t\t *  @private\n\t\t */\n\t    Tone.PulseOscillator.prototype._start = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._sawtooth.start(time);\n\t        this._widthGate.gain.setValueAtTime(1, time);\n\t    };\n\t    /**\n\t\t *  stop the oscillator\n\t\t *  @param  {Time} time \n\t\t *  @private\n\t\t */\n\t    Tone.PulseOscillator.prototype._stop = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._sawtooth.stop(time);\n\t        //the width is still connected to the output. \n\t        //that needs to be stopped also\n\t        this._widthGate.gain.setValueAtTime(0, time);\n\t    };\n\t    /**\n\t\t * The phase of the oscillator in degrees.\n\t\t * @memberOf Tone.PulseOscillator#\n\t\t * @type {Degrees}\n\t\t * @name phase\n\t\t */\n\t    Object.defineProperty(Tone.PulseOscillator.prototype, 'phase', {\n\t        get: function () {\n\t            return this._sawtooth.phase;\n\t        },\n\t        set: function (phase) {\n\t            this._sawtooth.phase = phase;\n\t        }\n\t    });\n\t    /**\n\t\t * The type of the oscillator. Always returns \"pulse\".\n\t\t * @readOnly\n\t\t * @memberOf Tone.PulseOscillator#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.PulseOscillator.prototype, 'type', {\n\t        get: function () {\n\t            return 'pulse';\n\t        }\n\t    });\n\t    /**\n\t\t * The partials of the waveform. Cannot set partials for this waveform type\n\t\t * @memberOf Tone.PulseOscillator#\n\t\t * @type {Array}\n\t\t * @name partials\n\t\t * @private\n\t\t */\n\t    Object.defineProperty(Tone.PulseOscillator.prototype, 'partials', {\n\t        get: function () {\n\t            return [];\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up method.\n\t\t *  @return {Tone.PulseOscillator} this\n\t\t */\n\t    Tone.PulseOscillator.prototype.dispose = function () {\n\t        Tone.Source.prototype.dispose.call(this);\n\t        this._sawtooth.dispose();\n\t        this._sawtooth = null;\n\t        this._writable([\n\t            'width',\n\t            'frequency',\n\t            'detune'\n\t        ]);\n\t        this.width.dispose();\n\t        this.width = null;\n\t        this._widthGate.dispose();\n\t        this._widthGate = null;\n\t        this._thresh.dispose();\n\t        this._thresh = null;\n\t        this.frequency = null;\n\t        this.detune = null;\n\t        return this;\n\t    };\n\t    return Tone.PulseOscillator;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.PWMOscillator modulates the width of a Tone.PulseOscillator \n\t\t *         at the modulationFrequency. This has the effect of continuously\n\t\t *         changing the timbre of the oscillator by altering the harmonics \n\t\t *         generated.\n\t\t *\n\t\t *  @extends {Tone.Source}\n\t\t *  @constructor\n\t\t *  @param {Frequency} frequency The starting frequency of the oscillator. \n\t\t *  @param {Frequency} modulationFrequency The modulation frequency of the width of the pulse. \n\t\t *  @example\n\t\t *  var pwm = new Tone.PWMOscillator(\"Ab3\", 0.3).toMaster().start();\n\t\t */\n\t    Tone.PWMOscillator = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'frequency',\n\t            'modulationFrequency'\n\t        ], Tone.PWMOscillator);\n\t        Tone.Source.call(this, options);\n\t        /**\n\t\t\t *  the pulse oscillator\n\t\t\t *  @type {Tone.PulseOscillator}\n\t\t\t *  @private\n\t\t\t */\n\t        this._pulse = new Tone.PulseOscillator(options.modulationFrequency);\n\t        //change the pulse oscillator type\n\t        this._pulse._sawtooth.type = 'sine';\n\t        /**\n\t\t\t *  the modulator\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulator = new Tone.Oscillator({\n\t            'frequency': options.frequency,\n\t            'detune': options.detune,\n\t            'phase': options.phase\n\t        });\n\t        /**\n\t\t\t *  Scale the oscillator so it doesn't go silent \n\t\t\t *  at the extreme values.\n\t\t\t *  @type {Tone.Multiply}\n\t\t\t *  @private\n\t\t\t */\n\t        this._scale = new Tone.Multiply(2);\n\t        /**\n\t\t\t *  The frequency control.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = this._modulator.frequency;\n\t        /**\n\t\t\t *  The detune of the oscillator.\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = this._modulator.detune;\n\t        /**\n\t\t\t *  The modulation rate of the oscillator. \n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.modulationFrequency = this._pulse.frequency;\n\t        //connections\n\t        this._modulator.chain(this._scale, this._pulse.width);\n\t        this._pulse.connect(this.output);\n\t        this._readOnly([\n\t            'modulationFrequency',\n\t            'frequency',\n\t            'detune'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.PWMOscillator, Tone.Source);\n\t    /**\n\t\t *  default values\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.PWMOscillator.defaults = {\n\t        'frequency': 440,\n\t        'detune': 0,\n\t        'phase': 0,\n\t        'modulationFrequency': 0.4\n\t    };\n\t    /**\n\t\t *  start the oscillator\n\t\t *  @param  {Time} [time=now]\n\t\t *  @private\n\t\t */\n\t    Tone.PWMOscillator.prototype._start = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._modulator.start(time);\n\t        this._pulse.start(time);\n\t    };\n\t    /**\n\t\t *  stop the oscillator\n\t\t *  @param  {Time} time (optional) timing parameter\n\t\t *  @private\n\t\t */\n\t    Tone.PWMOscillator.prototype._stop = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._modulator.stop(time);\n\t        this._pulse.stop(time);\n\t    };\n\t    /**\n\t\t * The type of the oscillator. Always returns \"pwm\".\n\t\t * @readOnly\n\t\t * @memberOf Tone.PWMOscillator#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.PWMOscillator.prototype, 'type', {\n\t        get: function () {\n\t            return 'pwm';\n\t        }\n\t    });\n\t    /**\n\t\t * The partials of the waveform. Cannot set partials for this waveform type\n\t\t * @memberOf Tone.PWMOscillator#\n\t\t * @type {Array}\n\t\t * @name partials\n\t\t * @private\n\t\t */\n\t    Object.defineProperty(Tone.PWMOscillator.prototype, 'partials', {\n\t        get: function () {\n\t            return [];\n\t        }\n\t    });\n\t    /**\n\t\t * The phase of the oscillator in degrees.\n\t\t * @memberOf Tone.PWMOscillator#\n\t\t * @type {number}\n\t\t * @name phase\n\t\t */\n\t    Object.defineProperty(Tone.PWMOscillator.prototype, 'phase', {\n\t        get: function () {\n\t            return this._modulator.phase;\n\t        },\n\t        set: function (phase) {\n\t            this._modulator.phase = phase;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return {Tone.PWMOscillator} this\n\t\t */\n\t    Tone.PWMOscillator.prototype.dispose = function () {\n\t        Tone.Source.prototype.dispose.call(this);\n\t        this._pulse.dispose();\n\t        this._pulse = null;\n\t        this._scale.dispose();\n\t        this._scale = null;\n\t        this._modulator.dispose();\n\t        this._modulator = null;\n\t        this._writable([\n\t            'modulationFrequency',\n\t            'frequency',\n\t            'detune'\n\t        ]);\n\t        this.frequency = null;\n\t        this.detune = null;\n\t        this.modulationFrequency = null;\n\t        return this;\n\t    };\n\t    return Tone.PWMOscillator;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.FMOscillator \n\t\t *\n\t\t *  @extends {Tone.Source}\n\t\t *  @constructor\n\t\t *  @param {Frequency} frequency The starting frequency of the oscillator. \n\t\t *  @param {String} type The type of the carrier oscillator.\n\t\t *  @param {String} modulationType The type of the modulator oscillator.\n\t\t *  @example\n\t\t * //a sine oscillator frequency-modulated by a square wave\n\t\t * var fmOsc = new Tone.FMOscillator(\"Ab3\", \"sine\", \"square\").toMaster().start();\n\t\t */\n\t    Tone.FMOscillator = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'frequency',\n\t            'type',\n\t            'modulationType'\n\t        ], Tone.FMOscillator);\n\t        Tone.Source.call(this, options);\n\t        /**\n\t\t\t *  The carrier oscillator\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t *  @private\n\t\t\t */\n\t        this._carrier = new Tone.Oscillator(options.frequency, options.type);\n\t        /**\n\t\t\t *  The oscillator's frequency\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The detune control signal.\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = this._carrier.detune;\n\t        this.detune.value = options.detune;\n\t        /**\n\t\t\t *  The modulation index which is in essence the depth or amount of the modulation. In other terms it is the \n\t\t\t *  ratio of the frequency of the modulating signal (mf) to the amplitude of the \n\t\t\t *  modulating signal (ma) -- as in ma/mf. \n\t\t\t *\t@type {Positive}\n\t\t\t *\t@signal\n\t\t\t */\n\t        this.modulationIndex = new Tone.Multiply(options.modulationIndex);\n\t        this.modulationIndex.units = Tone.Type.Positive;\n\t        /**\n\t\t\t *  The modulating oscillator\n\t\t\t *  @type  {Tone.Oscillator}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulator = new Tone.Oscillator(options.frequency, options.modulationType);\n\t        /**\n\t\t\t *  Harmonicity is the frequency ratio between the carrier and the modulator oscillators. \n\t\t\t *  A harmonicity of 1 gives both oscillators the same frequency. \n\t\t\t *  Harmonicity = 2 means a change of an octave. \n\t\t\t *  @type {Positive}\n\t\t\t *  @signal\n\t\t\t *  @example\n\t\t\t * //pitch the modulator an octave below carrier\n\t\t\t * synth.harmonicity.value = 0.5;\n\t\t\t */\n\t        this.harmonicity = new Tone.Multiply(options.harmonicity);\n\t        this.harmonicity.units = Tone.Type.Positive;\n\t        /**\n\t\t\t *  the node where the modulation happens\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulationNode = new Tone.Gain(0);\n\t        //connections\n\t        this.frequency.connect(this._carrier.frequency);\n\t        this.frequency.chain(this.harmonicity, this._modulator.frequency);\n\t        this.frequency.chain(this.modulationIndex, this._modulationNode);\n\t        this._modulator.connect(this._modulationNode.gain);\n\t        this._modulationNode.connect(this._carrier.frequency);\n\t        this._carrier.connect(this.output);\n\t        this.detune.connect(this._modulator.detune);\n\t        this.phase = options.phase;\n\t        this._readOnly([\n\t            'modulationIndex',\n\t            'frequency',\n\t            'detune',\n\t            'harmonicity'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.FMOscillator, Tone.Source);\n\t    /**\n\t\t *  default values\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.FMOscillator.defaults = {\n\t        'frequency': 440,\n\t        'detune': 0,\n\t        'phase': 0,\n\t        'modulationIndex': 2,\n\t        'modulationType': 'square',\n\t        'harmonicity': 1\n\t    };\n\t    /**\n\t\t *  start the oscillator\n\t\t *  @param  {Time} [time=now]\n\t\t *  @private\n\t\t */\n\t    Tone.FMOscillator.prototype._start = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._modulator.start(time);\n\t        this._carrier.start(time);\n\t    };\n\t    /**\n\t\t *  stop the oscillator\n\t\t *  @param  {Time} time (optional) timing parameter\n\t\t *  @private\n\t\t */\n\t    Tone.FMOscillator.prototype._stop = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._modulator.stop(time);\n\t        this._carrier.stop(time);\n\t    };\n\t    /**\n\t\t * The type of the carrier oscillator\n\t\t * @memberOf Tone.FMOscillator#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.FMOscillator.prototype, 'type', {\n\t        get: function () {\n\t            return this._carrier.type;\n\t        },\n\t        set: function (type) {\n\t            this._carrier.type = type;\n\t        }\n\t    });\n\t    /**\n\t\t * The type of the modulator oscillator\n\t\t * @memberOf Tone.FMOscillator#\n\t\t * @type {String}\n\t\t * @name modulationType\n\t\t */\n\t    Object.defineProperty(Tone.FMOscillator.prototype, 'modulationType', {\n\t        get: function () {\n\t            return this._modulator.type;\n\t        },\n\t        set: function (type) {\n\t            this._modulator.type = type;\n\t        }\n\t    });\n\t    /**\n\t\t * The phase of the oscillator in degrees.\n\t\t * @memberOf Tone.FMOscillator#\n\t\t * @type {number}\n\t\t * @name phase\n\t\t */\n\t    Object.defineProperty(Tone.FMOscillator.prototype, 'phase', {\n\t        get: function () {\n\t            return this._carrier.phase;\n\t        },\n\t        set: function (phase) {\n\t            this._carrier.phase = phase;\n\t            this._modulator.phase = phase;\n\t        }\n\t    });\n\t    /**\n\t\t * The partials of the carrier waveform. A partial represents \n\t\t * the amplitude at a harmonic. The first harmonic is the \n\t\t * fundamental frequency, the second is the octave and so on\n\t\t * following the harmonic series. \n\t\t * Setting this value will automatically set the type to \"custom\". \n\t\t * The value is an empty array when the type is not \"custom\". \n\t\t * @memberOf Tone.FMOscillator#\n\t\t * @type {Array}\n\t\t * @name partials\n\t\t * @example\n\t\t * osc.partials = [1, 0.2, 0.01];\n\t\t */\n\t    Object.defineProperty(Tone.FMOscillator.prototype, 'partials', {\n\t        get: function () {\n\t            return this._carrier.partials;\n\t        },\n\t        set: function (partials) {\n\t            this._carrier.partials = partials;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return {Tone.FMOscillator} this\n\t\t */\n\t    Tone.FMOscillator.prototype.dispose = function () {\n\t        Tone.Source.prototype.dispose.call(this);\n\t        this._writable([\n\t            'modulationIndex',\n\t            'frequency',\n\t            'detune',\n\t            'harmonicity'\n\t        ]);\n\t        this.frequency.dispose();\n\t        this.frequency = null;\n\t        this.detune = null;\n\t        this.harmonicity.dispose();\n\t        this.harmonicity = null;\n\t        this._carrier.dispose();\n\t        this._carrier = null;\n\t        this._modulator.dispose();\n\t        this._modulator = null;\n\t        this._modulationNode.dispose();\n\t        this._modulationNode = null;\n\t        this.modulationIndex.dispose();\n\t        this.modulationIndex = null;\n\t        return this;\n\t    };\n\t    return Tone.FMOscillator;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.AMOscillator \n\t\t *\n\t\t *  @extends {Tone.Oscillator}\n\t\t *  @constructor\n\t\t *  @param {Frequency} frequency The starting frequency of the oscillator. \n\t\t *  @param {String} type The type of the carrier oscillator.\n\t\t *  @param {String} modulationType The type of the modulator oscillator.\n\t\t *  @example\n\t\t * //a sine oscillator frequency-modulated by a square wave\n\t\t * var fmOsc = new Tone.AMOscillator(\"Ab3\", \"sine\", \"square\").toMaster().start();\n\t\t */\n\t    Tone.AMOscillator = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'frequency',\n\t            'type',\n\t            'modulationType'\n\t        ], Tone.AMOscillator);\n\t        Tone.Source.call(this, options);\n\t        /**\n\t\t\t *  The carrier oscillator\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t *  @private\n\t\t\t */\n\t        this._carrier = new Tone.Oscillator(options.frequency, options.type);\n\t        /**\n\t\t\t *  The oscillator's frequency\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = this._carrier.frequency;\n\t        /**\n\t\t\t *  The detune control signal.\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = this._carrier.detune;\n\t        this.detune.value = options.detune;\n\t        /**\n\t\t\t *  The modulating oscillator\n\t\t\t *  @type  {Tone.Oscillator}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulator = new Tone.Oscillator(options.frequency, options.modulationType);\n\t        /**\n\t\t\t *  convert the -1,1 output to 0,1\n\t\t\t *  @type {Tone.AudioToGain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulationScale = new Tone.AudioToGain();\n\t        /**\n\t\t\t *  Harmonicity is the frequency ratio between the carrier and the modulator oscillators. \n\t\t\t *  A harmonicity of 1 gives both oscillators the same frequency. \n\t\t\t *  Harmonicity = 2 means a change of an octave. \n\t\t\t *  @type {Positive}\n\t\t\t *  @signal\n\t\t\t *  @example\n\t\t\t * //pitch the modulator an octave below carrier\n\t\t\t * synth.harmonicity.value = 0.5;\n\t\t\t */\n\t        this.harmonicity = new Tone.Multiply(options.harmonicity);\n\t        this.harmonicity.units = Tone.Type.Positive;\n\t        /**\n\t\t\t *  the node where the modulation happens\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulationNode = new Tone.Gain(0);\n\t        //connections\n\t        this.frequency.chain(this.harmonicity, this._modulator.frequency);\n\t        this.detune.connect(this._modulator.detune);\n\t        this._modulator.chain(this._modulationScale, this._modulationNode.gain);\n\t        this._carrier.chain(this._modulationNode, this.output);\n\t        this.phase = options.phase;\n\t        this._readOnly([\n\t            'frequency',\n\t            'detune',\n\t            'harmonicity'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.AMOscillator, Tone.Oscillator);\n\t    /**\n\t\t *  default values\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.AMOscillator.defaults = {\n\t        'frequency': 440,\n\t        'detune': 0,\n\t        'phase': 0,\n\t        'modulationType': 'square',\n\t        'harmonicity': 1\n\t    };\n\t    /**\n\t\t *  start the oscillator\n\t\t *  @param  {Time} [time=now]\n\t\t *  @private\n\t\t */\n\t    Tone.AMOscillator.prototype._start = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._modulator.start(time);\n\t        this._carrier.start(time);\n\t    };\n\t    /**\n\t\t *  stop the oscillator\n\t\t *  @param  {Time} time (optional) timing parameter\n\t\t *  @private\n\t\t */\n\t    Tone.AMOscillator.prototype._stop = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._modulator.stop(time);\n\t        this._carrier.stop(time);\n\t    };\n\t    /**\n\t\t * The type of the carrier oscillator\n\t\t * @memberOf Tone.AMOscillator#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.AMOscillator.prototype, 'type', {\n\t        get: function () {\n\t            return this._carrier.type;\n\t        },\n\t        set: function (type) {\n\t            this._carrier.type = type;\n\t        }\n\t    });\n\t    /**\n\t\t * The type of the modulator oscillator\n\t\t * @memberOf Tone.AMOscillator#\n\t\t * @type {string}\n\t\t * @name modulationType\n\t\t */\n\t    Object.defineProperty(Tone.AMOscillator.prototype, 'modulationType', {\n\t        get: function () {\n\t            return this._modulator.type;\n\t        },\n\t        set: function (type) {\n\t            this._modulator.type = type;\n\t        }\n\t    });\n\t    /**\n\t\t * The phase of the oscillator in degrees.\n\t\t * @memberOf Tone.AMOscillator#\n\t\t * @type {number}\n\t\t * @name phase\n\t\t */\n\t    Object.defineProperty(Tone.AMOscillator.prototype, 'phase', {\n\t        get: function () {\n\t            return this._carrier.phase;\n\t        },\n\t        set: function (phase) {\n\t            this._carrier.phase = phase;\n\t            this._modulator.phase = phase;\n\t        }\n\t    });\n\t    /**\n\t\t * The partials of the carrier waveform. A partial represents \n\t\t * the amplitude at a harmonic. The first harmonic is the \n\t\t * fundamental frequency, the second is the octave and so on\n\t\t * following the harmonic series. \n\t\t * Setting this value will automatically set the type to \"custom\". \n\t\t * The value is an empty array when the type is not \"custom\". \n\t\t * @memberOf Tone.AMOscillator#\n\t\t * @type {Array}\n\t\t * @name partials\n\t\t * @example\n\t\t * osc.partials = [1, 0.2, 0.01];\n\t\t */\n\t    Object.defineProperty(Tone.AMOscillator.prototype, 'partials', {\n\t        get: function () {\n\t            return this._carrier.partials;\n\t        },\n\t        set: function (partials) {\n\t            this._carrier.partials = partials;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return {Tone.AMOscillator} this\n\t\t */\n\t    Tone.AMOscillator.prototype.dispose = function () {\n\t        Tone.Source.prototype.dispose.call(this);\n\t        this._writable([\n\t            'frequency',\n\t            'detune',\n\t            'harmonicity'\n\t        ]);\n\t        this.frequency = null;\n\t        this.detune = null;\n\t        this.harmonicity.dispose();\n\t        this.harmonicity = null;\n\t        this._carrier.dispose();\n\t        this._carrier = null;\n\t        this._modulator.dispose();\n\t        this._modulator = null;\n\t        this._modulationNode.dispose();\n\t        this._modulationNode = null;\n\t        this._modulationScale.dispose();\n\t        this._modulationScale = null;\n\t        return this;\n\t    };\n\t    return Tone.AMOscillator;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.FatOscillator \n\t\t *\n\t\t *  @extends {Tone.Source}\n\t\t *  @constructor\n\t\t *  @param {Frequency} frequency The starting frequency of the oscillator. \n\t\t *  @param {String} type The type of the carrier oscillator.\n\t\t *  @param {String} modulationType The type of the modulator oscillator.\n\t\t *  @example\n\t\t * //a sine oscillator frequency-modulated by a square wave\n\t\t * var fmOsc = new Tone.FatOscillator(\"Ab3\", \"sine\", \"square\").toMaster().start();\n\t\t */\n\t    Tone.FatOscillator = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'frequency',\n\t            'type',\n\t            'spread'\n\t        ], Tone.FatOscillator);\n\t        Tone.Source.call(this, options);\n\t        /**\n\t\t\t *  The oscillator's frequency\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The detune control signal.\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\t        /**\n\t\t\t *  The array of oscillators\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._oscillators = [];\n\t        /**\n\t\t\t *  The total spread of the oscillators\n\t\t\t *  @type  {Cents}\n\t\t\t *  @private\n\t\t\t */\n\t        this._spread = options.spread;\n\t        /**\n\t\t\t *  The type of the oscillator\n\t\t\t *  @type {String}\n\t\t\t *  @private\n\t\t\t */\n\t        this._type = options.type;\n\t        /**\n\t\t\t *  The phase of the oscillators\n\t\t\t *  @type {Degrees}\n\t\t\t *  @private\n\t\t\t */\n\t        this._phase = options.phase;\n\t        /**\n\t\t\t *  The partials array\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._partials = Tone.defaultArg(options.partials, []);\n\t        //set the count initially\n\t        this.count = options.count;\n\t        this._readOnly([\n\t            'frequency',\n\t            'detune'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.FatOscillator, Tone.Source);\n\t    /**\n\t\t *  default values\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.FatOscillator.defaults = {\n\t        'frequency': 440,\n\t        'detune': 0,\n\t        'phase': 0,\n\t        'spread': 20,\n\t        'count': 3,\n\t        'type': 'sawtooth'\n\t    };\n\t    /**\n\t\t *  start the oscillator\n\t\t *  @param  {Time} [time=now]\n\t\t *  @private\n\t\t */\n\t    Tone.FatOscillator.prototype._start = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._forEach(function (osc) {\n\t            osc.start(time);\n\t        });\n\t    };\n\t    /**\n\t\t *  stop the oscillator\n\t\t *  @param  {Time} time (optional) timing parameter\n\t\t *  @private\n\t\t */\n\t    Tone.FatOscillator.prototype._stop = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._forEach(function (osc) {\n\t            osc.stop(time);\n\t        });\n\t    };\n\t    /**\n\t\t *  Iterate over all of the oscillators\n\t\t *  @param  {Function}  iterator  The iterator function\n\t\t *  @private\n\t\t */\n\t    Tone.FatOscillator.prototype._forEach = function (iterator) {\n\t        for (var i = 0; i < this._oscillators.length; i++) {\n\t            iterator.call(this, this._oscillators[i], i);\n\t        }\n\t    };\n\t    /**\n\t\t * The type of the carrier oscillator\n\t\t * @memberOf Tone.FatOscillator#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.FatOscillator.prototype, 'type', {\n\t        get: function () {\n\t            return this._type;\n\t        },\n\t        set: function (type) {\n\t            this._type = type;\n\t            this._forEach(function (osc) {\n\t                osc.type = type;\n\t            });\n\t        }\n\t    });\n\t    /**\n\t\t * The detune spread between the oscillators. If \"count\" is\n\t\t * set to 3 oscillators and the \"spread\" is set to 40,\n\t\t * the three oscillators would be detuned like this: [-20, 0, 20]\n\t\t * for a total detune spread of 40 cents.\n\t\t * @memberOf Tone.FatOscillator#\n\t\t * @type {Cents}\n\t\t * @name spread\n\t\t */\n\t    Object.defineProperty(Tone.FatOscillator.prototype, 'spread', {\n\t        get: function () {\n\t            return this._spread;\n\t        },\n\t        set: function (spread) {\n\t            this._spread = spread;\n\t            if (this._oscillators.length > 1) {\n\t                var start = -spread / 2;\n\t                var step = spread / (this._oscillators.length - 1);\n\t                this._forEach(function (osc, i) {\n\t                    osc.detune.value = start + step * i;\n\t                });\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The number of detuned oscillators\n\t\t * @memberOf Tone.FatOscillator#\n\t\t * @type {Number}\n\t\t * @name count\n\t\t */\n\t    Object.defineProperty(Tone.FatOscillator.prototype, 'count', {\n\t        get: function () {\n\t            return this._oscillators.length;\n\t        },\n\t        set: function (count) {\n\t            count = Math.max(count, 1);\n\t            if (this._oscillators.length !== count) {\n\t                // var partials = this.partials;\n\t                // var type = this.type;\n\t                //dispose the previous oscillators\n\t                this._forEach(function (osc) {\n\t                    osc.dispose();\n\t                });\n\t                this._oscillators = [];\n\t                for (var i = 0; i < count; i++) {\n\t                    var osc = new Tone.Oscillator();\n\t                    if (this.type === Tone.Oscillator.Type.Custom) {\n\t                        osc.partials = this._partials;\n\t                    } else {\n\t                        osc.type = this._type;\n\t                    }\n\t                    osc.phase = this._phase;\n\t                    osc.volume.value = -6 - count;\n\t                    this.frequency.connect(osc.frequency);\n\t                    this.detune.connect(osc.detune);\n\t                    osc.connect(this.output);\n\t                    this._oscillators[i] = osc;\n\t                }\n\t                //set the spread\n\t                this.spread = this._spread;\n\t                if (this.state === Tone.State.Started) {\n\t                    this._forEach(function (osc) {\n\t                        osc.start();\n\t                    });\n\t                }\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The phase of the oscillator in degrees.\n\t\t * @memberOf Tone.FatOscillator#\n\t\t * @type {Number}\n\t\t * @name phase\n\t\t */\n\t    Object.defineProperty(Tone.FatOscillator.prototype, 'phase', {\n\t        get: function () {\n\t            return this._phase;\n\t        },\n\t        set: function (phase) {\n\t            this._phase = phase;\n\t            this._forEach(function (osc) {\n\t                osc.phase = phase;\n\t            });\n\t        }\n\t    });\n\t    /**\n\t\t * The partials of the carrier waveform. A partial represents \n\t\t * the amplitude at a harmonic. The first harmonic is the \n\t\t * fundamental frequency, the second is the octave and so on\n\t\t * following the harmonic series. \n\t\t * Setting this value will automatically set the type to \"custom\". \n\t\t * The value is an empty array when the type is not \"custom\". \n\t\t * @memberOf Tone.FatOscillator#\n\t\t * @type {Array}\n\t\t * @name partials\n\t\t * @example\n\t\t * osc.partials = [1, 0.2, 0.01];\n\t\t */\n\t    Object.defineProperty(Tone.FatOscillator.prototype, 'partials', {\n\t        get: function () {\n\t            return this._partials;\n\t        },\n\t        set: function (partials) {\n\t            this._partials = partials;\n\t            this._type = Tone.Oscillator.Type.Custom;\n\t            this._forEach(function (osc) {\n\t                osc.partials = partials;\n\t            });\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return {Tone.FatOscillator} this\n\t\t */\n\t    Tone.FatOscillator.prototype.dispose = function () {\n\t        Tone.Source.prototype.dispose.call(this);\n\t        this._writable([\n\t            'frequency',\n\t            'detune'\n\t        ]);\n\t        this.frequency.dispose();\n\t        this.frequency = null;\n\t        this.detune.dispose();\n\t        this.detune = null;\n\t        this._forEach(function (osc) {\n\t            osc.dispose();\n\t        });\n\t        this._oscillators = null;\n\t        this._partials = null;\n\t        return this;\n\t    };\n\t    return Tone.FatOscillator;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.OmniOscillator aggregates Tone.Oscillator, Tone.PulseOscillator,\n\t\t *         Tone.PWMOscillator, Tone.FMOscillator, Tone.AMOscillator, and Tone.FatOscillator\n\t\t *         into one class. The oscillator class can be changed by setting the `type`. \n\t\t *         `omniOsc.type = \"pwm\"` will set it to the Tone.PWMOscillator. Prefixing\n\t\t *         any of the basic types (\"sine\", \"square4\", etc.) with \"fm\", \"am\", or \"fat\"\n\t\t *         will use the FMOscillator, AMOscillator or FatOscillator respectively. \n\t\t *         For example: `omniOsc.type = \"fatsawtooth\"` will create set the oscillator\n\t\t *         to a FatOscillator of type \"sawtooth\". \n\t\t *\n\t\t *  @extends {Tone.Source}\n\t\t *  @constructor\n\t\t *  @param {Frequency} frequency The initial frequency of the oscillator.\n\t\t *  @param {String} type The type of the oscillator.\n\t\t *  @example\n\t\t *  var omniOsc = new Tone.OmniOscillator(\"C#4\", \"pwm\");\n\t\t */\n\t    Tone.OmniOscillator = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'frequency',\n\t            'type'\n\t        ], Tone.OmniOscillator);\n\t        Tone.Source.call(this, options);\n\t        /**\n\t\t\t *  The frequency control.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The detune control\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\t        /**\n\t\t\t *  the type of the oscillator source\n\t\t\t *  @type {String}\n\t\t\t *  @private\n\t\t\t */\n\t        this._sourceType = undefined;\n\t        /**\n\t\t\t *  the oscillator\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t *  @private\n\t\t\t */\n\t        this._oscillator = null;\n\t        //set the oscillator\n\t        this.type = options.type;\n\t        this._readOnly([\n\t            'frequency',\n\t            'detune'\n\t        ]);\n\t        //set the options\n\t        this.set(options);\n\t    };\n\t    Tone.extend(Tone.OmniOscillator, Tone.Source);\n\t    /**\n\t\t *  default values\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.OmniOscillator.defaults = {\n\t        'frequency': 440,\n\t        'detune': 0,\n\t        'type': 'sine',\n\t        'phase': 0\n\t    };\n\t    /**\n\t\t *  @enum {String}\n\t\t *  @private\n\t\t */\n\t    var OmniOscType = {\n\t        Pulse: 'PulseOscillator',\n\t        PWM: 'PWMOscillator',\n\t        Osc: 'Oscillator',\n\t        FM: 'FMOscillator',\n\t        AM: 'AMOscillator',\n\t        Fat: 'FatOscillator'\n\t    };\n\t    /**\n\t\t *  start the oscillator\n\t\t *  @param {Time} [time=now] the time to start the oscillator\n\t\t *  @private\n\t\t */\n\t    Tone.OmniOscillator.prototype._start = function (time) {\n\t        this._oscillator.start(time);\n\t    };\n\t    /**\n\t\t *  start the oscillator\n\t\t *  @param {Time} [time=now] the time to start the oscillator\n\t\t *  @private\n\t\t */\n\t    Tone.OmniOscillator.prototype._stop = function (time) {\n\t        this._oscillator.stop(time);\n\t    };\n\t    /**\n\t\t * The type of the oscillator. Can be any of the basic types: sine, square, triangle, sawtooth. Or\n\t\t * prefix the basic types with \"fm\", \"am\", or \"fat\" to use the FMOscillator, AMOscillator or FatOscillator\n\t\t * types. The oscillator could also be set to \"pwm\" or \"pulse\". All of the parameters of the\n\t\t * oscillator's class are accessible when the oscillator is set to that type, but throws an error \n\t\t * when it's not.\n\t\t * \n\t\t * @memberOf Tone.OmniOscillator#\n\t\t * @type {String}\n\t\t * @name type\n\t\t * @example\n\t\t * omniOsc.type = \"pwm\";\n\t\t * //modulationFrequency is parameter which is available\n\t\t * //only when the type is \"pwm\". \n\t\t * omniOsc.modulationFrequency.value = 0.5;\n\t\t * @example\n\t\t * //an square wave frequency modulated by a sawtooth\n\t\t * omniOsc.type = \"fmsquare\";\n\t\t * omniOsc.modulationType = \"sawtooth\";\n\t\t */\n\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'type', {\n\t        get: function () {\n\t            var prefix = '';\n\t            if (this._sourceType === OmniOscType.FM) {\n\t                prefix = 'fm';\n\t            } else if (this._sourceType === OmniOscType.AM) {\n\t                prefix = 'am';\n\t            } else if (this._sourceType === OmniOscType.Fat) {\n\t                prefix = 'fat';\n\t            }\n\t            return prefix + this._oscillator.type;\n\t        },\n\t        set: function (type) {\n\t            if (type.substr(0, 2) === 'fm') {\n\t                this._createNewOscillator(OmniOscType.FM);\n\t                this._oscillator.type = type.substr(2);\n\t            } else if (type.substr(0, 2) === 'am') {\n\t                this._createNewOscillator(OmniOscType.AM);\n\t                this._oscillator.type = type.substr(2);\n\t            } else if (type.substr(0, 3) === 'fat') {\n\t                this._createNewOscillator(OmniOscType.Fat);\n\t                this._oscillator.type = type.substr(3);\n\t            } else if (type === 'pwm') {\n\t                this._createNewOscillator(OmniOscType.PWM);\n\t            } else if (type === 'pulse') {\n\t                this._createNewOscillator(OmniOscType.Pulse);\n\t            } else {\n\t                this._createNewOscillator(OmniOscType.Osc);\n\t                this._oscillator.type = type;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The partials of the waveform. A partial represents \n\t\t * the amplitude at a harmonic. The first harmonic is the \n\t\t * fundamental frequency, the second is the octave and so on\n\t\t * following the harmonic series. \n\t\t * Setting this value will automatically set the type to \"custom\". \n\t\t * The value is an empty array when the type is not \"custom\". \n\t\t * This is not available on \"pwm\" and \"pulse\" oscillator types.\n\t\t * @memberOf Tone.OmniOscillator#\n\t\t * @type {Array}\n\t\t * @name partials\n\t\t * @example\n\t\t * osc.partials = [1, 0.2, 0.01];\n\t\t */\n\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'partials', {\n\t        get: function () {\n\t            return this._oscillator.partials;\n\t        },\n\t        set: function (partials) {\n\t            this._oscillator.partials = partials;\n\t        }\n\t    });\n\t    /**\n\t\t *  Set a member/attribute of the oscillator. \n\t\t *  @param {Object|String} params\n\t\t *  @param {number=} value\n\t\t *  @param {Time=} rampTime\n\t\t *  @returns {Tone.OmniOscillator} this\n\t\t */\n\t    Tone.OmniOscillator.prototype.set = function (params, value) {\n\t        //make sure the type is set first\n\t        if (params === 'type') {\n\t            this.type = value;\n\t        } else if (Tone.isObject(params) && params.hasOwnProperty('type')) {\n\t            this.type = params.type;\n\t        }\n\t        //then set the rest\n\t        Tone.prototype.set.apply(this, arguments);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  connect the oscillator to the frequency and detune signals\n\t\t *  @private\n\t\t */\n\t    Tone.OmniOscillator.prototype._createNewOscillator = function (oscType) {\n\t        if (oscType !== this._sourceType) {\n\t            this._sourceType = oscType;\n\t            var OscillatorConstructor = Tone[oscType];\n\t            //short delay to avoid clicks on the change\n\t            var now = this.now();\n\t            if (this._oscillator !== null) {\n\t                var oldOsc = this._oscillator;\n\t                oldOsc.stop(now);\n\t                //dispose the old one\n\t                this.context.setTimeout(function () {\n\t                    oldOsc.dispose();\n\t                    oldOsc = null;\n\t                }, this.blockTime);\n\t            }\n\t            this._oscillator = new OscillatorConstructor();\n\t            this.frequency.connect(this._oscillator.frequency);\n\t            this.detune.connect(this._oscillator.detune);\n\t            this._oscillator.connect(this.output);\n\t            if (this.state === Tone.State.Started) {\n\t                this._oscillator.start(now);\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t * The phase of the oscillator in degrees. \n\t\t * @memberOf Tone.OmniOscillator#\n\t\t * @type {Degrees}\n\t\t * @name phase\n\t\t */\n\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'phase', {\n\t        get: function () {\n\t            return this._oscillator.phase;\n\t        },\n\t        set: function (phase) {\n\t            this._oscillator.phase = phase;\n\t        }\n\t    });\n\t    /**\n\t\t * The width of the oscillator (only if the oscillator is set to \"pulse\")\n\t\t * @memberOf Tone.OmniOscillator#\n\t\t * @type {NormalRange}\n\t\t * @signal\n\t\t * @name width\n\t\t * @example\n\t\t * var omniOsc = new Tone.OmniOscillator(440, \"pulse\");\n\t\t * //can access the width attribute only if type === \"pulse\"\n\t\t * omniOsc.width.value = 0.2; \n\t\t */\n\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'width', {\n\t        get: function () {\n\t            if (this._sourceType === OmniOscType.Pulse) {\n\t                return this._oscillator.width;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The number of detuned oscillators\n\t\t * @memberOf Tone.OmniOscillator#\n\t\t * @type {Number}\n\t\t * @name count\n\t\t */\n\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'count', {\n\t        get: function () {\n\t            if (this._sourceType === OmniOscType.Fat) {\n\t                return this._oscillator.count;\n\t            }\n\t        },\n\t        set: function (count) {\n\t            if (this._sourceType === OmniOscType.Fat) {\n\t                this._oscillator.count = count;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The detune spread between the oscillators. If \"count\" is\n\t\t * set to 3 oscillators and the \"spread\" is set to 40,\n\t\t * the three oscillators would be detuned like this: [-20, 0, 20]\n\t\t * for a total detune spread of 40 cents. See Tone.FatOscillator\n\t\t * for more info.\n\t\t * @memberOf Tone.OmniOscillator#\n\t\t * @type {Cents}\n\t\t * @name spread\n\t\t */\n\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'spread', {\n\t        get: function () {\n\t            if (this._sourceType === OmniOscType.Fat) {\n\t                return this._oscillator.spread;\n\t            }\n\t        },\n\t        set: function (spread) {\n\t            if (this._sourceType === OmniOscType.Fat) {\n\t                this._oscillator.spread = spread;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The type of the modulator oscillator. Only if the oscillator\n\t\t * is set to \"am\" or \"fm\" types. see. Tone.AMOscillator or Tone.FMOscillator\n\t\t * for more info. \n\t\t * @memberOf Tone.OmniOscillator#\n\t\t * @type {String}\n\t\t * @name modulationType\n\t\t */\n\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'modulationType', {\n\t        get: function () {\n\t            if (this._sourceType === OmniOscType.FM || this._sourceType === OmniOscType.AM) {\n\t                return this._oscillator.modulationType;\n\t            }\n\t        },\n\t        set: function (mType) {\n\t            if (this._sourceType === OmniOscType.FM || this._sourceType === OmniOscType.AM) {\n\t                this._oscillator.modulationType = mType;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The modulation index which is in essence the depth or amount of the modulation. In other terms it is the \n\t\t * ratio of the frequency of the modulating signal (mf) to the amplitude of the \n\t\t * modulating signal (ma) -- as in ma/mf. \n\t\t * See Tone.FMOscillator for more info. \n\t\t * @type {Positive}\n\t\t * @signal\n\t\t * @name modulationIndex\n\t\t */\n\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'modulationIndex', {\n\t        get: function () {\n\t            if (this._sourceType === OmniOscType.FM) {\n\t                return this._oscillator.modulationIndex;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Harmonicity is the frequency ratio between the carrier and the modulator oscillators. \n\t\t *  A harmonicity of 1 gives both oscillators the same frequency. \n\t\t *  Harmonicity = 2 means a change of an octave. See Tone.AMOscillator or Tone.FMOscillator\n\t\t *  for more info. \n\t\t *  @memberOf Tone.OmniOscillator#\n\t\t *  @signal\n\t\t *  @type {Positive}\n\t\t *  @name harmonicity\n\t\t */\n\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'harmonicity', {\n\t        get: function () {\n\t            if (this._sourceType === OmniOscType.FM || this._sourceType === OmniOscType.AM) {\n\t                return this._oscillator.harmonicity;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The modulationFrequency Signal of the oscillator \n\t\t * (only if the oscillator type is set to pwm). See \n\t\t * Tone.PWMOscillator for more info. \n\t\t * @memberOf Tone.OmniOscillator#\n\t\t * @type {Frequency}\n\t\t * @signal\n\t\t * @name modulationFrequency\n\t\t * @example\n\t\t * var omniOsc = new Tone.OmniOscillator(440, \"pwm\");\n\t\t * //can access the modulationFrequency attribute only if type === \"pwm\"\n\t\t * omniOsc.modulationFrequency.value = 0.2; \n\t\t */\n\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'modulationFrequency', {\n\t        get: function () {\n\t            if (this._sourceType === OmniOscType.PWM) {\n\t                return this._oscillator.modulationFrequency;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return {Tone.OmniOscillator} this\n\t\t */\n\t    Tone.OmniOscillator.prototype.dispose = function () {\n\t        Tone.Source.prototype.dispose.call(this);\n\t        this._writable([\n\t            'frequency',\n\t            'detune'\n\t        ]);\n\t        this.detune.dispose();\n\t        this.detune = null;\n\t        this.frequency.dispose();\n\t        this.frequency = null;\n\t        this._oscillator.dispose();\n\t        this._oscillator = null;\n\t        this._sourceType = null;\n\t        return this;\n\t    };\n\t    return Tone.OmniOscillator;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Base-class for all instruments\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.AudioNode}\n\t\t */\n\t    Tone.Instrument = function (options) {\n\t        //get the defaults\n\t        options = Tone.defaultArg(options, Tone.Instrument.defaults);\n\t        Tone.AudioNode.call(this);\n\t        /**\n\t\t\t *  The output and volume triming node\n\t\t\t *  @type  {Tone.Volume}\n\t\t\t *  @private\n\t\t\t */\n\t        this._volume = this.output = new Tone.Volume(options.volume);\n\t        /**\n\t\t\t * The volume of the output in decibels.\n\t\t\t * @type {Decibels}\n\t\t\t * @signal\n\t\t\t * @example\n\t\t\t * source.volume.value = -6;\n\t\t\t */\n\t        this.volume = this._volume.volume;\n\t        this._readOnly('volume');\n\t    };\n\t    Tone.extend(Tone.Instrument, Tone.AudioNode);\n\t    /**\n\t\t *  the default attributes\n\t\t *  @type {object}\n\t\t */\n\t    Tone.Instrument.defaults = {\n\t        /** the volume of the output in decibels */\n\t        'volume': 0\n\t    };\n\t    /**\n\t\t *  @abstract\n\t\t *  @param {string|number} note the note to trigger\n\t\t *  @param {Time} [time=now] the time to trigger the ntoe\n\t\t *  @param {number} [velocity=1] the velocity to trigger the note\n\t\t */\n\t    Tone.Instrument.prototype.triggerAttack = Tone.noOp;\n\t    /**\n\t\t *  @abstract\n\t\t *  @param {Time} [time=now] when to trigger the release\n\t\t */\n\t    Tone.Instrument.prototype.triggerRelease = Tone.noOp;\n\t    /**\n\t\t *  Trigger the attack and then the release after the duration.\n\t\t *  @param  {Frequency} note     The note to trigger.\n\t\t *  @param  {Time} duration How long the note should be held for before\n\t\t *                          triggering the release. This value must be greater than 0.\n\t\t *  @param {Time} [time=now]  When the note should be triggered.\n\t\t *  @param  {NormalRange} [velocity=1] The velocity the note should be triggered at.\n\t\t *  @returns {Tone.Instrument} this\n\t\t *  @example\n\t\t * //trigger \"C4\" for the duration of an 8th note\n\t\t * synth.triggerAttackRelease(\"C4\", \"8n\");\n\t\t */\n\t    Tone.Instrument.prototype.triggerAttackRelease = function (note, duration, time, velocity) {\n\t        time = this.toSeconds(time);\n\t        duration = this.toSeconds(duration);\n\t        this.triggerAttack(note, time, velocity);\n\t        this.triggerRelease(time + duration);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.Instrument} this\n\t\t */\n\t    Tone.Instrument.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._volume.dispose();\n\t        this._volume = null;\n\t        this._writable(['volume']);\n\t        this.volume = null;\n\t        return this;\n\t    };\n\t    return Tone.Instrument;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  This is an abstract base class for other monophonic instruments to \n\t\t *          extend. IMPORTANT: It does not make any sound on its own and\n\t\t *          shouldn't be directly instantiated.\n\t\t *\n\t\t *  @constructor\n\t\t *  @abstract\n\t\t *  @extends {Tone.Instrument}\n\t\t */\n\t    Tone.Monophonic = function (options) {\n\t        //get the defaults\n\t        options = Tone.defaultArg(options, Tone.Monophonic.defaults);\n\t        Tone.Instrument.call(this, options);\n\t        /**\n\t\t\t *  The glide time between notes. \n\t\t\t *  @type {Time}\n\t\t\t */\n\t        this.portamento = options.portamento;\n\t    };\n\t    Tone.extend(Tone.Monophonic, Tone.Instrument);\n\t    /**\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Monophonic.defaults = { 'portamento': 0 };\n\t    /**\n\t\t *  Trigger the attack of the note optionally with a given velocity. \n\t\t *  \n\t\t *  \n\t\t *  @param  {Frequency} note     The note to trigger.\n\t\t *  @param  {Time} [time=now]     When the note should start.\n\t\t *  @param  {number} [velocity=1] velocity The velocity scaler \n\t\t *                                determines how \"loud\" the note \n\t\t *                                will be triggered.\n\t\t *  @returns {Tone.Monophonic} this\n\t\t *  @example\n\t\t * synth.triggerAttack(\"C4\");\n\t\t *  @example\n\t\t * //trigger the note a half second from now at half velocity\n\t\t * synth.triggerAttack(\"C4\", \"+0.5\", 0.5);\n\t\t */\n\t    Tone.Monophonic.prototype.triggerAttack = function (note, time, velocity) {\n\t        time = this.toSeconds(time);\n\t        this._triggerEnvelopeAttack(time, velocity);\n\t        this.setNote(note, time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Trigger the release portion of the envelope\n\t\t *  @param  {Time} [time=now] If no time is given, the release happens immediatly\n\t\t *  @returns {Tone.Monophonic} this\n\t\t *  @example\n\t\t * synth.triggerRelease();\n\t\t */\n\t    Tone.Monophonic.prototype.triggerRelease = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._triggerEnvelopeRelease(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  override this method with the actual method\n\t\t *  @abstract\n\t\t *  @private\n\t\t */\n\t    Tone.Monophonic.prototype._triggerEnvelopeAttack = function () {\n\t    };\n\t    /**\n\t\t *  override this method with the actual method\n\t\t *  @abstract\n\t\t *  @private\n\t\t */\n\t    Tone.Monophonic.prototype._triggerEnvelopeRelease = function () {\n\t    };\n\t    /**\n\t\t *  Set the note at the given time. If no time is given, the note\n\t\t *  will set immediately. \n\t\t *  @param {Frequency} note The note to change to.\n\t\t *  @param  {Time} [time=now] The time when the note should be set. \n\t\t *  @returns {Tone.Monophonic} this\n\t\t * @example\n\t\t * //change to F#6 in one quarter note from now.\n\t\t * synth.setNote(\"F#6\", \"+4n\");\n\t\t * @example\n\t\t * //change to Bb4 right now\n\t\t * synth.setNote(\"Bb4\");\n\t\t */\n\t    Tone.Monophonic.prototype.setNote = function (note, time) {\n\t        time = this.toSeconds(time);\n\t        if (this.portamento > 0) {\n\t            var currentNote = this.frequency.value;\n\t            this.frequency.setValueAtTime(currentNote, time);\n\t            var portTime = this.toSeconds(this.portamento);\n\t            this.frequency.exponentialRampToValueAtTime(note, time + portTime);\n\t        } else {\n\t            this.frequency.setValueAtTime(note, time);\n\t        }\n\t        return this;\n\t    };\n\t    return Tone.Monophonic;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Synth is composed simply of a Tone.OmniOscillator\n\t\t *          routed through a Tone.AmplitudeEnvelope. \n\t\t *          <img src=\"https://docs.google.com/drawings/d/1-1_0YW2Z1J2EPI36P8fNCMcZG7N1w1GZluPs4og4evo/pub?w=1163&h=231\">\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Monophonic}\n\t\t *  @param {Object} [options] the options available for the synth \n\t\t *                          see defaults below\n\t\t *  @example\n\t\t * var synth = new Tone.Synth().toMaster();\n\t\t * synth.triggerAttackRelease(\"C4\", \"8n\");\n\t\t */\n\t    Tone.Synth = function (options) {\n\t        //get the defaults\n\t        options = Tone.defaultArg(options, Tone.Synth.defaults);\n\t        Tone.Monophonic.call(this, options);\n\t        /**\n\t\t\t *  The oscillator.\n\t\t\t *  @type {Tone.OmniOscillator}\n\t\t\t */\n\t        this.oscillator = new Tone.OmniOscillator(options.oscillator);\n\t        /**\n\t\t\t *  The frequency control.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = this.oscillator.frequency;\n\t        /**\n\t\t\t *  The detune control.\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = this.oscillator.detune;\n\t        /**\n\t\t\t *  The amplitude envelope.\n\t\t\t *  @type {Tone.AmplitudeEnvelope}\n\t\t\t */\n\t        this.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\t        //connect the oscillators to the output\n\t        this.oscillator.chain(this.envelope, this.output);\n\t        //start the oscillators\n\t        this.oscillator.start();\n\t        this._readOnly([\n\t            'oscillator',\n\t            'frequency',\n\t            'detune',\n\t            'envelope'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.Synth, Tone.Monophonic);\n\t    /**\n\t\t *  @const\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Synth.defaults = {\n\t        'oscillator': { 'type': 'triangle' },\n\t        'envelope': {\n\t            'attack': 0.005,\n\t            'decay': 0.1,\n\t            'sustain': 0.3,\n\t            'release': 1\n\t        }\n\t    };\n\t    /**\n\t\t *  start the attack portion of the envelope\n\t\t *  @param {Time} [time=now] the time the attack should start\n\t\t *  @param {number} [velocity=1] the velocity of the note (0-1)\n\t\t *  @returns {Tone.Synth} this\n\t\t *  @private\n\t\t */\n\t    Tone.Synth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n\t        //the envelopes\n\t        this.envelope.triggerAttack(time, velocity);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  start the release portion of the envelope\n\t\t *  @param {Time} [time=now] the time the release should start\n\t\t *  @returns {Tone.Synth} this\n\t\t *  @private\n\t\t */\n\t    Tone.Synth.prototype._triggerEnvelopeRelease = function (time) {\n\t        this.envelope.triggerRelease(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.Synth} this\n\t\t */\n\t    Tone.Synth.prototype.dispose = function () {\n\t        Tone.Monophonic.prototype.dispose.call(this);\n\t        this._writable([\n\t            'oscillator',\n\t            'frequency',\n\t            'detune',\n\t            'envelope'\n\t        ]);\n\t        this.oscillator.dispose();\n\t        this.oscillator = null;\n\t        this.envelope.dispose();\n\t        this.envelope = null;\n\t        this.frequency = null;\n\t        this.detune = null;\n\t        return this;\n\t    };\n\t    return Tone.Synth;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  AMSynth uses the output of one Tone.Synth to modulate the\n\t\t *          amplitude of another Tone.Synth. The harmonicity (the ratio between\n\t\t *          the two signals) affects the timbre of the output signal greatly.\n\t\t *          Read more about Amplitude Modulation Synthesis on\n\t\t *          [SoundOnSound](https://web.archive.org/web/20160404103653/http://www.soundonsound.com:80/sos/mar00/articles/synthsecrets.htm).\n\t\t *          <img src=\"https://docs.google.com/drawings/d/1TQu8Ed4iFr1YTLKpB3U1_hur-UwBrh5gdBXc8BxfGKw/pub?w=1009&h=457\">\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Monophonic}\n\t\t *  @param {Object} [options] the options available for the synth\n\t\t *                            see defaults below\n\t\t *  @example\n\t\t * var synth = new Tone.AMSynth().toMaster();\n\t\t * synth.triggerAttackRelease(\"C4\", \"4n\");\n\t\t */\n\t    Tone.AMSynth = function (options) {\n\t        options = Tone.defaultArg(options, Tone.AMSynth.defaults);\n\t        Tone.Monophonic.call(this, options);\n\t        /**\n\t\t\t *  The carrier voice.\n\t\t\t *  @type {Tone.Synth}\n\t\t\t *  @private\n\t\t\t */\n\t        this._carrier = new Tone.Synth();\n\t        this._carrier.volume.value = -10;\n\t        /**\n\t\t\t *  The carrier's oscillator\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t */\n\t        this.oscillator = this._carrier.oscillator;\n\t        /**\n\t\t\t *  The carrier's envelope\n\t\t\t *  @type {Tone.AmplitudeEnvelope}\n\t\t\t */\n\t        this.envelope = this._carrier.envelope.set(options.envelope);\n\t        /**\n\t\t\t *  The modulator voice.\n\t\t\t *  @type {Tone.Synth}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulator = new Tone.Synth();\n\t        this._modulator.volume.value = -10;\n\t        /**\n\t\t\t *  The modulator's oscillator which is applied\n\t\t\t *  to the amplitude of the oscillator\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t */\n\t        this.modulation = this._modulator.oscillator.set(options.modulation);\n\t        /**\n\t\t\t *  The modulator's envelope\n\t\t\t *  @type {Tone.AmplitudeEnvelope}\n\t\t\t */\n\t        this.modulationEnvelope = this._modulator.envelope.set(options.modulationEnvelope);\n\t        /**\n\t\t\t *  The frequency.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.Signal(440, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The detune in cents\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\t        /**\n\t\t\t *  Harmonicity is the ratio between the two voices. A harmonicity of\n\t\t\t *  1 is no change. Harmonicity = 2 means a change of an octave.\n\t\t\t *  @type {Positive}\n\t\t\t *  @signal\n\t\t\t *  @example\n\t\t\t * //pitch voice1 an octave below voice0\n\t\t\t * synth.harmonicity.value = 0.5;\n\t\t\t */\n\t        this.harmonicity = new Tone.Multiply(options.harmonicity);\n\t        this.harmonicity.units = Tone.Type.Positive;\n\t        /**\n\t\t\t *  convert the -1,1 output to 0,1\n\t\t\t *  @type {Tone.AudioToGain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulationScale = new Tone.AudioToGain();\n\t        /**\n\t\t\t *  the node where the modulation happens\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulationNode = new Tone.Gain();\n\t        //control the two voices frequency\n\t        this.frequency.connect(this._carrier.frequency);\n\t        this.frequency.chain(this.harmonicity, this._modulator.frequency);\n\t        this.detune.fan(this._carrier.detune, this._modulator.detune);\n\t        this._modulator.chain(this._modulationScale, this._modulationNode.gain);\n\t        this._carrier.chain(this._modulationNode, this.output);\n\t        this._readOnly([\n\t            'frequency',\n\t            'harmonicity',\n\t            'oscillator',\n\t            'envelope',\n\t            'modulation',\n\t            'modulationEnvelope',\n\t            'detune'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.AMSynth, Tone.Monophonic);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.AMSynth.defaults = {\n\t        'harmonicity': 3,\n\t        'detune': 0,\n\t        'oscillator': { 'type': 'sine' },\n\t        'envelope': {\n\t            'attack': 0.01,\n\t            'decay': 0.01,\n\t            'sustain': 1,\n\t            'release': 0.5\n\t        },\n\t        'modulation': { 'type': 'square' },\n\t        'modulationEnvelope': {\n\t            'attack': 0.5,\n\t            'decay': 0,\n\t            'sustain': 1,\n\t            'release': 0.5\n\t        }\n\t    };\n\t    /**\n\t\t *  trigger the attack portion of the note\n\t\t *\n\t\t *  @param  {Time} [time=now] the time the note will occur\n\t\t *  @param {NormalRange} [velocity=1] the velocity of the note\n\t\t *  @private\n\t\t *  @returns {Tone.AMSynth} this\n\t\t */\n\t    Tone.AMSynth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n\t        //the port glide\n\t        time = this.toSeconds(time);\n\t        //the envelopes\n\t        this.envelope.triggerAttack(time, velocity);\n\t        this.modulationEnvelope.triggerAttack(time, velocity);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  trigger the release portion of the note\n\t\t *\n\t\t *  @param  {Time} [time=now] the time the note will release\n\t\t *  @private\n\t\t *  @returns {Tone.AMSynth} this\n\t\t */\n\t    Tone.AMSynth.prototype._triggerEnvelopeRelease = function (time) {\n\t        this.envelope.triggerRelease(time);\n\t        this.modulationEnvelope.triggerRelease(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.AMSynth} this\n\t\t */\n\t    Tone.AMSynth.prototype.dispose = function () {\n\t        Tone.Monophonic.prototype.dispose.call(this);\n\t        this._writable([\n\t            'frequency',\n\t            'harmonicity',\n\t            'oscillator',\n\t            'envelope',\n\t            'modulation',\n\t            'modulationEnvelope',\n\t            'detune'\n\t        ]);\n\t        this._carrier.dispose();\n\t        this._carrier = null;\n\t        this._modulator.dispose();\n\t        this._modulator = null;\n\t        this.frequency.dispose();\n\t        this.frequency = null;\n\t        this.detune.dispose();\n\t        this.detune = null;\n\t        this.harmonicity.dispose();\n\t        this.harmonicity = null;\n\t        this._modulationScale.dispose();\n\t        this._modulationScale = null;\n\t        this._modulationNode.dispose();\n\t        this._modulationNode = null;\n\t        this.oscillator = null;\n\t        this.envelope = null;\n\t        this.modulationEnvelope = null;\n\t        this.modulation = null;\n\t        return this;\n\t    };\n\t    return Tone.AMSynth;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.MonoSynth is composed of one oscillator, one filter, and two envelopes.\n\t\t *          The amplitude of the Tone.Oscillator and the cutoff frequency of the \n\t\t *          Tone.Filter are controlled by Tone.Envelopes. \n\t\t *          <img src=\"https://docs.google.com/drawings/d/1gaY1DF9_Hzkodqf8JI1Cg2VZfwSElpFQfI94IQwad38/pub?w=924&h=240\">\n\t\t *          \n\t\t *  @constructor\n\t\t *  @extends {Tone.Monophonic}\n\t\t *  @param {Object} [options] the options available for the synth \n\t\t *                          see defaults below\n\t\t *  @example\n\t\t * var synth = new Tone.MonoSynth({\n\t\t * \t\"oscillator\" : {\n\t\t * \t\t\"type\" : \"square\"\n\t\t *  },\n\t\t *  \"envelope\" : {\n\t\t *  \t\"attack\" : 0.1\n\t\t *  }\n\t\t * }).toMaster();\n\t\t * synth.triggerAttackRelease(\"C4\", \"8n\");\n\t\t */\n\t    Tone.MonoSynth = function (options) {\n\t        //get the defaults\n\t        options = Tone.defaultArg(options, Tone.MonoSynth.defaults);\n\t        Tone.Monophonic.call(this, options);\n\t        /**\n\t\t\t *  The oscillator.\n\t\t\t *  @type {Tone.OmniOscillator}\n\t\t\t */\n\t        this.oscillator = new Tone.OmniOscillator(options.oscillator);\n\t        /**\n\t\t\t *  The frequency control.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = this.oscillator.frequency;\n\t        /**\n\t\t\t *  The detune control.\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = this.oscillator.detune;\n\t        /**\n\t\t\t *  The filter.\n\t\t\t *  @type {Tone.Filter}\n\t\t\t */\n\t        this.filter = new Tone.Filter(options.filter);\n\t        /**\n\t\t\t *  The filter envelope.\n\t\t\t *  @type {Tone.FrequencyEnvelope}\n\t\t\t */\n\t        this.filterEnvelope = new Tone.FrequencyEnvelope(options.filterEnvelope);\n\t        /**\n\t\t\t *  The amplitude envelope.\n\t\t\t *  @type {Tone.AmplitudeEnvelope}\n\t\t\t */\n\t        this.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\t        //connect the oscillators to the output\n\t        this.oscillator.chain(this.filter, this.envelope, this.output);\n\t        //start the oscillators\n\t        this.oscillator.start();\n\t        //connect the filter envelope\n\t        this.filterEnvelope.connect(this.filter.frequency);\n\t        this._readOnly([\n\t            'oscillator',\n\t            'frequency',\n\t            'detune',\n\t            'filter',\n\t            'filterEnvelope',\n\t            'envelope'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.MonoSynth, Tone.Monophonic);\n\t    /**\n\t\t *  @const\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.MonoSynth.defaults = {\n\t        'frequency': 'C4',\n\t        'detune': 0,\n\t        'oscillator': { 'type': 'square' },\n\t        'filter': {\n\t            'Q': 6,\n\t            'type': 'lowpass',\n\t            'rolloff': -24\n\t        },\n\t        'envelope': {\n\t            'attack': 0.005,\n\t            'decay': 0.1,\n\t            'sustain': 0.9,\n\t            'release': 1\n\t        },\n\t        'filterEnvelope': {\n\t            'attack': 0.06,\n\t            'decay': 0.2,\n\t            'sustain': 0.5,\n\t            'release': 2,\n\t            'baseFrequency': 200,\n\t            'octaves': 7,\n\t            'exponent': 2\n\t        }\n\t    };\n\t    /**\n\t\t *  start the attack portion of the envelope\n\t\t *  @param {Time} [time=now] the time the attack should start\n\t\t *  @param {NormalRange} [velocity=1] the velocity of the note (0-1)\n\t\t *  @returns {Tone.MonoSynth} this\n\t\t *  @private\n\t\t */\n\t    Tone.MonoSynth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n\t        //the envelopes\n\t        this.envelope.triggerAttack(time, velocity);\n\t        this.filterEnvelope.triggerAttack(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  start the release portion of the envelope\n\t\t *  @param {Time} [time=now] the time the release should start\n\t\t *  @returns {Tone.MonoSynth} this\n\t\t *  @private\n\t\t */\n\t    Tone.MonoSynth.prototype._triggerEnvelopeRelease = function (time) {\n\t        this.envelope.triggerRelease(time);\n\t        this.filterEnvelope.triggerRelease(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.MonoSynth} this\n\t\t */\n\t    Tone.MonoSynth.prototype.dispose = function () {\n\t        Tone.Monophonic.prototype.dispose.call(this);\n\t        this._writable([\n\t            'oscillator',\n\t            'frequency',\n\t            'detune',\n\t            'filter',\n\t            'filterEnvelope',\n\t            'envelope'\n\t        ]);\n\t        this.oscillator.dispose();\n\t        this.oscillator = null;\n\t        this.envelope.dispose();\n\t        this.envelope = null;\n\t        this.filterEnvelope.dispose();\n\t        this.filterEnvelope = null;\n\t        this.filter.dispose();\n\t        this.filter = null;\n\t        this.frequency = null;\n\t        this.detune = null;\n\t        return this;\n\t    };\n\t    return Tone.MonoSynth;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.DuoSynth is a monophonic synth composed of two \n\t\t *          MonoSynths run in parallel with control over the \n\t\t *          frequency ratio between the two voices and vibrato effect.\n\t\t *          <img src=\"https://docs.google.com/drawings/d/1bL4GXvfRMMlqS7XyBm9CjL9KJPSUKbcdBNpqOlkFLxk/pub?w=1012&h=448\">\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Monophonic}\n\t\t *  @param {Object} [options] the options available for the synth \n\t\t *                          see defaults below\n\t\t *  @example\n\t\t * var duoSynth = new Tone.DuoSynth().toMaster();\n\t\t * duoSynth.triggerAttackRelease(\"C4\", \"2n\");\n\t\t */\n\t    Tone.DuoSynth = function (options) {\n\t        options = Tone.defaultArg(options, Tone.DuoSynth.defaults);\n\t        Tone.Monophonic.call(this, options);\n\t        /**\n\t\t\t *  the first voice\n\t\t\t *  @type {Tone.MonoSynth}\n\t\t\t */\n\t        this.voice0 = new Tone.MonoSynth(options.voice0);\n\t        this.voice0.volume.value = -10;\n\t        /**\n\t\t\t *  the second voice\n\t\t\t *  @type {Tone.MonoSynth}\n\t\t\t */\n\t        this.voice1 = new Tone.MonoSynth(options.voice1);\n\t        this.voice1.volume.value = -10;\n\t        /**\n\t\t\t *  The vibrato LFO. \n\t\t\t *  @type {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._vibrato = new Tone.LFO(options.vibratoRate, -50, 50);\n\t        this._vibrato.start();\n\t        /**\n\t\t\t * the vibrato frequency\n\t\t\t * @type {Frequency}\n\t\t\t * @signal\n\t\t\t */\n\t        this.vibratoRate = this._vibrato.frequency;\n\t        /**\n\t\t\t *  the vibrato gain\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._vibratoGain = new Tone.Gain(options.vibratoAmount, Tone.Type.Positive);\n\t        /**\n\t\t\t * The amount of vibrato\n\t\t\t * @type {Positive}\n\t\t\t * @signal\n\t\t\t */\n\t        this.vibratoAmount = this._vibratoGain.gain;\n\t        /**\n\t\t\t *  the frequency control\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.Signal(440, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  Harmonicity is the ratio between the two voices. A harmonicity of\n\t\t\t *  1 is no change. Harmonicity = 2 means a change of an octave. \n\t\t\t *  @type {Positive}\n\t\t\t *  @signal\n\t\t\t *  @example\n\t\t\t * //pitch voice1 an octave below voice0\n\t\t\t * duoSynth.harmonicity.value = 0.5;\n\t\t\t */\n\t        this.harmonicity = new Tone.Multiply(options.harmonicity);\n\t        this.harmonicity.units = Tone.Type.Positive;\n\t        //control the two voices frequency\n\t        this.frequency.connect(this.voice0.frequency);\n\t        this.frequency.chain(this.harmonicity, this.voice1.frequency);\n\t        this._vibrato.connect(this._vibratoGain);\n\t        this._vibratoGain.fan(this.voice0.detune, this.voice1.detune);\n\t        this.voice0.connect(this.output);\n\t        this.voice1.connect(this.output);\n\t        this._readOnly([\n\t            'voice0',\n\t            'voice1',\n\t            'frequency',\n\t            'vibratoAmount',\n\t            'vibratoRate'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.DuoSynth, Tone.Monophonic);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.DuoSynth.defaults = {\n\t        'vibratoAmount': 0.5,\n\t        'vibratoRate': 5,\n\t        'harmonicity': 1.5,\n\t        'voice0': {\n\t            'volume': -10,\n\t            'portamento': 0,\n\t            'oscillator': { 'type': 'sine' },\n\t            'filterEnvelope': {\n\t                'attack': 0.01,\n\t                'decay': 0,\n\t                'sustain': 1,\n\t                'release': 0.5\n\t            },\n\t            'envelope': {\n\t                'attack': 0.01,\n\t                'decay': 0,\n\t                'sustain': 1,\n\t                'release': 0.5\n\t            }\n\t        },\n\t        'voice1': {\n\t            'volume': -10,\n\t            'portamento': 0,\n\t            'oscillator': { 'type': 'sine' },\n\t            'filterEnvelope': {\n\t                'attack': 0.01,\n\t                'decay': 0,\n\t                'sustain': 1,\n\t                'release': 0.5\n\t            },\n\t            'envelope': {\n\t                'attack': 0.01,\n\t                'decay': 0,\n\t                'sustain': 1,\n\t                'release': 0.5\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  start the attack portion of the envelopes\n\t\t *  \n\t\t *  @param {Time} [time=now] the time the attack should start\n\t\t *  @param {NormalRange} [velocity=1] the velocity of the note (0-1)\n\t\t *  @returns {Tone.DuoSynth} this\n\t\t *  @private\n\t\t */\n\t    Tone.DuoSynth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n\t        time = this.toSeconds(time);\n\t        this.voice0.envelope.triggerAttack(time, velocity);\n\t        this.voice1.envelope.triggerAttack(time, velocity);\n\t        this.voice0.filterEnvelope.triggerAttack(time);\n\t        this.voice1.filterEnvelope.triggerAttack(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  start the release portion of the envelopes\n\t\t *  \n\t\t *  @param {Time} [time=now] the time the release should start\n\t\t *  @returns {Tone.DuoSynth} this\n\t\t *  @private\n\t\t */\n\t    Tone.DuoSynth.prototype._triggerEnvelopeRelease = function (time) {\n\t        this.voice0.triggerRelease(time);\n\t        this.voice1.triggerRelease(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.DuoSynth} this\n\t\t */\n\t    Tone.DuoSynth.prototype.dispose = function () {\n\t        Tone.Monophonic.prototype.dispose.call(this);\n\t        this._writable([\n\t            'voice0',\n\t            'voice1',\n\t            'frequency',\n\t            'vibratoAmount',\n\t            'vibratoRate'\n\t        ]);\n\t        this.voice0.dispose();\n\t        this.voice0 = null;\n\t        this.voice1.dispose();\n\t        this.voice1 = null;\n\t        this.frequency.dispose();\n\t        this.frequency = null;\n\t        this._vibratoGain.dispose();\n\t        this._vibratoGain = null;\n\t        this._vibrato = null;\n\t        this.harmonicity.dispose();\n\t        this.harmonicity = null;\n\t        this.vibratoAmount.dispose();\n\t        this.vibratoAmount = null;\n\t        this.vibratoRate = null;\n\t        return this;\n\t    };\n\t    return Tone.DuoSynth;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  FMSynth is composed of two Tone.Synths where one Tone.Synth modulates\n\t\t *          the frequency of a second Tone.Synth. A lot of spectral content \n\t\t *          can be explored using the modulationIndex parameter. Read more about\n\t\t *          frequency modulation synthesis on Sound On Sound: [Part 1](https://web.archive.org/web/20160403123704/http://www.soundonsound.com/sos/apr00/articles/synthsecrets.htm), [Part 2](https://web.archive.org/web/20160403115835/http://www.soundonsound.com/sos/may00/articles/synth.htm).\n\t\t *          <img src=\"https://docs.google.com/drawings/d/1h0PUDZXPgi4Ikx6bVT6oncrYPLluFKy7lj53puxj-DM/pub?w=902&h=462\">\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Monophonic}\n\t\t *  @param {Object} [options] the options available for the synth\n\t\t *                          see defaults below\n\t\t *  @example\n\t\t * var fmSynth = new Tone.FMSynth().toMaster();\n\t\t * fmSynth.triggerAttackRelease(\"C5\", \"4n\");\n\t\t */\n\t    Tone.FMSynth = function (options) {\n\t        options = Tone.defaultArg(options, Tone.FMSynth.defaults);\n\t        Tone.Monophonic.call(this, options);\n\t        /**\n\t\t\t *  The carrier voice.\n\t\t\t *  @type {Tone.Synth}\n\t\t\t *  @private\n\t\t\t */\n\t        this._carrier = new Tone.Synth(options.carrier);\n\t        this._carrier.volume.value = -10;\n\t        /**\n\t\t\t *  The carrier's oscillator\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t */\n\t        this.oscillator = this._carrier.oscillator;\n\t        /**\n\t\t\t *  The carrier's envelope\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t */\n\t        this.envelope = this._carrier.envelope.set(options.envelope);\n\t        /**\n\t\t\t *  The modulator voice.\n\t\t\t *  @type {Tone.Synth}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulator = new Tone.Synth(options.modulator);\n\t        this._modulator.volume.value = -10;\n\t        /**\n\t\t\t *  The modulator's oscillator which is applied\n\t\t\t *  to the amplitude of the oscillator\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t */\n\t        this.modulation = this._modulator.oscillator.set(options.modulation);\n\t        /**\n\t\t\t *  The modulator's envelope\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t */\n\t        this.modulationEnvelope = this._modulator.envelope.set(options.modulationEnvelope);\n\t        /**\n\t\t\t *  The frequency control.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.Signal(440, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The detune in cents\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\t        /**\n\t\t\t *  Harmonicity is the ratio between the two voices. A harmonicity of\n\t\t\t *  1 is no change. Harmonicity = 2 means a change of an octave.\n\t\t\t *  @type {Positive}\n\t\t\t *  @signal\n\t\t\t *  @example\n\t\t\t * //pitch voice1 an octave below voice0\n\t\t\t * synth.harmonicity.value = 0.5;\n\t\t\t */\n\t        this.harmonicity = new Tone.Multiply(options.harmonicity);\n\t        this.harmonicity.units = Tone.Type.Positive;\n\t        /**\n\t\t\t *  The modulation index which essentially the depth or amount of the modulation. It is the\n\t\t\t *  ratio of the frequency of the modulating signal (mf) to the amplitude of the\n\t\t\t *  modulating signal (ma) -- as in ma/mf.\n\t\t\t *\t@type {Positive}\n\t\t\t *\t@signal\n\t\t\t */\n\t        this.modulationIndex = new Tone.Multiply(options.modulationIndex);\n\t        this.modulationIndex.units = Tone.Type.Positive;\n\t        /**\n\t\t\t *  the node where the modulation happens\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulationNode = new Tone.Gain(0);\n\t        //control the two voices frequency\n\t        this.frequency.connect(this._carrier.frequency);\n\t        this.frequency.chain(this.harmonicity, this._modulator.frequency);\n\t        this.frequency.chain(this.modulationIndex, this._modulationNode);\n\t        this.detune.fan(this._carrier.detune, this._modulator.detune);\n\t        this._modulator.connect(this._modulationNode.gain);\n\t        this._modulationNode.connect(this._carrier.frequency);\n\t        this._carrier.connect(this.output);\n\t        this._readOnly([\n\t            'frequency',\n\t            'harmonicity',\n\t            'modulationIndex',\n\t            'oscillator',\n\t            'envelope',\n\t            'modulation',\n\t            'modulationEnvelope',\n\t            'detune'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.FMSynth, Tone.Monophonic);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.FMSynth.defaults = {\n\t        'harmonicity': 3,\n\t        'modulationIndex': 10,\n\t        'detune': 0,\n\t        'oscillator': { 'type': 'sine' },\n\t        'envelope': {\n\t            'attack': 0.01,\n\t            'decay': 0.01,\n\t            'sustain': 1,\n\t            'release': 0.5\n\t        },\n\t        'modulation': { 'type': 'square' },\n\t        'modulationEnvelope': {\n\t            'attack': 0.5,\n\t            'decay': 0,\n\t            'sustain': 1,\n\t            'release': 0.5\n\t        }\n\t    };\n\t    /**\n\t\t * \ttrigger the attack portion of the note\n\t\t *\n\t\t *  @param  {Time} [time=now] the time the note will occur\n\t\t *  @param {number} [velocity=1] the velocity of the note\n\t\t *  @returns {Tone.FMSynth} this\n\t\t *  @private\n\t\t */\n\t    Tone.FMSynth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n\t        time = this.toSeconds(time);\n\t        //the envelopes\n\t        this.envelope.triggerAttack(time, velocity);\n\t        this.modulationEnvelope.triggerAttack(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  trigger the release portion of the note\n\t\t *\n\t\t *  @param  {Time} [time=now] the time the note will release\n\t\t *  @returns {Tone.FMSynth} this\n\t\t *  @private\n\t\t */\n\t    Tone.FMSynth.prototype._triggerEnvelopeRelease = function (time) {\n\t        time = this.toSeconds(time);\n\t        this.envelope.triggerRelease(time);\n\t        this.modulationEnvelope.triggerRelease(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.FMSynth} this\n\t\t */\n\t    Tone.FMSynth.prototype.dispose = function () {\n\t        Tone.Monophonic.prototype.dispose.call(this);\n\t        this._writable([\n\t            'frequency',\n\t            'harmonicity',\n\t            'modulationIndex',\n\t            'oscillator',\n\t            'envelope',\n\t            'modulation',\n\t            'modulationEnvelope',\n\t            'detune'\n\t        ]);\n\t        this._carrier.dispose();\n\t        this._carrier = null;\n\t        this._modulator.dispose();\n\t        this._modulator = null;\n\t        this.frequency.dispose();\n\t        this.frequency = null;\n\t        this.detune.dispose();\n\t        this.detune = null;\n\t        this.modulationIndex.dispose();\n\t        this.modulationIndex = null;\n\t        this.harmonicity.dispose();\n\t        this.harmonicity = null;\n\t        this._modulationNode.dispose();\n\t        this._modulationNode = null;\n\t        this.oscillator = null;\n\t        this.envelope = null;\n\t        this.modulationEnvelope = null;\n\t        this.modulation = null;\n\t        return this;\n\t    };\n\t    return Tone.FMSynth;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.MembraneSynth makes kick and tom sounds using a single oscillator\n\t\t *          with an amplitude envelope and frequency ramp. A Tone.OmniOscillator\n\t\t *          is routed through a Tone.AmplitudeEnvelope to the output. The drum\n\t\t *          quality of the sound comes from the frequency envelope applied\n\t\t *          during during Tone.MembraneSynth.triggerAttack(note). The frequency\n\t\t *          envelope starts at <code>note * .octaves</code> and ramps to \n\t\t *          <code>note</code> over the duration of <code>.pitchDecay</code>. \n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Instrument}\n\t\t *  @param {Object} [options] the options available for the synth \n\t\t *                          see defaults below\n\t\t *  @example\n\t\t * var synth = new Tone.MembraneSynth().toMaster();\n\t\t * synth.triggerAttackRelease(\"C2\", \"8n\");\n\t\t */\n\t    Tone.MembraneSynth = function (options) {\n\t        options = Tone.defaultArg(options, Tone.MembraneSynth.defaults);\n\t        Tone.Instrument.call(this, options);\n\t        /**\n\t\t\t *  The oscillator.\n\t\t\t *  @type {Tone.OmniOscillator}\n\t\t\t */\n\t        this.oscillator = new Tone.OmniOscillator(options.oscillator).start();\n\t        /**\n\t\t\t *  The amplitude envelope.\n\t\t\t *  @type {Tone.AmplitudeEnvelope}\n\t\t\t */\n\t        this.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\t        /**\n\t\t\t *  The number of octaves the pitch envelope ramps.\n\t\t\t *  @type {Positive}\n\t\t\t */\n\t        this.octaves = options.octaves;\n\t        /**\n\t\t\t *  The amount of time the frequency envelope takes. \n\t\t\t *  @type {Time}\n\t\t\t */\n\t        this.pitchDecay = options.pitchDecay;\n\t        this.oscillator.chain(this.envelope, this.output);\n\t        this._readOnly([\n\t            'oscillator',\n\t            'envelope'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.MembraneSynth, Tone.Instrument);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.MembraneSynth.defaults = {\n\t        'pitchDecay': 0.05,\n\t        'octaves': 10,\n\t        'oscillator': { 'type': 'sine' },\n\t        'envelope': {\n\t            'attack': 0.001,\n\t            'decay': 0.4,\n\t            'sustain': 0.01,\n\t            'release': 1.4,\n\t            'attackCurve': 'exponential'\n\t        }\n\t    };\n\t    /**\n\t\t *  Trigger the note at the given time with the given velocity. \n\t\t *  \n\t\t *  @param  {Frequency} note     the note\n\t\t *  @param  {Time} [time=now]     the time, if not given is now\n\t\t *  @param  {number} [velocity=1] velocity defaults to 1\n\t\t *  @returns {Tone.MembraneSynth} this\n\t\t *  @example\n\t\t *  kick.triggerAttack(60);\n\t\t */\n\t    Tone.MembraneSynth.prototype.triggerAttack = function (note, time, velocity) {\n\t        time = this.toSeconds(time);\n\t        note = this.toFrequency(note);\n\t        var maxNote = note * this.octaves;\n\t        this.oscillator.frequency.setValueAtTime(maxNote, time);\n\t        this.oscillator.frequency.exponentialRampToValueAtTime(note, time + this.toSeconds(this.pitchDecay));\n\t        this.envelope.triggerAttack(time, velocity);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Trigger the release portion of the note.\n\t\t *  \n\t\t *  @param  {Time} [time=now] the time the note will release\n\t\t *  @returns {Tone.MembraneSynth} this\n\t\t */\n\t    Tone.MembraneSynth.prototype.triggerRelease = function (time) {\n\t        this.envelope.triggerRelease(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.MembraneSynth} this\n\t\t */\n\t    Tone.MembraneSynth.prototype.dispose = function () {\n\t        Tone.Instrument.prototype.dispose.call(this);\n\t        this._writable([\n\t            'oscillator',\n\t            'envelope'\n\t        ]);\n\t        this.oscillator.dispose();\n\t        this.oscillator = null;\n\t        this.envelope.dispose();\n\t        this.envelope = null;\n\t        return this;\n\t    };\n\t    return Tone.MembraneSynth;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  Inharmonic ratio of frequencies based on the Roland TR-808\n\t\t *  Taken from https://ccrma.stanford.edu/papers/tr-808-cymbal-physically-informed-circuit-bendable-digital-model\n\t\t *  @private\n\t\t *  @static\n\t\t *  @type {Array}\n\t\t */\n\t    var inharmRatios = [\n\t        1,\n\t        1.483,\n\t        1.932,\n\t        2.546,\n\t        2.63,\n\t        3.897\n\t    ];\n\t    /**\n\t\t *  @class  A highly inharmonic and spectrally complex source with a highpass filter\n\t\t *          and amplitude envelope which is good for making metalophone sounds. Based\n\t\t *          on CymbalSynth by [@polyrhythmatic](https://github.com/polyrhythmatic).\n\t\t *          Inspiration from [Sound on Sound](https://web.archive.org/web/20160610143924/https://www.soundonsound.com/sos/jul02/articles/synthsecrets0702.asp).\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Instrument}\n\t\t *  @param {Object} [options] The options availble for the synth\n\t\t *                             see defaults below\n\t\t */\n\t    Tone.MetalSynth = function (options) {\n\t        options = Tone.defaultArg(options, Tone.MetalSynth.defaults);\n\t        Tone.Instrument.call(this, options);\n\t        /**\n\t\t\t *  The frequency of the cymbal\n\t\t\t *  @type  {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The array of FMOscillators\n\t\t\t *  @type  {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._oscillators = [];\n\t        /**\n\t\t\t *  The frequency multipliers\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._freqMultipliers = [];\n\t        /**\n\t\t\t *  The amplitude for the body\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._amplitue = new Tone.Gain(0).connect(this.output);\n\t        /**\n\t\t\t *  highpass the output\n\t\t\t *  @type {Tone.Filter}\n\t\t\t *  @private\n\t\t\t */\n\t        this._highpass = new Tone.Filter({\n\t            'type': 'highpass',\n\t            'Q': -3.0102999566398125\n\t        }).connect(this._amplitue);\n\t        /**\n\t\t\t *  The number of octaves the highpass\n\t\t\t *  filter frequency ramps\n\t\t\t *  @type {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._octaves = options.octaves;\n\t        /**\n\t\t\t *  Scale the body envelope\n\t\t\t *  for the bandpass\n\t\t\t *  @type {Tone.Scale}\n\t\t\t *  @private\n\t\t\t */\n\t        this._filterFreqScaler = new Tone.Scale(options.resonance, 7000);\n\t        /**\n\t\t\t *  The envelope which is connected both to the\n\t\t\t *  amplitude and highpass filter's cutoff frequency\n\t\t\t *  @type  {Tone.Envelope}\n\t\t\t */\n\t        this.envelope = new Tone.Envelope({\n\t            'attack': options.envelope.attack,\n\t            'attackCurve': 'linear',\n\t            'decay': options.envelope.decay,\n\t            'sustain': 0,\n\t            'release': options.envelope.release\n\t        }).chain(this._filterFreqScaler, this._highpass.frequency);\n\t        this.envelope.connect(this._amplitue.gain);\n\t        for (var i = 0; i < inharmRatios.length; i++) {\n\t            var osc = new Tone.FMOscillator({\n\t                'type': 'square',\n\t                'modulationType': 'square',\n\t                'harmonicity': options.harmonicity,\n\t                'modulationIndex': options.modulationIndex\n\t            });\n\t            osc.connect(this._highpass).start();\n\t            this._oscillators[i] = osc;\n\t            var mult = new Tone.Multiply(inharmRatios[i]);\n\t            this._freqMultipliers[i] = mult;\n\t            this.frequency.chain(mult, osc.frequency);\n\t        }\n\t        //set the octaves\n\t        this.octaves = options.octaves;\n\t    };\n\t    Tone.extend(Tone.MetalSynth, Tone.Instrument);\n\t    /**\n\t\t *  default values\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.MetalSynth.defaults = {\n\t        'frequency': 200,\n\t        'envelope': {\n\t            'attack': 0.001,\n\t            'decay': 1.4,\n\t            'release': 0.2\n\t        },\n\t        'harmonicity': 5.1,\n\t        'modulationIndex': 32,\n\t        'resonance': 4000,\n\t        'octaves': 1.5\n\t    };\n\t    /**\n\t\t *  Trigger the attack.\n\t\t *  @param  {Time}  time      When the attack should be triggered.\n\t\t *  @param  {NormalRange}  [velocity=1]  The velocity that the envelope should be triggered at.\n\t\t *  @return  {Tone.MetalSynth}  this\n\t\t */\n\t    Tone.MetalSynth.prototype.triggerAttack = function (time, vel) {\n\t        time = this.toSeconds(time);\n\t        vel = Tone.defaultArg(vel, 1);\n\t        this.envelope.triggerAttack(time, vel);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Trigger the release of the envelope.\n\t\t *  @param  {Time}  time      When the release should be triggered.\n\t\t *  @return  {Tone.MetalSynth}  this\n\t\t */\n\t    Tone.MetalSynth.prototype.triggerRelease = function (time) {\n\t        time = this.toSeconds(time);\n\t        this.envelope.triggerRelease(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Trigger the attack and release of the envelope after the given\n\t\t *  duration.\n\t\t *  @param  {Time}  duration  The duration before triggering the release\n\t\t *  @param  {Time}  time      When the attack should be triggered.\n\t\t *  @param  {NormalRange}  [velocity=1]  The velocity that the envelope should be triggered at.\n\t\t *  @return  {Tone.MetalSynth}  this\n\t\t */\n\t    Tone.MetalSynth.prototype.triggerAttackRelease = function (duration, time, velocity) {\n\t        time = this.toSeconds(time);\n\t        duration = this.toSeconds(duration);\n\t        this.triggerAttack(time, velocity);\n\t        this.triggerRelease(time + duration);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  The modulationIndex of the oscillators which make up the source.\n\t\t *  see Tone.FMOscillator.modulationIndex\n\t\t *  @memberOf Tone.MetalSynth#\n\t\t *  @type {Positive}\n\t\t *  @name  modulationIndex\n\t\t */\n\t    Object.defineProperty(Tone.MetalSynth.prototype, 'modulationIndex', {\n\t        get: function () {\n\t            return this._oscillators[0].modulationIndex.value;\n\t        },\n\t        set: function (val) {\n\t            for (var i = 0; i < this._oscillators.length; i++) {\n\t                this._oscillators[i].modulationIndex.value = val;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  The harmonicity of the oscillators which make up the source.\n\t\t *  see Tone.FMOscillator.harmonicity\n\t\t *  @memberOf Tone.MetalSynth#\n\t\t *  @type {Positive}\n\t\t *  @name  harmonicity\n\t\t */\n\t    Object.defineProperty(Tone.MetalSynth.prototype, 'harmonicity', {\n\t        get: function () {\n\t            return this._oscillators[0].harmonicity.value;\n\t        },\n\t        set: function (val) {\n\t            for (var i = 0; i < this._oscillators.length; i++) {\n\t                this._oscillators[i].harmonicity.value = val;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  The frequency of the highpass filter attached to the envelope\n\t\t *  @memberOf Tone.MetalSynth#\n\t\t *  @type {Frequency}\n\t\t *  @name  resonance\n\t\t */\n\t    Object.defineProperty(Tone.MetalSynth.prototype, 'resonance', {\n\t        get: function () {\n\t            return this._filterFreqScaler.min;\n\t        },\n\t        set: function (val) {\n\t            this._filterFreqScaler.min = val;\n\t            this.octaves = this._octaves;\n\t        }\n\t    });\n\t    /**\n\t\t *  The number of octaves above the \"resonance\" frequency\n\t\t *  that the filter ramps during the attack/decay envelope\n\t\t *  @memberOf Tone.MetalSynth#\n\t\t *  @type {Number}\n\t\t *  @name  octaves\n\t\t */\n\t    Object.defineProperty(Tone.MetalSynth.prototype, 'octaves', {\n\t        get: function () {\n\t            return this._octaves;\n\t        },\n\t        set: function (octs) {\n\t            this._octaves = octs;\n\t            this._filterFreqScaler.max = this._filterFreqScaler.min * Math.pow(2, octs);\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up\n\t\t *  @returns {Tone.MetalSynth} this\n\t\t */\n\t    Tone.MetalSynth.prototype.dispose = function () {\n\t        Tone.Instrument.prototype.dispose.call(this);\n\t        for (var i = 0; i < this._oscillators.length; i++) {\n\t            this._oscillators[i].dispose();\n\t            this._freqMultipliers[i].dispose();\n\t        }\n\t        this._oscillators = null;\n\t        this._freqMultipliers = null;\n\t        this.frequency.dispose();\n\t        this.frequency = null;\n\t        this._filterFreqScaler.dispose();\n\t        this._filterFreqScaler = null;\n\t        this._amplitue.dispose();\n\t        this._amplitue = null;\n\t        this.envelope.dispose();\n\t        this.envelope = null;\n\t        this._highpass.dispose();\n\t        this._highpass = null;\n\t    };\n\t    return Tone.MetalSynth;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  BufferSource polyfill\n\t\t */\n\t    if (window.AudioBufferSourceNode && !AudioBufferSourceNode.prototype.start) {\n\t        AudioBufferSourceNode.prototype.start = AudioBufferSourceNode.prototype.noteGrainOn;\n\t        AudioBufferSourceNode.prototype.stop = AudioBufferSourceNode.prototype.noteOff;\n\t    }\n\t    /**\n\t\t *  @class Wrapper around the native BufferSourceNode.\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @param  {AudioBuffer|Tone.Buffer}  buffer   The buffer to play\n\t\t *  @param  {Function}  onload  The callback to invoke when the\n\t\t *                               buffer is done playing.\n\t\t */\n\t    Tone.BufferSource = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'buffer',\n\t            'onload'\n\t        ], Tone.BufferSource);\n\t        Tone.AudioNode.call(this);\n\t        /**\n\t\t\t *  The callback to invoke after the\n\t\t\t *  buffer source is done playing.\n\t\t\t *  @type  {Function}\n\t\t\t */\n\t        this.onended = options.onended;\n\t        /**\n\t\t\t *  The time that the buffer was started.\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._startTime = -1;\n\t        /**\n\t\t\t *  The time that the buffer is scheduled to stop.\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._stopTime = -1;\n\t        /**\n\t\t\t *  The gain node which envelopes the BufferSource\n\t\t\t *  @type  {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._gainNode = this.output = new Tone.Gain();\n\t        /**\n\t\t\t *  The buffer source\n\t\t\t *  @type  {AudioBufferSourceNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._source = this.context.createBufferSource();\n\t        this._source.connect(this._gainNode);\n\t        /**\n\t\t\t * The private buffer instance\n\t\t\t * @type {Tone.Buffer}\n\t\t\t * @private\n\t\t\t */\n\t        this._buffer = new Tone.Buffer(options.buffer, options.onload);\n\t        /**\n\t\t\t *  The playbackRate of the buffer\n\t\t\t *  @type {Positive}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.playbackRate = new Tone.Param(this._source.playbackRate, Tone.Type.Positive);\n\t        /**\n\t\t\t *  The fadeIn time of the amplitude envelope.\n\t\t\t *  @type {Time}\n\t\t\t */\n\t        this.fadeIn = options.fadeIn;\n\t        /**\n\t\t\t *  The fadeOut time of the amplitude envelope.\n\t\t\t *  @type {Time}\n\t\t\t */\n\t        this.fadeOut = options.fadeOut;\n\t        /**\n\t\t\t * The curve applied to the fades, either \"linear\" or \"exponential\"\n\t\t\t * @type {String}\n\t\t\t */\n\t        this.curve = options.curve;\n\t        /**\n\t\t\t *  The value that the buffer ramps to\n\t\t\t *  @type {Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._gain = 1;\n\t        /**\n\t\t\t * The onended timeout\n\t\t\t * @type {Number}\n\t\t\t * @private\n\t\t\t */\n\t        this._onendedTimeout = -1;\n\t        //set some values initially\n\t        this.loop = options.loop;\n\t        this.loopStart = options.loopStart;\n\t        this.loopEnd = options.loopEnd;\n\t        this.playbackRate.value = options.playbackRate;\n\t    };\n\t    Tone.extend(Tone.BufferSource, Tone.AudioNode);\n\t    /**\n\t\t *  The defaults\n\t\t *  @const\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.BufferSource.defaults = {\n\t        'onended': Tone.noOp,\n\t        'onload': Tone.noOp,\n\t        'loop': false,\n\t        'loopStart': 0,\n\t        'loopEnd': 0,\n\t        'fadeIn': 0,\n\t        'fadeOut': 0,\n\t        'curve': 'linear',\n\t        'playbackRate': 1\n\t    };\n\t    /**\n\t\t *  Returns the playback state of the source, either \"started\" or \"stopped\".\n\t\t *  @type {Tone.State}\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.BufferSource#\n\t\t *  @name state\n\t\t */\n\t    Object.defineProperty(Tone.BufferSource.prototype, 'state', {\n\t        get: function () {\n\t            var now = this.now();\n\t            if (this._startTime !== -1 && now >= this._startTime && now < this._stopTime) {\n\t                return Tone.State.Started;\n\t            } else {\n\t                return Tone.State.Stopped;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Start the buffer\n\t\t *  @param  {Time} [startTime=now] When the player should start.\n\t\t *  @param  {Time} [offset=0] The offset from the beginning of the sample\n\t\t *                                 to start at.\n\t\t *  @param  {Time=} duration How long the sample should play. If no duration\n\t\t *                                is given, it will default to the full length\n\t\t *                                of the sample (minus any offset)\n\t\t *  @param  {Gain}  [gain=1]  The gain to play the buffer back at.\n\t\t *  @param  {Time=}  fadeInTime  The optional fadeIn ramp time.\n\t\t *  @return  {Tone.BufferSource}  this\n\t\t */\n\t    Tone.BufferSource.prototype.start = function (time, offset, duration, gain, fadeInTime) {\n\t        if (this._startTime !== -1) {\n\t            throw new Error('Tone.BufferSource can only be started once.');\n\t        }\n\t        if (this.buffer.loaded) {\n\t            time = this.toSeconds(time);\n\t            //if it's a loop the default offset is the loopstart point\n\t            if (this.loop) {\n\t                offset = Tone.defaultArg(offset, this.loopStart);\n\t            } else {\n\t                //otherwise the default offset is 0\n\t                offset = Tone.defaultArg(offset, 0);\n\t            }\n\t            offset = this.toSeconds(offset);\n\t            gain = Tone.defaultArg(gain, 1);\n\t            this._gain = gain;\n\t            fadeInTime = this.toSeconds(Tone.defaultArg(fadeInTime, this.fadeIn));\n\t            this.fadeIn = fadeInTime;\n\t            if (fadeInTime > 0) {\n\t                this._gainNode.gain.setValueAtTime(0, time);\n\t                if (this.curve === 'linear') {\n\t                    this._gainNode.gain.linearRampToValueAtTime(this._gain, time + fadeInTime);\n\t                } else {\n\t                    this._gainNode.gain.setTargetAtTime(this._gain, time, this._gainNode.gain.getTimeConstant(fadeInTime));\n\t                }\n\t            } else {\n\t                this._gainNode.gain.setValueAtTime(gain, time);\n\t            }\n\t            this._startTime = time;\n\t            var computedDur = this.toSeconds(Tone.defaultArg(duration, this.buffer.duration - offset));\n\t            computedDur = Math.max(computedDur, 0);\n\t            if (!this.loop || this.loop && !Tone.isUndef(duration)) {\n\t                //clip the duration when not looping\n\t                if (!this.loop) {\n\t                    computedDur = Math.min(computedDur, this.buffer.duration - offset);\n\t                }\n\t                this.stop(time + computedDur, this.fadeOut);\n\t            }\n\t            //start the buffer source\n\t            if (this.loop) {\n\t                //modify the offset if it's greater than the loop time\n\t                var loopEnd = this.loopEnd || this.buffer.duration;\n\t                var loopStart = this.loopStart;\n\t                var loopDuration = loopEnd - loopStart;\n\t                //move the offset back\n\t                if (offset > loopEnd) {\n\t                    offset = (offset - loopStart) % loopDuration + loopStart;\n\t                }\n\t            }\n\t            this._source.buffer = this.buffer.get();\n\t            this._source.loopEnd = this.loopEnd || this.buffer.duration;\n\t            Tone.isPast(time);\n\t            this._source.start(time, offset);\n\t        } else {\n\t            throw new Error('Tone.BufferSource: buffer is either not set or not loaded.');\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Stop the buffer. Optionally add a ramp time to fade the\n\t\t *  buffer out.\n\t\t *  @param  {Time=}  time         The time the buffer should stop.\n\t\t *  @param  {Time=}  fadeOutTime  How long the gain should fade out for\n\t\t *  @return  {Tone.BufferSource}  this\n\t\t */\n\t    Tone.BufferSource.prototype.stop = function (time, fadeOutTime) {\n\t        if (this.buffer.loaded) {\n\t            time = this.toSeconds(time);\n\t            //if this is before the previous stop\n\t            if (this._stopTime === -1 || this._stopTime > time) {\n\t                //stop if it's schedule before the start time\n\t                if (time <= this._startTime) {\n\t                    this._gainNode.gain.cancelScheduledValues(time);\n\t                    this._gainNode.gain.value = 0;\n\t                    return this;\n\t                }\n\t                time = Math.max(this._startTime + this.fadeIn + this.sampleTime, time);\n\t                //cancel the previous curve\n\t                this._gainNode.gain.cancelScheduledValues(time);\n\t                this._stopTime = time;\n\t                //the fadeOut time\n\t                fadeOutTime = this.toSeconds(Tone.defaultArg(fadeOutTime, this.fadeOut));\n\t                //set a new one\n\t                var heldDuration = Math.min(time - this._startTime - this.fadeIn - this.sampleTime, this.buffer.duration);\n\t                fadeOutTime = Math.min(heldDuration, fadeOutTime);\n\t                var startFade = time - fadeOutTime;\n\t                if (fadeOutTime > this.sampleTime) {\n\t                    this._gainNode.gain.setValueAtTime(this._gain, startFade);\n\t                    if (this.curve === 'linear') {\n\t                        this._gainNode.gain.linearRampToValueAtTime(0, time);\n\t                    } else {\n\t                        this._gainNode.gain.setTargetAtTime(0, startFade, this._gainNode.gain.getTimeConstant(fadeOutTime));\n\t                    }\n\t                } else {\n\t                    this._gainNode.gain.setValueAtTime(0, time);\n\t                }\n\t                Tone.context.clearTimeout(this._onendedTimeout);\n\t                this._onendedTimeout = Tone.context.setTimeout(this._onended.bind(this), this._stopTime - this.now());\n\t            }\n\t        } else {\n\t            throw new Error('Tone.BufferSource: buffer is either not set or not loaded.');\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Internal callback when the buffer is ended.\n\t\t *  Invokes `onended` and disposes the node.\n\t\t *  @private\n\t\t */\n\t    Tone.BufferSource.prototype._onended = function () {\n\t        this.onended(this);\n\t    };\n\t    /**\n\t\t * If loop is true, the loop will start at this position.\n\t\t * @memberOf Tone.BufferSource#\n\t\t * @type {Time}\n\t\t * @name loopStart\n\t\t */\n\t    Object.defineProperty(Tone.BufferSource.prototype, 'loopStart', {\n\t        get: function () {\n\t            return this._source.loopStart;\n\t        },\n\t        set: function (loopStart) {\n\t            this._source.loopStart = this.toSeconds(loopStart);\n\t        }\n\t    });\n\t    /**\n\t\t * If loop is true, the loop will end at this position.\n\t\t * @memberOf Tone.BufferSource#\n\t\t * @type {Time}\n\t\t * @name loopEnd\n\t\t */\n\t    Object.defineProperty(Tone.BufferSource.prototype, 'loopEnd', {\n\t        get: function () {\n\t            return this._source.loopEnd;\n\t        },\n\t        set: function (loopEnd) {\n\t            this._source.loopEnd = this.toSeconds(loopEnd);\n\t        }\n\t    });\n\t    /**\n\t\t * The audio buffer belonging to the player.\n\t\t * @memberOf Tone.BufferSource#\n\t\t * @type {Tone.Buffer}\n\t\t * @name buffer\n\t\t */\n\t    Object.defineProperty(Tone.BufferSource.prototype, 'buffer', {\n\t        get: function () {\n\t            return this._buffer;\n\t        },\n\t        set: function (buffer) {\n\t            this._buffer.set(buffer);\n\t        }\n\t    });\n\t    /**\n\t\t * If the buffer should loop once it's over.\n\t\t * @memberOf Tone.BufferSource#\n\t\t * @type {Boolean}\n\t\t * @name loop\n\t\t */\n\t    Object.defineProperty(Tone.BufferSource.prototype, 'loop', {\n\t        get: function () {\n\t            return this._source.loop;\n\t        },\n\t        set: function (loop) {\n\t            this._source.loop = loop;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return  {Tone.BufferSource}  this\n\t\t */\n\t    Tone.BufferSource.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this.onended = null;\n\t        this._source.disconnect();\n\t        this._source = null;\n\t        this._gainNode.dispose();\n\t        this._gainNode = null;\n\t        this._buffer.dispose();\n\t        this._buffer = null;\n\t        this._startTime = -1;\n\t        this.playbackRate = null;\n\t        Tone.context.clearTimeout(this._onendedTimeout);\n\t        return this;\n\t    };\n\t    return Tone.BufferSource;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Noise is a noise generator. It uses looped noise buffers to save on performance.\n\t\t *          Tone.Noise supports the noise types: \"pink\", \"white\", and \"brown\". Read more about\n\t\t *          colors of noise on [Wikipedia](https://en.wikipedia.org/wiki/Colors_of_noise).\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Source}\n\t\t *  @param {string} type the noise type (white|pink|brown)\n\t\t *  @example\n\t\t * //initialize the noise and start\n\t\t * var noise = new Tone.Noise(\"pink\").start();\n\t\t * \n\t\t * //make an autofilter to shape the noise\n\t\t * var autoFilter = new Tone.AutoFilter({\n\t\t * \t\"frequency\" : \"8m\", \n\t\t * \t\"min\" : 800, \n\t\t * \t\"max\" : 15000\n\t\t * }).connect(Tone.Master);\n\t\t * \n\t\t * //connect the noise\n\t\t * noise.connect(autoFilter);\n\t\t * //start the autofilter LFO\n\t\t * autoFilter.start()\n\t\t */\n\t    Tone.Noise = function () {\n\t        var options = Tone.defaults(arguments, ['type'], Tone.Noise);\n\t        Tone.Source.call(this, options);\n\t        /**\n\t\t\t *  @private\n\t\t\t *  @type {AudioBufferSourceNode}\n\t\t\t */\n\t        this._source = null;\n\t        /**\n\t\t\t *  the buffer\n\t\t\t *  @private\n\t\t\t *  @type {AudioBuffer}\n\t\t\t */\n\t        this._type = options.type;\n\t        /**\n\t\t\t *  The playback rate of the noise. Affects\n\t\t\t *  the \"frequency\" of the noise.\n\t\t\t *  @type {Positive}\n\t\t\t *  @signal\n\t\t\t */\n\t        this._playbackRate = options.playbackRate;\n\t    };\n\t    Tone.extend(Tone.Noise, Tone.Source);\n\t    /**\n\t\t *  the default parameters\n\t\t *\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Noise.defaults = {\n\t        'type': 'white',\n\t        'playbackRate': 1\n\t    };\n\t    /**\n\t\t * The type of the noise. Can be \"white\", \"brown\", or \"pink\". \n\t\t * @memberOf Tone.Noise#\n\t\t * @type {string}\n\t\t * @name type\n\t\t * @example\n\t\t * noise.type = \"white\";\n\t\t */\n\t    Object.defineProperty(Tone.Noise.prototype, 'type', {\n\t        get: function () {\n\t            return this._type;\n\t        },\n\t        set: function (type) {\n\t            if (this._type !== type) {\n\t                if (type in _noiseBuffers) {\n\t                    this._type = type;\n\t                    //if it's playing, stop and restart it\n\t                    if (this.state === Tone.State.Started) {\n\t                        var now = this.now();\n\t                        this._stop(now);\n\t                        this._start(now);\n\t                    }\n\t                } else {\n\t                    throw new TypeError('Tone.Noise: invalid type: ' + type);\n\t                }\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  The playback rate of the noise. Affects\n\t\t *  the \"frequency\" of the noise.\n\t\t *  @type {Positive}\n\t\t *  @signal\n\t\t */\n\t    Object.defineProperty(Tone.Noise.prototype, 'playbackRate', {\n\t        get: function () {\n\t            return this._playbackRate;\n\t        },\n\t        set: function (rate) {\n\t            this._playbackRate = rate;\n\t            if (this._source) {\n\t                this._source.playbackRate.value = rate;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  internal start method\n\t\t *\n\t\t *  @param {Time} time\n\t\t *  @private\n\t\t */\n\t    Tone.Noise.prototype._start = function (time) {\n\t        var buffer = _noiseBuffers[this._type];\n\t        this._source = new Tone.BufferSource(buffer).connect(this.output);\n\t        this._source.loop = true;\n\t        this._source.playbackRate.value = this._playbackRate;\n\t        this._source.start(this.toSeconds(time), Math.random() * (buffer.duration - 0.001));\n\t    };\n\t    /**\n\t\t *  internal stop method\n\t\t *\n\t\t *  @param {Time} time\n\t\t *  @private\n\t\t */\n\t    Tone.Noise.prototype._stop = function (time) {\n\t        if (this._source) {\n\t            this._source.stop(this.toSeconds(time));\n\t            this._source = null;\n\t        }\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Noise} this\n\t\t */\n\t    Tone.Noise.prototype.dispose = function () {\n\t        Tone.Source.prototype.dispose.call(this);\n\t        if (this._source !== null) {\n\t            this._source.disconnect();\n\t            this._source = null;\n\t        }\n\t        this._buffer = null;\n\t        return this;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    // THE BUFFERS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //Noise buffer stats\n\t    var bufferLength = 44100 * 5;\n\t    var channels = 2;\n\t    /**\n\t\t *\tThe noise arrays. Generated on initialization.\n\t\t *  borrowed heavily from https://github.com/zacharydenton/noise.js \n\t\t *  (c) 2013 Zach Denton (MIT)\n\t\t *  @static\n\t\t *  @private\n\t\t *  @type {Array}\n\t\t */\n\t    var _noiseArrays = {\n\t        'pink': function () {\n\t            var buffer = [];\n\t            for (var channelNum = 0; channelNum < channels; channelNum++) {\n\t                var channel = new Float32Array(bufferLength);\n\t                buffer[channelNum] = channel;\n\t                var b0, b1, b2, b3, b4, b5, b6;\n\t                b0 = b1 = b2 = b3 = b4 = b5 = b6 = 0;\n\t                for (var i = 0; i < bufferLength; i++) {\n\t                    var white = Math.random() * 2 - 1;\n\t                    b0 = 0.99886 * b0 + white * 0.0555179;\n\t                    b1 = 0.99332 * b1 + white * 0.0750759;\n\t                    b2 = 0.969 * b2 + white * 0.153852;\n\t                    b3 = 0.8665 * b3 + white * 0.3104856;\n\t                    b4 = 0.55 * b4 + white * 0.5329522;\n\t                    b5 = -0.7616 * b5 - white * 0.016898;\n\t                    channel[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;\n\t                    channel[i] *= 0.11;\n\t                    // (roughly) compensate for gain\n\t                    b6 = white * 0.115926;\n\t                }\n\t            }\n\t            return buffer;\n\t        }(),\n\t        'brown': function () {\n\t            var buffer = [];\n\t            for (var channelNum = 0; channelNum < channels; channelNum++) {\n\t                var channel = new Float32Array(bufferLength);\n\t                buffer[channelNum] = channel;\n\t                var lastOut = 0;\n\t                for (var i = 0; i < bufferLength; i++) {\n\t                    var white = Math.random() * 2 - 1;\n\t                    channel[i] = (lastOut + 0.02 * white) / 1.02;\n\t                    lastOut = channel[i];\n\t                    channel[i] *= 3.5;    // (roughly) compensate for gain\n\t                }\n\t            }\n\t            return buffer;\n\t        }(),\n\t        'white': function () {\n\t            var buffer = [];\n\t            for (var channelNum = 0; channelNum < channels; channelNum++) {\n\t                var channel = new Float32Array(bufferLength);\n\t                buffer[channelNum] = channel;\n\t                for (var i = 0; i < bufferLength; i++) {\n\t                    channel[i] = Math.random() * 2 - 1;\n\t                }\n\t            }\n\t            return buffer;\n\t        }()\n\t    };\n\t    /**\n\t\t *\tstatic noise buffers\n\t\t *  @static\n\t\t *  @private\n\t\t *  @type {Tone.Buffer}\n\t\t */\n\t    var _noiseBuffers = {};\n\t    //create the Tone.Buffers\n\t    function createBuffers() {\n\t        for (var type in _noiseArrays) {\n\t            _noiseBuffers[type] = new Tone.Buffer().fromArray(_noiseArrays[type]);\n\t        }\n\t    }\n\t    //create the noise buffers\n\t    Tone.getContext(createBuffers);\n\t    Tone.Context.on('init', createBuffers);\n\t    return Tone.Noise;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.NoiseSynth is composed of a noise generator (Tone.Noise), one filter (Tone.Filter), \n\t\t *          and two envelopes (Tone.Envelop). One envelope controls the amplitude\n\t\t *          of the noise and the other is controls the cutoff frequency of the filter. \n\t\t *          <img src=\"https://docs.google.com/drawings/d/1rqzuX9rBlhT50MRvD2TKml9bnZhcZmzXF1rf_o7vdnE/pub?w=918&h=242\">\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Instrument}\n\t\t *  @param {Object} [options] the options available for the synth \n\t\t *                          see defaults below\n\t\t * @example\n\t\t * var noiseSynth = new Tone.NoiseSynth().toMaster();\n\t\t * noiseSynth.triggerAttackRelease(\"8n\");\n\t\t */\n\t    Tone.NoiseSynth = function (options) {\n\t        //get the defaults\n\t        options = Tone.defaultArg(options, Tone.NoiseSynth.defaults);\n\t        Tone.Instrument.call(this, options);\n\t        /**\n\t\t\t *  The noise source.\n\t\t\t *  @type {Tone.Noise}\n\t\t\t *  @example\n\t\t\t * noiseSynth.set(\"noise.type\", \"brown\");\n\t\t\t */\n\t        this.noise = new Tone.Noise();\n\t        /**\n\t\t\t *  The amplitude envelope. \n\t\t\t *  @type {Tone.AmplitudeEnvelope}\n\t\t\t */\n\t        this.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\t        //connect the noise to the output\n\t        this.noise.chain(this.envelope, this.output);\n\t        //start the noise\n\t        this.noise.start();\n\t        this._readOnly([\n\t            'noise',\n\t            'envelope'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.NoiseSynth, Tone.Instrument);\n\t    /**\n\t\t *  @const\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.NoiseSynth.defaults = {\n\t        'noise': { 'type': 'white' },\n\t        'envelope': {\n\t            'attack': 0.005,\n\t            'decay': 0.1,\n\t            'sustain': 0\n\t        }\n\t    };\n\t    /**\n\t\t *  Start the attack portion of the envelopes. Unlike other \n\t\t *  instruments, Tone.NoiseSynth doesn't have a note. \n\t\t *  @param {Time} [time=now] the time the attack should start\n\t\t *  @param {number} [velocity=1] the velocity of the note (0-1)\n\t\t *  @returns {Tone.NoiseSynth} this\n\t\t *  @example\n\t\t * noiseSynth.triggerAttack();\n\t\t */\n\t    Tone.NoiseSynth.prototype.triggerAttack = function (time, velocity) {\n\t        //the envelopes\n\t        this.envelope.triggerAttack(time, velocity);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Start the release portion of the envelopes.\n\t\t *  @param {Time} [time=now] the time the release should start\n\t\t *  @returns {Tone.NoiseSynth} this\n\t\t */\n\t    Tone.NoiseSynth.prototype.triggerRelease = function (time) {\n\t        this.envelope.triggerRelease(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Trigger the attack and then the release. \n\t\t *  @param  {Time} duration the duration of the note\n\t\t *  @param  {Time} [time=now]     the time of the attack\n\t\t *  @param  {number} [velocity=1] the velocity\n\t\t *  @returns {Tone.NoiseSynth} this\n\t\t */\n\t    Tone.NoiseSynth.prototype.triggerAttackRelease = function (duration, time, velocity) {\n\t        time = this.toSeconds(time);\n\t        duration = this.toSeconds(duration);\n\t        this.triggerAttack(time, velocity);\n\t        this.triggerRelease(time + duration);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.NoiseSynth} this\n\t\t */\n\t    Tone.NoiseSynth.prototype.dispose = function () {\n\t        Tone.Instrument.prototype.dispose.call(this);\n\t        this._writable([\n\t            'noise',\n\t            'envelope'\n\t        ]);\n\t        this.noise.dispose();\n\t        this.noise = null;\n\t        this.envelope.dispose();\n\t        this.envelope = null;\n\t        return this;\n\t    };\n\t    return Tone.NoiseSynth;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Karplus-String string synthesis. Often out of tune. \n\t\t *         Will change when the AudioWorkerNode is available across\n\t\t *         browsers. \n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone.Instrument}\n\t\t *  @param {Object} [options] see the defaults\n\t\t *  @example\n\t\t * var plucky = new Tone.PluckSynth().toMaster();\n\t\t * plucky.triggerAttack(\"C4\");\n\t\t */\n\t    Tone.PluckSynth = function (options) {\n\t        options = Tone.defaultArg(options, Tone.PluckSynth.defaults);\n\t        Tone.Instrument.call(this, options);\n\t        /**\n\t\t\t *  @type {Tone.Noise}\n\t\t\t *  @private\n\t\t\t */\n\t        this._noise = new Tone.Noise('pink');\n\t        /**\n\t\t\t *  The amount of noise at the attack. \n\t\t\t *  Nominal range of [0.1, 20]\n\t\t\t *  @type {number}\n\t\t\t */\n\t        this.attackNoise = options.attackNoise;\n\t        /**\n\t\t\t *  the LFCF\n\t\t\t *  @type {Tone.LowpassCombFilter}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfcf = new Tone.LowpassCombFilter({\n\t            'resonance': options.resonance,\n\t            'dampening': options.dampening\n\t        });\n\t        /**\n\t\t\t *  The resonance control. \n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.resonance = this._lfcf.resonance;\n\t        /**\n\t\t\t *  The dampening control. i.e. the lowpass filter frequency of the comb filter\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.dampening = this._lfcf.dampening;\n\t        //connections\n\t        this._noise.connect(this._lfcf);\n\t        this._lfcf.connect(this.output);\n\t        this._readOnly([\n\t            'resonance',\n\t            'dampening'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.PluckSynth, Tone.Instrument);\n\t    /**\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.PluckSynth.defaults = {\n\t        'attackNoise': 1,\n\t        'dampening': 4000,\n\t        'resonance': 0.9\n\t    };\n\t    /**\n\t\t *  Trigger the note. \n\t\t *  @param {Frequency} note The note to trigger.\n\t\t *  @param {Time} [time=now] When the note should be triggered.\n\t\t *  @returns {Tone.PluckSynth} this\n\t\t */\n\t    Tone.PluckSynth.prototype.triggerAttack = function (note, time) {\n\t        note = this.toFrequency(note);\n\t        time = this.toSeconds(time);\n\t        var delayAmount = 1 / note;\n\t        this._lfcf.delayTime.setValueAtTime(delayAmount, time);\n\t        this._noise.start(time);\n\t        this._noise.stop(time + delayAmount * this.attackNoise);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.PluckSynth} this\n\t\t */\n\t    Tone.PluckSynth.prototype.dispose = function () {\n\t        Tone.Instrument.prototype.dispose.call(this);\n\t        this._noise.dispose();\n\t        this._lfcf.dispose();\n\t        this._noise = null;\n\t        this._lfcf = null;\n\t        this._writable([\n\t            'resonance',\n\t            'dampening'\n\t        ]);\n\t        this.dampening = null;\n\t        this.resonance = null;\n\t        return this;\n\t    };\n\t    return Tone.PluckSynth;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.PolySynth handles voice creation and allocation for any\n\t\t *          instruments passed in as the second paramter. PolySynth is \n\t\t *          not a synthesizer by itself, it merely manages voices of \n\t\t *          one of the other types of synths, allowing any of the \n\t\t *          monophonic synthesizers to be polyphonic. \n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Instrument}\n\t\t *  @param {number|Object} [polyphony=4] The number of voices to create\n\t\t *  @param {function} [voice=Tone.Synth] The constructor of the voices\n\t\t *                                            uses Tone.Synth by default. \n\t\t *  @example\n\t\t * //a polysynth composed of 6 Voices of Synth\n\t\t * var synth = new Tone.PolySynth(6, Tone.Synth).toMaster();\n\t\t * //set the attributes using the set interface\n\t\t * synth.set(\"detune\", -1200);\n\t\t * //play a chord\n\t\t * synth.triggerAttackRelease([\"C4\", \"E4\", \"A4\"], \"4n\");\n\t\t */\n\t    Tone.PolySynth = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'polyphony',\n\t            'voice'\n\t        ], Tone.PolySynth);\n\t        Tone.Instrument.call(this, options);\n\t        options = Tone.defaultArg(options, Tone.Instrument.defaults);\n\t        //max polyphony\n\t        options.polyphony = Math.min(Tone.PolySynth.MAX_POLYPHONY, options.polyphony);\n\t        /**\n\t\t\t *  the array of voices\n\t\t\t *  @type {Array}\n\t\t\t */\n\t        this.voices = new Array(options.polyphony);\n\t        /**\n\t\t\t *  The queue of voices with data about last trigger\n\t\t\t *  and the triggered note\n\t\t\t *  @private\n\t\t\t *  @type {Array}\n\t\t\t */\n\t        this._triggers = new Array(options.polyphony);\n\t        /**\n\t\t\t *  The detune in cents\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\t        this._readOnly('detune');\n\t        //create the voices\n\t        for (var i = 0; i < options.polyphony; i++) {\n\t            var v = new options.voice(arguments[2], arguments[3]);\n\t            this.voices[i] = v;\n\t            v.connect(this.output);\n\t            if (v.hasOwnProperty('detune')) {\n\t                this.detune.connect(v.detune);\n\t            }\n\t            this._triggers[i] = {\n\t                release: -1,\n\t                note: null,\n\t                voice: v\n\t            };\n\t        }\n\t    };\n\t    Tone.extend(Tone.PolySynth, Tone.Instrument);\n\t    /**\n\t\t *  the defaults\n\t\t *  @const\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.PolySynth.defaults = {\n\t        'polyphony': 4,\n\t        'volume': 0,\n\t        'detune': 0,\n\t        'voice': Tone.Synth\n\t    };\n\t    /**\n\t\t *  Trigger the attack portion of the note\n\t\t *  @param  {Frequency|Array} notes The notes to play. Accepts a single\n\t\t *                                  Frequency or an array of frequencies.\n\t\t *  @param  {Time} [time=now]  The start time of the note.\n\t\t *  @param {number} [velocity=1] The velocity of the note.\n\t\t *  @returns {Tone.PolySynth} this\n\t\t *  @example\n\t\t * //trigger a chord immediately with a velocity of 0.2\n\t\t * poly.triggerAttack([\"Ab3\", \"C4\", \"F5\"], undefined, 0.2);\n\t\t */\n\t    Tone.PolySynth.prototype.triggerAttack = function (notes, time, velocity) {\n\t        if (!Array.isArray(notes)) {\n\t            notes = [notes];\n\t        }\n\t        time = this.toSeconds(time);\n\t        for (var i = 0; i < notes.length; i++) {\n\t            var val = notes[i];\n\t            //trigger the oldest voice\n\t            var oldest = this._triggers[0];\n\t            var oldestIndex = 0;\n\t            for (var j = 1; j < this._triggers.length; j++) {\n\t                if (this._triggers[j].release < oldest.release) {\n\t                    oldest = this._triggers[j];\n\t                    oldestIndex = j;\n\t                }\n\t            }\n\t            oldest.release = Infinity;\n\t            oldest.note = JSON.stringify(val);\n\t            oldest.voice.triggerAttack(val, time, velocity);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Trigger the attack and release after the specified duration\n\t\t *  \n\t\t *  @param  {Frequency|Array} notes The notes to play. Accepts a single\n\t\t *                                  Frequency or an array of frequencies.\n\t\t *  @param  {Time} duration the duration of the note\n\t\t *  @param  {Time} [time=now]     if no time is given, defaults to now\n\t\t *  @param  {number} [velocity=1] the velocity of the attack (0-1)\n\t\t *  @returns {Tone.PolySynth} this\n\t\t *  @example\n\t\t * //trigger a chord for a duration of a half note \n\t\t * poly.triggerAttackRelease([\"Eb3\", \"G4\", \"C5\"], \"2n\");\n\t\t *  @example\n\t\t * //can pass in an array of durations as well\n\t\t * poly.triggerAttackRelease([\"Eb3\", \"G4\", \"C5\"], [\"2n\", \"4n\", \"4n\"]);\n\t\t */\n\t    Tone.PolySynth.prototype.triggerAttackRelease = function (notes, duration, time, velocity) {\n\t        time = this.toSeconds(time);\n\t        this.triggerAttack(notes, time, velocity);\n\t        if (Tone.isArray(duration) && Tone.isArray(notes)) {\n\t            for (var i = 0; i < notes.length; i++) {\n\t                var d = duration[Math.min(i, duration.length - 1)];\n\t                this.triggerRelease(notes[i], time + this.toSeconds(d));\n\t            }\n\t        } else {\n\t            this.triggerRelease(notes, time + this.toSeconds(duration));\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Trigger the release of the note. Unlike monophonic instruments, \n\t\t *  a note (or array of notes) needs to be passed in as the first argument.\n\t\t *  @param  {Frequency|Array} notes The notes to play. Accepts a single\n\t\t *                                  Frequency or an array of frequencies.\n\t\t *  @param  {Time} [time=now]  When the release will be triggered. \n\t\t *  @returns {Tone.PolySynth} this\n\t\t *  @example\n\t\t * poly.triggerRelease([\"Ab3\", \"C4\", \"F5\"], \"+2n\");\n\t\t */\n\t    Tone.PolySynth.prototype.triggerRelease = function (notes, time) {\n\t        if (!Array.isArray(notes)) {\n\t            notes = [notes];\n\t        }\n\t        time = this.toSeconds(time);\n\t        for (var i = 0; i < notes.length; i++) {\n\t            //get the voice\n\t            var stringified = JSON.stringify(notes[i]);\n\t            for (var v = 0; v < this._triggers.length; v++) {\n\t                var desc = this._triggers[v];\n\t                if (desc.note === stringified && desc.release > time) {\n\t                    desc.voice.triggerRelease(time);\n\t                    desc.release = time;\n\t                }\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Set a member/attribute of the voices. \n\t\t *  @param {Object|string} params\n\t\t *  @param {number=} value\n\t\t *  @param {Time=} rampTime\n\t\t *  @returns {Tone.PolySynth} this\n\t\t *  @example\n\t\t * poly.set({\n\t\t * \t\"filter\" : {\n\t\t * \t\t\"type\" : \"highpass\"\n\t\t * \t},\n\t\t * \t\"envelope\" : {\n\t\t * \t\t\"attack\" : 0.25\n\t\t * \t}\n\t\t * });\n\t\t */\n\t    Tone.PolySynth.prototype.set = function (params, value, rampTime) {\n\t        for (var i = 0; i < this.voices.length; i++) {\n\t            this.voices[i].set(params, value, rampTime);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Get the synth's attributes. Given no arguments get\n\t\t *  will return all available object properties and their corresponding\n\t\t *  values. Pass in a single attribute to retrieve or an array\n\t\t *  of attributes. The attribute strings can also include a \".\"\n\t\t *  to access deeper properties.\n\t\t *  @param {Array=} params the parameters to get, otherwise will return \n\t\t *  \t\t\t\t\t   all available.\n\t\t */\n\t    Tone.PolySynth.prototype.get = function (params) {\n\t        return this.voices[0].get(params);\n\t    };\n\t    /**\n\t\t *  Trigger the release portion of all the currently active voices.\n\t\t *  @param {Time} [time=now] When the notes should be released.\n\t\t *  @return {Tone.PolySynth} this\n\t\t */\n\t    Tone.PolySynth.prototype.releaseAll = function (time) {\n\t        time = this.toSeconds(time);\n\t        for (var i = 0; i < this._triggers.length; i++) {\n\t            var desc = this._triggers[i];\n\t            if (desc.release > time) {\n\t                desc.release = time;\n\t                desc.voice.triggerRelease(time);\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.PolySynth} this\n\t\t */\n\t    Tone.PolySynth.prototype.dispose = function () {\n\t        Tone.Instrument.prototype.dispose.call(this);\n\t        for (var i = 0; i < this.voices.length; i++) {\n\t            this.voices[i].dispose();\n\t            this.voices[i] = null;\n\t        }\n\t        this._writable('detune');\n\t        this.detune.dispose();\n\t        this.detune = null;\n\t        this.voices = null;\n\t        this._triggers = null;\n\t        return this;\n\t    };\n\t    /**\n\t\t *  The maximum number of notes that can be allocated \n\t\t *  to a polysynth. \n\t\t *  @type  {Number}\n\t\t *  @static\n\t\t */\n\t    Tone.PolySynth.MAX_POLYPHONY = 20;\n\t    return Tone.PolySynth;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t * @class Automatically interpolates between a set of pitched samples. Pass in an object which maps the note's pitch or midi value to the url, then you can trigger the attack and release of that note like other instruments. By automatically repitching the samples, it is possible to play pitches which were not explicitly included which can save loading time.\n\t\t *        For sample or buffer playback where repitching is not necessary, use [Tone.Player](https://tonejs.github.io/docs/Player).\n\t\t * @param {Object} samples An object of samples mapping either Midi\n\t\t *                         Note Numbers or Scientific Pitch Notation\n\t\t *                         to the url of that sample.\n\t\t * @example\n\t\t * var sampler = new Tone.Sampler({\n\t\t * \t\"C3\" : \"path/to/C3.mp3\",\n\t\t * \t\"D#3\" : \"path/to/Dsharp3.mp3\",\n\t\t * \t\"F#3\" : \"path/to/Fsharp3.mp3\",\n\t\t * \t\"A3\" : \"path/to/A3.mp3\",\n\t\t * }, function(){\n\t\t * \t//sampler will repitch the closest sample\n\t\t * \tsampler.triggerAttack(\"D3\")\n\t\t * })\n\t\t * @extends {Tone.Instrument}\n\t\t */\n\t    Tone.Sampler = function (urls) {\n\t        // shift arguments over one. Those are the remainder of the options\n\t        var args = Array.prototype.slice.call(arguments);\n\t        args.shift();\n\t        var options = Tone.defaults(args, [\n\t            'onload',\n\t            'baseUrl'\n\t        ], Tone.Sampler);\n\t        Tone.Instrument.call(this, options);\n\t        var urlMap = {};\n\t        for (var note in urls) {\n\t            if (Tone.isNote(note)) {\n\t                //convert the note name to MIDI\n\t                var mid = Tone.Frequency(note).toMidi();\n\t                urlMap[mid] = urls[note];\n\t            } else if (!isNaN(parseFloat(note))) {\n\t                //otherwise if it's numbers assume it's midi\n\t                urlMap[note] = urls[note];\n\t            } else {\n\t                throw new Error('Tone.Sampler: url keys must be the note\\'s pitch');\n\t            }\n\t        }\n\t        /**\n\t\t\t * The stored and loaded buffers\n\t\t\t * @type {Tone.Buffers}\n\t\t\t * @private\n\t\t\t */\n\t        this._buffers = new Tone.Buffers(urlMap, options.onload, options.baseUrl);\n\t        /**\n\t\t\t * The object of all currently playing BufferSources\n\t\t\t * @type {Object}\n\t\t\t * @private\n\t\t\t */\n\t        this._activeSources = {};\n\t        /**\n\t\t\t * The envelope applied to the beginning of the sample.\n\t\t\t * @type {Time}\n\t\t\t */\n\t        this.attack = options.attack;\n\t        /**\n\t\t\t * The envelope applied to the end of the envelope.\n\t\t\t * @type {Time}\n\t\t\t */\n\t        this.release = options.release;\n\t    };\n\t    Tone.extend(Tone.Sampler, Tone.Instrument);\n\t    /**\n\t\t * The defaults\n\t\t * @const\n\t\t * @type {Object}\n\t\t */\n\t    Tone.Sampler.defaults = {\n\t        attack: 0,\n\t        release: 0.1,\n\t        onload: Tone.noOp,\n\t        baseUrl: ''\n\t    };\n\t    /**\n\t\t * Returns the difference in steps between the given midi note at the closets sample.\n\t\t * @param  {Midi} midi\n\t\t * @return {Interval}\n\t\t * @private\n\t\t */\n\t    Tone.Sampler.prototype._findClosest = function (midi) {\n\t        var MAX_INTERVAL = 24;\n\t        var interval = 0;\n\t        while (interval < MAX_INTERVAL) {\n\t            // check above and below\n\t            if (this._buffers.has(midi + interval)) {\n\t                return -interval;\n\t            } else if (this._buffers.has(midi - interval)) {\n\t                return interval;\n\t            }\n\t            interval++;\n\t        }\n\t        return null;\n\t    };\n\t    /**\n\t\t * @param  {Frequency} note     The note to play\n\t\t * @param  {Time=} time     When to play the note\n\t\t * @param  {NormalRange=} velocity The velocity to play the sample back.\n\t\t * @return {Tone.Sampler}          this\n\t\t */\n\t    Tone.Sampler.prototype.triggerAttack = function (note, time, velocity) {\n\t        var midi = Tone.Frequency(note).toMidi();\n\t        // find the closest note pitch\n\t        var difference = this._findClosest(midi);\n\t        if (difference !== null) {\n\t            var closestNote = midi - difference;\n\t            var buffer = this._buffers.get(closestNote);\n\t            // play that note\n\t            var source = new Tone.BufferSource({\n\t                'buffer': buffer,\n\t                'playbackRate': Tone.intervalToFrequencyRatio(difference),\n\t                'fadeIn': this.attack,\n\t                'fadeOut': this.release,\n\t                'curve': 'exponential'\n\t            }).connect(this.output);\n\t            source.start(time, 0, buffer.duration, velocity);\n\t            // add it to the active sources\n\t            if (!Tone.isArray(this._activeSources[midi])) {\n\t                this._activeSources[midi] = [];\n\t            }\n\t            this._activeSources[midi].push({\n\t                note: midi,\n\t                source: source\n\t            });\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t * @param  {Frequency} note     The note to release.\n\t\t * @param  {Time=} time     \tWhen to release the note.\n\t\t * @return {Tone.Sampler}\tthis\n\t\t */\n\t    Tone.Sampler.prototype.triggerRelease = function (note, time) {\n\t        var midi = Tone.Frequency(note).toMidi();\n\t        // find the note\n\t        if (this._activeSources[midi] && this._activeSources[midi].length) {\n\t            var source = this._activeSources[midi].shift().source;\n\t            time = this.toSeconds(time);\n\t            source.stop(time + this.release, this.release);\n\t        }\n\t    };\n\t    /**\n\t\t * Invoke the attack phase, then after the duration, invoke the release.\n\t\t * @param  {Frequency} note     The note to play\n\t\t * @param  {Time} duration The time the note should be held\n\t\t * @param  {Time=} time     When to start the attack\n\t\t * @param  {NormalRange} [velocity=1] The velocity of the attack\n\t\t * @return {Tone.Sampler}          this\n\t\t */\n\t    Tone.Sampler.prototype.triggerAttackRelease = function (note, duration, time, velocity) {\n\t        time = this.toSeconds(time);\n\t        duration = this.toSeconds(duration);\n\t        this.triggerAttack(note, time, velocity);\n\t        this.triggerRelease(note, time + duration);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Add a note to the sampler.\n\t\t *  @param  {Note|Midi}   note      The buffer's pitch.\n\t\t *  @param  {String|Tone.Buffer|Audiobuffer}  url  Either the url of the bufer,\n\t\t *                                                 or a buffer which will be added\n\t\t *                                                 with the given name.\n\t\t *  @param  {Function=}  callback  The callback to invoke\n\t\t *                                 when the url is loaded.\n\t\t */\n\t    Tone.Sampler.prototype.add = function (note, url, callback) {\n\t        if (Tone.isNote(note)) {\n\t            //convert the note name to MIDI\n\t            var mid = Tone.Frequency(note).toMidi();\n\t            this._buffers.add(mid, url, callback);\n\t        } else if (!isNaN(parseFloat(note))) {\n\t            //otherwise if it's numbers assume it's midi\n\t            this._buffers.add(note, url, callback);\n\t        } else {\n\t            throw new Error('Tone.Sampler: note must be the note\\'s pitch. Instead got ' + note);\n\t        }\n\t    };\n\t    /**\n\t\t * If the buffers are loaded or not\n\t\t * @memberOf Tone.Sampler#\n\t\t * @type {Boolean}\n\t\t * @name loaded\n\t\t * @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Sampler.prototype, 'loaded', {\n\t        get: function () {\n\t            return this._buffers.loaded;\n\t        }\n\t    });\n\t    /**\n\t\t * Clean up\n\t\t * @return {Tone.Sampler} this\n\t\t */\n\t    Tone.Sampler.prototype.dispose = function () {\n\t        Tone.Instrument.prototype.dispose.call(this);\n\t        this._buffers.dispose();\n\t        this._buffers = null;\n\t        for (var midi in this._activeSources) {\n\t            this._activeSources[midi].forEach(function (event) {\n\t                event.source.dispose();\n\t            });\n\t        }\n\t        this._activeSources = null;\n\t        return this;\n\t    };\n\t    return Tone.Sampler;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Maps a NormalRange [0, 1] to an AudioRange [-1, 1]. \n\t\t *         See also Tone.AudioToGain. \n\t\t *\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @constructor\n\t\t *  @example\n\t\t * var g2a = new Tone.GainToAudio();\n\t\t */\n\t    Tone.GainToAudio = function () {\n\t        Tone.SignalBase.call(this);\n\t        /**\n\t\t\t *  @type {WaveShaperNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._norm = this.input = this.output = new Tone.WaveShaper(function (x) {\n\t            return Math.abs(x) * 2 - 1;\n\t        });\n\t    };\n\t    Tone.extend(Tone.GainToAudio, Tone.SignalBase);\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.GainToAudio} this\n\t\t */\n\t    Tone.GainToAudio.prototype.dispose = function () {\n\t        Tone.SignalBase.prototype.dispose.call(this);\n\t        this._norm.dispose();\n\t        this._norm = null;\n\t        return this;\n\t    };\n\t    return Tone.GainToAudio;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Normalize takes an input min and max and maps it linearly to NormalRange [0,1]\n\t\t *\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @constructor\n\t\t *  @param {number} inputMin the min input value\n\t\t *  @param {number} inputMax the max input value\n\t\t *  @example\n\t\t * var norm = new Tone.Normalize(2, 4);\n\t\t * var sig = new Tone.Signal(3).connect(norm);\n\t\t * //output of norm is 0.5. \n\t\t */\n\t    Tone.Normalize = function (inputMin, inputMax) {\n\t        Tone.SignalBase.call(this);\n\t        /**\n\t\t\t *  the min input value\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._inputMin = Tone.defaultArg(inputMin, 0);\n\t        /**\n\t\t\t *  the max input value\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._inputMax = Tone.defaultArg(inputMax, 1);\n\t        /**\n\t\t\t *  subtract the min from the input\n\t\t\t *  @type {Tone.Add}\n\t\t\t *  @private\n\t\t\t */\n\t        this._sub = this.input = new Tone.Add(0);\n\t        /**\n\t\t\t *  divide by the difference between the input and output\n\t\t\t *  @type {Tone.Multiply}\n\t\t\t *  @private\n\t\t\t */\n\t        this._div = this.output = new Tone.Multiply(1);\n\t        this._sub.connect(this._div);\n\t        this._setRange();\n\t    };\n\t    Tone.extend(Tone.Normalize, Tone.SignalBase);\n\t    /**\n\t\t * The minimum value the input signal will reach.\n\t\t * @memberOf Tone.Normalize#\n\t\t * @type {number}\n\t\t * @name min\n\t\t */\n\t    Object.defineProperty(Tone.Normalize.prototype, 'min', {\n\t        get: function () {\n\t            return this._inputMin;\n\t        },\n\t        set: function (min) {\n\t            this._inputMin = min;\n\t            this._setRange();\n\t        }\n\t    });\n\t    /**\n\t\t * The maximum value the input signal will reach.\n\t\t * @memberOf Tone.Normalize#\n\t\t * @type {number}\n\t\t * @name max\n\t\t */\n\t    Object.defineProperty(Tone.Normalize.prototype, 'max', {\n\t        get: function () {\n\t            return this._inputMax;\n\t        },\n\t        set: function (max) {\n\t            this._inputMax = max;\n\t            this._setRange();\n\t        }\n\t    });\n\t    /**\n\t\t *  set the values\n\t\t *  @private\n\t\t */\n\t    Tone.Normalize.prototype._setRange = function () {\n\t        this._sub.value = -this._inputMin;\n\t        this._div.value = 1 / (this._inputMax - this._inputMin);\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.Normalize} this\n\t\t */\n\t    Tone.Normalize.prototype.dispose = function () {\n\t        Tone.SignalBase.prototype.dispose.call(this);\n\t        this._sub.dispose();\n\t        this._sub = null;\n\t        this._div.dispose();\n\t        this._div = null;\n\t        return this;\n\t    };\n\t    return Tone.Normalize;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t * @class Tone.TransportTimelineSignal extends Tone.TimelineSignal, but adds the ability to synchronize the signal to the signal to the Tone.Transport\n\t\t * @extends {Tone.TimelineSignal}\n\t\t */\n\t    Tone.TransportTimelineSignal = function () {\n\t        Tone.TimelineSignal.apply(this, arguments);\n\t        /**\n\t\t\t * The real signal output\n\t\t\t * @type {Tone.Signal}\n\t\t\t * @private\n\t\t\t */\n\t        this.output = this._outputSig = new Tone.Signal(this._initial);\n\t        /**\n\t\t\t * Keep track of the last value. (small optimization)\n\t\t\t * @private\n\t\t\t * @type {Number}\n\t\t\t */\n\t        this._lastVal = this.value;\n\t        /**\n\t\t\t * The event id of the tick update loop\n\t\t\t * @private\n\t\t\t * @type {Number}\n\t\t\t */\n\t        this._synced = Tone.Transport.scheduleRepeat(this._onTick.bind(this), '1i');\n\t        /**\n\t\t\t * A bound version of the anchor value methods\n\t\t\t * @type {Function}\n\t\t\t * @private\n\t\t\t */\n\t        this._bindAnchorValue = this._anchorValue.bind(this);\n\t        Tone.Transport.on('start stop pause', this._bindAnchorValue);\n\t        this._events.memory = Infinity;\n\t    };\n\t    Tone.extend(Tone.TransportTimelineSignal, Tone.TimelineSignal);\n\t    /**\n\t\t * Callback which is invoked every tick.\n\t\t * @private\n\t\t * @param  {Number} time\n\t\t * @return {Tone.TransportTimelineSignal}      this\n\t\t */\n\t    Tone.TransportTimelineSignal.prototype._onTick = function (time) {\n\t        var val = this.getValueAtTime(Tone.Transport.seconds);\n\t        if (this._lastVal !== val) {\n\t            this._lastVal = val;\n\t            //approximate ramp curves with linear ramps\n\t            this._outputSig.linearRampToValueAtTime(val, time);\n\t        }\n\t    };\n\t    /**\n\t\t * Anchor the value at the start and stop of the Transport\n\t\t * @param  {Number} time The time of the event\n\t\t * @return {Tone.TransportTimelineSignal}      this\n\t\t * @private\n\t\t */\n\t    Tone.TransportTimelineSignal.prototype._anchorValue = function (time) {\n\t        var val = this.getValueAtTime(Tone.Transport.ticks);\n\t        this._lastVal = val;\n\t        this._outputSig.cancelScheduledValues(time);\n\t        this._outputSig.setValueAtTime(val, time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Get the scheduled value at the given time. This will\n\t\t *  return the unconverted (raw) value.\n\t\t *  @param  {TransportTime}  time  The time in seconds.\n\t\t *  @return  {Number}  The scheduled value at the given time.\n\t\t */\n\t    Tone.TransportTimelineSignal.prototype.getValueAtTime = function (time) {\n\t        time = this.toTicks(time);\n\t        return Tone.TimelineSignal.prototype.getValueAtTime.call(this, time);\n\t    };\n\t    /**\n\t\t * Set the output of the signal at the given time\n\t\t * @param  {Number} value The value to change to at the given time\n\t\t * @param  {TransportTime} time  The time to change the signal\n\t\t * @return {Tone.TransportTimelineSignal}       this\n\t\t */\n\t    Tone.TransportTimelineSignal.prototype.setValueAtTime = function (value, time) {\n\t        time = this.toTicks(time);\n\t        Tone.TimelineSignal.prototype.setValueAtTime.call(this, value, time);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Linear ramp to the given value from the previous scheduled point to the given value\n\t\t * @param  {Number} value The value to change to at the given time\n\t\t * @param  {TransportTime} time  The time to change the signal\n\t\t * @return {Tone.TransportTimelineSignal}       this\n\t\t */\n\t    Tone.TransportTimelineSignal.prototype.linearRampToValueAtTime = function (value, time) {\n\t        time = this.toTicks(time);\n\t        Tone.TimelineSignal.prototype.linearRampToValueAtTime.call(this, value, time);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Exponential ramp to the given value from the previous scheduled point to the given value\n\t\t * @param  {Number} value The value to change to at the given time\n\t\t * @param  {TransportTime} time  The time to change the signal\n\t\t * @return {Tone.TransportTimelineSignal}       this\n\t\t */\n\t    Tone.TransportTimelineSignal.prototype.exponentialRampToValueAtTime = function (value, time) {\n\t        time = this.toTicks(time);\n\t        Tone.TimelineSignal.prototype.exponentialRampToValueAtTime.call(this, value, time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Start exponentially approaching the target value at the given time with\n\t\t *  a rate having the given time constant.\n\t\t *  @param {number} value\n\t\t *  @param {TransportTime} startTime\n\t\t *  @param {number} timeConstant\n\t\t * @return {Tone.TransportTimelineSignal}       this\n\t\t */\n\t    Tone.TransportTimelineSignal.prototype.setTargetAtTime = function (value, startTime, timeConstant) {\n\t        startTime = this.toTicks(startTime);\n\t        Tone.TimelineSignal.prototype.setTargetAtTime.call(this, value, startTime, timeConstant);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Cancels all scheduled parameter changes with times greater than or\n\t\t *  equal to startTime.\n\t\t *  @param  {TransportTime} startTime\n\t\t *  @returns {Tone.Param} this\n\t\t */\n\t    Tone.TransportTimelineSignal.prototype.cancelScheduledValues = function (startTime) {\n\t        startTime = this.toTicks(startTime);\n\t        Tone.TimelineSignal.prototype.cancelScheduledValues.call(this, startTime);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Set an array of arbitrary values starting at the given time for the given duration.\n\t\t *  @param {Float32Array} values\n\t\t *  @param {Time} startTime\n\t\t *  @param {Time} duration\n\t\t *  @param {NormalRange} [scaling=1] If the values in the curve should be scaled by some value\n\t\t *  @returns {Tone.TimelineSignal} this\n\t\t */\n\t    Tone.TransportTimelineSignal.prototype.setValueCurveAtTime = function (values, startTime, duration, scaling) {\n\t        startTime = this.toTicks(startTime);\n\t        duration = this.toTicks(duration);\n\t        Tone.TimelineSignal.prototype.setValueCurveAtTime.call(this, values, startTime, duration, scaling);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Dispose and disconnect\n\t\t * @return {Tone.TransportTimelineSignal} this\n\t\t */\n\t    Tone.TransportTimelineSignal.prototype.dispose = function () {\n\t        Tone.Transport.clear(this._synced);\n\t        Tone.Transport.off('start stop pause', this._syncedCallback);\n\t        this._events.cancel(0);\n\t        Tone.TimelineSignal.prototype.dispose.call(this);\n\t        this._outputSig.dispose();\n\t        this._outputSig = null;\n\t    };\n\t    return Tone.TransportTimelineSignal;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t * @class Tone.GrainPlayer implements [granular synthesis](https://en.wikipedia.org/wiki/Granular_synthesis).\n\t\t *        Granular Synthesis enables you to adjust pitch and playback rate independently. The grainSize is the\n\t\t *        amount of time each small chunk of audio is played for and the overlap is the\n\t\t *        amount of crossfading transition time between successive grains.\n\t\t * @extends {Tone.Source}\n\t\t * @param {String|Tone.Buffer} url\tThe url to load, or the Tone.Buffer to play.\n\t\t * @param {Function=} callback The callback to invoke after the url is loaded.\n\t\t */\n\t    Tone.GrainPlayer = function () {\n\t        var options = Tone.defaults(arguments, [\n\t            'url',\n\t            'onload'\n\t        ], Tone.GrainPlayer);\n\t        Tone.Source.call(this, options);\n\t        /**\n\t\t\t *  The audio buffer belonging to the player.\n\t\t\t *  @type  {Tone.Buffer}\n\t\t\t */\n\t        this.buffer = new Tone.Buffer(options.url, options.onload);\n\t        /**\n\t\t\t *  Create a repeating tick to schedule\n\t\t\t *  the grains.\n\t\t\t *  @type  {Tone.Clock}\n\t\t\t *  @private\n\t\t\t */\n\t        this._clock = new Tone.Clock(this._tick.bind(this), options.grainSize);\n\t        /**\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loopStart = 0;\n\t        /**\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loopEnd = 0;\n\t        /**\n\t\t\t * All of the currently playing BufferSources\n\t\t\t * @type {Array}\n\t\t\t * @private\n\t\t\t */\n\t        this._activeSources = [];\n\t        /**\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._playbackRate = options.playbackRate;\n\t        /**\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._grainSize = options.grainSize;\n\t        /**\n\t\t\t *  @private\n\t\t\t *  @type {Number}\n\t\t\t */\n\t        this._overlap = options.overlap;\n\t        /**\n\t\t\t *  Adjust the pitch independently of the playbackRate.\n\t\t\t *  @type  {Cents}\n\t\t\t */\n\t        this.detune = options.detune;\n\t        //setup\n\t        this.overlap = options.overlap;\n\t        this.loop = options.loop;\n\t        this.playbackRate = options.playbackRate;\n\t        this.grainSize = options.grainSize;\n\t        this.loopStart = options.loopStart;\n\t        this.loopEnd = options.loopEnd;\n\t        this.reverse = options.reverse;\n\t        this._clock.on('stop', this._onstop.bind(this));\n\t    };\n\t    Tone.extend(Tone.GrainPlayer, Tone.Source);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.GrainPlayer.defaults = {\n\t        'onload': Tone.noOp,\n\t        'overlap': 0.1,\n\t        'grainSize': 0.2,\n\t        'playbackRate': 1,\n\t        'detune': 0,\n\t        'loop': false,\n\t        'loopStart': 0,\n\t        'loopEnd': 0,\n\t        'reverse': false\n\t    };\n\t    /**\n\t\t *  Play the buffer at the given startTime. Optionally add an offset\n\t\t *  and/or duration which will play the buffer from a position\n\t\t *  within the buffer for the given duration.\n\t\t *\n\t\t *  @param  {Time} [startTime=now] When the player should start.\n\t\t *  @param  {Time} [offset=0] The offset from the beginning of the sample\n\t\t *                                 to start at.\n\t\t *  @param  {Time=} duration How long the sample should play. If no duration\n\t\t *                                is given, it will default to the full length\n\t\t *                                of the sample (minus any offset)\n\t\t *  @returns {Tone.GrainPlayer} this\n\t\t *  @memberOf Tone.GrainPlayer#\n\t\t *  @method start\n\t\t *  @name start\n\t\t */\n\t    /**\n\t\t *  Internal start method\n\t\t *  @param {Time} time\n\t\t *  @param {Time} offset\n\t\t *  @private\n\t\t */\n\t    Tone.GrainPlayer.prototype._start = function (time, offset, duration) {\n\t        offset = Tone.defaultArg(offset, 0);\n\t        offset = this.toSeconds(offset);\n\t        time = this.toSeconds(time);\n\t        this._offset = offset;\n\t        this._clock.start(time);\n\t        if (duration) {\n\t            this.stop(time + this.toSeconds(duration));\n\t        }\n\t    };\n\t    /**\n\t\t *  Internal start method\n\t\t *  @param {Time} time\n\t\t *  @private\n\t\t */\n\t    Tone.GrainPlayer.prototype._stop = function (time) {\n\t        this._clock.stop(time);\n\t    };\n\t    /**\n\t\t * Invoked when the clock is stopped\n\t\t * @param  {Number} time\n\t\t * @private\n\t\t */\n\t    Tone.GrainPlayer.prototype._onstop = function (time) {\n\t        //stop the players\n\t        this._activeSources.forEach(function (source) {\n\t            source.stop(time, 0);\n\t        });\n\t    };\n\t    /**\n\t\t *  Invoked on each clock tick. scheduled a new\n\t\t *  grain at this time.\n\t\t *  @param  {Time}  time\n\t\t *  @private\n\t\t */\n\t    Tone.GrainPlayer.prototype._tick = function (time) {\n\t        var fadeIn = this._offset < this._overlap ? 0 : this._overlap;\n\t        var source = new Tone.BufferSource({\n\t            'buffer': this.buffer,\n\t            'fadeIn': fadeIn,\n\t            'fadeOut': this._overlap,\n\t            'loop': this.loop,\n\t            'loopStart': this._loopStart,\n\t            'loopEnd': this._loopEnd,\n\t            'playbackRate': Tone.intervalToFrequencyRatio(this.detune / 100)\n\t        }).connect(this.output);\n\t        source.start(time, this._offset);\n\t        this._offset += this.grainSize;\n\t        source.stop(time + this.grainSize);\n\t        //add it to the active sources\n\t        this._activeSources.push(source);\n\t        //remove it when it's done\n\t        source.onended = function () {\n\t            var index = this._activeSources.indexOf(source);\n\t            if (index !== -1) {\n\t                this._activeSources.splice(index, 1);\n\t            }\n\t        }.bind(this);\n\t    };\n\t    /**\n\t\t *  Jump to a specific time and play it.\n\t\t *  @param  {Time}  offset  The offset to jump to.\n\t\t *  @param {Time=} time When to make the jump.\n\t\t *  @return  {Tone.GrainPlayer}  this\n\t\t */\n\t    Tone.GrainPlayer.prototype.seek = function (offset, time) {\n\t        this._offset = this.toSeconds(offset);\n\t        this._tick(this.toSeconds(time));\n\t        return this;\n\t    };\n\t    /**\n\t\t * The playback rate of the sample\n\t\t * @memberOf Tone.GrainPlayer#\n\t\t * @type {Positive}\n\t\t * @name playbackRate\n\t\t */\n\t    Object.defineProperty(Tone.GrainPlayer.prototype, 'playbackRate', {\n\t        get: function () {\n\t            return this._playbackRate;\n\t        },\n\t        set: function (rate) {\n\t            this._playbackRate = rate;\n\t            this.grainSize = this._grainSize;\n\t        }\n\t    });\n\t    /**\n\t\t * The loop start time.\n\t\t * @memberOf Tone.GrainPlayer#\n\t\t * @type {Time}\n\t\t * @name loopStart\n\t\t */\n\t    Object.defineProperty(Tone.GrainPlayer.prototype, 'loopStart', {\n\t        get: function () {\n\t            return this._loopStart;\n\t        },\n\t        set: function (time) {\n\t            this._loopStart = this.toSeconds(time);\n\t        }\n\t    });\n\t    /**\n\t\t * The loop end time.\n\t\t * @memberOf Tone.GrainPlayer#\n\t\t * @type {Time}\n\t\t * @name loopEnd\n\t\t */\n\t    Object.defineProperty(Tone.GrainPlayer.prototype, 'loopEnd', {\n\t        get: function () {\n\t            return this._loopEnd;\n\t        },\n\t        set: function (time) {\n\t            this._loopEnd = this.toSeconds(time);\n\t        }\n\t    });\n\t    /**\n\t\t * The direction the buffer should play in\n\t\t * @memberOf Tone.GrainPlayer#\n\t\t * @type {boolean}\n\t\t * @name reverse\n\t\t */\n\t    Object.defineProperty(Tone.GrainPlayer.prototype, 'reverse', {\n\t        get: function () {\n\t            return this.buffer.reverse;\n\t        },\n\t        set: function (rev) {\n\t            this.buffer.reverse = rev;\n\t        }\n\t    });\n\t    /**\n\t\t * The size of each chunk of audio that the\n\t\t * buffer is chopped into and played back at.\n\t\t * @memberOf Tone.GrainPlayer#\n\t\t * @type {Time}\n\t\t * @name grainSize\n\t\t */\n\t    Object.defineProperty(Tone.GrainPlayer.prototype, 'grainSize', {\n\t        get: function () {\n\t            return this._grainSize;\n\t        },\n\t        set: function (size) {\n\t            this._grainSize = this.toSeconds(size);\n\t            this._clock.frequency.value = this._playbackRate / this._grainSize;\n\t        }\n\t    });\n\t    /**\n\t\t * This is the duration of the cross-fade between\n\t\t * sucessive grains.\n\t\t * @memberOf Tone.GrainPlayer#\n\t\t * @type {Time}\n\t\t * @name overlap\n\t\t */\n\t    Object.defineProperty(Tone.GrainPlayer.prototype, 'overlap', {\n\t        get: function () {\n\t            return this._overlap;\n\t        },\n\t        set: function (time) {\n\t            this._overlap = this.toSeconds(time);\n\t        }\n\t    });\n\t    /**\n\t\t * Clean up\n\t\t * @return {Tone.GrainPlayer} this\n\t\t */\n\t    Tone.GrainPlayer.prototype.dispose = function () {\n\t        Tone.Source.prototype.dispose.call(this);\n\t        this.buffer.dispose();\n\t        this.buffer = null;\n\t        this._clock.dispose();\n\t        this._clock = null;\n\t        this._activeSources.forEach(function (source) {\n\t            source.dispose();\n\t        });\n\t        this._activeSources = null;\n\t        return this;\n\t    };\n\t    return Tone.GrainPlayer;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Player is an audio file player with start, loop, and stop functions.\n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone.Source} \n\t\t *  @param {string|AudioBuffer} url Either the AudioBuffer or the url from\n\t\t *                                  which to load the AudioBuffer\n\t\t *  @param {function=} onload The function to invoke when the buffer is loaded. \n\t\t *                            Recommended to use Tone.Buffer.on('load') instead.\n\t\t *  @example\n\t\t * var player = new Tone.Player(\"./path/to/sample.mp3\").toMaster();\n\t\t * //play as soon as the buffer is loaded\n\t\t * player.autostart = true;\n\t\t */\n\t    Tone.Player = function (url) {\n\t        var options;\n\t        if (url instanceof Tone.Buffer) {\n\t            url = url.get();\n\t            options = Tone.Player.defaults;\n\t        } else {\n\t            options = Tone.defaults(arguments, [\n\t                'url',\n\t                'onload'\n\t            ], Tone.Player);\n\t        }\n\t        Tone.Source.call(this, options);\n\t        /**\n\t\t\t *  @private\n\t\t\t *  @type {AudioBufferSourceNode}\n\t\t\t */\n\t        this._source = null;\n\t        /**\n\t\t\t *  If the file should play as soon\n\t\t\t *  as the buffer is loaded. \n\t\t\t *  @type {boolean}\n\t\t\t *  @example\n\t\t\t * //will play as soon as it's loaded\n\t\t\t * var player = new Tone.Player({\n\t\t\t * \t\"url\" : \"./path/to/sample.mp3\",\n\t\t\t * \t\"autostart\" : true,\n\t\t\t * }).toMaster();\n\t\t\t */\n\t        this.autostart = options.autostart;\n\t        /**\n\t\t\t *  the buffer\n\t\t\t *  @private\n\t\t\t *  @type {Tone.Buffer}\n\t\t\t */\n\t        this._buffer = new Tone.Buffer({\n\t            'url': options.url,\n\t            'onload': this._onload.bind(this, options.onload),\n\t            'reverse': options.reverse\n\t        });\n\t        if (url instanceof AudioBuffer) {\n\t            this._buffer.set(url);\n\t        }\n\t        /**\n\t\t\t *  if the buffer should loop once it's over\n\t\t\t *  @type {boolean}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loop = options.loop;\n\t        /**\n\t\t\t *  if 'loop' is true, the loop will start at this position\n\t\t\t *  @type {Time}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loopStart = options.loopStart;\n\t        /**\n\t\t\t *  if 'loop' is true, the loop will end at this position\n\t\t\t *  @type {Time}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loopEnd = options.loopEnd;\n\t        /**\n\t\t\t *  the playback rate\n\t\t\t *  @private\n\t\t\t *  @type {number}\n\t\t\t */\n\t        this._playbackRate = options.playbackRate;\n\t        /**\n\t\t\t *  Enabling retrigger will allow a player to be restarted\n\t\t\t *  before the the previous 'start' is done playing. Otherwise, \n\t\t\t *  successive calls to Tone.Player.start will only start\n\t\t\t *  the sample if it had played all the way through. \n\t\t\t *  @type {boolean}\n\t\t\t */\n\t        this.retrigger = options.retrigger;\n\t        /**\n\t\t\t *  The fadeIn time of the amplitude envelope.\n\t\t\t *  @type {Time}\n\t\t\t */\n\t        this.fadeIn = options.fadeIn;\n\t        /**\n\t\t\t *  The fadeOut time of the amplitude envelope.\n\t\t\t *  @type {Time}\n\t\t\t */\n\t        this.fadeOut = options.fadeOut;\n\t    };\n\t    Tone.extend(Tone.Player, Tone.Source);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Player.defaults = {\n\t        'onload': Tone.noOp,\n\t        'playbackRate': 1,\n\t        'loop': false,\n\t        'autostart': false,\n\t        'loopStart': 0,\n\t        'loopEnd': 0,\n\t        'retrigger': false,\n\t        'reverse': false,\n\t        'fadeIn': 0,\n\t        'fadeOut': 0\n\t    };\n\t    /**\n\t\t *  Load the audio file as an audio buffer.\n\t\t *  Decodes the audio asynchronously and invokes\n\t\t *  the callback once the audio buffer loads. \n\t\t *  Note: this does not need to be called if a url\n\t\t *  was passed in to the constructor. Only use this\n\t\t *  if you want to manually load a new url. \n\t\t * @param {string} url The url of the buffer to load.\n\t\t *                     Filetype support depends on the\n\t\t *                     browser.\n\t\t *  @param  {function=} callback The function to invoke once\n\t\t *                               the sample is loaded.\n\t\t *  @returns {Promise}\n\t\t */\n\t    Tone.Player.prototype.load = function (url, callback) {\n\t        return this._buffer.load(url, this._onload.bind(this, callback));\n\t    };\n\t    /**\n\t\t * Internal callback when the buffer is loaded.\n\t\t * @private\n\t\t */\n\t    Tone.Player.prototype._onload = function (callback) {\n\t        callback = Tone.defaultArg(callback, Tone.noOp);\n\t        callback(this);\n\t        if (this.autostart) {\n\t            this.start();\n\t        }\n\t    };\n\t    /**\n\t\t *  Play the buffer at the given startTime. Optionally add an offset\n\t\t *  and/or duration which will play the buffer from a position\n\t\t *  within the buffer for the given duration. \n\t\t *  \n\t\t *  @param  {Time} [startTime=now] When the player should start.\n\t\t *  @param  {Time} [offset=0] The offset from the beginning of the sample\n\t\t *                                 to start at. \n\t\t *  @param  {Time=} duration How long the sample should play. If no duration\n\t\t *                                is given, it will default to the full length \n\t\t *                                of the sample (minus any offset)\n\t\t *  @returns {Tone.Player} this\n\t\t *  @memberOf Tone.Player#\n\t\t *  @method start\n\t\t *  @name start\n\t\t */\n\t    /**\n\t\t *  Internal start method\n\t\t *  @private\n\t\t */\n\t    Tone.Player.prototype._start = function (startTime, offset, duration) {\n\t        //if it's a loop the default offset is the loopstart point\n\t        if (this._loop) {\n\t            offset = Tone.defaultArg(offset, this._loopStart);\n\t        } else {\n\t            //otherwise the default offset is 0\n\t            offset = Tone.defaultArg(offset, 0);\n\t        }\n\t        //compute the values in seconds\n\t        offset = this.toSeconds(offset);\n\t        duration = Tone.defaultArg(duration, Math.max(this._buffer.duration - offset, 0));\n\t        duration = this.toSeconds(duration);\n\t        startTime = this.toSeconds(startTime);\n\t        // //make the source\n\t        this._source = new Tone.BufferSource({\n\t            'buffer': this._buffer,\n\t            'loop': this._loop,\n\t            'loopStart': this._loopStart,\n\t            'loopEnd': this._loopEnd,\n\t            'playbackRate': this._playbackRate,\n\t            'fadeIn': this.fadeIn,\n\t            'fadeOut': this.fadeOut\n\t        }).connect(this.output);\n\t        //set the looping properties\n\t        if (!this._loop && !this._synced) {\n\t            //if it's not looping, set the state change at the end of the sample\n\t            this._state.setStateAtTime(Tone.State.Stopped, startTime + duration);\n\t        }\n\t        //start it\n\t        if (this._loop) {\n\t            this._source.start(startTime, offset);\n\t        } else {\n\t            this._source.start(startTime, offset, duration);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Stop playback.\n\t\t *  @private\n\t\t *  @param  {Time} [time=now]\n\t\t *  @returns {Tone.Player} this\n\t\t */\n\t    Tone.Player.prototype._stop = function (time) {\n\t        if (this._source) {\n\t            this._source.stop(this.toSeconds(time));\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Seek to a specific time in the player's buffer. If the \n\t\t *  source is no longer playing at that time, it will stop.\n\t\t *  If you seek to a time that \n\t\t *  @param {Time} offset The time to seek to.\n\t\t *  @param {Time=} time The time for the seek event to occur.\n\t\t *  @return {Tone.Player} this\n\t\t *  @example\n\t\t * source.start(0.2);\n\t\t * source.stop(0.4);\n\t\t */\n\t    Tone.Player.prototype.seek = function (offset, time) {\n\t        time = this.toSeconds(time);\n\t        if (this._state.getValueAtTime(time) === Tone.State.Started) {\n\t            offset = this.toSeconds(offset);\n\t            // if it's currently playing, stop it\n\t            this._stop(time);\n\t            //restart it at the given time\n\t            this._start(time, offset);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Set the loop start and end. Will only loop if loop is \n\t\t *  set to true. \n\t\t *  @param {Time} loopStart The loop end time\n\t\t *  @param {Time} loopEnd The loop end time\n\t\t *  @returns {Tone.Player} this\n\t\t *  @example\n\t\t * //loop 0.1 seconds of the file. \n\t\t * player.setLoopPoints(0.2, 0.3);\n\t\t * player.loop = true;\n\t\t */\n\t    Tone.Player.prototype.setLoopPoints = function (loopStart, loopEnd) {\n\t        this.loopStart = loopStart;\n\t        this.loopEnd = loopEnd;\n\t        return this;\n\t    };\n\t    /**\n\t\t * If loop is true, the loop will start at this position. \n\t\t * @memberOf Tone.Player#\n\t\t * @type {Time}\n\t\t * @name loopStart\n\t\t */\n\t    Object.defineProperty(Tone.Player.prototype, 'loopStart', {\n\t        get: function () {\n\t            return this._loopStart;\n\t        },\n\t        set: function (loopStart) {\n\t            this._loopStart = loopStart;\n\t            if (this._source) {\n\t                this._source.loopStart = this.toSeconds(loopStart);\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * If loop is true, the loop will end at this position.\n\t\t * @memberOf Tone.Player#\n\t\t * @type {Time}\n\t\t * @name loopEnd\n\t\t */\n\t    Object.defineProperty(Tone.Player.prototype, 'loopEnd', {\n\t        get: function () {\n\t            return this._loopEnd;\n\t        },\n\t        set: function (loopEnd) {\n\t            this._loopEnd = loopEnd;\n\t            if (this._source) {\n\t                this._source.loopEnd = this.toSeconds(loopEnd);\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The audio buffer belonging to the player. \n\t\t * @memberOf Tone.Player#\n\t\t * @type {Tone.Buffer}\n\t\t * @name buffer\n\t\t */\n\t    Object.defineProperty(Tone.Player.prototype, 'buffer', {\n\t        get: function () {\n\t            return this._buffer;\n\t        },\n\t        set: function (buffer) {\n\t            this._buffer.set(buffer);\n\t        }\n\t    });\n\t    /**\n\t\t * If the buffer should loop once it's over. \n\t\t * @memberOf Tone.Player#\n\t\t * @type {boolean}\n\t\t * @name loop\n\t\t */\n\t    Object.defineProperty(Tone.Player.prototype, 'loop', {\n\t        get: function () {\n\t            return this._loop;\n\t        },\n\t        set: function (loop) {\n\t            this._loop = loop;\n\t            if (this._source) {\n\t                this._source.loop = loop;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The playback speed. 1 is normal speed. This is not a signal because\n\t\t * Safari and iOS currently don't support playbackRate as a signal.\n\t\t * @memberOf Tone.Player#\n\t\t * @type {number}\n\t\t * @name playbackRate\n\t\t */\n\t    Object.defineProperty(Tone.Player.prototype, 'playbackRate', {\n\t        get: function () {\n\t            return this._playbackRate;\n\t        },\n\t        set: function (rate) {\n\t            this._playbackRate = rate;\n\t            if (this._source) {\n\t                this._source.playbackRate.value = rate;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The direction the buffer should play in\n\t\t * @memberOf Tone.Player#\n\t\t * @type {boolean}\n\t\t * @name reverse\n\t\t */\n\t    Object.defineProperty(Tone.Player.prototype, 'reverse', {\n\t        get: function () {\n\t            return this._buffer.reverse;\n\t        },\n\t        set: function (rev) {\n\t            this._buffer.reverse = rev;\n\t        }\n\t    });\n\t    /**\n\t\t * If all the buffer is loaded\n\t\t * @memberOf Tone.Player#\n\t\t * @type {Boolean}\n\t\t * @name loaded\n\t\t * @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Player.prototype, 'loaded', {\n\t        get: function () {\n\t            return this._buffer.loaded;\n\t        }\n\t    });\n\t    /**\n\t\t *  Dispose and disconnect.\n\t\t *  @return {Tone.Player} this\n\t\t */\n\t    Tone.Player.prototype.dispose = function () {\n\t        Tone.Source.prototype.dispose.call(this);\n\t        if (this._source !== null) {\n\t            this._source.disconnect();\n\t            this._source = null;\n\t        }\n\t        this._buffer.dispose();\n\t        this._buffer = null;\n\t        return this;\n\t    };\n\t    return Tone.Player;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Players combines multiple [Tone.Player](Player) objects.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @param {Object} urls An object mapping a name to a url.\n\t\t *  @param {function=} onload The function to invoke when the buffer is loaded.\n\t\t */\n\t    Tone.Players = function (urls) {\n\t        var args = Array.prototype.slice.call(arguments);\n\t        args.shift();\n\t        var options = Tone.defaults(args, ['onload'], Tone.Players);\n\t        Tone.call(this);\n\t        /**\n\t\t\t *  The output volume node\n\t\t\t *  @type  {Tone.Volume}\n\t\t\t *  @private\n\t\t\t */\n\t        this._volume = this.output = new Tone.Volume(options.volume);\n\t        /**\n\t\t\t * The volume of the output in decibels.\n\t\t\t * @type {Decibels}\n\t\t\t * @signal\n\t\t\t * @example\n\t\t\t * source.volume.value = -6;\n\t\t\t */\n\t        this.volume = this._volume.volume;\n\t        this._readOnly('volume');\n\t        //make the output explicitly stereo\n\t        this._volume.output.output.channelCount = 2;\n\t        this._volume.output.output.channelCountMode = 'explicit';\n\t        //mute initially\n\t        this.mute = options.mute;\n\t        /**\n\t\t\t * The container of all of the players\n\t\t\t * @type {Object}\n\t\t\t * @private\n\t\t\t */\n\t        this._players = {};\n\t        /**\n\t\t\t * The loading count\n\t\t\t * @type {Number}\n\t\t\t * @private\n\t\t\t */\n\t        this._loadingCount = 0;\n\t        /**\n\t\t\t * private holder of the fadeIn time\n\t\t\t * @type {Time}\n\t\t\t * @private\n\t\t\t */\n\t        this._fadeIn = options.fadeIn;\n\t        /**\n\t\t\t * private holder of the fadeOut time\n\t\t\t * @type {Time}\n\t\t\t * @private\n\t\t\t */\n\t        this._fadeOut = options.fadeOut;\n\t        //add all of the players\n\t        for (var name in urls) {\n\t            this._loadingCount++;\n\t            this.add(name, urls[name], this._bufferLoaded.bind(this, options.onload));\n\t        }\n\t    };\n\t    Tone.extend(Tone.Players, Tone.AudioNode);\n\t    /**\n\t\t * The default values\n\t\t * @type {Object}\n\t\t */\n\t    Tone.Players.defaults = {\n\t        'volume': 0,\n\t        'mute': false,\n\t        'onload': Tone.noOp,\n\t        'fadeIn': 0,\n\t        'fadeOut': 0\n\t    };\n\t    /**\n\t\t *  A buffer was loaded. decrement the counter.\n\t\t *  @param  {Function}  callback\n\t\t *  @private\n\t\t */\n\t    Tone.Players.prototype._bufferLoaded = function (callback) {\n\t        this._loadingCount--;\n\t        if (this._loadingCount === 0 && callback) {\n\t            callback(this);\n\t        }\n\t    };\n\t    /**\n\t\t * Mute the output.\n\t\t * @memberOf Tone.Source#\n\t\t * @type {boolean}\n\t\t * @name mute\n\t\t * @example\n\t\t * //mute the output\n\t\t * source.mute = true;\n\t\t */\n\t    Object.defineProperty(Tone.Players.prototype, 'mute', {\n\t        get: function () {\n\t            return this._volume.mute;\n\t        },\n\t        set: function (mute) {\n\t            this._volume.mute = mute;\n\t        }\n\t    });\n\t    /**\n\t\t * The fadeIn time of the amplitude envelope.\n\t\t * @memberOf Tone.Source#\n\t\t * @type {Time}\n\t\t * @name fadeIn\n\t\t */\n\t    Object.defineProperty(Tone.Players.prototype, 'fadeIn', {\n\t        get: function () {\n\t            return this._fadeIn;\n\t        },\n\t        set: function (fadeIn) {\n\t            this._fadeIn = fadeIn;\n\t            this._forEach(function (player) {\n\t                player.fadeIn = fadeIn;\n\t            });\n\t        }\n\t    });\n\t    /**\n\t\t * The fadeOut time of the amplitude envelope.\n\t\t * @memberOf Tone.Source#\n\t\t * @type {Time}\n\t\t * @name fadeOut\n\t\t */\n\t    Object.defineProperty(Tone.Players.prototype, 'fadeOut', {\n\t        get: function () {\n\t            return this._fadeOut;\n\t        },\n\t        set: function (fadeOut) {\n\t            this._fadeOut = fadeOut;\n\t            this._forEach(function (player) {\n\t                player.fadeOut = fadeOut;\n\t            });\n\t        }\n\t    });\n\t    /**\n\t\t * The state of the players object. Returns \"started\" if any of the players are playing.\n\t\t * @memberOf Tone.Players#\n\t\t * @type {String}\n\t\t * @name state\n\t\t * @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Players.prototype, 'state', {\n\t        get: function () {\n\t            var playing = false;\n\t            this._forEach(function (player) {\n\t                playing = playing || player.state === Tone.State.Started;\n\t            });\n\t            return playing ? Tone.State.Started : Tone.State.Stopped;\n\t        }\n\t    });\n\t    /**\n\t\t *  True if the buffers object has a buffer by that name.\n\t\t *  @param  {String|Number}  name  The key or index of the\n\t\t *                                 buffer.\n\t\t *  @return  {Boolean}\n\t\t */\n\t    Tone.Players.prototype.has = function (name) {\n\t        return this._players.hasOwnProperty(name);\n\t    };\n\t    /**\n\t\t *  Get a player by name.\n\t\t *  @param  {String}  name  The players name as defined in\n\t\t *                          the constructor object or `add` method.\n\t\t *  @return  {Tone.Player}\n\t\t */\n\t    Tone.Players.prototype.get = function (name) {\n\t        if (this.has(name)) {\n\t            return this._players[name];\n\t        } else {\n\t            throw new Error('Tone.Players: no player named ' + name);\n\t        }\n\t    };\n\t    /**\n\t\t * Iterate over all of the players\n\t\t * @param  {Function} callback\n\t\t * @return {Tone.Players}            this\n\t\t * @private\n\t\t */\n\t    Tone.Players.prototype._forEach = function (callback) {\n\t        for (var playerName in this._players) {\n\t            callback(this._players[playerName], playerName);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t * If all the buffers are loaded or not\n\t\t * @memberOf Tone.Players#\n\t\t * @type {Boolean}\n\t\t * @name loaded\n\t\t * @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Players.prototype, 'loaded', {\n\t        get: function () {\n\t            var isLoaded = true;\n\t            this._forEach(function (player) {\n\t                isLoaded = isLoaded && player.loaded;\n\t            });\n\t            return isLoaded;\n\t        }\n\t    });\n\t    /**\n\t\t *  Add a player by name and url to the Players\n\t\t *  @param  {String}    name      A unique name to give the player\n\t\t *  @param  {String|Tone.Buffer|Audiobuffer}  url  Either the url of the bufer,\n\t\t *                                                 or a buffer which will be added\n\t\t *                                                 with the given name.\n\t\t *  @param  {Function=}  callback  The callback to invoke\n\t\t *                                 when the url is loaded.\n\t\t */\n\t    Tone.Players.prototype.add = function (name, url, callback) {\n\t        this._players[name] = new Tone.Player(url, callback).connect(this.output);\n\t        this._players[name].fadeIn = this._fadeIn;\n\t        this._players[name].fadeOut = this._fadeOut;\n\t        return this;\n\t    };\n\t    /**\n\t\t * Stop all of the players at the given time\n\t\t * @param {Time} time The time to stop all of the players.\n\t\t * @return {Tone.Players} this\n\t\t */\n\t    Tone.Players.prototype.stopAll = function (time) {\n\t        this._forEach(function (player) {\n\t            player.stop(time);\n\t        });\n\t    };\n\t    /**\n\t\t *  Dispose and disconnect.\n\t\t *  @return {Tone.Players} this\n\t\t */\n\t    Tone.Players.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this._volume.dispose();\n\t        this._volume = null;\n\t        this._writable('volume');\n\t        this.volume = null;\n\t        this.output = null;\n\t        this._forEach(function (player) {\n\t            player.dispose();\n\t        });\n\t        this._players = null;\n\t        return this;\n\t    };\n\t    return Tone.Players;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.UserMedia uses MediaDevices.getUserMedia to open up\n\t\t *          and external microphone or audio input. Check\n\t\t *          [MediaDevices API Support](https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia)\n\t\t *          to see which browsers are supported. Access to an external input\n\t\t *          is limited to secure (HTTPS) connections.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.AudioNode}\n\t\t *  @param {Decibels=} volume The level of the input\n\t\t *  @example\n\t\t * //list the inputs and open the third one\n\t\t * var motu = new Tone.UserMedia();\n\t\t *\n\t\t * //opening the input asks the user to activate their mic\n\t\t * motu.open().then(function(){\n\t\t * \t//opening is activates the microphone\n\t\t * \t//starting lets audio through\n\t\t * \tmotu.start(10);\n\t\t * });\n\t\t */\n\t    Tone.UserMedia = function () {\n\t        var options = Tone.defaults(arguments, ['volume'], Tone.UserMedia);\n\t        Tone.AudioNode.call(this);\n\t        /**\n\t\t\t *  The MediaStreamNode\n\t\t\t *  @type {MediaStreamAudioSourceNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._mediaStream = null;\n\t        /**\n\t\t\t *  The media stream created by getUserMedia.\n\t\t\t *  @type {LocalMediaStream}\n\t\t\t *  @private\n\t\t\t */\n\t        this._stream = null;\n\t        /**\n\t\t\t *  The open device\n\t\t\t *  @type  {MediaDeviceInfo}\n\t\t\t *  @private\n\t\t\t */\n\t        this._device = null;\n\t        /**\n\t\t\t *  The output volume node\n\t\t\t *  @type  {Tone.Volume}\n\t\t\t *  @private\n\t\t\t */\n\t        this._volume = this.output = new Tone.Volume(options.volume);\n\t        /**\n\t\t\t * The volume of the output in decibels.\n\t\t\t * @type {Decibels}\n\t\t\t * @signal\n\t\t\t * @example\n\t\t\t * input.volume.value = -6;\n\t\t\t */\n\t        this.volume = this._volume.volume;\n\t        this._readOnly('volume');\n\t        this.mute = options.mute;\n\t    };\n\t    Tone.extend(Tone.UserMedia, Tone.AudioNode);\n\t    /**\n\t\t * the default parameters\n\t\t * @type {Object}\n\t\t */\n\t    Tone.UserMedia.defaults = {\n\t        'volume': 0,\n\t        'mute': false\n\t    };\n\t    /**\n\t\t *  Open the media stream. If a string is passed in, it is assumed\n\t\t *  to be the label or id of the stream, if a number is passed in,\n\t\t *  it is the input number of the stream.\n\t\t *  @param  {String|Number} [labelOrId=\"default\"] The label or id of the audio input media device.\n\t\t *                                                With no argument, the default stream is opened.\n\t\t *  @return {Promise} The promise is resolved when the stream is open.\n\t\t */\n\t    Tone.UserMedia.prototype.open = function (labelOrId) {\n\t        labelOrId = Tone.defaultArg(labelOrId, 'default');\n\t        return Tone.UserMedia.enumerateDevices().then(function (devices) {\n\t            var device;\n\t            if (Tone.isNumber(labelOrId)) {\n\t                device = devices[labelOrId];\n\t            } else {\n\t                device = devices.find(function (device) {\n\t                    return device.label === labelOrId || device.deviceId === labelOrId;\n\t                });\n\t                //didn't find a matching device\n\t                if (!device) {\n\t                    throw new Error('Tone.UserMedia: no matching device: ' + labelOrId);\n\t                }\n\t            }\n\t            this._device = device;\n\t            //do getUserMedia\n\t            var constraints = {\n\t                audio: {\n\t                    'deviceId': device.deviceId,\n\t                    'echoCancellation': false,\n\t                    'sampleRate': this.context.sampleRate\n\t                }\n\t            };\n\t            return navigator.mediaDevices.getUserMedia(constraints).then(function (stream) {\n\t                //start a new source only if the previous one is closed\n\t                if (!this._stream) {\n\t                    this._stream = stream;\n\t                    //Wrap a MediaStreamSourceNode around the live input stream.\n\t                    this._mediaStream = this.context.createMediaStreamSource(stream);\n\t                    //Connect the MediaStreamSourceNode to a gate gain node\n\t                    this._mediaStream.connect(this.output);\n\t                }\n\t                return this;\n\t            }.bind(this));\n\t        }.bind(this));\n\t    };\n\t    /**\n\t\t *  Close the media stream\n\t\t *  @return {Tone.UserMedia} this\n\t\t */\n\t    Tone.UserMedia.prototype.close = function () {\n\t        if (this._stream) {\n\t            this._stream.getAudioTracks().forEach(function (track) {\n\t                track.stop();\n\t            });\n\t            this._stream = null;\n\t            //remove the old media stream\n\t            this._mediaStream.disconnect();\n\t            this._mediaStream = null;\n\t        }\n\t        this._device = null;\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Returns a promise which resolves with the list of audio input devices available.\n\t\t *  @return {Promise} The promise that is resolved with the devices\n\t\t *  @static\n\t\t *  @example\n\t\t * Tone.UserMedia.enumerateDevices().then(function(devices){\n\t\t * \tconsole.log(devices)\n\t\t * })\n\t\t */\n\t    Tone.UserMedia.enumerateDevices = function () {\n\t        return navigator.mediaDevices.enumerateDevices().then(function (devices) {\n\t            return devices.filter(function (device) {\n\t                return device.kind === 'audioinput';\n\t            });\n\t        });\n\t    };\n\t    /**\n\t\t *  Returns the playback state of the source, \"started\" when the microphone is open\n\t\t *  and \"stopped\" when the mic is closed.\n\t\t *  @type {Tone.State}\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.UserMedia#\n\t\t *  @name state\n\t\t */\n\t    Object.defineProperty(Tone.UserMedia.prototype, 'state', {\n\t        get: function () {\n\t            return this._stream && this._stream.active ? Tone.State.Started : Tone.State.Stopped;\n\t        }\n\t    });\n\t    /**\n\t\t * \tReturns an identifier for the represented device that is\n\t\t * \tpersisted across sessions. It is un-guessable by other applications and\n\t\t * \tunique to the origin of the calling application. It is reset when the\n\t\t * \tuser clears cookies (for Private Browsing, a different identifier is\n\t\t * \tused that is not persisted across sessions). Returns undefined when the\n\t\t * \tdevice is not open.\n\t\t *  @type {String}\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.UserMedia#\n\t\t *  @name deviceId\n\t\t */\n\t    Object.defineProperty(Tone.UserMedia.prototype, 'deviceId', {\n\t        get: function () {\n\t            if (this._device) {\n\t                return this._device.deviceId;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * \tReturns a group identifier. Two devices have the\n\t\t * \tsame group identifier if they belong to the same physical device.\n\t\t * \tReturns undefined when the device is not open.\n\t\t *  @type {String}\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.UserMedia#\n\t\t *  @name groupId\n\t\t */\n\t    Object.defineProperty(Tone.UserMedia.prototype, 'groupId', {\n\t        get: function () {\n\t            if (this._device) {\n\t                return this._device.groupId;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * \tReturns a label describing this device (for example \"Built-in Microphone\").\n\t\t * \tReturns undefined when the device is not open or label is not available\n\t\t * \tbecause of permissions.\n\t\t *  @type {String}\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.UserMedia#\n\t\t *  @name groupId\n\t\t */\n\t    Object.defineProperty(Tone.UserMedia.prototype, 'label', {\n\t        get: function () {\n\t            if (this._device) {\n\t                return this._device.label;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * Mute the output.\n\t\t * @memberOf Tone.UserMedia#\n\t\t * @type {boolean}\n\t\t * @name mute\n\t\t * @example\n\t\t * //mute the output\n\t\t * userMedia.mute = true;\n\t\t */\n\t    Object.defineProperty(Tone.UserMedia.prototype, 'mute', {\n\t        get: function () {\n\t            return this._volume.mute;\n\t        },\n\t        set: function (mute) {\n\t            this._volume.mute = mute;\n\t        }\n\t    });\n\t    /**\n\t\t * Clean up.\n\t\t * @return {Tone.UserMedia} this\n\t\t */\n\t    Tone.UserMedia.prototype.dispose = function () {\n\t        Tone.AudioNode.prototype.dispose.call(this);\n\t        this.close();\n\t        this._writable('volume');\n\t        this._volume.dispose();\n\t        this._volume = null;\n\t        this.volume = null;\n\t        return this;\n\t    };\n\t    /**\n\t\t *  If getUserMedia is supported by the browser.\n\t\t *  @type  {Boolean}\n\t\t *  @memberOf Tone.UserMedia#\n\t\t *  @name supported\n\t\t *  @static\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.UserMedia, 'supported', {\n\t        get: function () {\n\t            return !Tone.isUndef(navigator.mediaDevices) && Tone.isFunction(navigator.mediaDevices.getUserMedia);\n\t        }\n\t    });\n\t    return Tone.UserMedia;\n\t});\n\t\n\treturn Tone;\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tone/build/Tone.js\n// module id = 4\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\nvar addLeadingSlash = exports.addLeadingSlash = function addLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path : '/' + path;\n};\n\nvar stripLeadingSlash = exports.stripLeadingSlash = function stripLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path.substr(1) : path;\n};\n\nvar hasBasename = exports.hasBasename = function hasBasename(path, prefix) {\n  return new RegExp('^' + prefix + '(\\\\/|\\\\?|#|$)', 'i').test(path);\n};\n\nvar stripBasename = exports.stripBasename = function stripBasename(path, prefix) {\n  return hasBasename(path, prefix) ? path.substr(prefix.length) : path;\n};\n\nvar stripTrailingSlash = exports.stripTrailingSlash = function stripTrailingSlash(path) {\n  return path.charAt(path.length - 1) === '/' ? path.slice(0, -1) : path;\n};\n\nvar parsePath = exports.parsePath = function parsePath(path) {\n  var pathname = path || '/';\n  var search = '';\n  var hash = '';\n\n  var hashIndex = pathname.indexOf('#');\n  if (hashIndex !== -1) {\n    hash = pathname.substr(hashIndex);\n    pathname = pathname.substr(0, hashIndex);\n  }\n\n  var searchIndex = pathname.indexOf('?');\n  if (searchIndex !== -1) {\n    search = pathname.substr(searchIndex);\n    pathname = pathname.substr(0, searchIndex);\n  }\n\n  return {\n    pathname: pathname,\n    search: search === '?' ? '' : search,\n    hash: hash === '#' ? '' : hash\n  };\n};\n\nvar createPath = exports.createPath = function createPath(location) {\n  var pathname = location.pathname,\n      search = location.search,\n      hash = location.hash;\n\n\n  var path = pathname || '/';\n\n  if (search && search !== '?') path += search.charAt(0) === '?' ? search : '?' + search;\n\n  if (hash && hash !== '#') path += hash.charAt(0) === '#' ? hash : '#' + hash;\n\n  return path;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/history/PathUtils.js\n// module id = 5\n// module chunks = 0","export var addLeadingSlash = function addLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path : '/' + path;\n};\n\nexport var stripLeadingSlash = function stripLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path.substr(1) : path;\n};\n\nexport var hasBasename = function hasBasename(path, prefix) {\n  return new RegExp('^' + prefix + '(\\\\/|\\\\?|#|$)', 'i').test(path);\n};\n\nexport var stripBasename = function stripBasename(path, prefix) {\n  return hasBasename(path, prefix) ? path.substr(prefix.length) : path;\n};\n\nexport var stripTrailingSlash = function stripTrailingSlash(path) {\n  return path.charAt(path.length - 1) === '/' ? path.slice(0, -1) : path;\n};\n\nexport var parsePath = function parsePath(path) {\n  var pathname = path || '/';\n  var search = '';\n  var hash = '';\n\n  var hashIndex = pathname.indexOf('#');\n  if (hashIndex !== -1) {\n    hash = pathname.substr(hashIndex);\n    pathname = pathname.substr(0, hashIndex);\n  }\n\n  var searchIndex = pathname.indexOf('?');\n  if (searchIndex !== -1) {\n    search = pathname.substr(searchIndex);\n    pathname = pathname.substr(0, searchIndex);\n  }\n\n  return {\n    pathname: pathname,\n    search: search === '?' ? '' : search,\n    hash: hash === '#' ? '' : hash\n  };\n};\n\nexport var createPath = function createPath(location) {\n  var pathname = location.pathname,\n      search = location.search,\n      hash = location.hash;\n\n\n  var path = pathname || '/';\n\n  if (search && search !== '?') path += search.charAt(0) === '?' ? search : '?' + search;\n\n  if (hash && hash !== '#') path += hash.charAt(0) === '#' ? hash : '#' + hash;\n\n  return path;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/history/es/PathUtils.js\n// module id = 6\n// module chunks = 0","export class Instrument {\r\n  constructor(synth, volume) {\r\n    this.synth = synth;\r\n    this.synth.toMaster();\r\n    this.synth.volume.value = volume;\r\n  }\r\n  triggerAttackRelease(note, duration, time) {\r\n    if (note) {\r\n      this.synth.triggerAttackRelease(note, duration, time);\r\n    } else {\r\n      this.synth.triggerAttackRelease(duration, time);\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/synth/instruments/instrument.js","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\n} catch(e) {\n\t// This works if the window reference is available\n\tif(typeof window === \"object\")\n\t\tg = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 8\n// module chunks = 0","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nimport resolvePathname from 'resolve-pathname';\nimport valueEqual from 'value-equal';\nimport { parsePath } from './PathUtils';\n\nexport var createLocation = function createLocation(path, state, key, currentLocation) {\n  var location = void 0;\n  if (typeof path === 'string') {\n    // Two-arg form: push(path, state)\n    location = parsePath(path);\n    location.state = state;\n  } else {\n    // One-arg form: push(location)\n    location = _extends({}, path);\n\n    if (location.pathname === undefined) location.pathname = '';\n\n    if (location.search) {\n      if (location.search.charAt(0) !== '?') location.search = '?' + location.search;\n    } else {\n      location.search = '';\n    }\n\n    if (location.hash) {\n      if (location.hash.charAt(0) !== '#') location.hash = '#' + location.hash;\n    } else {\n      location.hash = '';\n    }\n\n    if (state !== undefined && location.state === undefined) location.state = state;\n  }\n\n  try {\n    location.pathname = decodeURI(location.pathname);\n  } catch (e) {\n    if (e instanceof URIError) {\n      throw new URIError('Pathname \"' + location.pathname + '\" could not be decoded. ' + 'This is likely caused by an invalid percent-encoding.');\n    } else {\n      throw e;\n    }\n  }\n\n  if (key) location.key = key;\n\n  if (currentLocation) {\n    // Resolve incomplete/relative pathname relative to current location.\n    if (!location.pathname) {\n      location.pathname = currentLocation.pathname;\n    } else if (location.pathname.charAt(0) !== '/') {\n      location.pathname = resolvePathname(location.pathname, currentLocation.pathname);\n    }\n  } else {\n    // When there is no prior location and pathname is empty, set it to /\n    if (!location.pathname) {\n      location.pathname = '/';\n    }\n  }\n\n  return location;\n};\n\nexport var locationsAreEqual = function locationsAreEqual(a, b) {\n  return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash && a.key === b.key && valueEqual(a.state, b.state);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/history/es/LocationUtils.js\n// module id = 9\n// module chunks = 0","export const randomIntBetween = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n\r\nexport const isNumeric = value => {\r\n  return !isNaN(value - parseFloat(value));\r\n};\r\n\r\nexport const randomFromArray = array => {\r\n  return array[randomIntBetween(0, array.length - 1)];\r\n};\r\n\r\nexport const coinToss = () => {\r\n  return Math.floor(Math.random() * 2);\r\n};\r\n\r\nexport const shuffleArray = array => {\r\n  let counter = array.length;\r\n\r\n  // While there are elements in the array\r\n  while (counter > 0) {\r\n    // Pick a random index\r\n    let index = Math.floor(Math.random() * counter);\r\n\r\n    // Decrease counter by 1\r\n    counter--;\r\n\r\n    // And swap the last element with it\r\n    let temp = array[counter];\r\n    array[counter] = array[index];\r\n    array[index] = temp;\r\n  }\r\n\r\n  return array;\r\n};\r\n\r\nexport const runFunctionUntilCheckPasses = (fn, check, isDone, dispatch, getState) => {\r\n  if (isDone) return;\r\n  const promise = fn();\r\n  return promise.then(data => runFunctionUntilCheckPasses(fn, check, check(dispatch, getState, data), dispatch));\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/object-assign/index.js\n// module id = 12\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/invariant.js\n// module id = 13\n// module chunks = 0","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/emptyFunction.js\n// module id = 14\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\nexports.locationsAreEqual = exports.createLocation = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _resolvePathname = require('resolve-pathname');\n\nvar _resolvePathname2 = _interopRequireDefault(_resolvePathname);\n\nvar _valueEqual = require('value-equal');\n\nvar _valueEqual2 = _interopRequireDefault(_valueEqual);\n\nvar _PathUtils = require('./PathUtils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar createLocation = exports.createLocation = function createLocation(path, state, key, currentLocation) {\n  var location = void 0;\n  if (typeof path === 'string') {\n    // Two-arg form: push(path, state)\n    location = (0, _PathUtils.parsePath)(path);\n    location.state = state;\n  } else {\n    // One-arg form: push(location)\n    location = _extends({}, path);\n\n    if (location.pathname === undefined) location.pathname = '';\n\n    if (location.search) {\n      if (location.search.charAt(0) !== '?') location.search = '?' + location.search;\n    } else {\n      location.search = '';\n    }\n\n    if (location.hash) {\n      if (location.hash.charAt(0) !== '#') location.hash = '#' + location.hash;\n    } else {\n      location.hash = '';\n    }\n\n    if (state !== undefined && location.state === undefined) location.state = state;\n  }\n\n  try {\n    location.pathname = decodeURI(location.pathname);\n  } catch (e) {\n    if (e instanceof URIError) {\n      throw new URIError('Pathname \"' + location.pathname + '\" could not be decoded. ' + 'This is likely caused by an invalid percent-encoding.');\n    } else {\n      throw e;\n    }\n  }\n\n  if (key) location.key = key;\n\n  if (currentLocation) {\n    // Resolve incomplete/relative pathname relative to current location.\n    if (!location.pathname) {\n      location.pathname = currentLocation.pathname;\n    } else if (location.pathname.charAt(0) !== '/') {\n      location.pathname = (0, _resolvePathname2.default)(location.pathname, currentLocation.pathname);\n    }\n  } else {\n    // When there is no prior location and pathname is empty, set it to /\n    if (!location.pathname) {\n      location.pathname = '/';\n    }\n  }\n\n  return location;\n};\n\nvar locationsAreEqual = exports.locationsAreEqual = function locationsAreEqual(a, b) {\n  return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash && a.key === b.key && (0, _valueEqual2.default)(a.state, b.state);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/history/LocationUtils.js\n// module id = 15\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar createTransitionManager = function createTransitionManager() {\n  var prompt = null;\n\n  var setPrompt = function setPrompt(nextPrompt) {\n    (0, _warning2.default)(prompt == null, 'A history supports only one prompt at a time');\n\n    prompt = nextPrompt;\n\n    return function () {\n      if (prompt === nextPrompt) prompt = null;\n    };\n  };\n\n  var confirmTransitionTo = function confirmTransitionTo(location, action, getUserConfirmation, callback) {\n    // TODO: If another transition starts while we're still confirming\n    // the previous one, we may end up in a weird state. Figure out the\n    // best way to handle this.\n    if (prompt != null) {\n      var result = typeof prompt === 'function' ? prompt(location, action) : prompt;\n\n      if (typeof result === 'string') {\n        if (typeof getUserConfirmation === 'function') {\n          getUserConfirmation(result, callback);\n        } else {\n          (0, _warning2.default)(false, 'A history needs a getUserConfirmation function in order to use a prompt message');\n\n          callback(true);\n        }\n      } else {\n        // Return false from a transition hook to cancel the transition.\n        callback(result !== false);\n      }\n    } else {\n      callback(true);\n    }\n  };\n\n  var listeners = [];\n\n  var appendListener = function appendListener(fn) {\n    var isActive = true;\n\n    var listener = function listener() {\n      if (isActive) fn.apply(undefined, arguments);\n    };\n\n    listeners.push(listener);\n\n    return function () {\n      isActive = false;\n      listeners = listeners.filter(function (item) {\n        return item !== listener;\n      });\n    };\n  };\n\n  var notifyListeners = function notifyListeners() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    listeners.forEach(function (listener) {\n      return listener.apply(undefined, args);\n    });\n  };\n\n  return {\n    setPrompt: setPrompt,\n    confirmTransitionTo: confirmTransitionTo,\n    appendListener: appendListener,\n    notifyListeners: notifyListeners\n  };\n};\n\nexports.default = createTransitionManager;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/history/createTransitionManager.js\n// module id = 16\n// module chunks = 0","// Written in this round about way for babel-transform-imports\nimport Router from 'react-router/es/Router';\n\nexport default Router;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-router-dom/es/Router.js\n// module id = 17\n// module chunks = 0","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport warning from 'warning';\nimport invariant from 'invariant';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * The public API for putting history on context.\n */\n\nvar Router = function (_React$Component) {\n  _inherits(Router, _React$Component);\n\n  function Router() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Router);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {\n      match: _this.computeMatch(_this.props.history.location.pathname)\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Router.prototype.getChildContext = function getChildContext() {\n    return {\n      router: _extends({}, this.context.router, {\n        history: this.props.history,\n        route: {\n          location: this.props.history.location,\n          match: this.state.match\n        }\n      })\n    };\n  };\n\n  Router.prototype.computeMatch = function computeMatch(pathname) {\n    return {\n      path: '/',\n      url: '/',\n      params: {},\n      isExact: pathname === '/'\n    };\n  };\n\n  Router.prototype.componentWillMount = function componentWillMount() {\n    var _this2 = this;\n\n    var _props = this.props,\n        children = _props.children,\n        history = _props.history;\n\n\n    invariant(children == null || React.Children.count(children) === 1, 'A <Router> may have only one child element');\n\n    // Do this here so we can setState when a <Redirect> changes the\n    // location in componentWillMount. This happens e.g. when doing\n    // server rendering using a <StaticRouter>.\n    this.unlisten = history.listen(function () {\n      _this2.setState({\n        match: _this2.computeMatch(history.location.pathname)\n      });\n    });\n  };\n\n  Router.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    warning(this.props.history === nextProps.history, 'You cannot change <Router history>');\n  };\n\n  Router.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.unlisten();\n  };\n\n  Router.prototype.render = function render() {\n    var children = this.props.children;\n\n    return children ? React.Children.only(children) : null;\n  };\n\n  return Router;\n}(React.Component);\n\nRouter.propTypes = {\n  history: PropTypes.object.isRequired,\n  children: PropTypes.node\n};\nRouter.contextTypes = {\n  router: PropTypes.object\n};\nRouter.childContextTypes = {\n  router: PropTypes.object.isRequired\n};\n\n\nexport default Router;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-router/es/Router.js\n// module id = 18\n// module chunks = 0","import pathToRegexp from 'path-to-regexp';\n\nvar patternCache = {};\nvar cacheLimit = 10000;\nvar cacheCount = 0;\n\nvar compilePath = function compilePath(pattern, options) {\n  var cacheKey = '' + options.end + options.strict + options.sensitive;\n  var cache = patternCache[cacheKey] || (patternCache[cacheKey] = {});\n\n  if (cache[pattern]) return cache[pattern];\n\n  var keys = [];\n  var re = pathToRegexp(pattern, keys, options);\n  var compiledPattern = { re: re, keys: keys };\n\n  if (cacheCount < cacheLimit) {\n    cache[pattern] = compiledPattern;\n    cacheCount++;\n  }\n\n  return compiledPattern;\n};\n\n/**\n * Public API for matching a URL pathname to a path pattern.\n */\nvar matchPath = function matchPath(pathname) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (typeof options === 'string') options = { path: options };\n\n  var _options = options,\n      _options$path = _options.path,\n      path = _options$path === undefined ? '/' : _options$path,\n      _options$exact = _options.exact,\n      exact = _options$exact === undefined ? false : _options$exact,\n      _options$strict = _options.strict,\n      strict = _options$strict === undefined ? false : _options$strict,\n      _options$sensitive = _options.sensitive,\n      sensitive = _options$sensitive === undefined ? false : _options$sensitive;\n\n  var _compilePath = compilePath(path, { end: exact, strict: strict, sensitive: sensitive }),\n      re = _compilePath.re,\n      keys = _compilePath.keys;\n\n  var match = re.exec(pathname);\n\n  if (!match) return null;\n\n  var url = match[0],\n      values = match.slice(1);\n\n  var isExact = pathname === url;\n\n  if (exact && !isExact) return null;\n\n  return {\n    path: path, // the path pattern used to match\n    url: path === '/' && url === '' ? '/' : url, // the matched portion of the URL\n    isExact: isExact, // whether or not we matched exactly\n    params: keys.reduce(function (memo, key, index) {\n      memo[key.name] = values[index];\n      return memo;\n    }, {})\n  };\n};\n\nexport default matchPath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-router/es/matchPath.js\n// module id = 19\n// module chunks = 0","import warning from 'warning';\n\nvar createTransitionManager = function createTransitionManager() {\n  var prompt = null;\n\n  var setPrompt = function setPrompt(nextPrompt) {\n    warning(prompt == null, 'A history supports only one prompt at a time');\n\n    prompt = nextPrompt;\n\n    return function () {\n      if (prompt === nextPrompt) prompt = null;\n    };\n  };\n\n  var confirmTransitionTo = function confirmTransitionTo(location, action, getUserConfirmation, callback) {\n    // TODO: If another transition starts while we're still confirming\n    // the previous one, we may end up in a weird state. Figure out the\n    // best way to handle this.\n    if (prompt != null) {\n      var result = typeof prompt === 'function' ? prompt(location, action) : prompt;\n\n      if (typeof result === 'string') {\n        if (typeof getUserConfirmation === 'function') {\n          getUserConfirmation(result, callback);\n        } else {\n          warning(false, 'A history needs a getUserConfirmation function in order to use a prompt message');\n\n          callback(true);\n        }\n      } else {\n        // Return false from a transition hook to cancel the transition.\n        callback(result !== false);\n      }\n    } else {\n      callback(true);\n    }\n  };\n\n  var listeners = [];\n\n  var appendListener = function appendListener(fn) {\n    var isActive = true;\n\n    var listener = function listener() {\n      if (isActive) fn.apply(undefined, arguments);\n    };\n\n    listeners.push(listener);\n\n    return function () {\n      isActive = false;\n      listeners = listeners.filter(function (item) {\n        return item !== listener;\n      });\n    };\n  };\n\n  var notifyListeners = function notifyListeners() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    listeners.forEach(function (listener) {\n      return listener.apply(undefined, args);\n    });\n  };\n\n  return {\n    setPrompt: setPrompt,\n    confirmTransitionTo: confirmTransitionTo,\n    appendListener: appendListener,\n    notifyListeners: notifyListeners\n  };\n};\n\nexport default createTransitionManager;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/history/es/createTransitionManager.js\n// module id = 20\n// module chunks = 0","import debounce from \"lodash/debounce\";\r\nimport Tone from \"tone\";\r\nimport songs from \"./songs\";\r\n\r\nexport const play = (song, seed, callback = null, visCallback = null) => {\r\n  Tone.context.close();\r\n  Tone.context = new AudioContext();\r\n\r\n  Math.seedrandom(seed);\r\n\r\n  const generatedSettings = songs[song].play(visCallback);\r\n\r\n  Tone.Transport.bpm.value = generatedSettings.bpm;\r\n  Tone.Transport.swing = generatedSettings.swing;\r\n\r\n  Tone.Transport.start(1);\r\n  console.log(generatedSettings);\r\n\r\n  if (callback) {\r\n    callback(generatedSettings);\r\n  }\r\n\r\n  return generatedSettings;\r\n};\r\n\r\nexport const stop = () => {\r\n  Tone.context.close();\r\n};\r\n\r\nexport const playDebounced = debounce(play, 400);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/synth/synth.js","/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nexport default function warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n    /* eslint-disable no-empty */\n  } catch (e) {}\n  /* eslint-enable no-empty */\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-redux/es/utils/warning.js\n// module id = 22\n// module chunks = 0","import baseGetTag from './_baseGetTag.js';\nimport getPrototype from './_getPrototype.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nexport default isPlainObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash-es/isPlainObject.js\n// module id = 23\n// module chunks = 0","'use strict';\n\nvar asap = require('asap/raw');\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('Promise constructor\\'s argument is not a function');\n  }\n  this._75 = 0;\n  this._83 = 0;\n  this._18 = null;\n  this._38 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._47 = null;\nPromise._71 = null;\nPromise._44 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n}\nfunction handle(self, deferred) {\n  while (self._83 === 3) {\n    self = self._18;\n  }\n  if (Promise._47) {\n    Promise._47(self);\n  }\n  if (self._83 === 0) {\n    if (self._75 === 0) {\n      self._75 = 1;\n      self._38 = deferred;\n      return;\n    }\n    if (self._75 === 1) {\n      self._75 = 2;\n      self._38 = [self._38, deferred];\n      return;\n    }\n    self._38.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._83 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._83 === 1) {\n        resolve(deferred.promise, self._18);\n      } else {\n        reject(deferred.promise, self._18);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._18);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._83 = 3;\n      self._18 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._83 = 1;\n  self._18 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._83 = 2;\n  self._18 = newValue;\n  if (Promise._71) {\n    Promise._71(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._75 === 1) {\n    handle(self, self._38);\n    self._38 = null;\n  }\n  if (self._75 === 2) {\n    for (var i = 0; i < self._38.length; i++) {\n      handle(self, self._38[i]);\n    }\n    self._38 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  });\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-scripts/node_modules/promise/lib/core.js\n// module id = 24\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar emptyObject = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  Object.freeze(emptyObject);\n}\n\nmodule.exports = emptyObject;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/emptyObject.js\n// module id = 25\n// module chunks = 0","function isAbsolute(pathname) {\n  return pathname.charAt(0) === '/';\n}\n\n// About 1.5x faster than the two-arg version of Array#splice()\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) {\n    list[i] = list[k];\n  }\n\n  list.pop();\n}\n\n// This implementation is based heavily on node's url.parse\nfunction resolvePathname(to) {\n  var from = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n  var toParts = to && to.split('/') || [];\n  var fromParts = from && from.split('/') || [];\n\n  var isToAbs = to && isAbsolute(to);\n  var isFromAbs = from && isAbsolute(from);\n  var mustEndAbs = isToAbs || isFromAbs;\n\n  if (to && isAbsolute(to)) {\n    // to is absolute\n    fromParts = toParts;\n  } else if (toParts.length) {\n    // to is relative, drop the filename\n    fromParts.pop();\n    fromParts = fromParts.concat(toParts);\n  }\n\n  if (!fromParts.length) return '/';\n\n  var hasTrailingSlash = void 0;\n  if (fromParts.length) {\n    var last = fromParts[fromParts.length - 1];\n    hasTrailingSlash = last === '.' || last === '..' || last === '';\n  } else {\n    hasTrailingSlash = false;\n  }\n\n  var up = 0;\n  for (var i = fromParts.length; i >= 0; i--) {\n    var part = fromParts[i];\n\n    if (part === '.') {\n      spliceOne(fromParts, i);\n    } else if (part === '..') {\n      spliceOne(fromParts, i);\n      up++;\n    } else if (up) {\n      spliceOne(fromParts, i);\n      up--;\n    }\n  }\n\n  if (!mustEndAbs) for (; up--; up) {\n    fromParts.unshift('..');\n  }if (mustEndAbs && fromParts[0] !== '' && (!fromParts[0] || !isAbsolute(fromParts[0]))) fromParts.unshift('');\n\n  var result = fromParts.join('/');\n\n  if (hasTrailingSlash && result.substr(-1) !== '/') result += '/';\n\n  return result;\n}\n\nexport default resolvePathname;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/resolve-pathname/index.js\n// module id = 26\n// module chunks = 0","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction valueEqual(a, b) {\n  if (a === b) return true;\n\n  if (a == null || b == null) return false;\n\n  if (Array.isArray(a)) {\n    return Array.isArray(b) && a.length === b.length && a.every(function (item, index) {\n      return valueEqual(item, b[index]);\n    });\n  }\n\n  var aType = typeof a === 'undefined' ? 'undefined' : _typeof(a);\n  var bType = typeof b === 'undefined' ? 'undefined' : _typeof(b);\n\n  if (aType !== bType) return false;\n\n  if (aType === 'object') {\n    var aValue = a.valueOf();\n    var bValue = b.valueOf();\n\n    if (aValue !== a || bValue !== b) return valueEqual(aValue, bValue);\n\n    var aKeys = Object.keys(a);\n    var bKeys = Object.keys(b);\n\n    if (aKeys.length !== bKeys.length) return false;\n\n    return aKeys.every(function (key) {\n      return valueEqual(a[key], b[key]);\n    });\n  }\n\n  return false;\n}\n\nexport default valueEqual;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/value-equal/index.js\n// module id = 27\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\nvar canUseDOM = exports.canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\nvar addEventListener = exports.addEventListener = function addEventListener(node, event, listener) {\n  return node.addEventListener ? node.addEventListener(event, listener, false) : node.attachEvent('on' + event, listener);\n};\n\nvar removeEventListener = exports.removeEventListener = function removeEventListener(node, event, listener) {\n  return node.removeEventListener ? node.removeEventListener(event, listener, false) : node.detachEvent('on' + event, listener);\n};\n\nvar getConfirmation = exports.getConfirmation = function getConfirmation(message, callback) {\n  return callback(window.confirm(message));\n}; // eslint-disable-line no-alert\n\n/**\n * Returns true if the HTML5 history API is supported. Taken from Modernizr.\n *\n * https://github.com/Modernizr/Modernizr/blob/master/LICENSE\n * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js\n * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586\n */\nvar supportsHistory = exports.supportsHistory = function supportsHistory() {\n  var ua = window.navigator.userAgent;\n\n  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;\n\n  return window.history && 'pushState' in window.history;\n};\n\n/**\n * Returns true if browser fires popstate on hash change.\n * IE10 and IE11 do not.\n */\nvar supportsPopStateOnHashChange = exports.supportsPopStateOnHashChange = function supportsPopStateOnHashChange() {\n  return window.navigator.userAgent.indexOf('Trident') === -1;\n};\n\n/**\n * Returns false if using go(n) with hash history causes a full page reload.\n */\nvar supportsGoWithoutReloadUsingHash = exports.supportsGoWithoutReloadUsingHash = function supportsGoWithoutReloadUsingHash() {\n  return window.navigator.userAgent.indexOf('Firefox') === -1;\n};\n\n/**\n * Returns true if a given popstate event is an extraneous WebKit event.\n * Accounts for the fact that Chrome on iOS fires real popstate events\n * containing undefined state when pressing the back button.\n */\nvar isExtraneousPopstateEvent = exports.isExtraneousPopstateEvent = function isExtraneousPopstateEvent(event) {\n  return event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/history/DOMUtils.js\n// module id = 28\n// module chunks = 0","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport invariant from 'invariant';\n\nvar isModifiedEvent = function isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n};\n\n/**\n * The public API for rendering a history-aware <a>.\n */\n\nvar Link = function (_React$Component) {\n  _inherits(Link, _React$Component);\n\n  function Link() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Link);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleClick = function (event) {\n      if (_this.props.onClick) _this.props.onClick(event);\n\n      if (!event.defaultPrevented && // onClick prevented default\n      event.button === 0 && // ignore right clicks\n      !_this.props.target && // let browser handle \"target=_blank\" etc.\n      !isModifiedEvent(event) // ignore clicks with modifier keys\n      ) {\n          event.preventDefault();\n\n          var history = _this.context.router.history;\n          var _this$props = _this.props,\n              replace = _this$props.replace,\n              to = _this$props.to;\n\n\n          if (replace) {\n            history.replace(to);\n          } else {\n            history.push(to);\n          }\n        }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Link.prototype.render = function render() {\n    var _props = this.props,\n        replace = _props.replace,\n        to = _props.to,\n        innerRef = _props.innerRef,\n        props = _objectWithoutProperties(_props, ['replace', 'to', 'innerRef']); // eslint-disable-line no-unused-vars\n\n    invariant(this.context.router, 'You should not use <Link> outside a <Router>');\n\n    var href = this.context.router.history.createHref(typeof to === 'string' ? { pathname: to } : to);\n\n    return React.createElement('a', _extends({}, props, { onClick: this.handleClick, href: href, ref: innerRef }));\n  };\n\n  return Link;\n}(React.Component);\n\nLink.propTypes = {\n  onClick: PropTypes.func,\n  target: PropTypes.string,\n  replace: PropTypes.bool,\n  to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n  innerRef: PropTypes.oneOfType([PropTypes.string, PropTypes.func])\n};\nLink.defaultProps = {\n  replace: false\n};\nLink.contextTypes = {\n  router: PropTypes.shape({\n    history: PropTypes.shape({\n      push: PropTypes.func.isRequired,\n      replace: PropTypes.func.isRequired,\n      createHref: PropTypes.func.isRequired\n    }).isRequired\n  }).isRequired\n};\n\n\nexport default Link;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-router-dom/es/Link.js\n// module id = 29\n// module chunks = 0","// Written in this round about way for babel-transform-imports\nimport Route from 'react-router/es/Route';\n\nexport default Route;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-router-dom/es/Route.js\n// module id = 30\n// module chunks = 0","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport warning from 'warning';\nimport invariant from 'invariant';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport matchPath from './matchPath';\n\nvar isEmptyChildren = function isEmptyChildren(children) {\n  return React.Children.count(children) === 0;\n};\n\n/**\n * The public API for matching a single path and rendering.\n */\n\nvar Route = function (_React$Component) {\n  _inherits(Route, _React$Component);\n\n  function Route() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Route);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {\n      match: _this.computeMatch(_this.props, _this.context.router)\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Route.prototype.getChildContext = function getChildContext() {\n    return {\n      router: _extends({}, this.context.router, {\n        route: {\n          location: this.props.location || this.context.router.route.location,\n          match: this.state.match\n        }\n      })\n    };\n  };\n\n  Route.prototype.computeMatch = function computeMatch(_ref, router) {\n    var computedMatch = _ref.computedMatch,\n        location = _ref.location,\n        path = _ref.path,\n        strict = _ref.strict,\n        exact = _ref.exact,\n        sensitive = _ref.sensitive;\n\n    if (computedMatch) return computedMatch; // <Switch> already computed the match for us\n\n    invariant(router, 'You should not use <Route> or withRouter() outside a <Router>');\n\n    var route = router.route;\n\n    var pathname = (location || route.location).pathname;\n\n    return path ? matchPath(pathname, { path: path, strict: strict, exact: exact, sensitive: sensitive }) : route.match;\n  };\n\n  Route.prototype.componentWillMount = function componentWillMount() {\n    warning(!(this.props.component && this.props.render), 'You should not use <Route component> and <Route render> in the same route; <Route render> will be ignored');\n\n    warning(!(this.props.component && this.props.children && !isEmptyChildren(this.props.children)), 'You should not use <Route component> and <Route children> in the same route; <Route children> will be ignored');\n\n    warning(!(this.props.render && this.props.children && !isEmptyChildren(this.props.children)), 'You should not use <Route render> and <Route children> in the same route; <Route children> will be ignored');\n  };\n\n  Route.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps, nextContext) {\n    warning(!(nextProps.location && !this.props.location), '<Route> elements should not change from uncontrolled to controlled (or vice versa). You initially used no \"location\" prop and then provided one on a subsequent render.');\n\n    warning(!(!nextProps.location && this.props.location), '<Route> elements should not change from controlled to uncontrolled (or vice versa). You provided a \"location\" prop initially but omitted it on a subsequent render.');\n\n    this.setState({\n      match: this.computeMatch(nextProps, nextContext.router)\n    });\n  };\n\n  Route.prototype.render = function render() {\n    var match = this.state.match;\n    var _props = this.props,\n        children = _props.children,\n        component = _props.component,\n        render = _props.render;\n    var _context$router = this.context.router,\n        history = _context$router.history,\n        route = _context$router.route,\n        staticContext = _context$router.staticContext;\n\n    var location = this.props.location || route.location;\n    var props = { match: match, location: location, history: history, staticContext: staticContext };\n\n    return component ? // component prop gets first priority, only called if there's a match\n    match ? React.createElement(component, props) : null : render ? // render prop is next, only called if there's a match\n    match ? render(props) : null : children ? // children come last, always called\n    typeof children === 'function' ? children(props) : !isEmptyChildren(children) ? React.Children.only(children) : null : null;\n  };\n\n  return Route;\n}(React.Component);\n\nRoute.propTypes = {\n  computedMatch: PropTypes.object, // private, from <Switch>\n  path: PropTypes.string,\n  exact: PropTypes.bool,\n  strict: PropTypes.bool,\n  sensitive: PropTypes.bool,\n  component: PropTypes.func,\n  render: PropTypes.func,\n  children: PropTypes.oneOfType([PropTypes.func, PropTypes.node]),\n  location: PropTypes.object\n};\nRoute.contextTypes = {\n  router: PropTypes.shape({\n    history: PropTypes.object.isRequired,\n    route: PropTypes.object.isRequired,\n    staticContext: PropTypes.object\n  })\n};\nRoute.childContextTypes = {\n  router: PropTypes.object.isRequired\n};\n\n\nexport default Route;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-router/es/Route.js\n// module id = 31\n// module chunks = 0","export var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\nexport var addEventListener = function addEventListener(node, event, listener) {\n  return node.addEventListener ? node.addEventListener(event, listener, false) : node.attachEvent('on' + event, listener);\n};\n\nexport var removeEventListener = function removeEventListener(node, event, listener) {\n  return node.removeEventListener ? node.removeEventListener(event, listener, false) : node.detachEvent('on' + event, listener);\n};\n\nexport var getConfirmation = function getConfirmation(message, callback) {\n  return callback(window.confirm(message));\n}; // eslint-disable-line no-alert\n\n/**\n * Returns true if the HTML5 history API is supported. Taken from Modernizr.\n *\n * https://github.com/Modernizr/Modernizr/blob/master/LICENSE\n * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js\n * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586\n */\nexport var supportsHistory = function supportsHistory() {\n  var ua = window.navigator.userAgent;\n\n  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;\n\n  return window.history && 'pushState' in window.history;\n};\n\n/**\n * Returns true if browser fires popstate on hash change.\n * IE10 and IE11 do not.\n */\nexport var supportsPopStateOnHashChange = function supportsPopStateOnHashChange() {\n  return window.navigator.userAgent.indexOf('Trident') === -1;\n};\n\n/**\n * Returns false if using go(n) with hash history causes a full page reload.\n */\nexport var supportsGoWithoutReloadUsingHash = function supportsGoWithoutReloadUsingHash() {\n  return window.navigator.userAgent.indexOf('Firefox') === -1;\n};\n\n/**\n * Returns true if a given popstate event is an extraneous WebKit event.\n * Accounts for the fact that Chrome on iOS fires real popstate events\n * containing undefined state when pressing the back button.\n */\nexport var isExtraneousPopstateEvent = function isExtraneousPopstateEvent(event) {\n  return event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/history/es/DOMUtils.js\n// module id = 32\n// module chunks = 0","/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.hoistNonReactStatics = factory());\n}(this, (function () {\n    'use strict';\n    \n    var REACT_STATICS = {\n        childContextTypes: true,\n        contextTypes: true,\n        defaultProps: true,\n        displayName: true,\n        getDefaultProps: true,\n        getDerivedStateFromProps: true,\n        mixins: true,\n        propTypes: true,\n        type: true\n    };\n    \n    var KNOWN_STATICS = {\n        name: true,\n        length: true,\n        prototype: true,\n        caller: true,\n        callee: true,\n        arguments: true,\n        arity: true\n    };\n    \n    var defineProperty = Object.defineProperty;\n    var getOwnPropertyNames = Object.getOwnPropertyNames;\n    var getOwnPropertySymbols = Object.getOwnPropertySymbols;\n    var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    var getPrototypeOf = Object.getPrototypeOf;\n    var objectPrototype = getPrototypeOf && getPrototypeOf(Object);\n    \n    return function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n        if (typeof sourceComponent !== 'string') { // don't hoist over string (html) components\n            \n            if (objectPrototype) {\n                var inheritedComponent = getPrototypeOf(sourceComponent);\n                if (inheritedComponent && inheritedComponent !== objectPrototype) {\n                    hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n                }\n            }\n            \n            var keys = getOwnPropertyNames(sourceComponent);\n            \n            if (getOwnPropertySymbols) {\n                keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n            }\n            \n            for (var i = 0; i < keys.length; ++i) {\n                var key = keys[i];\n                if (!REACT_STATICS[key] && !KNOWN_STATICS[key] && (!blacklist || !blacklist[key])) {\n                    var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n                    try { // Avoid failures from read-only properties\n                        defineProperty(targetComponent, key, descriptor);\n                    } catch (e) {}\n                }\n            }\n            \n            return targetComponent;\n        }\n        \n        return targetComponent;\n    };\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/hoist-non-react-statics/index.js\n// module id = 33\n// module chunks = 0","import reducer from \"./reducer\";\r\nimport * as actions from \"./actions\";\r\nimport * as components from \"./components\";\r\nimport * as containers from \"./containers\";\r\n\r\nexport default reducer;\r\nexport { actions, components, containers };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/App/index.js","import * as appConstants from \"../../constants\";\r\nimport * as moduleConstants from \"./constants\";\r\n\r\nconst prefix = `${appConstants.APP_NAME}/${moduleConstants.MODULE_NAME}/`;\r\n\r\nexport const PLAY_BUTTON_CLICK = prefix + \"PLAY_BUTTON_CLICK\";\r\nexport const SYNTH_PLAY = prefix + \"SYNTH_PLAY\";\r\nexport const SYNTH_STOP = prefix + \"SYNTH_STOP\";\r\nexport const UPDATE_SEED = prefix + \"UPDATE_SEED\";\r\nexport const UPDATE_GENERATED_SETTINGS = prefix + \"UPDATE_GENERATED_SETTINGS\";\r\nexport const SET_SONG = prefix + \"SET_SONG\";\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/App/actionTypes.js","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/isObject.js\n// module id = 36\n// module chunks = 0","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_root.js\n// module id = 37\n// module chunks = 0","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_Symbol.js\n// module id = 38\n// module chunks = 0","import Tone from \"tone\";\r\nimport * as utils from \"../utils\";\r\n\r\nconst roots = [\"C\", \"C#\", \"D\", \"Eb\", \"E\", \"F\", \"F#\", \"G\", \"Ab\", \"A\", \"Bb\", \"B\"];\r\n\r\nexport const scales = {\r\n  Major: [2, 2, 1, 2, 2, 2],\r\n  Minor: [2, 1, 2, 2, 1, 2],\r\n  HarmonicMinor: [2, 1, 2, 2, 1, 3],\r\n  MelodicMinor: [2, 1, 2, 2, 2, 2],\r\n  PentatonicMajor: [2, 2, 3, 2],\r\n  PentatonicMinor: [3, 2, 2, 3],\r\n  PentatonicBlues: [3, 2, 1, 1],\r\n  PentatonicNeutral: [2, 3, 2],\r\n  Ionian: [2, 2, 1, 2, 2, 2],\r\n  Aeolian: [2, 1, 2, 2, 1, 2],\r\n  Dorian: [2, 1, 2, 2, 2, 1],\r\n  Mixolydian: [2, 2, 1, 2, 2, 1],\r\n  Phrygian: [1, 2, 2, 2, 1, 2],\r\n  Lydian: [2, 2, 2, 1, 2, 2],\r\n  Locrian: [1, 2, 2, 1, 2, 2],\r\n  Dominant7th: [2, 2, 1, 2, 2, 1],\r\n  Blues: [3, 2, 1, 1, 3]\r\n  //   Dimhalf: [1, 2, 1, 2, 1, 2],\r\n  //   Dimwhole: [2, 1, 2, 1, 2, 1],\r\n  //   Whole: [2, 2, 2, 2],\r\n  //   Augmented: [3, 1, 3, 1],\r\n  //   Chromatic: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n  //   RoumanianMinor: [2, 1, 3, 1, 2, 1],\r\n  //   SpanishGypsy: [1, 3, 1, 2, 1, 2],\r\n  //   Diatonic: [2, 2, 3, 2],\r\n  //   DoubleHarmonic: [1, 3, 1, 2, 1, 3],\r\n  //   EightToneSpanish: [1, 2, 1, 1, 1, 2, 2],\r\n  //   Enigmatic: [1, 3, 2, 2, 2, 1],\r\n  //   LeadingWholeTone: [2, 2, 2, 2, 1],\r\n  //   LydianAugmented: [2, 2, 2, 2, 1, 2],\r\n  //   NeopolitanMajor: [1, 2, 2, 2, 2, 2],\r\n  //   NeopolitanMinor: [1, 2, 2, 2, 1, 2],\r\n  //   Pelog: [1, 2, 3, 4],\r\n  //   Prometheus: [2, 2, 2, 3, 1],\r\n  //   PrometheusNeopolitan: [1, 3, 2, 3, 1],\r\n  //   SixToneSymmetrical: [1, 3, 1, 3, 1],\r\n  //   SuperLocrian: [1, 2, 1, 2, 2, 2],\r\n  //   LydianMinor: [2, 2, 2, 1, 1, 2],\r\n  //   LydianDiminished: [2, 1, 3, 1, 1, 2],\r\n  //   NineToneScale: [2, 1, 1, 2, 1, 1, 1, 2],\r\n  //   AuxiliaryDiminished: [2, 1, 2, 1, 2, 1, 2],\r\n  //   AuxiliaryAugmented: [2, 2, 2, 2, 2],\r\n  //   AuxiliaryDimBlues: [1, 2, 1, 2, 1, 2, 1],\r\n  //   MajorLocrian: [2, 2, 1, 1, 2, 2],\r\n  //   Overtone: [2, 2, 2, 1, 2, 1],\r\n  //   DiminishedWholeTone: [1, 2, 1, 2, 2, 2],\r\n  //   PureMinor: [2, 1, 2, 2, 1, 2]\r\n};\r\n\r\nexport const chordProgressions = [\r\n  [1, 5, 4, 4, 1, 5, 1, 5],\r\n  [1, 1, 1, 1, 4, 4, 1, 1, 5, 5, 1, 1],\r\n  [1, 6, 4, 5],\r\n  [1, 4, 7, 4],\r\n  [2, 5, 1],\r\n  [1, 5, 7, 4],\r\n  [6, 2, 5, 1],\r\n  [1, 5, 6, 3],\r\n  [1, 4, 2, 5],\r\n  [1, 5, 6, 3, 4, 1, 4, 5]\r\n];\r\n\r\nconst chords = [[1, 3, 5], [1, 3, 5, 7], [1, 3, 5, 9], [1, 3, 5, 7, 9], [1, 3, 5, 7, 9, 11]];\r\n\r\nexport const getRandomRootNote = () => {\r\n  return roots[utils.randomIntBetween(0, roots.length - 1)];\r\n};\r\n\r\nexport const actualNotesFromScale = (tonic, scale, lowOctave, highOctave) => {\r\n  let notes = [];\r\n\r\n  //Get just the note value without octaves\r\n  if (!utils.isNumeric(tonic)) {\r\n    tonic = tonic.replace(/[0-9]/g, \"\");\r\n  } else {\r\n    tonic = Tone.Frequency(tonic)\r\n      .toNote()\r\n      .replace(/[0-9]/g, \"\");\r\n  }\r\n\r\n  for (let octave = lowOctave; octave <= highOctave; octave++) {\r\n    const octaveScale = scaleFromTonic(tonic + octave, scale);\r\n    notes = [...notes, ...octaveScale];\r\n  }\r\n  return notes;\r\n};\r\n\r\nexport const getRandomScaleType = () => {\r\n  var keys = Object.keys(scales);\r\n  var randomType = keys[(keys.length * Math.random()) << 0];\r\n  return { type: randomType, intervals: scales[randomType] };\r\n};\r\n\r\nexport const getChordProgressionForKey = (key, progression, chordTypesToUse) => {\r\n  const progressionRootNotes = chordFromScale(progression, key.root, key.type, key.chordOctave);\r\n\r\n  const progressionNotes = [];\r\n  for (let index = 0; index < progressionRootNotes.length; index++) {\r\n    const progressionIndex = progression[index];\r\n    const chord = chordTypesToUse[index];\r\n    progressionNotes.push(chordFromScale(chord, key.root, key.type, key.chordOctave, progressionIndex));\r\n  }\r\n  return progressionNotes;\r\n};\r\n\r\nexport const getRandomChordTypesForProgression = progressionRootNotes => {\r\n  const chordTypes = [];\r\n  for (let index = 0; index < progressionRootNotes.length; index++) {\r\n    chordTypes.push(utils.randomFromArray(chords));\r\n  }\r\n  return chordTypes;\r\n};\r\n\r\nexport const chordFromScale = (chordToneIndexes, tonic, scale, mainOctave, indexOffset = 0) => {\r\n  const fullScale = actualNotesFromScale(tonic, scale, mainOctave, mainOctave + 1);\r\n\r\n  const filteredScale = [];\r\n  for (const index of chordToneIndexes) {\r\n    filteredScale.push(fullScale[index + indexOffset - 1]);\r\n  }\r\n\r\n  return filteredScale;\r\n};\r\n\r\nexport const scaleFromTonic = (tonic, intervals) => {\r\n  const scale = [];\r\n  let note = Tone.Frequency(tonic);\r\n  scale.push(tonic);\r\n\r\n  for (const interval of intervals) {\r\n    note = note.transpose(interval);\r\n    scale.push(note.toFrequency());\r\n  }\r\n\r\n  return scale;\r\n};\r\n\r\nexport const rootNotesFromChordProgression = chordProgression => {\r\n  return chordProgression\r\n    .map(chord =>\r\n      Tone.Frequency(chord[0])\r\n        .toNote()\r\n        .replace(/[0-9]/g, \"\")\r\n    )\r\n    .join(\", \");\r\n};\r\n\r\nexport const bassLineForChordProgression = (notesPerChord, chordProgression, key, octave) => {\r\n  const transposeSemiTones = -1 * octave * 12;\r\n  const notes = [];\r\n\r\n  for (let i = 0; i < chordProgression.length; i++) {\r\n    const chord = chordProgression[i];\r\n    const noteCountForChord = notesPerChord[i];\r\n    const chordRoot = Tone.Frequency(chord[0]).transpose(transposeSemiTones);\r\n    const scaleForCurrentChord = actualNotesFromScale(key.root, key.type, octave, octave);\r\n\r\n    const notesForChord = [chordRoot];\r\n    for (let i = 0; i < noteCountForChord - 1; i++) {\r\n      notesForChord.push(utils.randomFromArray(scaleForCurrentChord));\r\n    }\r\n    notes.push(notesForChord);\r\n  }\r\n\r\n  return notes;\r\n};\r\n\r\nexport const smoothBassLineForChordProgression = (notesPerChord, chordProgression, key, octave) => {\r\n  const transposeSemiTones = -1 * octave * 12;\r\n  const notes = [];\r\n\r\n  for (let i = 0; i < chordProgression.length; i++) {\r\n    const chord = chordProgression[i];\r\n    const noteCountForChord = notesPerChord[i];\r\n    const chordRoot = Tone.Frequency(chord[0]).transpose(transposeSemiTones);\r\n    const scaleForCurrentChord = actualNotesFromScale(key.root, key.type, octave, octave);\r\n\r\n    const notesForChord = [chordRoot];\r\n    let previousNoteIndex = 0;\r\n    for (let i = 0; i < noteCountForChord - 1; i++) {\r\n      //get a note not too far away from the last\r\n      const newNote = utils.randomIntBetween(Math.max(previousNoteIndex - 2, 0), Math.min(previousNoteIndex + 2, scaleForCurrentChord.length));\r\n      notesForChord.push(scaleForCurrentChord[newNote]);\r\n\r\n      previousNoteIndex = newNote;\r\n    }\r\n    notes.push(notesForChord);\r\n  }\r\n\r\n  return notes;\r\n};\r\n\r\nexport const motifForChordProgression = (notesPerChord, chordProgression, key, octave) => {\r\n  const notes = [];\r\n\r\n  for (let i = 0; i < chordProgression.length; i++) {\r\n    const noteCountForChord = notesPerChord[i];\r\n    const scaleForCurrentChord = actualNotesFromScale(key.root, key.type, octave, octave);\r\n    const notesForChord = [];\r\n    let previousNoteIndex = 0;\r\n    for (let i = 0; i < noteCountForChord; i++) {\r\n      //get a note not too far away from the last\r\n      const newNote = utils.randomIntBetween(Math.max(previousNoteIndex - 2, 0), Math.min(previousNoteIndex + 2, scaleForCurrentChord.length));\r\n      notesForChord.push(scaleForCurrentChord[newNote]);\r\n\r\n      previousNoteIndex = newNote;\r\n    }\r\n    notes.push(notesForChord);\r\n  }\r\n\r\n  return notes;\r\n};\r\n\r\nexport const melodyForChordProgression = (chordProgression, key) => {\r\n  //const notesPerChord = 8;\r\n  const melodyOctave = key.chordOctave + 1;\r\n  const transposeSemiTones = melodyOctave - key.chordOctave * 12;\r\n  const notes = [];\r\n\r\n  for (const chord of chordProgression) {\r\n    const chordRoot = Tone.Frequency(chord[0]).transpose(transposeSemiTones);\r\n    const chordRootToNote = Tone.Frequency(chordRoot).toNote();\r\n\r\n    const scaleForCurrentChord = actualNotesFromScale(chordRootToNote, key.type, melodyOctave, melodyOctave);\r\n    const notesForChord = [chordRootToNote];\r\n\r\n    notesForChord.push(scaleForCurrentChord[1]);\r\n    notesForChord.push(scaleForCurrentChord[2]);\r\n    notesForChord.push(scaleForCurrentChord[1]);\r\n    notesForChord.push(scaleForCurrentChord[4]);\r\n    notesForChord.push(scaleForCurrentChord[4]);\r\n    notesForChord.push(scaleForCurrentChord[2]);\r\n    notesForChord.push(scaleForCurrentChord[0]);\r\n\r\n    notes.push(notesForChord);\r\n  }\r\n\r\n  return notes;\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/synth/scales.js","import * as bass from \"./bass\";\r\nimport * as pads from \"./pads\";\r\nimport * as drums from \"./drums\";\r\nimport * as lead from \"./lead\";\r\nimport * as presets from \"./presets\";\r\n\r\nexport default { bass, pads, drums, lead, presets };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/synth/instruments/index.js","import Tone from \"tone\";\r\nimport { Instrument } from \"./instrument\";\r\n\r\nexport const subBass = () => {\r\n  return squareBass(2);\r\n};\r\n\r\nexport const softSquareBass = () => {\r\n  return squareBass(6);\r\n};\r\n\r\nexport class FastAttackSquare extends Instrument {\r\n  constructor() {\r\n    super(\r\n      new Tone.Synth({\r\n        oscillator: {\r\n          type: \"square4\"\r\n        },\r\n        envelope: {\r\n          attack: 0.02,\r\n          decay: 0,\r\n          sustain: 1,\r\n          release: 1\r\n        }\r\n      }),\r\n      22\r\n    );\r\n    var comp = new Tone.Compressor(-30, 12).toMaster();\r\n    this.synth.connect(comp);\r\n  }\r\n}\r\n\r\nexport class SawTooth extends Instrument {\r\n  constructor() {\r\n    super(\r\n      new Tone.Synth({\r\n        oscillator: {\r\n          type: \"sawtooth\"\r\n        },\r\n        envelope: {\r\n          attack: 0.02,\r\n          decay: 0.2,\r\n          sustain: 0.8,\r\n          release: 1\r\n        }\r\n      }),\r\n      18\r\n    );\r\n  }\r\n}\r\n\r\nexport const squareBass = harmonics => {\r\n  const bassSynth = new Tone.Synth({\r\n    oscillator: {\r\n      type: \"square\" + harmonics\r\n    },\r\n    envelope: {\r\n      attack: \"0:2\",\r\n      decay: 0.1,\r\n      sustain: 1,\r\n      release: 3\r\n    }\r\n  }).toMaster();\r\n  bassSynth.volume.value = 24;\r\n  return bassSynth;\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/synth/instruments/bass.js","import * as actions from \"./actionTypes\";\r\nimport * as synth from \"../../synth/synth\";\r\n\r\nexport const Play = () => {\r\n  return (dispatch, getState) => {\r\n    const generatedSettings = synth.play(getState().app.song, getState().app.seed);\r\n    dispatch({\r\n      type: actions.SYNTH_PLAY,\r\n      payload: generatedSettings\r\n    });\r\n  };\r\n};\r\n\r\nexport const Stop = () => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: actions.SYNTH_STOP\r\n    });\r\n  };\r\n};\r\n\r\nexport const PlayButtonClick = () => {\r\n  return (dispatch, getState) => {\r\n    getState().app.isPlaying ? dispatch({ type: actions.SYNTH_STOP }) : dispatch({ type: actions.SYNTH_PLAY });\r\n  };\r\n};\r\n\r\nexport const SetInitialSeed = newSeed => {\r\n  return dispatch => {\r\n    dispatch({ type: actions.UPDATE_SEED, payload: newSeed });\r\n    dispatch({ type: actions.SYNTH_PLAY });\r\n  };\r\n};\r\n\r\nexport const SetSeed = newSeed => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: actions.UPDATE_SEED, payload: newSeed });\r\n    synth.playDebounced(getState().app.song, newSeed, generatedSettings => {\r\n      dispatch({\r\n        type: actions.UPDATE_GENERATED_SETTINGS,\r\n        payload: generatedSettings\r\n      });\r\n    });\r\n  };\r\n};\r\n\r\nexport const RandomiseSeed = () => {\r\n  return () => {\r\n    const randomSeed = new Date().getTime().toString();\r\n    return SetSeed(randomSeed);\r\n  };\r\n};\r\n\r\nexport const SetSong = song => {\r\n  return dispatch => {\r\n    dispatch({ type: actions.SET_SONG, payload: song });\r\n    dispatch(Play());\r\n  };\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/App/actions.js","import App from \"./App\";\r\nexport default { App };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/App/components/index.js","import PropTypes from 'prop-types';\n\nexport var subscriptionShape = PropTypes.shape({\n  trySubscribe: PropTypes.func.isRequired,\n  tryUnsubscribe: PropTypes.func.isRequired,\n  notifyNestedSubs: PropTypes.func.isRequired,\n  isSubscribed: PropTypes.func.isRequired\n});\n\nexport var storeShape = PropTypes.shape({\n  subscribe: PropTypes.func.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  getState: PropTypes.func.isRequired\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-redux/es/utils/PropTypes.js\n// module id = 45\n// module chunks = 0","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nimport hoistStatics from 'hoist-non-react-statics';\nimport invariant from 'invariant';\nimport { Component, createElement } from 'react';\n\nimport Subscription from '../utils/Subscription';\nimport { storeShape, subscriptionShape } from '../utils/PropTypes';\n\nvar hotReloadingVersion = 0;\nvar dummyState = {};\nfunction noop() {}\nfunction makeSelectorStateful(sourceSelector, store) {\n  // wrap the selector in an object that tracks its results between runs.\n  var selector = {\n    run: function runComponentSelector(props) {\n      try {\n        var nextProps = sourceSelector(store.getState(), props);\n        if (nextProps !== selector.props || selector.error) {\n          selector.shouldComponentUpdate = true;\n          selector.props = nextProps;\n          selector.error = null;\n        }\n      } catch (error) {\n        selector.shouldComponentUpdate = true;\n        selector.error = error;\n      }\n    }\n  };\n\n  return selector;\n}\n\nexport default function connectAdvanced(\n/*\n  selectorFactory is a func that is responsible for returning the selector function used to\n  compute new props from state, props, and dispatch. For example:\n     export default connectAdvanced((dispatch, options) => (state, props) => ({\n      thing: state.things[props.thingId],\n      saveThing: fields => dispatch(actionCreators.saveThing(props.thingId, fields)),\n    }))(YourComponent)\n   Access to dispatch is provided to the factory so selectorFactories can bind actionCreators\n  outside of their selector as an optimization. Options passed to connectAdvanced are passed to\n  the selectorFactory, along with displayName and WrappedComponent, as the second argument.\n   Note that selectorFactory is responsible for all caching/memoization of inbound and outbound\n  props. Do not use connectAdvanced directly without memoizing results between calls to your\n  selector, otherwise the Connect component will re-render on every state or props change.\n*/\nselectorFactory) {\n  var _contextTypes, _childContextTypes;\n\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$getDisplayName = _ref.getDisplayName,\n      getDisplayName = _ref$getDisplayName === undefined ? function (name) {\n    return 'ConnectAdvanced(' + name + ')';\n  } : _ref$getDisplayName,\n      _ref$methodName = _ref.methodName,\n      methodName = _ref$methodName === undefined ? 'connectAdvanced' : _ref$methodName,\n      _ref$renderCountProp = _ref.renderCountProp,\n      renderCountProp = _ref$renderCountProp === undefined ? undefined : _ref$renderCountProp,\n      _ref$shouldHandleStat = _ref.shouldHandleStateChanges,\n      shouldHandleStateChanges = _ref$shouldHandleStat === undefined ? true : _ref$shouldHandleStat,\n      _ref$storeKey = _ref.storeKey,\n      storeKey = _ref$storeKey === undefined ? 'store' : _ref$storeKey,\n      _ref$withRef = _ref.withRef,\n      withRef = _ref$withRef === undefined ? false : _ref$withRef,\n      connectOptions = _objectWithoutProperties(_ref, ['getDisplayName', 'methodName', 'renderCountProp', 'shouldHandleStateChanges', 'storeKey', 'withRef']);\n\n  var subscriptionKey = storeKey + 'Subscription';\n  var version = hotReloadingVersion++;\n\n  var contextTypes = (_contextTypes = {}, _contextTypes[storeKey] = storeShape, _contextTypes[subscriptionKey] = subscriptionShape, _contextTypes);\n  var childContextTypes = (_childContextTypes = {}, _childContextTypes[subscriptionKey] = subscriptionShape, _childContextTypes);\n\n  return function wrapWithConnect(WrappedComponent) {\n    invariant(typeof WrappedComponent == 'function', 'You must pass a component to the function returned by ' + (methodName + '. Instead received ' + JSON.stringify(WrappedComponent)));\n\n    var wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || 'Component';\n\n    var displayName = getDisplayName(wrappedComponentName);\n\n    var selectorFactoryOptions = _extends({}, connectOptions, {\n      getDisplayName: getDisplayName,\n      methodName: methodName,\n      renderCountProp: renderCountProp,\n      shouldHandleStateChanges: shouldHandleStateChanges,\n      storeKey: storeKey,\n      withRef: withRef,\n      displayName: displayName,\n      wrappedComponentName: wrappedComponentName,\n      WrappedComponent: WrappedComponent\n    });\n\n    var Connect = function (_Component) {\n      _inherits(Connect, _Component);\n\n      function Connect(props, context) {\n        _classCallCheck(this, Connect);\n\n        var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));\n\n        _this.version = version;\n        _this.state = {};\n        _this.renderCount = 0;\n        _this.store = props[storeKey] || context[storeKey];\n        _this.propsMode = Boolean(props[storeKey]);\n        _this.setWrappedInstance = _this.setWrappedInstance.bind(_this);\n\n        invariant(_this.store, 'Could not find \"' + storeKey + '\" in either the context or props of ' + ('\"' + displayName + '\". Either wrap the root component in a <Provider>, ') + ('or explicitly pass \"' + storeKey + '\" as a prop to \"' + displayName + '\".'));\n\n        _this.initSelector();\n        _this.initSubscription();\n        return _this;\n      }\n\n      Connect.prototype.getChildContext = function getChildContext() {\n        var _ref2;\n\n        // If this component received store from props, its subscription should be transparent\n        // to any descendants receiving store+subscription from context; it passes along\n        // subscription passed to it. Otherwise, it shadows the parent subscription, which allows\n        // Connect to control ordering of notifications to flow top-down.\n        var subscription = this.propsMode ? null : this.subscription;\n        return _ref2 = {}, _ref2[subscriptionKey] = subscription || this.context[subscriptionKey], _ref2;\n      };\n\n      Connect.prototype.componentDidMount = function componentDidMount() {\n        if (!shouldHandleStateChanges) return;\n\n        // componentWillMount fires during server side rendering, but componentDidMount and\n        // componentWillUnmount do not. Because of this, trySubscribe happens during ...didMount.\n        // Otherwise, unsubscription would never take place during SSR, causing a memory leak.\n        // To handle the case where a child component may have triggered a state change by\n        // dispatching an action in its componentWillMount, we have to re-run the select and maybe\n        // re-render.\n        this.subscription.trySubscribe();\n        this.selector.run(this.props);\n        if (this.selector.shouldComponentUpdate) this.forceUpdate();\n      };\n\n      Connect.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n        this.selector.run(nextProps);\n      };\n\n      Connect.prototype.shouldComponentUpdate = function shouldComponentUpdate() {\n        return this.selector.shouldComponentUpdate;\n      };\n\n      Connect.prototype.componentWillUnmount = function componentWillUnmount() {\n        if (this.subscription) this.subscription.tryUnsubscribe();\n        this.subscription = null;\n        this.notifyNestedSubs = noop;\n        this.store = null;\n        this.selector.run = noop;\n        this.selector.shouldComponentUpdate = false;\n      };\n\n      Connect.prototype.getWrappedInstance = function getWrappedInstance() {\n        invariant(withRef, 'To access the wrapped instance, you need to specify ' + ('{ withRef: true } in the options argument of the ' + methodName + '() call.'));\n        return this.wrappedInstance;\n      };\n\n      Connect.prototype.setWrappedInstance = function setWrappedInstance(ref) {\n        this.wrappedInstance = ref;\n      };\n\n      Connect.prototype.initSelector = function initSelector() {\n        var sourceSelector = selectorFactory(this.store.dispatch, selectorFactoryOptions);\n        this.selector = makeSelectorStateful(sourceSelector, this.store);\n        this.selector.run(this.props);\n      };\n\n      Connect.prototype.initSubscription = function initSubscription() {\n        if (!shouldHandleStateChanges) return;\n\n        // parentSub's source should match where store came from: props vs. context. A component\n        // connected to the store via props shouldn't use subscription from context, or vice versa.\n        var parentSub = (this.propsMode ? this.props : this.context)[subscriptionKey];\n        this.subscription = new Subscription(this.store, parentSub, this.onStateChange.bind(this));\n\n        // `notifyNestedSubs` is duplicated to handle the case where the component is  unmounted in\n        // the middle of the notification loop, where `this.subscription` will then be null. An\n        // extra null check every change can be avoided by copying the method onto `this` and then\n        // replacing it with a no-op on unmount. This can probably be avoided if Subscription's\n        // listeners logic is changed to not call listeners that have been unsubscribed in the\n        // middle of the notification loop.\n        this.notifyNestedSubs = this.subscription.notifyNestedSubs.bind(this.subscription);\n      };\n\n      Connect.prototype.onStateChange = function onStateChange() {\n        this.selector.run(this.props);\n\n        if (!this.selector.shouldComponentUpdate) {\n          this.notifyNestedSubs();\n        } else {\n          this.componentDidUpdate = this.notifyNestedSubsOnComponentDidUpdate;\n          this.setState(dummyState);\n        }\n      };\n\n      Connect.prototype.notifyNestedSubsOnComponentDidUpdate = function notifyNestedSubsOnComponentDidUpdate() {\n        // `componentDidUpdate` is conditionally implemented when `onStateChange` determines it\n        // needs to notify nested subs. Once called, it unimplements itself until further state\n        // changes occur. Doing it this way vs having a permanent `componentDidUpdate` that does\n        // a boolean check every time avoids an extra method call most of the time, resulting\n        // in some perf boost.\n        this.componentDidUpdate = undefined;\n        this.notifyNestedSubs();\n      };\n\n      Connect.prototype.isSubscribed = function isSubscribed() {\n        return Boolean(this.subscription) && this.subscription.isSubscribed();\n      };\n\n      Connect.prototype.addExtraProps = function addExtraProps(props) {\n        if (!withRef && !renderCountProp && !(this.propsMode && this.subscription)) return props;\n        // make a shallow copy so that fields added don't leak to the original selector.\n        // this is especially important for 'ref' since that's a reference back to the component\n        // instance. a singleton memoized selector would then be holding a reference to the\n        // instance, preventing the instance from being garbage collected, and that would be bad\n        var withExtras = _extends({}, props);\n        if (withRef) withExtras.ref = this.setWrappedInstance;\n        if (renderCountProp) withExtras[renderCountProp] = this.renderCount++;\n        if (this.propsMode && this.subscription) withExtras[subscriptionKey] = this.subscription;\n        return withExtras;\n      };\n\n      Connect.prototype.render = function render() {\n        var selector = this.selector;\n        selector.shouldComponentUpdate = false;\n\n        if (selector.error) {\n          throw selector.error;\n        } else {\n          return createElement(WrappedComponent, this.addExtraProps(selector.props));\n        }\n      };\n\n      return Connect;\n    }(Component);\n\n    Connect.WrappedComponent = WrappedComponent;\n    Connect.displayName = displayName;\n    Connect.childContextTypes = childContextTypes;\n    Connect.contextTypes = contextTypes;\n    Connect.propTypes = contextTypes;\n\n    if (process.env.NODE_ENV !== 'production') {\n      Connect.prototype.componentWillUpdate = function componentWillUpdate() {\n        var _this2 = this;\n\n        // We are hot reloading!\n        if (this.version !== version) {\n          this.version = version;\n          this.initSelector();\n\n          // If any connected descendants don't hot reload (and resubscribe in the process), their\n          // listeners will be lost when we unsubscribe. Unfortunately, by copying over all\n          // listeners, this does mean that the old versions of connected descendants will still be\n          // notified of state changes; however, their onStateChange function is a no-op so this\n          // isn't a huge deal.\n          var oldListeners = [];\n\n          if (this.subscription) {\n            oldListeners = this.subscription.listeners.get();\n            this.subscription.tryUnsubscribe();\n          }\n          this.initSubscription();\n          if (shouldHandleStateChanges) {\n            this.subscription.trySubscribe();\n            oldListeners.forEach(function (listener) {\n              return _this2.subscription.listeners.subscribe(listener);\n            });\n          }\n        }\n      };\n    }\n\n    return hoistStatics(Connect, WrappedComponent);\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-redux/es/components/connectAdvanced.js\n// module id = 46\n// module chunks = 0","import isPlainObject from 'lodash-es/isPlainObject';\nimport $$observable from 'symbol-observable';\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nexport var ActionTypes = {\n  INIT: '@@redux/INIT'\n\n  /**\n   * Creates a Redux store that holds the state tree.\n   * The only way to change the data in the store is to call `dispatch()` on it.\n   *\n   * There should only be a single store in your app. To specify how different\n   * parts of the state tree respond to actions, you may combine several reducers\n   * into a single reducer function by using `combineReducers`.\n   *\n   * @param {Function} reducer A function that returns the next state tree, given\n   * the current state tree and the action to handle.\n   *\n   * @param {any} [preloadedState] The initial state. You may optionally specify it\n   * to hydrate the state from the server in universal apps, or to restore a\n   * previously serialized user session.\n   * If you use `combineReducers` to produce the root reducer function, this must be\n   * an object with the same shape as `combineReducers` keys.\n   *\n   * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n   * to enhance the store with third-party capabilities such as middleware,\n   * time travel, persistence, etc. The only store enhancer that ships with Redux\n   * is `applyMiddleware()`.\n   *\n   * @returns {Store} A Redux store that lets you read the state, dispatch actions\n   * and subscribe to changes.\n   */\n};export default function createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error('Expected the enhancer to be a function.');\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error('Expected the reducer to be a function.');\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n  function getState() {\n    return currentState;\n  }\n\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected listener to be a function.');\n    }\n\n    var isSubscribed = true;\n\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      isSubscribed = false;\n\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n    };\n  }\n\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n    }\n\n    if (isDispatching) {\n      throw new Error('Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error('Expected the nextReducer to be a function.');\n    }\n\n    currentReducer = nextReducer;\n    dispatch({ type: ActionTypes.INIT });\n  }\n\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object') {\n          throw new TypeError('Expected the observer to be an object.');\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return { unsubscribe: unsubscribe };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  }\n\n  // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n  dispatch({ type: ActionTypes.INIT });\n\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/redux/es/createStore.js\n// module id = 47\n// module chunks = 0","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash-es/_Symbol.js\n// module id = 48\n// module chunks = 0","/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\n\nexport default function compose() {\n  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(undefined, arguments));\n    };\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/redux/es/compose.js\n// module id = 50\n// module chunks = 0","import verifyPlainObject from '../utils/verifyPlainObject';\n\nexport function wrapMapToPropsConstant(getConstant) {\n  return function initConstantSelector(dispatch, options) {\n    var constant = getConstant(dispatch, options);\n\n    function constantSelector() {\n      return constant;\n    }\n    constantSelector.dependsOnOwnProps = false;\n    return constantSelector;\n  };\n}\n\n// dependsOnOwnProps is used by createMapToPropsProxy to determine whether to pass props as args\n// to the mapToProps function being wrapped. It is also used by makePurePropsSelector to determine\n// whether mapToProps needs to be invoked when props have changed.\n// \n// A length of one signals that mapToProps does not depend on props from the parent component.\n// A length of zero is assumed to mean mapToProps is getting args via arguments or ...args and\n// therefore not reporting its length accurately..\nexport function getDependsOnOwnProps(mapToProps) {\n  return mapToProps.dependsOnOwnProps !== null && mapToProps.dependsOnOwnProps !== undefined ? Boolean(mapToProps.dependsOnOwnProps) : mapToProps.length !== 1;\n}\n\n// Used by whenMapStateToPropsIsFunction and whenMapDispatchToPropsIsFunction,\n// this function wraps mapToProps in a proxy function which does several things:\n// \n//  * Detects whether the mapToProps function being called depends on props, which\n//    is used by selectorFactory to decide if it should reinvoke on props changes.\n//    \n//  * On first call, handles mapToProps if returns another function, and treats that\n//    new function as the true mapToProps for subsequent calls.\n//    \n//  * On first call, verifies the first result is a plain object, in order to warn\n//    the developer that their mapToProps function is not returning a valid result.\n//    \nexport function wrapMapToPropsFunc(mapToProps, methodName) {\n  return function initProxySelector(dispatch, _ref) {\n    var displayName = _ref.displayName;\n\n    var proxy = function mapToPropsProxy(stateOrDispatch, ownProps) {\n      return proxy.dependsOnOwnProps ? proxy.mapToProps(stateOrDispatch, ownProps) : proxy.mapToProps(stateOrDispatch);\n    };\n\n    // allow detectFactoryAndVerify to get ownProps\n    proxy.dependsOnOwnProps = true;\n\n    proxy.mapToProps = function detectFactoryAndVerify(stateOrDispatch, ownProps) {\n      proxy.mapToProps = mapToProps;\n      proxy.dependsOnOwnProps = getDependsOnOwnProps(mapToProps);\n      var props = proxy(stateOrDispatch, ownProps);\n\n      if (typeof props === 'function') {\n        proxy.mapToProps = props;\n        proxy.dependsOnOwnProps = getDependsOnOwnProps(props);\n        props = proxy(stateOrDispatch, ownProps);\n      }\n\n      if (process.env.NODE_ENV !== 'production') verifyPlainObject(props, displayName, methodName);\n\n      return props;\n    };\n\n    return proxy;\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-redux/es/connect/wrapMapToProps.js\n// module id = 51\n// module chunks = 0","// @remove-on-eject-begin\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// @remove-on-eject-end\n'use strict';\n\nif (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behavior.\n  require('promise/lib/rejection-tracking').enable();\n  window.Promise = require('promise/lib/es6-extensions.js');\n}\n\n// fetch() polyfill for making API calls.\nrequire('whatwg-fetch');\n\n// Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\nObject.assign = require('object-assign');\n\n// In tests, polyfill requestAnimationFrame since jsdom doesn't provide it yet.\n// We don't polyfill it in the browser--this is user's responsibility.\nif (process.env.NODE_ENV === 'test') {\n  require('raf').polyfill(global);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-scripts/config/polyfills.js\n// module id = 54\n// module chunks = 0","'use strict';\n\nvar Promise = require('./core');\n\nvar DEFAULT_WHITELIST = [\n  ReferenceError,\n  TypeError,\n  RangeError\n];\n\nvar enabled = false;\nexports.disable = disable;\nfunction disable() {\n  enabled = false;\n  Promise._47 = null;\n  Promise._71 = null;\n}\n\nexports.enable = enable;\nfunction enable(options) {\n  options = options || {};\n  if (enabled) disable();\n  enabled = true;\n  var id = 0;\n  var displayId = 0;\n  var rejections = {};\n  Promise._47 = function (promise) {\n    if (\n      promise._83 === 2 && // IS REJECTED\n      rejections[promise._56]\n    ) {\n      if (rejections[promise._56].logged) {\n        onHandled(promise._56);\n      } else {\n        clearTimeout(rejections[promise._56].timeout);\n      }\n      delete rejections[promise._56];\n    }\n  };\n  Promise._71 = function (promise, err) {\n    if (promise._75 === 0) { // not yet handled\n      promise._56 = id++;\n      rejections[promise._56] = {\n        displayId: null,\n        error: err,\n        timeout: setTimeout(\n          onUnhandled.bind(null, promise._56),\n          // For reference errors and type errors, this almost always\n          // means the programmer made a mistake, so log them after just\n          // 100ms\n          // otherwise, wait 2 seconds to see if they get handled\n          matchWhitelist(err, DEFAULT_WHITELIST)\n            ? 100\n            : 2000\n        ),\n        logged: false\n      };\n    }\n  };\n  function onUnhandled(id) {\n    if (\n      options.allRejections ||\n      matchWhitelist(\n        rejections[id].error,\n        options.whitelist || DEFAULT_WHITELIST\n      )\n    ) {\n      rejections[id].displayId = displayId++;\n      if (options.onUnhandled) {\n        rejections[id].logged = true;\n        options.onUnhandled(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      } else {\n        rejections[id].logged = true;\n        logError(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      }\n    }\n  }\n  function onHandled(id) {\n    if (rejections[id].logged) {\n      if (options.onHandled) {\n        options.onHandled(rejections[id].displayId, rejections[id].error);\n      } else if (!rejections[id].onUnhandled) {\n        console.warn(\n          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n        );\n        console.warn(\n          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n          rejections[id].displayId + '.'\n        );\n      }\n    }\n  }\n}\n\nfunction logError(id, error) {\n  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n  var errStr = (error && (error.stack || error)) + '';\n  errStr.split('\\n').forEach(function (line) {\n    console.warn('  ' + line);\n  });\n}\n\nfunction matchWhitelist(error, list) {\n  return list.some(function (cls) {\n    return error instanceof cls;\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-scripts/node_modules/promise/lib/rejection-tracking.js\n// module id = 55\n// module chunks = 0","\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/asap/browser-raw.js\n// module id = 56\n// module chunks = 0","'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._44);\n  p._83 = 1;\n  p._18 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._83 === 3) {\n            val = val._18;\n          }\n          if (val._83 === 1) return res(i, val._18);\n          if (val._83 === 2) reject(val._18);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-scripts/node_modules/promise/lib/es6-extensions.js\n// module id = 57\n// module chunks = 0","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-scripts/node_modules/whatwg-fetch/fetch.js\n// module id = 58\n// module chunks = 0","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport { containers } from \"./modules/App\";\r\n\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport Drone from \"./modules/App/components/Drone\";\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <Switch>\r\n        <Route path=\"/drone\" component={Drone} />\r\n        <Route path=\"/:seed\" component={containers.AppContainer} />\r\n        <Route path=\"/\" component={containers.AppContainer} />\r\n      </Switch>\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nregisterServiceWorker();\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","/** @license React v16.3.2\n * react.production.min.js\n *\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var m=require(\"object-assign\"),n=require(\"fbjs/lib/invariant\"),p=require(\"fbjs/lib/emptyObject\"),q=require(\"fbjs/lib/emptyFunction\"),r=\"function\"===typeof Symbol&&Symbol[\"for\"],t=r?Symbol[\"for\"](\"react.element\"):60103,u=r?Symbol[\"for\"](\"react.portal\"):60106,v=r?Symbol[\"for\"](\"react.fragment\"):60107,w=r?Symbol[\"for\"](\"react.strict_mode\"):60108,x=r?Symbol[\"for\"](\"react.provider\"):60109,y=r?Symbol[\"for\"](\"react.context\"):60110,z=r?Symbol[\"for\"](\"react.async_mode\"):60111,A=r?Symbol[\"for\"](\"react.forward_ref\"):\n60112,B=\"function\"===typeof Symbol&&Symbol.iterator;function C(a){for(var b=arguments.length-1,e=\"http://reactjs.org/docs/error-decoder.html?invariant\\x3d\"+a,c=0;c<b;c++)e+=\"\\x26args[]\\x3d\"+encodeURIComponent(arguments[c+1]);n(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",e)}var D={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}};\nfunction E(a,b,e){this.props=a;this.context=b;this.refs=p;this.updater=e||D}E.prototype.isReactComponent={};E.prototype.setState=function(a,b){\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a?C(\"85\"):void 0;this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=p;this.updater=e||D}var H=G.prototype=new F;\nH.constructor=G;m(H,E.prototype);H.isPureReactComponent=!0;var I={current:null},J=Object.prototype.hasOwnProperty,K={key:!0,ref:!0,__self:!0,__source:!0};\nfunction L(a,b,e){var c=void 0,d={},g=null,h=null;if(null!=b)for(c in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)J.call(b,c)&&!K.hasOwnProperty(c)&&(d[c]=b[c]);var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){for(var k=Array(f),l=0;l<f;l++)k[l]=arguments[l+2];d.children=k}if(a&&a.defaultProps)for(c in f=a.defaultProps,f)void 0===d[c]&&(d[c]=f[c]);return{$$typeof:t,type:a,key:g,ref:h,props:d,_owner:I.current}}\nfunction M(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===t}function escape(a){var b={\"\\x3d\":\"\\x3d0\",\":\":\"\\x3d2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var N=/\\/+/g,O=[];function P(a,b,e,c){if(O.length){var d=O.pop();d.result=a;d.keyPrefix=b;d.func=e;d.context=c;d.count=0;return d}return{result:a,keyPrefix:b,func:e,context:c,count:0}}function Q(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>O.length&&O.push(a)}\nfunction R(a,b,e,c){var d=typeof a;if(\"undefined\"===d||\"boolean\"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case t:case u:g=!0}}if(g)return e(c,a,\"\"===b?\".\"+S(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var h=0;h<a.length;h++){d=a[h];var f=b+S(d,h);g+=R(d,f,e,c)}else if(null===a||\"undefined\"===typeof a?f=null:(f=B&&a[B]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),\nh=0;!(d=a.next()).done;)d=d.value,f=b+S(d,h++),g+=R(d,f,e,c);else\"object\"===d&&(e=\"\"+a,C(\"31\",\"[object Object]\"===e?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":e,\"\"));return g}function S(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function T(a,b){a.func.call(a.context,b,a.count++)}\nfunction U(a,b,e){var c=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?V(a,c,e,q.thatReturnsArgument):null!=a&&(M(a)&&(b=d+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(N,\"$\\x26/\")+\"/\")+e,a={$$typeof:t,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}),c.push(a))}function V(a,b,e,c,d){var g=\"\";null!=e&&(g=(\"\"+e).replace(N,\"$\\x26/\")+\"/\");b=P(b,g,c,d);null==a||R(a,\"\",U,b);Q(b)}\nvar W={Children:{map:function(a,b,e){if(null==a)return a;var c=[];V(a,c,null,b,e);return c},forEach:function(a,b,e){if(null==a)return a;b=P(null,null,b,e);null==a||R(a,\"\",T,b);Q(b)},count:function(a){return null==a?0:R(a,\"\",q.thatReturnsNull,null)},toArray:function(a){var b=[];V(a,b,null,q.thatReturnsArgument);return b},only:function(a){M(a)?void 0:C(\"143\");return a}},createRef:function(){return{current:null}},Component:E,PureComponent:G,createContext:function(a,b){void 0===b&&(b=null);a={$$typeof:y,\n_calculateChangedBits:b,_defaultValue:a,_currentValue:a,_changedBits:0,Provider:null,Consumer:null};a.Provider={$$typeof:x,_context:a};return a.Consumer=a},forwardRef:function(a){return{$$typeof:A,render:a}},Fragment:v,StrictMode:w,unstable_AsyncMode:z,createElement:L,cloneElement:function(a,b,e){null===a||void 0===a?C(\"267\",a):void 0;var c=void 0,d=m({},a.props),g=a.key,h=a.ref,f=a._owner;if(null!=b){void 0!==b.ref&&(h=b.ref,f=I.current);void 0!==b.key&&(g=\"\"+b.key);var k=void 0;a.type&&a.type.defaultProps&&\n(k=a.type.defaultProps);for(c in b)J.call(b,c)&&!K.hasOwnProperty(c)&&(d[c]=void 0===b[c]&&void 0!==k?k[c]:b[c])}c=arguments.length-2;if(1===c)d.children=e;else if(1<c){k=Array(c);for(var l=0;l<c;l++)k[l]=arguments[l+2];d.children=k}return{$$typeof:t,type:a.type,key:g,ref:h,props:d,_owner:f}},createFactory:function(a){var b=L.bind(null,a);b.type=a;return b},isValidElement:M,version:\"16.3.2\",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:I,assign:m}},X=Object.freeze({default:W}),\nY=X&&W||X;module.exports=Y[\"default\"]?Y[\"default\"]:Y;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react/cjs/react.production.min.js\n// module id = 60\n// module chunks = 0","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-dom/index.js\n// module id = 61\n// module chunks = 0","/** @license React v16.3.2\n * react-dom.production.min.js\n *\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var ba=require(\"fbjs/lib/invariant\"),ea=require(\"react\"),m=require(\"fbjs/lib/ExecutionEnvironment\"),A=require(\"object-assign\"),C=require(\"fbjs/lib/emptyFunction\"),fa=require(\"fbjs/lib/getActiveElement\"),ha=require(\"fbjs/lib/shallowEqual\"),ja=require(\"fbjs/lib/containsNode\"),ka=require(\"fbjs/lib/emptyObject\");\nfunction D(a){for(var b=arguments.length-1,c=\"http://reactjs.org/docs/error-decoder.html?invariant\\x3d\"+a,d=0;d<b;d++)c+=\"\\x26args[]\\x3d\"+encodeURIComponent(arguments[d+1]);ba(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",c)}ea?void 0:D(\"227\");\nfunction ma(a,b,c,d,e,f,h,g,k){this._hasCaughtError=!1;this._caughtError=null;var v=Array.prototype.slice.call(arguments,3);try{b.apply(c,v)}catch(l){this._caughtError=l,this._hasCaughtError=!0}}\nvar E={_caughtError:null,_hasCaughtError:!1,_rethrowError:null,_hasRethrowError:!1,invokeGuardedCallback:function(a,b,c,d,e,f,h,g,k){ma.apply(E,arguments)},invokeGuardedCallbackAndCatchFirstError:function(a,b,c,d,e,f,h,g,k){E.invokeGuardedCallback.apply(this,arguments);if(E.hasCaughtError()){var v=E.clearCaughtError();E._hasRethrowError||(E._hasRethrowError=!0,E._rethrowError=v)}},rethrowCaughtError:function(){return na.apply(E,arguments)},hasCaughtError:function(){return E._hasCaughtError},clearCaughtError:function(){if(E._hasCaughtError){var a=\nE._caughtError;E._caughtError=null;E._hasCaughtError=!1;return a}D(\"198\")}};function na(){if(E._hasRethrowError){var a=E._rethrowError;E._rethrowError=null;E._hasRethrowError=!1;throw a;}}var oa=null,pa={};\nfunction qa(){if(oa)for(var a in pa){var b=pa[a],c=oa.indexOf(a);-1<c?void 0:D(\"96\",a);if(!ra[c]){b.extractEvents?void 0:D(\"97\",a);ra[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],h=b,g=d;sa.hasOwnProperty(g)?D(\"99\",g):void 0;sa[g]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&ta(k[e],h,g);e=!0}else f.registrationName?(ta(f.registrationName,h,g),e=!0):e=!1;e?void 0:D(\"98\",d,a)}}}}\nfunction ta(a,b,c){ua[a]?D(\"100\",a):void 0;ua[a]=b;va[a]=b.eventTypes[c].dependencies}var ra=[],sa={},ua={},va={};function wa(a){oa?D(\"101\"):void 0;oa=Array.prototype.slice.call(a);qa()}function xa(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];pa.hasOwnProperty(c)&&pa[c]===d||(pa[c]?D(\"102\",c):void 0,pa[c]=d,b=!0)}b&&qa()}\nvar Ca=Object.freeze({plugins:ra,eventNameDispatchConfigs:sa,registrationNameModules:ua,registrationNameDependencies:va,possibleRegistrationNames:null,injectEventPluginOrder:wa,injectEventPluginsByName:xa}),Da=null,Ea=null,Fa=null;function Ga(a,b,c,d){b=a.type||\"unknown-event\";a.currentTarget=Fa(d);E.invokeGuardedCallbackAndCatchFirstError(b,c,void 0,a);a.currentTarget=null}\nfunction Ha(a,b){null==b?D(\"30\"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}function Ia(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var Ja=null;\nfunction Ka(a,b){if(a){var c=a._dispatchListeners,d=a._dispatchInstances;if(Array.isArray(c))for(var e=0;e<c.length&&!a.isPropagationStopped();e++)Ga(a,b,c[e],d[e]);else c&&Ga(a,b,c,d);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}function La(a){return Ka(a,!0)}function Ma(a){return Ka(a,!1)}var Na={injectEventPluginOrder:wa,injectEventPluginsByName:xa};\nfunction Oa(a,b){var c=a.stateNode;if(!c)return null;var d=Da(c);if(!d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;c&&\"function\"!==typeof c?D(\"231\",b,typeof c):void 0;\nreturn c}function Pa(a,b){null!==a&&(Ja=Ha(Ja,a));a=Ja;Ja=null;a&&(b?Ia(a,La):Ia(a,Ma),Ja?D(\"95\"):void 0,E.rethrowCaughtError())}function Qa(a,b,c,d){for(var e=null,f=0;f<ra.length;f++){var h=ra[f];h&&(h=h.extractEvents(a,b,c,d))&&(e=Ha(e,h))}Pa(e,!1)}var Ra=Object.freeze({injection:Na,getListener:Oa,runEventsInBatch:Pa,runExtractedEventsInBatch:Qa}),Sa=Math.random().toString(36).slice(2),F=\"__reactInternalInstance$\"+Sa,Ta=\"__reactEventHandlers$\"+Sa;\nfunction Ua(a){if(a[F])return a[F];for(;!a[F];)if(a.parentNode)a=a.parentNode;else return null;a=a[F];return 5===a.tag||6===a.tag?a:null}function Va(a){if(5===a.tag||6===a.tag)return a.stateNode;D(\"33\")}function Xa(a){return a[Ta]||null}var bb=Object.freeze({precacheFiberNode:function(a,b){b[F]=a},getClosestInstanceFromNode:Ua,getInstanceFromNode:function(a){a=a[F];return!a||5!==a.tag&&6!==a.tag?null:a},getNodeFromInstance:Va,getFiberCurrentPropsFromNode:Xa,updateFiberProps:function(a,b){a[Ta]=b}});\nfunction L(a){do a=a[\"return\"];while(a&&5!==a.tag);return a?a:null}function cb(a,b,c){for(var d=[];a;)d.push(a),a=L(a);for(a=d.length;0<a--;)b(d[a],\"captured\",c);for(a=0;a<d.length;a++)b(d[a],\"bubbled\",c)}function db(a,b,c){if(b=Oa(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=Ha(c._dispatchListeners,b),c._dispatchInstances=Ha(c._dispatchInstances,a)}function eb(a){a&&a.dispatchConfig.phasedRegistrationNames&&cb(a._targetInst,db,a)}\nfunction fb(a){if(a&&a.dispatchConfig.phasedRegistrationNames){var b=a._targetInst;b=b?L(b):null;cb(b,db,a)}}function gb(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Oa(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=Ha(c._dispatchListeners,b),c._dispatchInstances=Ha(c._dispatchInstances,a))}function hb(a){a&&a.dispatchConfig.registrationName&&gb(a._targetInst,null,a)}function ib(a){Ia(a,eb)}\nfunction jb(a,b,c,d){if(c&&d)a:{var e=c;for(var f=d,h=0,g=e;g;g=L(g))h++;g=0;for(var k=f;k;k=L(k))g++;for(;0<h-g;)e=L(e),h--;for(;0<g-h;)f=L(f),g--;for(;h--;){if(e===f||e===f.alternate)break a;e=L(e);f=L(f)}e=null}else e=null;f=e;for(e=[];c&&c!==f;){h=c.alternate;if(null!==h&&h===f)break;e.push(c);c=L(c)}for(c=[];d&&d!==f;){h=d.alternate;if(null!==h&&h===f)break;c.push(d);d=L(d)}for(d=0;d<e.length;d++)gb(e[d],\"bubbled\",a);for(a=c.length;0<a--;)gb(c[a],\"captured\",b)}\nvar kb=Object.freeze({accumulateTwoPhaseDispatches:ib,accumulateTwoPhaseDispatchesSkipTarget:function(a){Ia(a,fb)},accumulateEnterLeaveDispatches:jb,accumulateDirectDispatches:function(a){Ia(a,hb)}}),lb=null;function mb(){!lb&&m.canUseDOM&&(lb=\"textContent\"in document.documentElement?\"textContent\":\"innerText\");return lb}var M={_root:null,_startText:null,_fallbackText:null};\nfunction nb(){if(M._fallbackText)return M._fallbackText;var a,b=M._startText,c=b.length,d,e=ob(),f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var h=c-a;for(d=1;d<=h&&b[c-d]===e[f-d];d++);M._fallbackText=e.slice(a,1<d?1-d:void 0);return M._fallbackText}function ob(){return\"value\"in M._root?M._root.value:M._root[mb()]}\nvar pb=\"dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances\".split(\" \"),qb={type:null,target:null,currentTarget:C.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};\nfunction N(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):\"target\"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?C.thatReturnsTrue:C.thatReturnsFalse;this.isPropagationStopped=C.thatReturnsFalse;return this}\nA(N.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=C.thatReturnsTrue)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=C.thatReturnsTrue)},persist:function(){this.isPersistent=C.thatReturnsTrue},isPersistent:C.thatReturnsFalse,\ndestructor:function(){var a=this.constructor.Interface,b;for(b in a)this[b]=null;for(a=0;a<pb.length;a++)this[pb[a]]=null}});N.Interface=qb;N.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;A(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=A({},d.Interface,a);c.extend=d.extend;rb(c);return c};rb(N);\nfunction sb(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}function tb(a){a instanceof this?void 0:D(\"223\");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}function rb(a){a.eventPool=[];a.getPooled=sb;a.release=tb}var ub=N.extend({data:null}),vb=N.extend({data:null}),wb=[9,13,27,32],xb=m.canUseDOM&&\"CompositionEvent\"in window,yb=null;m.canUseDOM&&\"documentMode\"in document&&(yb=document.documentMode);\nvar zb=m.canUseDOM&&\"TextEvent\"in window&&!yb,Ab=m.canUseDOM&&(!xb||yb&&8<yb&&11>=yb),Bb=String.fromCharCode(32),Kb={beforeInput:{phasedRegistrationNames:{bubbled:\"onBeforeInput\",captured:\"onBeforeInputCapture\"},dependencies:[\"topCompositionEnd\",\"topKeyPress\",\"topTextInput\",\"topPaste\"]},compositionEnd:{phasedRegistrationNames:{bubbled:\"onCompositionEnd\",captured:\"onCompositionEndCapture\"},dependencies:\"topBlur topCompositionEnd topKeyDown topKeyPress topKeyUp topMouseDown\".split(\" \")},compositionStart:{phasedRegistrationNames:{bubbled:\"onCompositionStart\",\ncaptured:\"onCompositionStartCapture\"},dependencies:\"topBlur topCompositionStart topKeyDown topKeyPress topKeyUp topMouseDown\".split(\" \")},compositionUpdate:{phasedRegistrationNames:{bubbled:\"onCompositionUpdate\",captured:\"onCompositionUpdateCapture\"},dependencies:\"topBlur topCompositionUpdate topKeyDown topKeyPress topKeyUp topMouseDown\".split(\" \")}},Lb=!1;\nfunction Mb(a,b){switch(a){case \"topKeyUp\":return-1!==wb.indexOf(b.keyCode);case \"topKeyDown\":return 229!==b.keyCode;case \"topKeyPress\":case \"topMouseDown\":case \"topBlur\":return!0;default:return!1}}function Nb(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var Ob=!1;function Pb(a,b){switch(a){case \"topCompositionEnd\":return Nb(b);case \"topKeyPress\":if(32!==b.which)return null;Lb=!0;return Bb;case \"topTextInput\":return a=b.data,a===Bb&&Lb?null:a;default:return null}}\nfunction Qb(a,b){if(Ob)return\"topCompositionEnd\"===a||!xb&&Mb(a,b)?(a=nb(),M._root=null,M._startText=null,M._fallbackText=null,Ob=!1,a):null;switch(a){case \"topPaste\":return null;case \"topKeyPress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"topCompositionEnd\":return Ab?null:b.data;default:return null}}\nvar Rb={eventTypes:Kb,extractEvents:function(a,b,c,d){var e=void 0;var f=void 0;if(xb)b:{switch(a){case \"topCompositionStart\":e=Kb.compositionStart;break b;case \"topCompositionEnd\":e=Kb.compositionEnd;break b;case \"topCompositionUpdate\":e=Kb.compositionUpdate;break b}e=void 0}else Ob?Mb(a,c)&&(e=Kb.compositionEnd):\"topKeyDown\"===a&&229===c.keyCode&&(e=Kb.compositionStart);e?(Ab&&(Ob||e!==Kb.compositionStart?e===Kb.compositionEnd&&Ob&&(f=nb()):(M._root=d,M._startText=ob(),Ob=!0)),e=ub.getPooled(e,\nb,c,d),f?e.data=f:(f=Nb(c),null!==f&&(e.data=f)),ib(e),f=e):f=null;(a=zb?Pb(a,c):Qb(a,c))?(b=vb.getPooled(Kb.beforeInput,b,c,d),b.data=a,ib(b)):b=null;return null===f?b:null===b?f:[f,b]}},Sb=null,Tb={injectFiberControlledHostComponent:function(a){Sb=a}},Ub=null,Vb=null;function Wb(a){if(a=Ea(a)){Sb&&\"function\"===typeof Sb.restoreControlledState?void 0:D(\"194\");var b=Da(a.stateNode);Sb.restoreControlledState(a.stateNode,a.type,b)}}function Xb(a){Ub?Vb?Vb.push(a):Vb=[a]:Ub=a}\nfunction Yb(){return null!==Ub||null!==Vb}function Zb(){if(Ub){var a=Ub,b=Vb;Vb=Ub=null;Wb(a);if(b)for(a=0;a<b.length;a++)Wb(b[a])}}var $b=Object.freeze({injection:Tb,enqueueStateRestore:Xb,needsStateRestore:Yb,restoreStateIfNeeded:Zb});function ac(a,b){return a(b)}function bc(a,b,c){return a(b,c)}function cc(){}var dc=!1;function ec(a,b){if(dc)return a(b);dc=!0;try{return ac(a,b)}finally{dc=!1,Yb()&&(cc(),Zb())}}\nvar fc={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function gc(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!fc[a.type]:\"textarea\"===b?!0:!1}function hc(a){a=a.target||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}\nfunction ic(a,b){if(!m.canUseDOM||b&&!(\"addEventListener\"in document))return!1;a=\"on\"+a;b=a in document;b||(b=document.createElement(\"div\"),b.setAttribute(a,\"return;\"),b=\"function\"===typeof b[a]);return b}function jc(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction kc(a){var b=jc(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"function\"===typeof c.get&&\"function\"===typeof c.set)return Object.defineProperty(a,b,{configurable:!0,get:function(){return c.get.call(this)},set:function(a){d=\"\"+a;c.set.call(this,a)}}),Object.defineProperty(a,b,{enumerable:c.enumerable}),{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=null;delete a[b]}}}\nfunction lc(a){a._valueTracker||(a._valueTracker=kc(a))}function mc(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=jc(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}\nvar nc=ea.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,O=\"function\"===typeof Symbol&&Symbol[\"for\"],oc=O?Symbol[\"for\"](\"react.element\"):60103,pc=O?Symbol[\"for\"](\"react.call\"):60104,qc=O?Symbol[\"for\"](\"react.return\"):60105,rc=O?Symbol[\"for\"](\"react.portal\"):60106,sc=O?Symbol[\"for\"](\"react.fragment\"):60107,tc=O?Symbol[\"for\"](\"react.strict_mode\"):60108,uc=O?Symbol[\"for\"](\"react.provider\"):60109,vc=O?Symbol[\"for\"](\"react.context\"):60110,wc=O?Symbol[\"for\"](\"react.async_mode\"):60111,\nxc=O?Symbol[\"for\"](\"react.forward_ref\"):60112,yc=\"function\"===typeof Symbol&&Symbol.iterator;function zc(a){if(null===a||\"undefined\"===typeof a)return null;a=yc&&a[yc]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nfunction Ac(a){a=a.type;if(\"function\"===typeof a)return a.displayName||a.name;if(\"string\"===typeof a)return a;switch(a){case sc:return\"ReactFragment\";case rc:return\"ReactPortal\";case pc:return\"ReactCall\";case qc:return\"ReactReturn\"}if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case xc:return a=a.render.displayName||a.render.name||\"\",\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\"}return null}\nfunction Bc(a){var b=\"\";do{a:switch(a.tag){case 0:case 1:case 2:case 5:var c=a._debugOwner,d=a._debugSource;var e=Ac(a);var f=null;c&&(f=Ac(c));c=d;e=\"\\n    in \"+(e||\"Unknown\")+(c?\" (at \"+c.fileName.replace(/^.*[\\\\\\/]/,\"\")+\":\"+c.lineNumber+\")\":f?\" (created by \"+f+\")\":\"\");break a;default:e=\"\"}b+=e;a=a[\"return\"]}while(a);return b}\nvar Cc=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,Dc={},Ec={};function Fc(a){if(Ec.hasOwnProperty(a))return!0;if(Dc.hasOwnProperty(a))return!1;if(Cc.test(a))return Ec[a]=!0;Dc[a]=!0;return!1}\nfunction Gc(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}function Hc(a,b,c,d){if(null===b||\"undefined\"===typeof b||Gc(a,b,c,d))return!0;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}\nfunction U(a,b,c,d,e){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b}var V={};\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){V[a]=new U(a,0,!1,a,null)});\n[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];V[b]=new U(b,1,!1,a[1],null)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){V[a]=new U(a,2,!1,a.toLowerCase(),null)});[\"autoReverse\",\"externalResourcesRequired\",\"preserveAlpha\"].forEach(function(a){V[a]=new U(a,2,!1,a,null)});\n\"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){V[a]=new U(a,3,!1,a.toLowerCase(),null)});[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){V[a]=new U(a,3,!0,a.toLowerCase(),null)});[\"capture\",\"download\"].forEach(function(a){V[a]=new U(a,4,!1,a.toLowerCase(),null)});\n[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){V[a]=new U(a,6,!1,a.toLowerCase(),null)});[\"rowSpan\",\"start\"].forEach(function(a){V[a]=new U(a,5,!1,a.toLowerCase(),null)});var Sc=/[\\-:]([a-z])/g;function Tc(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(Sc,\nTc);V[b]=new U(b,1,!1,a,null)});\"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(Sc,Tc);V[b]=new U(b,1,!1,a,\"http://www.w3.org/1999/xlink\")});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(Sc,Tc);V[b]=new U(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\")});V.tabIndex=new U(\"tabIndex\",1,!1,\"tabindex\",null);\nfunction Uc(a,b,c,d){var e=V.hasOwnProperty(b)?V[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(Hc(b,c,e,d)&&(c=null),d||null===e?Fc(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nfunction Vc(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Wc(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Xc(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function Yc(a,b){b=b.checked;null!=b&&Uc(a,\"checked\",b,!1)}\nfunction Zc(a,b){Yc(a,b);var c=Xc(b.value);if(null!=c)if(\"number\"===b.type){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);b.hasOwnProperty(\"value\")?$c(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&$c(a,b.type,Xc(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction ad(a,b){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\"))\"\"===a.value&&(a.value=\"\"+a._wrapperState.initialValue),a.defaultValue=\"\"+a._wrapperState.initialValue;b=a.name;\"\"!==b&&(a.name=\"\");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!a.defaultChecked;\"\"!==b&&(a.name=b)}function $c(a,b,c){if(\"number\"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}\nfunction Xc(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}var bd={change:{phasedRegistrationNames:{bubbled:\"onChange\",captured:\"onChangeCapture\"},dependencies:\"topBlur topChange topClick topFocus topInput topKeyDown topKeyUp topSelectionChange\".split(\" \")}};function cd(a,b,c){a=N.getPooled(bd.change,a,b,c);a.type=\"change\";Xb(c);ib(a);return a}var dd=null,ed=null;function fd(a){Pa(a,!1)}\nfunction gd(a){var b=Va(a);if(mc(b))return a}function hd(a,b){if(\"topChange\"===a)return b}var id=!1;m.canUseDOM&&(id=ic(\"input\")&&(!document.documentMode||9<document.documentMode));function jd(){dd&&(dd.detachEvent(\"onpropertychange\",kd),ed=dd=null)}function kd(a){\"value\"===a.propertyName&&gd(ed)&&(a=cd(ed,a,hc(a)),ec(fd,a))}function ld(a,b,c){\"topFocus\"===a?(jd(),dd=b,ed=c,dd.attachEvent(\"onpropertychange\",kd)):\"topBlur\"===a&&jd()}\nfunction md(a){if(\"topSelectionChange\"===a||\"topKeyUp\"===a||\"topKeyDown\"===a)return gd(ed)}function nd(a,b){if(\"topClick\"===a)return gd(b)}function od(a,b){if(\"topInput\"===a||\"topChange\"===a)return gd(b)}\nvar pd={eventTypes:bd,_isInputEventSupported:id,extractEvents:function(a,b,c,d){var e=b?Va(b):window,f=void 0,h=void 0,g=e.nodeName&&e.nodeName.toLowerCase();\"select\"===g||\"input\"===g&&\"file\"===e.type?f=hd:gc(e)?id?f=od:(f=md,h=ld):(g=e.nodeName)&&\"input\"===g.toLowerCase()&&(\"checkbox\"===e.type||\"radio\"===e.type)&&(f=nd);if(f&&(f=f(a,b)))return cd(f,c,d);h&&h(a,e,b);\"topBlur\"===a&&null!=b&&(a=b._wrapperState||e._wrapperState)&&a.controlled&&\"number\"===e.type&&$c(e,\"number\",e.value)}},qd=N.extend({view:null,\ndetail:null}),rd={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function sd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=rd[a])?!!b[a]:!1}function td(){return sd}\nvar ud=qd.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:td,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)}}),vd={mouseEnter:{registrationName:\"onMouseEnter\",dependencies:[\"topMouseOut\",\"topMouseOver\"]},mouseLeave:{registrationName:\"onMouseLeave\",dependencies:[\"topMouseOut\",\"topMouseOver\"]}},wd={eventTypes:vd,extractEvents:function(a,\nb,c,d){if(\"topMouseOver\"===a&&(c.relatedTarget||c.fromElement)||\"topMouseOut\"!==a&&\"topMouseOver\"!==a)return null;var e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||e.parentWindow:window;\"topMouseOut\"===a?(a=b,b=(b=c.relatedTarget||c.toElement)?Ua(b):null):a=null;if(a===b)return null;var f=null==a?e:Va(a);e=null==b?e:Va(b);var h=ud.getPooled(vd.mouseLeave,a,c,d);h.type=\"mouseleave\";h.target=f;h.relatedTarget=e;c=ud.getPooled(vd.mouseEnter,b,c,d);c.type=\"mouseenter\";c.target=e;c.relatedTarget=\nf;jb(h,c,a,b);return[h,c]}};function xd(a){var b=a;if(a.alternate)for(;b[\"return\"];)b=b[\"return\"];else{if(0!==(b.effectTag&2))return 1;for(;b[\"return\"];)if(b=b[\"return\"],0!==(b.effectTag&2))return 1}return 3===b.tag?2:3}function yd(a){return(a=a._reactInternalFiber)?2===xd(a):!1}function zd(a){2!==xd(a)?D(\"188\"):void 0}\nfunction Ad(a){var b=a.alternate;if(!b)return b=xd(a),3===b?D(\"188\"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c[\"return\"],f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var h=e.child;h;){if(h===c)return zd(e),a;if(h===d)return zd(e),b;h=h.sibling}D(\"188\")}if(c[\"return\"]!==d[\"return\"])c=e,d=f;else{h=!1;for(var g=e.child;g;){if(g===c){h=!0;c=e;d=f;break}if(g===d){h=!0;d=e;c=f;break}g=g.sibling}if(!h){for(g=f.child;g;){if(g===c){h=!0;c=f;d=e;break}if(g===d){h=!0;d=f;c=e;break}g=g.sibling}h?\nvoid 0:D(\"189\")}}c.alternate!==d?D(\"190\"):void 0}3!==c.tag?D(\"188\"):void 0;return c.stateNode.current===c?a:b}function Bd(a){a=Ad(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child[\"return\"]=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b[\"return\"]||b[\"return\"]===a)return null;b=b[\"return\"]}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}}return null}\nfunction Cd(a){a=Ad(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child&&4!==b.tag)b.child[\"return\"]=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b[\"return\"]||b[\"return\"]===a)return null;b=b[\"return\"]}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}}return null}var Dd=N.extend({animationName:null,elapsedTime:null,pseudoElement:null}),Ed=N.extend({clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Fd=qd.extend({relatedTarget:null});\nfunction Gd(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}\nvar Hd={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Id={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",\n116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Jd=qd.extend({key:function(a){if(a.key){var b=Hd[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=Gd(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Id[a.keyCode]||\"Unidentified\":\"\"},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:td,charCode:function(a){return\"keypress\"===\na.type?Gd(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===a.type?Gd(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Kd=ud.extend({dataTransfer:null}),Ld=qd.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:td}),Md=N.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),Nd=ud.extend({deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in\na?-a.wheelDeltaX:0},deltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),Od={},Pd={};function Qd(a,b){var c=a[0].toUpperCase()+a.slice(1),d=\"on\"+c;c=\"top\"+c;b={phasedRegistrationNames:{bubbled:d,captured:d+\"Capture\"},dependencies:[c],isInteractive:b};Od[a]=b;Pd[c]=b}\n\"blur cancel click close contextMenu copy cut doubleClick dragEnd dragStart drop focus input invalid keyDown keyPress keyUp mouseDown mouseUp paste pause play rateChange reset seeked submit touchCancel touchEnd touchStart volumeChange\".split(\" \").forEach(function(a){Qd(a,!0)});\n\"abort animationEnd animationIteration animationStart canPlay canPlayThrough drag dragEnter dragExit dragLeave dragOver durationChange emptied encrypted ended error load loadedData loadedMetadata loadStart mouseMove mouseOut mouseOver playing progress scroll seeking stalled suspend timeUpdate toggle touchMove transitionEnd waiting wheel\".split(\" \").forEach(function(a){Qd(a,!1)});\nvar Rd={eventTypes:Od,isInteractiveTopLevelEventType:function(a){a=Pd[a];return void 0!==a&&!0===a.isInteractive},extractEvents:function(a,b,c,d){var e=Pd[a];if(!e)return null;switch(a){case \"topKeyPress\":if(0===Gd(c))return null;case \"topKeyDown\":case \"topKeyUp\":a=Jd;break;case \"topBlur\":case \"topFocus\":a=Fd;break;case \"topClick\":if(2===c.button)return null;case \"topDoubleClick\":case \"topMouseDown\":case \"topMouseMove\":case \"topMouseUp\":case \"topMouseOut\":case \"topMouseOver\":case \"topContextMenu\":a=\nud;break;case \"topDrag\":case \"topDragEnd\":case \"topDragEnter\":case \"topDragExit\":case \"topDragLeave\":case \"topDragOver\":case \"topDragStart\":case \"topDrop\":a=Kd;break;case \"topTouchCancel\":case \"topTouchEnd\":case \"topTouchMove\":case \"topTouchStart\":a=Ld;break;case \"topAnimationEnd\":case \"topAnimationIteration\":case \"topAnimationStart\":a=Dd;break;case \"topTransitionEnd\":a=Md;break;case \"topScroll\":a=qd;break;case \"topWheel\":a=Nd;break;case \"topCopy\":case \"topCut\":case \"topPaste\":a=Ed;break;default:a=\nN}b=a.getPooled(e,b,c,d);ib(b);return b}},Sd=Rd.isInteractiveTopLevelEventType,Td=[];function Ud(a){var b=a.targetInst;do{if(!b){a.ancestors.push(b);break}var c;for(c=b;c[\"return\"];)c=c[\"return\"];c=3!==c.tag?null:c.stateNode.containerInfo;if(!c)break;a.ancestors.push(b);b=Ua(c)}while(b);for(c=0;c<a.ancestors.length;c++)b=a.ancestors[c],Qa(a.topLevelType,b,a.nativeEvent,hc(a.nativeEvent))}var Vd=!0;function Wd(a){Vd=!!a}\nfunction W(a,b,c){if(!c)return null;a=(Sd(a)?Xd:Yd).bind(null,a);c.addEventListener(b,a,!1)}function Zd(a,b,c){if(!c)return null;a=(Sd(a)?Xd:Yd).bind(null,a);c.addEventListener(b,a,!0)}function Xd(a,b){bc(Yd,a,b)}\nfunction Yd(a,b){if(Vd){var c=hc(b);c=Ua(c);null!==c&&\"number\"===typeof c.tag&&2!==xd(c)&&(c=null);if(Td.length){var d=Td.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{ec(Ud,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>Td.length&&Td.push(a)}}}\nvar $d=Object.freeze({get _enabled(){return Vd},setEnabled:Wd,isEnabled:function(){return Vd},trapBubbledEvent:W,trapCapturedEvent:Zd,dispatchEvent:Yd});function ae(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;c[\"ms\"+a]=\"MS\"+b;c[\"O\"+a]=\"o\"+b.toLowerCase();return c}\nvar be={animationend:ae(\"Animation\",\"AnimationEnd\"),animationiteration:ae(\"Animation\",\"AnimationIteration\"),animationstart:ae(\"Animation\",\"AnimationStart\"),transitionend:ae(\"Transition\",\"TransitionEnd\")},ce={},de={};m.canUseDOM&&(de=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete be.animationend.animation,delete be.animationiteration.animation,delete be.animationstart.animation),\"TransitionEvent\"in window||delete be.transitionend.transition);\nfunction ee(a){if(ce[a])return ce[a];if(!be[a])return a;var b=be[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in de)return ce[a]=b[c];return a}\nvar fe={topAnimationEnd:ee(\"animationend\"),topAnimationIteration:ee(\"animationiteration\"),topAnimationStart:ee(\"animationstart\"),topBlur:\"blur\",topCancel:\"cancel\",topChange:\"change\",topClick:\"click\",topClose:\"close\",topCompositionEnd:\"compositionend\",topCompositionStart:\"compositionstart\",topCompositionUpdate:\"compositionupdate\",topContextMenu:\"contextmenu\",topCopy:\"copy\",topCut:\"cut\",topDoubleClick:\"dblclick\",topDrag:\"drag\",topDragEnd:\"dragend\",topDragEnter:\"dragenter\",topDragExit:\"dragexit\",topDragLeave:\"dragleave\",\ntopDragOver:\"dragover\",topDragStart:\"dragstart\",topDrop:\"drop\",topFocus:\"focus\",topInput:\"input\",topKeyDown:\"keydown\",topKeyPress:\"keypress\",topKeyUp:\"keyup\",topLoad:\"load\",topLoadStart:\"loadstart\",topMouseDown:\"mousedown\",topMouseMove:\"mousemove\",topMouseOut:\"mouseout\",topMouseOver:\"mouseover\",topMouseUp:\"mouseup\",topPaste:\"paste\",topScroll:\"scroll\",topSelectionChange:\"selectionchange\",topTextInput:\"textInput\",topToggle:\"toggle\",topTouchCancel:\"touchcancel\",topTouchEnd:\"touchend\",topTouchMove:\"touchmove\",\ntopTouchStart:\"touchstart\",topTransitionEnd:ee(\"transitionend\"),topWheel:\"wheel\"},ge={topAbort:\"abort\",topCanPlay:\"canplay\",topCanPlayThrough:\"canplaythrough\",topDurationChange:\"durationchange\",topEmptied:\"emptied\",topEncrypted:\"encrypted\",topEnded:\"ended\",topError:\"error\",topLoadedData:\"loadeddata\",topLoadedMetadata:\"loadedmetadata\",topLoadStart:\"loadstart\",topPause:\"pause\",topPlay:\"play\",topPlaying:\"playing\",topProgress:\"progress\",topRateChange:\"ratechange\",topSeeked:\"seeked\",topSeeking:\"seeking\",\ntopStalled:\"stalled\",topSuspend:\"suspend\",topTimeUpdate:\"timeupdate\",topVolumeChange:\"volumechange\",topWaiting:\"waiting\"},he={},ie=0,je=\"_reactListenersID\"+(\"\"+Math.random()).slice(2);function ke(a){Object.prototype.hasOwnProperty.call(a,je)||(a[je]=ie++,he[a[je]]={});return he[a[je]]}function le(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction me(a,b){var c=le(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=le(c)}}function ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&\"text\"===a.type||\"textarea\"===b||\"true\"===a.contentEditable)}\nvar oe=m.canUseDOM&&\"documentMode\"in document&&11>=document.documentMode,pe={select:{phasedRegistrationNames:{bubbled:\"onSelect\",captured:\"onSelectCapture\"},dependencies:\"topBlur topContextMenu topFocus topKeyDown topKeyUp topMouseDown topMouseUp topSelectionChange\".split(\" \")}},qe=null,re=null,se=null,te=!1;\nfunction ue(a,b){if(te||null==qe||qe!==fa())return null;var c=qe;\"selectionStart\"in c&&ne(c)?c={start:c.selectionStart,end:c.selectionEnd}:window.getSelection?(c=window.getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset}):c=void 0;return se&&ha(se,c)?null:(se=c,a=N.getPooled(pe.select,re,a,b),a.type=\"select\",a.target=qe,ib(a),a)}\nvar ve={eventTypes:pe,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=ke(e);f=va.onSelect;for(var h=0;h<f.length;h++){var g=f[h];if(!e.hasOwnProperty(g)||!e[g]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?Va(b):window;switch(a){case \"topFocus\":if(gc(e)||\"true\"===e.contentEditable)qe=e,re=b,se=null;break;case \"topBlur\":se=re=qe=null;break;case \"topMouseDown\":te=!0;break;case \"topContextMenu\":case \"topMouseUp\":return te=!1,ue(c,d);case \"topSelectionChange\":if(oe)break;\ncase \"topKeyDown\":case \"topKeyUp\":return ue(c,d)}return null}};Na.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));Da=bb.getFiberCurrentPropsFromNode;Ea=bb.getInstanceFromNode;Fa=bb.getNodeFromInstance;Na.injectEventPluginsByName({SimpleEventPlugin:Rd,EnterLeaveEventPlugin:wd,ChangeEventPlugin:pd,SelectEventPlugin:ve,BeforeInputEventPlugin:Rb});\nfunction xe(a,b,c,d){this.tag=a;this.key=c;this.stateNode=this.type=null;this.sibling=this.child=this[\"return\"]=null;this.index=0;this.ref=null;this.pendingProps=b;this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.expirationTime=0;this.alternate=null}\nfunction ze(a,b,c){var d=a.alternate;null===d?(d=new xe(a.tag,b,a.key,a.mode),d.type=a.type,d.stateNode=a.stateNode,d.alternate=a,a.alternate=d):(d.pendingProps=b,d.effectTag=0,d.nextEffect=null,d.firstEffect=null,d.lastEffect=null);d.expirationTime=c;d.child=a.child;d.memoizedProps=a.memoizedProps;d.memoizedState=a.memoizedState;d.updateQueue=a.updateQueue;d.sibling=a.sibling;d.index=a.index;d.ref=a.ref;return d}\nfunction Ae(a,b,c){var d=a.type,e=a.key;a=a.props;var f=void 0;if(\"function\"===typeof d)f=d.prototype&&d.prototype.isReactComponent?2:0;else if(\"string\"===typeof d)f=5;else switch(d){case sc:return Be(a.children,b,c,e);case wc:f=11;b|=3;break;case tc:f=11;b|=2;break;case pc:f=7;break;case qc:f=9;break;default:if(\"object\"===typeof d&&null!==d)switch(d.$$typeof){case uc:f=13;break;case vc:f=12;break;case xc:f=14;break;default:if(\"number\"===typeof d.tag)return b=d,b.pendingProps=a,b.expirationTime=c,\nb;D(\"130\",null==d?d:typeof d,\"\")}else D(\"130\",null==d?d:typeof d,\"\")}b=new xe(f,a,e,b);b.type=d;b.expirationTime=c;return b}function Be(a,b,c,d){a=new xe(10,a,d,b);a.expirationTime=c;return a}function Ce(a,b,c){a=new xe(6,a,null,b);a.expirationTime=c;return a}function De(a,b,c){b=new xe(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}var Ee=null,Fe=null;\nfunction Ge(a){return function(b){try{return a(b)}catch(c){}}}function He(a){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Ee=Ge(function(a){return b.onCommitFiberRoot(c,a)});Fe=Ge(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}function Ie(a){\"function\"===typeof Ee&&Ee(a)}function Je(a){\"function\"===typeof Fe&&Fe(a)}new Set;\nfunction Ke(a){return{baseState:a,expirationTime:0,first:null,last:null,callbackList:null,hasForceUpdate:!1,isInitialized:!1,capturedValues:null}}function Le(a,b){null===a.last?a.first=a.last=b:(a.last.next=b,a.last=b);if(0===a.expirationTime||a.expirationTime>b.expirationTime)a.expirationTime=b.expirationTime}var Me=void 0,Ne=void 0;\nfunction Oe(a){Me=Ne=null;var b=a.alternate,c=a.updateQueue;null===c&&(c=a.updateQueue=Ke(null));null!==b?(a=b.updateQueue,null===a&&(a=b.updateQueue=Ke(null))):a=null;Me=c;Ne=a!==c?a:null}function Pe(a,b){Oe(a);a=Me;var c=Ne;null===c?Le(a,b):null===a.last||null===c.last?(Le(a,b),Le(c,b)):(Le(a,b),c.last=b)}function Qe(a,b,c,d){a=a.partialState;return\"function\"===typeof a?a.call(b,c,d):a}\nfunction Re(a,b,c,d,e,f){null!==a&&a.updateQueue===c&&(c=b.updateQueue={baseState:c.baseState,expirationTime:c.expirationTime,first:c.first,last:c.last,isInitialized:c.isInitialized,capturedValues:c.capturedValues,callbackList:null,hasForceUpdate:!1});c.expirationTime=0;c.isInitialized?a=c.baseState:(a=c.baseState=b.memoizedState,c.isInitialized=!0);for(var h=!0,g=c.first,k=!1;null!==g;){var v=g.expirationTime;if(v>f){var l=c.expirationTime;if(0===l||l>v)c.expirationTime=v;k||(k=!0,c.baseState=a)}else{k||\n(c.first=g.next,null===c.first&&(c.last=null));if(g.isReplace)a=Qe(g,d,a,e),h=!0;else if(v=Qe(g,d,a,e))a=h?A({},a,v):A(a,v),h=!1;g.isForced&&(c.hasForceUpdate=!0);null!==g.callback&&(v=c.callbackList,null===v&&(v=c.callbackList=[]),v.push(g));null!==g.capturedValue&&(v=c.capturedValues,null===v?c.capturedValues=[g.capturedValue]:v.push(g.capturedValue))}g=g.next}null!==c.callbackList?b.effectTag|=32:null!==c.first||c.hasForceUpdate||null!==c.capturedValues||(b.updateQueue=null);k||(c.baseState=a);\nreturn a}function Se(a,b){var c=a.callbackList;if(null!==c)for(a.callbackList=null,a=0;a<c.length;a++){var d=c[a],e=d.callback;d.callback=null;\"function\"!==typeof e?D(\"191\",e):void 0;e.call(b)}}\nfunction Te(a,b,c,d,e){function f(a,b,c,d,e,f){if(null===b||null!==a.updateQueue&&a.updateQueue.hasForceUpdate)return!0;var n=a.stateNode;a=a.type;return\"function\"===typeof n.shouldComponentUpdate?n.shouldComponentUpdate(c,e,f):a.prototype&&a.prototype.isPureReactComponent?!ha(b,c)||!ha(d,e):!0}function h(a,b){b.updater=r;a.stateNode=b;b._reactInternalFiber=a}function g(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&\nb.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&r.enqueueReplaceState(b,b.state,null)}function k(a,b,c,d){a=a.type;if(\"function\"===typeof a.getDerivedStateFromProps)return a.getDerivedStateFromProps.call(null,c,d)}var v=a.cacheContext,l=a.getMaskedContext,p=a.getUnmaskedContext,z=a.isContextConsumer,B=a.hasContextChanged,r={isMounted:yd,enqueueSetState:function(a,d,e){a=a._reactInternalFiber;e=void 0===e?null:e;var f=c(a);Pe(a,{expirationTime:f,partialState:d,callback:e,isReplace:!1,isForced:!1,\ncapturedValue:null,next:null});b(a,f)},enqueueReplaceState:function(a,d,e){a=a._reactInternalFiber;e=void 0===e?null:e;var f=c(a);Pe(a,{expirationTime:f,partialState:d,callback:e,isReplace:!0,isForced:!1,capturedValue:null,next:null});b(a,f)},enqueueForceUpdate:function(a,d){a=a._reactInternalFiber;d=void 0===d?null:d;var e=c(a);Pe(a,{expirationTime:e,partialState:null,callback:d,isReplace:!1,isForced:!0,capturedValue:null,next:null});b(a,e)}};return{adoptClassInstance:h,callGetDerivedStateFromProps:k,\nconstructClassInstance:function(a,b){var c=a.type,d=p(a),e=z(a),f=e?l(a,d):ka;c=new c(b,f);var n=null!==c.state&&void 0!==c.state?c.state:null;h(a,c);a.memoizedState=n;b=k(a,c,b,n);null!==b&&void 0!==b&&(a.memoizedState=A({},a.memoizedState,b));e&&v(a,d,f);return c},mountClassInstance:function(a,b){var c=a.type,d=a.alternate,e=a.stateNode,f=a.pendingProps,n=p(a);e.props=f;e.state=a.memoizedState;e.refs=ka;e.context=l(a,n);\"function\"===typeof c.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\n\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||(c=e.state,\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),c!==e.state&&r.enqueueReplaceState(e,e.state,null),c=a.updateQueue,null!==c&&(e.state=Re(d,a,c,e,f,b)));\"function\"===typeof e.componentDidMount&&(a.effectTag|=4)},resumeMountClassInstance:function(a,b){var c=a.type,n=a.stateNode;n.props=a.memoizedProps;n.state=\na.memoizedState;var h=a.memoizedProps,r=a.pendingProps,z=n.context,q=p(a);q=l(a,q);(c=\"function\"===typeof c.getDerivedStateFromProps||\"function\"===typeof n.getSnapshotBeforeUpdate)||\"function\"!==typeof n.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof n.componentWillReceiveProps||(h!==r||z!==q)&&g(a,n,r,q);z=a.memoizedState;b=null!==a.updateQueue?Re(null,a,a.updateQueue,n,r,b):z;var u=void 0;h!==r&&(u=k(a,n,r,b));if(null!==u&&void 0!==u){b=null===b||void 0===b?u:A({},b,u);var t=a.updateQueue;\nnull!==t&&(t.baseState=A({},t.baseState,u))}if(!(h!==r||z!==b||B()||null!==a.updateQueue&&a.updateQueue.hasForceUpdate))return\"function\"===typeof n.componentDidMount&&(a.effectTag|=4),!1;(h=f(a,h,r,z,b,q))?(c||\"function\"!==typeof n.UNSAFE_componentWillMount&&\"function\"!==typeof n.componentWillMount||(\"function\"===typeof n.componentWillMount&&n.componentWillMount(),\"function\"===typeof n.UNSAFE_componentWillMount&&n.UNSAFE_componentWillMount()),\"function\"===typeof n.componentDidMount&&(a.effectTag|=\n4)):(\"function\"===typeof n.componentDidMount&&(a.effectTag|=4),d(a,r),e(a,b));n.props=r;n.state=b;n.context=q;return h},updateClassInstance:function(a,b,c){var n=b.type,x=b.stateNode;x.props=b.memoizedProps;x.state=b.memoizedState;var h=b.memoizedProps,r=b.pendingProps,q=x.context,u=p(b);u=l(b,u);(n=\"function\"===typeof n.getDerivedStateFromProps||\"function\"===typeof x.getSnapshotBeforeUpdate)||\"function\"!==typeof x.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof x.componentWillReceiveProps||\n(h!==r||q!==u)&&g(b,x,r,u);q=b.memoizedState;c=null!==b.updateQueue?Re(a,b,b.updateQueue,x,r,c):q;var t=void 0;h!==r&&(t=k(b,x,r,c));if(null!==t&&void 0!==t){c=null===c||void 0===c?t:A({},c,t);var y=b.updateQueue;null!==y&&(y.baseState=A({},y.baseState,t))}if(!(h!==r||q!==c||B()||null!==b.updateQueue&&b.updateQueue.hasForceUpdate))return\"function\"!==typeof x.componentDidUpdate||h===a.memoizedProps&&q===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof x.getSnapshotBeforeUpdate||h===a.memoizedProps&&\nq===a.memoizedState||(b.effectTag|=2048),!1;(t=f(b,h,r,q,c,u))?(n||\"function\"!==typeof x.UNSAFE_componentWillUpdate&&\"function\"!==typeof x.componentWillUpdate||(\"function\"===typeof x.componentWillUpdate&&x.componentWillUpdate(r,c,u),\"function\"===typeof x.UNSAFE_componentWillUpdate&&x.UNSAFE_componentWillUpdate(r,c,u)),\"function\"===typeof x.componentDidUpdate&&(b.effectTag|=4),\"function\"===typeof x.getSnapshotBeforeUpdate&&(b.effectTag|=2048)):(\"function\"!==typeof x.componentDidUpdate||h===a.memoizedProps&&\nq===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof x.getSnapshotBeforeUpdate||h===a.memoizedProps&&q===a.memoizedState||(b.effectTag|=2048),d(b,r),e(b,c));x.props=r;x.state=c;x.context=u;return t}}}var Ue=Array.isArray;\nfunction Ve(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;var d=void 0;c&&(2!==c.tag?D(\"110\"):void 0,d=c.stateNode);d?void 0:D(\"147\",a);var e=\"\"+a;if(null!==b&&null!==b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs===ka?d.refs={}:d.refs;null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}\"string\"!==typeof a?D(\"148\"):void 0;c._owner?void 0:D(\"254\",a)}return a}\nfunction We(a,b){\"textarea\"!==a.type&&D(\"31\",\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b,\"\")}\nfunction Xe(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=ze(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=\n2,c):d;b.effectTag=2;return c}function h(b){a&&null===b.alternate&&(b.effectTag=2);return b}function g(a,b,c,d){if(null===b||6!==b.tag)return b=Ce(c,a.mode,d),b[\"return\"]=a,b;b=e(b,c,d);b[\"return\"]=a;return b}function k(a,b,c,d){if(null!==b&&b.type===c.type)return d=e(b,c.props,d),d.ref=Ve(a,b,c),d[\"return\"]=a,d;d=Ae(c,a.mode,d);d.ref=Ve(a,b,c);d[\"return\"]=a;return d}function v(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=\nDe(c,a.mode,d),b[\"return\"]=a,b;b=e(b,c.children||[],d);b[\"return\"]=a;return b}function l(a,b,c,d,f){if(null===b||10!==b.tag)return b=Be(c,a.mode,d,f),b[\"return\"]=a,b;b=e(b,c,d);b[\"return\"]=a;return b}function p(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=Ce(\"\"+b,a.mode,c),b[\"return\"]=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case oc:return c=Ae(b,a.mode,c),c.ref=Ve(a,null,b),c[\"return\"]=a,c;case rc:return b=De(b,a.mode,c),b[\"return\"]=a,b}if(Ue(b)||zc(b))return b=Be(b,\na.mode,c,null),b[\"return\"]=a,b;We(a,b)}return null}function z(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:g(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case oc:return c.key===e?c.type===sc?l(a,b,c.props.children,d,e):k(a,b,c,d):null;case rc:return c.key===e?v(a,b,c,d):null}if(Ue(c)||zc(c))return null!==e?null:l(a,b,c,d,null);We(a,c)}return null}function B(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=a.get(c)||\nnull,g(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case oc:return a=a.get(null===d.key?c:d.key)||null,d.type===sc?l(b,a,d.props.children,e,d.key):k(b,a,d,e);case rc:return a=a.get(null===d.key?c:d.key)||null,v(b,a,d,e)}if(Ue(d)||zc(d))return a=a.get(c)||null,l(b,a,d,e,null);We(b,d)}return null}function r(e,l,g,h){for(var r=null,k=null,q=l,u=l=0,t=null;null!==q&&u<g.length;u++){q.index>u?(t=q,q=null):t=q.sibling;var n=z(e,q,g[u],h);if(null===n){null===q&&(q=t);break}a&&q&&null===\nn.alternate&&b(e,q);l=f(n,l,u);null===k?r=n:k.sibling=n;k=n;q=t}if(u===g.length)return c(e,q),r;if(null===q){for(;u<g.length;u++)if(q=p(e,g[u],h))l=f(q,l,u),null===k?r=q:k.sibling=q,k=q;return r}for(q=d(e,q);u<g.length;u++)if(t=B(q,e,u,g[u],h)){if(a&&null!==t.alternate)q[\"delete\"](null===t.key?u:t.key);l=f(t,l,u);null===k?r=t:k.sibling=t;k=t}a&&q.forEach(function(a){return b(e,a)});return r}function Q(e,l,g,h){var r=zc(g);\"function\"!==typeof r?D(\"150\"):void 0;g=r.call(g);null==g?D(\"151\"):void 0;for(var k=\nr=null,q=l,u=l=0,t=null,n=g.next();null!==q&&!n.done;u++,n=g.next()){q.index>u?(t=q,q=null):t=q.sibling;var H=z(e,q,n.value,h);if(null===H){q||(q=t);break}a&&q&&null===H.alternate&&b(e,q);l=f(H,l,u);null===k?r=H:k.sibling=H;k=H;q=t}if(n.done)return c(e,q),r;if(null===q){for(;!n.done;u++,n=g.next())n=p(e,n.value,h),null!==n&&(l=f(n,l,u),null===k?r=n:k.sibling=n,k=n);return r}for(q=d(e,q);!n.done;u++,n=g.next())if(n=B(q,e,u,n.value,h),null!==n){if(a&&null!==n.alternate)q[\"delete\"](null===n.key?u:n.key);\nl=f(n,l,u);null===k?r=n:k.sibling=n;k=n}a&&q.forEach(function(a){return b(e,a)});return r}return function(a,d,f,l){\"object\"===typeof f&&null!==f&&f.type===sc&&null===f.key&&(f=f.props.children);var g=\"object\"===typeof f&&null!==f;if(g)switch(f.$$typeof){case oc:a:{var k=f.key;for(g=d;null!==g;){if(g.key===k)if(10===g.tag?f.type===sc:g.type===f.type){c(a,g.sibling);d=e(g,f.type===sc?f.props.children:f.props,l);d.ref=Ve(a,g,f);d[\"return\"]=a;a=d;break a}else{c(a,g);break}else b(a,g);g=g.sibling}f.type===\nsc?(d=Be(f.props.children,a.mode,l,f.key),d[\"return\"]=a,a=d):(l=Ae(f,a.mode,l),l.ref=Ve(a,d,f),l[\"return\"]=a,a=l)}return h(a);case rc:a:{for(g=f.key;null!==d;){if(d.key===g)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[],l);d[\"return\"]=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=De(f,a.mode,l);d[\"return\"]=a;a=d}return h(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\"\"+f,null!==d&&\n6===d.tag?(c(a,d.sibling),d=e(d,f,l),d[\"return\"]=a,a=d):(c(a,d),d=Ce(f,a.mode,l),d[\"return\"]=a,a=d),h(a);if(Ue(f))return r(a,d,f,l);if(zc(f))return Q(a,d,f,l);g&&We(a,f);if(\"undefined\"===typeof f)switch(a.tag){case 2:case 1:l=a.type,D(\"152\",l.displayName||l.name||\"Component\")}return c(a,d)}}var Ye=Xe(!0),Ze=Xe(!1);\nfunction $e(a,b,c,d,e,f,h){function g(a,b,c){k(a,b,c,b.expirationTime)}function k(a,b,c,d){b.child=null===a?Ze(b,null,c,d):Ye(b,a.child,c,d)}function v(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function l(a,b,c,d,e,f){v(a,b);if(!c&&!e)return d&&y(b,!1),r(a,b);c=b.stateNode;nc.current=b;var l=e?null:c.render();b.effectTag|=1;e&&(k(a,b,null,f),b.child=null);k(a,b,l,f);b.memoizedState=c.state;b.memoizedProps=c.props;d&&y(b,!0);return b.child}function p(a){var b=a.stateNode;\nb.pendingContext?t(a,b.pendingContext,b.pendingContext!==b.context):b.context&&t(a,b.context,!1);Y(a,b.containerInfo)}function z(a,b,c,d){var e=a.child;for(null!==e&&(e[\"return\"]=a);null!==e;){switch(e.tag){case 12:var f=e.stateNode|0;if(e.type===b&&0!==(f&c)){for(f=e;null!==f;){var l=f.alternate;if(0===f.expirationTime||f.expirationTime>d)f.expirationTime=d,null!==l&&(0===l.expirationTime||l.expirationTime>d)&&(l.expirationTime=d);else if(null!==l&&(0===l.expirationTime||l.expirationTime>d))l.expirationTime=\nd;else break;f=f[\"return\"]}f=null}else f=e.child;break;case 13:f=e.type===a.type?null:e.child;break;default:f=e.child}if(null!==f)f[\"return\"]=e;else for(f=e;null!==f;){if(f===a){f=null;break}e=f.sibling;if(null!==e){f=e;break}f=f[\"return\"]}e=f}}function B(a,b,c){var d=b.type._context,e=b.pendingProps,f=b.memoizedProps;if(!q()&&f===e)return b.stateNode=0,G(b),r(a,b);var l=e.value;b.memoizedProps=e;if(null===f)l=1073741823;else if(f.value===e.value){if(f.children===e.children)return b.stateNode=0,G(b),\nr(a,b);l=0}else{var h=f.value;if(h===l&&(0!==h||1/h===1/l)||h!==h&&l!==l){if(f.children===e.children)return b.stateNode=0,G(b),r(a,b);l=0}else if(l=\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(h,l):1073741823,l|=0,0===l){if(f.children===e.children)return b.stateNode=0,G(b),r(a,b)}else z(b,d,l,c)}b.stateNode=l;G(b);g(a,b,e.children);return b.child}function r(a,b){null!==a&&b.child!==a.child?D(\"153\"):void 0;if(null!==b.child){a=b.child;var c=ze(a,a.pendingProps,a.expirationTime);\nb.child=c;for(c[\"return\"]=b;null!==a.sibling;)a=a.sibling,c=c.sibling=ze(a,a.pendingProps,a.expirationTime),c[\"return\"]=b;c.sibling=null}return b.child}var Q=a.shouldSetTextContent,n=a.shouldDeprioritizeSubtree,x=b.pushHostContext,Y=b.pushHostContainer,G=d.pushProvider,R=c.getMaskedContext,S=c.getUnmaskedContext,q=c.hasContextChanged,u=c.pushContextProvider,t=c.pushTopLevelContextObject,y=c.invalidateContextProvider,H=e.enterHydrationState,Wa=e.resetHydrationState,Cb=e.tryToClaimNextHydratableInstance;\na=Te(c,f,h,function(a,b){a.memoizedProps=b},function(a,b){a.memoizedState=b});var Jc=a.adoptClassInstance,Kc=a.callGetDerivedStateFromProps,Lc=a.constructClassInstance,Db=a.mountClassInstance,Mc=a.resumeMountClassInstance,Eb=a.updateClassInstance;return{beginWork:function(a,b,c){if(0===b.expirationTime||b.expirationTime>c){switch(b.tag){case 3:p(b);break;case 2:u(b);break;case 4:Y(b,b.stateNode.containerInfo);break;case 13:G(b)}return null}switch(b.tag){case 0:null!==a?D(\"155\"):void 0;var d=b.type,\ne=b.pendingProps,f=S(b);f=R(b,f);d=d(e,f);b.effectTag|=1;\"object\"===typeof d&&null!==d&&\"function\"===typeof d.render&&void 0===d.$$typeof?(f=b.type,b.tag=2,b.memoizedState=null!==d.state&&void 0!==d.state?d.state:null,\"function\"===typeof f.getDerivedStateFromProps&&(e=Kc(b,d,e,b.memoizedState),null!==e&&void 0!==e&&(b.memoizedState=A({},b.memoizedState,e))),e=u(b),Jc(b,d),Db(b,c),a=l(a,b,!0,e,!1,c)):(b.tag=1,g(a,b,d),b.memoizedProps=e,a=b.child);return a;case 1:return e=b.type,c=b.pendingProps,q()||\nb.memoizedProps!==c?(d=S(b),d=R(b,d),e=e(c,d),b.effectTag|=1,g(a,b,e),b.memoizedProps=c,a=b.child):a=r(a,b),a;case 2:e=u(b);null===a?null===b.stateNode?(Lc(b,b.pendingProps),Db(b,c),d=!0):d=Mc(b,c):d=Eb(a,b,c);f=!1;var h=b.updateQueue;null!==h&&null!==h.capturedValues&&(f=d=!0);return l(a,b,d,e,f,c);case 3:a:if(p(b),d=b.updateQueue,null!==d){f=b.memoizedState;e=Re(a,b,d,null,null,c);b.memoizedState=e;d=b.updateQueue;if(null!==d&&null!==d.capturedValues)d=null;else if(f===e){Wa();a=r(a,b);break a}else d=\ne.element;f=b.stateNode;(null===a||null===a.child)&&f.hydrate&&H(b)?(b.effectTag|=2,b.child=Ze(b,null,d,c)):(Wa(),g(a,b,d));b.memoizedState=e;a=b.child}else Wa(),a=r(a,b);return a;case 5:a:{x(b);null===a&&Cb(b);e=b.type;h=b.memoizedProps;d=b.pendingProps;f=null!==a?a.memoizedProps:null;if(!q()&&h===d){if(h=b.mode&1&&n(e,d))b.expirationTime=1073741823;if(!h||1073741823!==c){a=r(a,b);break a}}h=d.children;Q(e,d)?h=null:f&&Q(e,f)&&(b.effectTag|=16);v(a,b);1073741823!==c&&b.mode&1&&n(e,d)?(b.expirationTime=\n1073741823,b.memoizedProps=d,a=null):(g(a,b,h),b.memoizedProps=d,a=b.child)}return a;case 6:return null===a&&Cb(b),b.memoizedProps=b.pendingProps,null;case 8:b.tag=7;case 7:return e=b.pendingProps,q()||b.memoizedProps!==e||(e=b.memoizedProps),d=e.children,b.stateNode=null===a?Ze(b,b.stateNode,d,c):Ye(b,a.stateNode,d,c),b.memoizedProps=e,b.stateNode;case 9:return null;case 4:return Y(b,b.stateNode.containerInfo),e=b.pendingProps,q()||b.memoizedProps!==e?(null===a?b.child=Ye(b,null,e,c):g(a,b,e),b.memoizedProps=\ne,a=b.child):a=r(a,b),a;case 14:return c=b.type.render,c=c(b.pendingProps,b.ref),g(a,b,c),b.memoizedProps=c,b.child;case 10:return c=b.pendingProps,q()||b.memoizedProps!==c?(g(a,b,c),b.memoizedProps=c,a=b.child):a=r(a,b),a;case 11:return c=b.pendingProps.children,q()||null!==c&&b.memoizedProps!==c?(g(a,b,c),b.memoizedProps=c,a=b.child):a=r(a,b),a;case 13:return B(a,b,c);case 12:a:{d=b.type;f=b.pendingProps;h=b.memoizedProps;e=d._currentValue;var t=d._changedBits;if(q()||0!==t||h!==f){b.memoizedProps=\nf;var k=f.unstable_observedBits;if(void 0===k||null===k)k=1073741823;b.stateNode=k;if(0!==(t&k))z(b,d,t,c);else if(h===f){a=r(a,b);break a}c=f.children;c=c(e);g(a,b,c);a=b.child}else a=r(a,b)}return a;default:D(\"156\")}}}}\nfunction af(a,b,c,d,e){function f(a){a.effectTag|=4}var h=a.createInstance,g=a.createTextInstance,k=a.appendInitialChild,v=a.finalizeInitialChildren,l=a.prepareUpdate,p=a.persistence,z=b.getRootHostContainer,B=b.popHostContext,r=b.getHostContext,Q=b.popHostContainer,n=c.popContextProvider,x=c.popTopLevelContextObject,Y=d.popProvider,G=e.prepareToHydrateHostInstance,R=e.prepareToHydrateHostTextInstance,S=e.popHydrationState,q=void 0,u=void 0,t=void 0;a.mutation?(q=function(){},u=function(a,b,c){(b.updateQueue=\nc)&&f(b)},t=function(a,b,c,d){c!==d&&f(b)}):p?D(\"235\"):D(\"236\");return{completeWork:function(a,b,c){var d=b.pendingProps;switch(b.tag){case 1:return null;case 2:return n(b),a=b.stateNode,d=b.updateQueue,null!==d&&null!==d.capturedValues&&(b.effectTag&=-65,\"function\"===typeof a.componentDidCatch?b.effectTag|=256:d.capturedValues=null),null;case 3:Q(b);x(b);d=b.stateNode;d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)S(b),b.effectTag&=-3;q(b);a=b.updateQueue;\nnull!==a&&null!==a.capturedValues&&(b.effectTag|=256);return null;case 5:B(b);c=z();var e=b.type;if(null!==a&&null!=b.stateNode){var p=a.memoizedProps,H=b.stateNode,y=r();H=l(H,e,p,d,c,y);u(a,b,H,e,p,d,c,y);a.ref!==b.ref&&(b.effectTag|=128)}else{if(!d)return null===b.stateNode?D(\"166\"):void 0,null;a=r();if(S(b))G(b,c,a)&&f(b);else{p=h(e,d,c,a,b);a:for(y=b.child;null!==y;){if(5===y.tag||6===y.tag)k(p,y.stateNode);else if(4!==y.tag&&null!==y.child){y.child[\"return\"]=y;y=y.child;continue}if(y===b)break;\nfor(;null===y.sibling;){if(null===y[\"return\"]||y[\"return\"]===b)break a;y=y[\"return\"]}y.sibling[\"return\"]=y[\"return\"];y=y.sibling}v(p,e,d,c,a)&&f(b);b.stateNode=p}null!==b.ref&&(b.effectTag|=128)}return null;case 6:if(a&&null!=b.stateNode)t(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d)return null===b.stateNode?D(\"166\"):void 0,null;a=z();c=r();S(b)?R(b)&&f(b):b.stateNode=g(d,a,c,b)}return null;case 7:(d=b.memoizedProps)?void 0:D(\"165\");b.tag=8;e=[];a:for((p=b.stateNode)&&(p[\"return\"]=b);null!==\np;){if(5===p.tag||6===p.tag||4===p.tag)D(\"247\");else if(9===p.tag)e.push(p.pendingProps.value);else if(null!==p.child){p.child[\"return\"]=p;p=p.child;continue}for(;null===p.sibling;){if(null===p[\"return\"]||p[\"return\"]===b)break a;p=p[\"return\"]}p.sibling[\"return\"]=p[\"return\"];p=p.sibling}p=d.handler;d=p(d.props,e);b.child=Ye(b,null!==a?a.child:null,d,c);return b.child;case 8:return b.tag=7,null;case 9:return null;case 14:return null;case 10:return null;case 11:return null;case 4:return Q(b),q(b),null;\ncase 13:return Y(b),null;case 12:return null;case 0:D(\"167\");default:D(\"156\")}}}}\nfunction bf(a,b,c,d,e){var f=a.popHostContainer,h=a.popHostContext,g=b.popContextProvider,k=b.popTopLevelContextObject,v=c.popProvider;return{throwException:function(a,b,c){b.effectTag|=512;b.firstEffect=b.lastEffect=null;b={value:c,source:b,stack:Bc(b)};do{switch(a.tag){case 3:Oe(a);a.updateQueue.capturedValues=[b];a.effectTag|=1024;return;case 2:if(c=a.stateNode,0===(a.effectTag&64)&&null!==c&&\"function\"===typeof c.componentDidCatch&&!e(c)){Oe(a);c=a.updateQueue;var d=c.capturedValues;null===d?\nc.capturedValues=[b]:d.push(b);a.effectTag|=1024;return}}a=a[\"return\"]}while(null!==a)},unwindWork:function(a){switch(a.tag){case 2:g(a);var b=a.effectTag;return b&1024?(a.effectTag=b&-1025|64,a):null;case 3:return f(a),k(a),b=a.effectTag,b&1024?(a.effectTag=b&-1025|64,a):null;case 5:return h(a),null;case 4:return f(a),null;case 13:return v(a),null;default:return null}},unwindInterruptedWork:function(a){switch(a.tag){case 2:g(a);break;case 3:f(a);k(a);break;case 5:h(a);break;case 4:f(a);break;case 13:v(a)}}}}\nfunction cf(a,b){var c=b.source;null===b.stack&&Bc(c);null!==c&&Ac(c);b=b.value;null!==a&&2===a.tag&&Ac(a);try{b&&b.suppressReactErrorLogging||console.error(b)}catch(d){d&&d.suppressReactErrorLogging||console.error(d)}}\nfunction df(a,b,c,d,e){function f(a){var c=a.ref;if(null!==c)if(\"function\"===typeof c)try{c(null)}catch(t){b(a,t)}else c.current=null}function h(a){\"function\"===typeof Je&&Je(a);switch(a.tag){case 2:f(a);var c=a.stateNode;if(\"function\"===typeof c.componentWillUnmount)try{c.props=a.memoizedProps,c.state=a.memoizedState,c.componentWillUnmount()}catch(t){b(a,t)}break;case 5:f(a);break;case 7:g(a.stateNode);break;case 4:p&&v(a)}}function g(a){for(var b=a;;)if(h(b),null===b.child||p&&4===b.tag){if(b===\na)break;for(;null===b.sibling;){if(null===b[\"return\"]||b[\"return\"]===a)return;b=b[\"return\"]}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}else b.child[\"return\"]=b,b=b.child}function k(a){return 5===a.tag||3===a.tag||4===a.tag}function v(a){for(var b=a,c=!1,d=void 0,e=void 0;;){if(!c){c=b[\"return\"];a:for(;;){null===c?D(\"160\"):void 0;switch(c.tag){case 5:d=c.stateNode;e=!1;break a;case 3:d=c.stateNode.containerInfo;e=!0;break a;case 4:d=c.stateNode.containerInfo;e=!0;break a}c=c[\"return\"]}c=!0}if(5===\nb.tag||6===b.tag)g(b),e?S(d,b.stateNode):R(d,b.stateNode);else if(4===b.tag?d=b.stateNode.containerInfo:h(b),null!==b.child){b.child[\"return\"]=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b[\"return\"]||b[\"return\"]===a)return;b=b[\"return\"];4===b.tag&&(c=!1)}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}}var l=a.getPublicInstance,p=a.mutation;a=a.persistence;p||(a?D(\"235\"):D(\"236\"));var z=p.commitMount,B=p.commitUpdate,r=p.resetTextContent,Q=p.commitTextUpdate,n=p.appendChild,\nx=p.appendChildToContainer,Y=p.insertBefore,G=p.insertInContainerBefore,R=p.removeChild,S=p.removeChildFromContainer;return{commitBeforeMutationLifeCycles:function(a,b){switch(b.tag){case 2:if(b.effectTag&2048&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;a.props=b.memoizedProps;a.state=b.memoizedState;b=a.getSnapshotBeforeUpdate(c,d);a.__reactInternalSnapshotBeforeUpdate=b}break;case 3:case 5:case 6:case 4:break;default:D(\"163\")}},commitResetTextContent:function(a){r(a.stateNode)},\ncommitPlacement:function(a){a:{for(var b=a[\"return\"];null!==b;){if(k(b)){var c=b;break a}b=b[\"return\"]}D(\"160\");c=void 0}var d=b=void 0;switch(c.tag){case 5:b=c.stateNode;d=!1;break;case 3:b=c.stateNode.containerInfo;d=!0;break;case 4:b=c.stateNode.containerInfo;d=!0;break;default:D(\"161\")}c.effectTag&16&&(r(b),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c[\"return\"]||k(c[\"return\"])){c=null;break a}c=c[\"return\"]}c.sibling[\"return\"]=c[\"return\"];for(c=c.sibling;5!==c.tag&&6!==\nc.tag;){if(c.effectTag&2)continue b;if(null===c.child||4===c.tag)continue b;else c.child[\"return\"]=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(5===e.tag||6===e.tag)c?d?G(b,e.stateNode,c):Y(b,e.stateNode,c):d?x(b,e.stateNode):n(b,e.stateNode);else if(4!==e.tag&&null!==e.child){e.child[\"return\"]=e;e=e.child;continue}if(e===a)break;for(;null===e.sibling;){if(null===e[\"return\"]||e[\"return\"]===a)return;e=e[\"return\"]}e.sibling[\"return\"]=e[\"return\"];e=e.sibling}},commitDeletion:function(a){v(a);\na[\"return\"]=null;a.child=null;a.alternate&&(a.alternate.child=null,a.alternate[\"return\"]=null)},commitWork:function(a,b){switch(b.tag){case 2:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps;a=null!==a?a.memoizedProps:d;var e=b.type,f=b.updateQueue;b.updateQueue=null;null!==f&&B(c,f,e,a,d,b)}break;case 6:null===b.stateNode?D(\"162\"):void 0;c=b.memoizedProps;Q(b.stateNode,null!==a?a.memoizedProps:c,c);break;case 3:break;default:D(\"163\")}},commitLifeCycles:function(a,b,c){switch(c.tag){case 2:a=\nc.stateNode;if(c.effectTag&4)if(null===b)a.props=c.memoizedProps,a.state=c.memoizedState,a.componentDidMount();else{var d=b.memoizedProps;b=b.memoizedState;a.props=c.memoizedProps;a.state=c.memoizedState;a.componentDidUpdate(d,b,a.__reactInternalSnapshotBeforeUpdate)}c=c.updateQueue;null!==c&&Se(c,a);break;case 3:b=c.updateQueue;if(null!==b){a=null;if(null!==c.child)switch(c.child.tag){case 5:a=l(c.child.stateNode);break;case 2:a=c.child.stateNode}Se(b,a)}break;case 5:a=c.stateNode;null===b&&c.effectTag&\n4&&z(a,c.type,c.memoizedProps,c);break;case 6:break;case 4:break;default:D(\"163\")}},commitErrorLogging:function(a,b){switch(a.tag){case 2:var c=a.type;b=a.stateNode;var d=a.updateQueue;null===d||null===d.capturedValues?D(\"264\"):void 0;var f=d.capturedValues;d.capturedValues=null;\"function\"!==typeof c.getDerivedStateFromCatch&&e(b);b.props=a.memoizedProps;b.state=a.memoizedState;for(c=0;c<f.length;c++){d=f[c];var l=d.value,g=d.stack;cf(a,d);b.componentDidCatch(l,{componentStack:null!==g?g:\"\"})}break;\ncase 3:c=a.updateQueue;null===c||null===c.capturedValues?D(\"264\"):void 0;f=c.capturedValues;c.capturedValues=null;for(c=0;c<f.length;c++)d=f[c],cf(a,d),b(d.value);break;default:D(\"265\")}},commitAttachRef:function(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=l(c);break;default:a=c}\"function\"===typeof b?b(a):b.current=a}},commitDetachRef:function(a){a=a.ref;null!==a&&(\"function\"===typeof a?a(null):a.current=null)}}}var ef={};\nfunction ff(a,b){function c(a){a===ef?D(\"174\"):void 0;return a}var d=a.getChildHostContext,e=a.getRootHostContext;a=b.createCursor;var f=b.push,h=b.pop,g=a(ef),k=a(ef),v=a(ef);return{getHostContext:function(){return c(g.current)},getRootHostContainer:function(){return c(v.current)},popHostContainer:function(a){h(g,a);h(k,a);h(v,a)},popHostContext:function(a){k.current===a&&(h(g,a),h(k,a))},pushHostContainer:function(a,b){f(v,b,a);f(k,a,a);f(g,ef,a);b=e(b);h(g,a);f(g,b,a)},pushHostContext:function(a){var b=\nc(v.current),e=c(g.current);b=d(e,a.type,b);e!==b&&(f(k,a,a),f(g,b,a))}}}\nfunction gf(a){function b(a,b){var c=new xe(5,null,null,0);c.type=\"DELETED\";c.stateNode=b;c[\"return\"]=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function c(a,b){switch(a.tag){case 5:return b=f(b,a.type,a.pendingProps),null!==b?(a.stateNode=b,!0):!1;case 6:return b=h(b,a.pendingProps),null!==b?(a.stateNode=b,!0):!1;default:return!1}}function d(a){for(a=a[\"return\"];null!==a&&5!==a.tag&&3!==a.tag;)a=a[\"return\"];p=a}var e=a.shouldSetTextContent;\na=a.hydration;if(!a)return{enterHydrationState:function(){return!1},resetHydrationState:function(){},tryToClaimNextHydratableInstance:function(){},prepareToHydrateHostInstance:function(){D(\"175\")},prepareToHydrateHostTextInstance:function(){D(\"176\")},popHydrationState:function(){return!1}};var f=a.canHydrateInstance,h=a.canHydrateTextInstance,g=a.getNextHydratableSibling,k=a.getFirstHydratableChild,v=a.hydrateInstance,l=a.hydrateTextInstance,p=null,z=null,B=!1;return{enterHydrationState:function(a){z=\nk(a.stateNode.containerInfo);p=a;return B=!0},resetHydrationState:function(){z=p=null;B=!1},tryToClaimNextHydratableInstance:function(a){if(B){var d=z;if(d){if(!c(a,d)){d=g(d);if(!d||!c(a,d)){a.effectTag|=2;B=!1;p=a;return}b(p,z)}p=a;z=k(d)}else a.effectTag|=2,B=!1,p=a}},prepareToHydrateHostInstance:function(a,b,c){b=v(a.stateNode,a.type,a.memoizedProps,b,c,a);a.updateQueue=b;return null!==b?!0:!1},prepareToHydrateHostTextInstance:function(a){return l(a.stateNode,a.memoizedProps,a)},popHydrationState:function(a){if(a!==\np)return!1;if(!B)return d(a),B=!0,!1;var c=a.type;if(5!==a.tag||\"head\"!==c&&\"body\"!==c&&!e(c,a.memoizedProps))for(c=z;c;)b(a,c),c=g(c);d(a);z=p?g(a.stateNode):null;return!0}}}\nfunction hf(a){function b(a,b,c){a=a.stateNode;a.__reactInternalMemoizedUnmaskedChildContext=b;a.__reactInternalMemoizedMaskedChildContext=c}function c(a){return 2===a.tag&&null!=a.type.childContextTypes}function d(a,b){var c=a.stateNode,d=a.type.childContextTypes;if(\"function\"!==typeof c.getChildContext)return b;c=c.getChildContext();for(var e in c)e in d?void 0:D(\"108\",Ac(a)||\"Unknown\",e);return A({},b,c)}var e=a.createCursor,f=a.push,h=a.pop,g=e(ka),k=e(!1),v=ka;return{getUnmaskedContext:function(a){return c(a)?\nv:g.current},cacheContext:b,getMaskedContext:function(a,c){var d=a.type.contextTypes;if(!d)return ka;var e=a.stateNode;if(e&&e.__reactInternalMemoizedUnmaskedChildContext===c)return e.__reactInternalMemoizedMaskedChildContext;var f={},g;for(g in d)f[g]=c[g];e&&b(a,c,f);return f},hasContextChanged:function(){return k.current},isContextConsumer:function(a){return 2===a.tag&&null!=a.type.contextTypes},isContextProvider:c,popContextProvider:function(a){c(a)&&(h(k,a),h(g,a))},popTopLevelContextObject:function(a){h(k,\na);h(g,a)},pushTopLevelContextObject:function(a,b,c){null!=g.cursor?D(\"168\"):void 0;f(g,b,a);f(k,c,a)},processChildContext:d,pushContextProvider:function(a){if(!c(a))return!1;var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||ka;v=g.current;f(g,b,a);f(k,k.current,a);return!0},invalidateContextProvider:function(a,b){var c=a.stateNode;c?void 0:D(\"169\");if(b){var e=d(a,v);c.__reactInternalMemoizedMergedChildContext=e;h(k,a);h(g,a);f(g,e,a)}else h(k,a);f(k,b,a)},findCurrentUnmaskedContext:function(a){for(2!==\nxd(a)||2!==a.tag?D(\"170\"):void 0;3!==a.tag;){if(c(a))return a.stateNode.__reactInternalMemoizedMergedChildContext;(a=a[\"return\"])?void 0:D(\"171\")}return a.stateNode.context}}}\nfunction jf(a){var b=a.createCursor,c=a.push,d=a.pop,e=b(null),f=b(null),h=b(0);return{pushProvider:function(a){var b=a.type._context;c(h,b._changedBits,a);c(f,b._currentValue,a);c(e,a,a);b._currentValue=a.pendingProps.value;b._changedBits=a.stateNode},popProvider:function(a){var b=h.current,c=f.current;d(e,a);d(f,a);d(h,a);a=a.type._context;a._currentValue=c;a._changedBits=b}}}\nfunction kf(){var a=[],b=-1;return{createCursor:function(a){return{current:a}},isEmpty:function(){return-1===b},pop:function(c){0>b||(c.current=a[b],a[b]=null,b--)},push:function(c,d){b++;a[b]=c.current;c.current=d},checkThatStackIsEmpty:function(){},resetStackAfterFatalErrorInDev:function(){}}}\nfunction lf(a){function b(){if(null!==I)for(var a=I[\"return\"];null!==a;)Lc(a),a=a[\"return\"];Ya=null;Z=0;I=null;Nc=!1}function c(a){return null!==ya&&ya.has(a)}function d(a){for(;;){var b=a.alternate,c=a[\"return\"],d=a.sibling;if(0===(a.effectTag&512)){b=Cb(b,a,Z);var e=a;if(1073741823===Z||1073741823!==e.expirationTime){b:switch(e.tag){case 3:case 2:var f=e.updateQueue;f=null===f?0:f.expirationTime;break b;default:f=0}for(var g=e.child;null!==g;)0!==g.expirationTime&&(0===f||f>g.expirationTime)&&(f=\ng.expirationTime),g=g.sibling;e.expirationTime=f}if(null!==b)return b;null!==c&&0===(c.effectTag&512)&&(null===c.firstEffect&&(c.firstEffect=a.firstEffect),null!==a.lastEffect&&(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a));if(null!==d)return d;if(null!==c)a=c;else{Nc=!0;break}}else{a=Kc(a);if(null!==a)return a.effectTag&=2559,a;null!==c&&(c.firstEffect=c.lastEffect=\nnull,c.effectTag|=512);if(null!==d)return d;if(null!==c)a=c;else break}}return null}function e(a){var b=Wa(a.alternate,a,Z);null===b&&(b=d(a));nc.current=null;return b}function f(a,c,f){ca?D(\"243\"):void 0;ca=!0;if(c!==Z||a!==Ya||null===I)b(),Ya=a,Z=c,I=ze(Ya.current,null,Z),a.pendingCommitExpirationTime=0;var g=!1;do{try{if(f)for(;null!==I&&!S();)I=e(I);else for(;null!==I;)I=e(I)}catch(Oc){if(null===I){g=!0;q(Oc);break}f=I;var h=f[\"return\"];if(null===h){g=!0;q(Oc);break}Jc(h,f,Oc);I=d(f)}break}while(1);\nca=!1;if(g||null!==I)return null;if(Nc)return a.pendingCommitExpirationTime=c,a.current.alternate;D(\"262\")}function h(a,b,c,d){a={value:c,source:a,stack:Bc(a)};Pe(b,{expirationTime:d,partialState:null,callback:null,isReplace:!1,isForced:!1,capturedValue:a,next:null});v(b,d)}function g(a,b){a:{ca&&!Za?D(\"263\"):void 0;for(var d=a[\"return\"];null!==d;){switch(d.tag){case 2:var e=d.stateNode;if(\"function\"===typeof d.type.getDerivedStateFromCatch||\"function\"===typeof e.componentDidCatch&&!c(e)){h(a,d,b,\n1);a=void 0;break a}break;case 3:h(a,d,b,1);a=void 0;break a}d=d[\"return\"]}3===a.tag&&h(a,a,b,1);a=void 0}return a}function k(a){a=0!==ia?ia:ca?Za?1:Z:a.mode&1?za?10*(((l()+15)/10|0)+1):25*(((l()+500)/25|0)+1):1;za&&(0===da||a>da)&&(da=a);return a}function v(a,c){a:{for(;null!==a;){if(0===a.expirationTime||a.expirationTime>c)a.expirationTime=c;null!==a.alternate&&(0===a.alternate.expirationTime||a.alternate.expirationTime>c)&&(a.alternate.expirationTime=c);if(null===a[\"return\"])if(3===a.tag){var d=\na.stateNode;!ca&&0!==Z&&c<Z&&b();ca&&!Za&&Ya===d||B(d,c);Fb>xg&&D(\"185\")}else{c=void 0;break a}a=a[\"return\"]}c=void 0}return c}function l(){ye=Ic()-Pc;return yg=(ye/10|0)+2}function p(a,b,c,d,e){var f=ia;ia=1;try{return a(b,c,d,e)}finally{ia=f}}function z(a){if(0!==Gb){if(a>Gb)return;mg(Qc)}var b=Ic()-Pc;Gb=a;Qc=lg(Q,{timeout:10*(a-2)-b})}function B(a,b){if(null===a.nextScheduledRoot)a.remainingExpirationTime=b,null===K?(la=K=a,a.nextScheduledRoot=a):(K=K.nextScheduledRoot=a,K.nextScheduledRoot=la);\nelse{var c=a.remainingExpirationTime;if(0===c||b<c)a.remainingExpirationTime=b}T||(J?Hb&&(aa=a,P=1,G(a,1,!1)):1===b?n():z(b))}function r(){var a=0,b=null;if(null!==K)for(var c=K,d=la;null!==d;){var e=d.remainingExpirationTime;if(0===e){null===c||null===K?D(\"244\"):void 0;if(d===d.nextScheduledRoot){la=K=d.nextScheduledRoot=null;break}else if(d===la)la=e=d.nextScheduledRoot,K.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===K){K=c;K.nextScheduledRoot=la;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=\nd.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{if(0===a||e<a)a=e,b=d;if(d===K)break;c=d;d=d.nextScheduledRoot}}c=aa;null!==c&&c===b&&1===a?Fb++:Fb=0;aa=b;P=a}function Q(a){x(0,!0,a)}function n(){x(1,!1,null)}function x(a,b,c){$a=c;r();if(b)for(;null!==aa&&0!==P&&(0===a||a>=P)&&(!Ib||l()>=P);)G(aa,P,!Ib),r();else for(;null!==aa&&0!==P&&(0===a||a>=P);)G(aa,P,!1),r();null!==$a&&(Gb=0,Qc=-1);0!==P&&z(P);$a=null;Ib=!1;Y()}function Y(){Fb=0;if(null!==Aa){var a=Aa;Aa=null;for(var b=\n0;b<a.length;b++){var c=a[b];try{c._onComplete()}catch(wg){Ba||(Ba=!0,Jb=wg)}}}if(Ba)throw a=Jb,Jb=null,Ba=!1,a;}function G(a,b,c){T?D(\"245\"):void 0;T=!0;c?(c=a.finishedWork,null!==c?R(a,c,b):(a.finishedWork=null,c=f(a,b,!0),null!==c&&(S()?a.finishedWork=c:R(a,c,b)))):(c=a.finishedWork,null!==c?R(a,c,b):(a.finishedWork=null,c=f(a,b,!1),null!==c&&R(a,c,b)));T=!1}function R(a,b,c){var d=a.firstBatch;if(null!==d&&d._expirationTime<=c&&(null===Aa?Aa=[d]:Aa.push(d),d._defer)){a.finishedWork=b;a.remainingExpirationTime=\n0;return}a.finishedWork=null;Za=ca=!0;c=b.stateNode;c.current===b?D(\"177\"):void 0;d=c.pendingCommitExpirationTime;0===d?D(\"261\"):void 0;c.pendingCommitExpirationTime=0;var e=l();nc.current=null;if(1<b.effectTag)if(null!==b.lastEffect){b.lastEffect.nextEffect=b;var f=b.firstEffect}else f=b;else f=b.firstEffect;zg(c.containerInfo);for(w=f;null!==w;){var h=!1,k=void 0;try{for(;null!==w;)w.effectTag&2048&&Db(w.alternate,w),w=w.nextEffect}catch(ab){h=!0,k=ab}h&&(null===w?D(\"178\"):void 0,g(w,k),null!==\nw&&(w=w.nextEffect))}for(w=f;null!==w;){h=!1;k=void 0;try{for(;null!==w;){var p=w.effectTag;p&16&&Mc(w);if(p&128){var n=w.alternate;null!==n&&kg(n)}switch(p&14){case 2:Eb(w);w.effectTag&=-3;break;case 6:Eb(w);w.effectTag&=-3;we(w.alternate,w);break;case 4:we(w.alternate,w);break;case 8:gg(w)}w=w.nextEffect}}catch(ab){h=!0,k=ab}h&&(null===w?D(\"178\"):void 0,g(w,k),null!==w&&(w=w.nextEffect))}Ag(c.containerInfo);c.current=b;for(w=f;null!==w;){p=!1;n=void 0;try{for(f=c,h=e,k=d;null!==w;){var r=w.effectTag;\nr&36&&hg(f,w.alternate,w,h,k);r&256&&ig(w,q);r&128&&jg(w);var t=w.nextEffect;w.nextEffect=null;w=t}}catch(ab){p=!0,n=ab}p&&(null===w?D(\"178\"):void 0,g(w,n),null!==w&&(w=w.nextEffect))}ca=Za=!1;\"function\"===typeof Ie&&Ie(b.stateNode);b=c.current.expirationTime;0===b&&(ya=null);a.remainingExpirationTime=b}function S(){return null===$a||$a.timeRemaining()>Bg?!1:Ib=!0}function q(a){null===aa?D(\"246\"):void 0;aa.remainingExpirationTime=0;Ba||(Ba=!0,Jb=a)}var u=kf(),t=ff(a,u),y=hf(u);u=jf(u);var H=gf(a),\nWa=$e(a,t,y,u,H,v,k).beginWork,Cb=af(a,t,y,u,H).completeWork;t=bf(t,y,u,v,c);var Jc=t.throwException,Kc=t.unwindWork,Lc=t.unwindInterruptedWork;t=df(a,g,v,k,function(a){null===ya?ya=new Set([a]):ya.add(a)},l);var Db=t.commitBeforeMutationLifeCycles,Mc=t.commitResetTextContent,Eb=t.commitPlacement,gg=t.commitDeletion,we=t.commitWork,hg=t.commitLifeCycles,ig=t.commitErrorLogging,jg=t.commitAttachRef,kg=t.commitDetachRef,Ic=a.now,lg=a.scheduleDeferredCallback,mg=a.cancelDeferredCallback,zg=a.prepareForCommit,\nAg=a.resetAfterCommit,Pc=Ic(),yg=2,ye=Pc,Rc=0,ia=0,ca=!1,I=null,Ya=null,Z=0,w=null,Za=!1,Nc=!1,ya=null,la=null,K=null,Gb=0,Qc=-1,T=!1,aa=null,P=0,da=0,Ib=!1,Ba=!1,Jb=null,$a=null,J=!1,Hb=!1,za=!1,Aa=null,xg=1E3,Fb=0,Bg=1;return{recalculateCurrentTime:l,computeExpirationForFiber:k,scheduleWork:v,requestWork:B,flushRoot:function(a,b){T?D(\"253\"):void 0;aa=a;P=b;G(a,b,!1);n();Y()},batchedUpdates:function(a,b){var c=J;J=!0;try{return a(b)}finally{(J=c)||T||n()}},unbatchedUpdates:function(a,b){if(J&&!Hb){Hb=\n!0;try{return a(b)}finally{Hb=!1}}return a(b)},flushSync:function(a,b){T?D(\"187\"):void 0;var c=J;J=!0;try{return p(a,b)}finally{J=c,n()}},flushControlled:function(a){var b=J;J=!0;try{p(a)}finally{(J=b)||T||x(1,!1,null)}},deferredUpdates:function(a){var b=ia;ia=25*(((l()+500)/25|0)+1);try{return a()}finally{ia=b}},syncUpdates:p,interactiveUpdates:function(a,b,c){if(za)return a(b,c);J||T||0===da||(x(da,!1,null),da=0);var d=za,e=J;J=za=!0;try{return a(b,c)}finally{za=d,(J=e)||T||n()}},flushInteractiveUpdates:function(){T||\n0===da||(x(da,!1,null),da=0)},computeUniqueAsyncExpiration:function(){var a=25*(((l()+500)/25|0)+1);a<=Rc&&(a=Rc+1);return Rc=a},legacyContext:y}}\nfunction mf(a){function b(a,b,c,d,e,h){d=b.current;if(c){c=c._reactInternalFiber;var l=g(c);c=k(c)?v(c,l):l}else c=ka;null===b.context?b.context=c:b.pendingContext=c;b=h;Pe(d,{expirationTime:e,partialState:{element:a},callback:void 0===b?null:b,isReplace:!1,isForced:!1,capturedValue:null,next:null});f(d,e);return e}var c=a.getPublicInstance;a=lf(a);var d=a.recalculateCurrentTime,e=a.computeExpirationForFiber,f=a.scheduleWork,h=a.legacyContext,g=h.findCurrentUnmaskedContext,k=h.isContextProvider,v=\nh.processChildContext;return{createContainer:function(a,b,c){b=new xe(3,null,null,b?3:0);a={current:b,containerInfo:a,pendingChildren:null,pendingCommitExpirationTime:0,finishedWork:null,context:null,pendingContext:null,hydrate:c,remainingExpirationTime:0,firstBatch:null,nextScheduledRoot:null};return b.stateNode=a},updateContainer:function(a,c,f,h){var g=c.current,k=d();g=e(g);return b(a,c,f,k,g,h)},updateContainerAtExpirationTime:function(a,c,e,f,g){var h=d();return b(a,c,e,h,f,g)},flushRoot:a.flushRoot,\nrequestWork:a.requestWork,computeUniqueAsyncExpiration:a.computeUniqueAsyncExpiration,batchedUpdates:a.batchedUpdates,unbatchedUpdates:a.unbatchedUpdates,deferredUpdates:a.deferredUpdates,syncUpdates:a.syncUpdates,interactiveUpdates:a.interactiveUpdates,flushInteractiveUpdates:a.flushInteractiveUpdates,flushControlled:a.flushControlled,flushSync:a.flushSync,getPublicRootInstance:function(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return c(a.child.stateNode);default:return a.child.stateNode}},\nfindHostInstance:function(a){var b=a._reactInternalFiber;void 0===b&&(\"function\"===typeof a.render?D(\"188\"):D(\"268\",Object.keys(a)));a=Bd(b);return null===a?null:a.stateNode},findHostInstanceWithNoPortals:function(a){a=Cd(a);return null===a?null:a.stateNode},injectIntoDevTools:function(a){var b=a.findFiberByHostInstance;return He(A({},a,{findHostInstanceByFiber:function(a){a=Bd(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null}}))}}}\nvar nf=Object.freeze({default:mf}),of=nf&&mf||nf,pf=of[\"default\"]?of[\"default\"]:of;function qf(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:rc,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}var rf=\"object\"===typeof performance&&\"function\"===typeof performance.now,sf=void 0;sf=rf?function(){return performance.now()}:function(){return Date.now()};var tf=void 0,uf=void 0;\nif(m.canUseDOM)if(\"function\"!==typeof requestIdleCallback||\"function\"!==typeof cancelIdleCallback){var vf=null,wf=!1,xf=-1,yf=!1,zf=0,Af=33,Bf=33,Cf=void 0;Cf=rf?{didTimeout:!1,timeRemaining:function(){var a=zf-performance.now();return 0<a?a:0}}:{didTimeout:!1,timeRemaining:function(){var a=zf-Date.now();return 0<a?a:0}};var Df=\"__reactIdleCallback$\"+Math.random().toString(36).slice(2);window.addEventListener(\"message\",function(a){if(a.source===window&&a.data===Df){wf=!1;a=sf();if(0>=zf-a)if(-1!==\nxf&&xf<=a)Cf.didTimeout=!0;else{yf||(yf=!0,requestAnimationFrame(Ef));return}else Cf.didTimeout=!1;xf=-1;a=vf;vf=null;null!==a&&a(Cf)}},!1);var Ef=function(a){yf=!1;var b=a-zf+Bf;b<Bf&&Af<Bf?(8>b&&(b=8),Bf=b<Af?Af:b):Af=b;zf=a+Bf;wf||(wf=!0,window.postMessage(Df,\"*\"))};tf=function(a,b){vf=a;null!=b&&\"number\"===typeof b.timeout&&(xf=sf()+b.timeout);yf||(yf=!0,requestAnimationFrame(Ef));return 0};uf=function(){vf=null;wf=!1;xf=-1}}else tf=window.requestIdleCallback,uf=window.cancelIdleCallback;else tf=\nfunction(a){return setTimeout(function(){a({timeRemaining:function(){return Infinity},didTimeout:!1})})},uf=function(a){clearTimeout(a)};function Ff(a){var b=\"\";ea.Children.forEach(a,function(a){null==a||\"string\"!==typeof a&&\"number\"!==typeof a||(b+=a)});return b}function Gf(a,b){a=A({children:void 0},b);if(b=Ff(b.children))a.children=b;return a}\nfunction Hf(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+c;b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction If(a,b){var c=b.value;a._wrapperState={initialValue:null!=c?c:b.defaultValue,wasMultiple:!!b.multiple}}function Jf(a,b){null!=b.dangerouslySetInnerHTML?D(\"91\"):void 0;return A({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function Kf(a,b){var c=b.value;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?D(\"92\"):void 0,Array.isArray(b)&&(1>=b.length?void 0:D(\"93\"),b=b[0]),c=\"\"+b),null==c&&(c=\"\"));a._wrapperState={initialValue:\"\"+c}}\nfunction Lf(a,b){var c=b.value;null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&(a.defaultValue=c));null!=b.defaultValue&&(a.defaultValue=b.defaultValue)}function Mf(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var Nf={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction Of(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function Pf(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?Of(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar Qf=void 0,Rf=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==Nf.svg||\"innerHTML\"in a)a.innerHTML=b;else{Qf=Qf||document.createElement(\"div\");Qf.innerHTML=\"\\x3csvg\\x3e\"+b+\"\\x3c/svg\\x3e\";for(b=Qf.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction Sf(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar Tf={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,\nstopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Uf=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(Tf).forEach(function(a){Uf.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);Tf[b]=Tf[a]})});\nfunction Vf(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\");var e=c;var f=b[c];e=null==f||\"boolean\"===typeof f||\"\"===f?\"\":d||\"number\"!==typeof f||0===f||Tf.hasOwnProperty(e)&&Tf[e]?(\"\"+f).trim():f+\"px\";\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var Wf=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction Xf(a,b,c){b&&(Wf[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?D(\"137\",a,c()):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?D(\"60\"):void 0,\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML?void 0:D(\"61\")),null!=b.style&&\"object\"!==typeof b.style?D(\"62\",c()):void 0)}\nfunction Yf(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var Zf=C.thatReturns(\"\");\nfunction $f(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=ke(a);b=va[b];for(var d=0;d<b.length;d++){var e=b[d];c.hasOwnProperty(e)&&c[e]||(\"topScroll\"===e?Zd(\"topScroll\",\"scroll\",a):\"topFocus\"===e||\"topBlur\"===e?(Zd(\"topFocus\",\"focus\",a),Zd(\"topBlur\",\"blur\",a),c.topBlur=!0,c.topFocus=!0):\"topCancel\"===e?(ic(\"cancel\",!0)&&Zd(\"topCancel\",\"cancel\",a),c.topCancel=!0):\"topClose\"===e?(ic(\"close\",!0)&&Zd(\"topClose\",\"close\",a),c.topClose=!0):fe.hasOwnProperty(e)&&W(e,fe[e],a),c[e]=!0)}}\nfunction ag(a,b,c,d){c=9===c.nodeType?c:c.ownerDocument;d===Nf.html&&(d=Of(a));d===Nf.html?\"script\"===a?(a=c.createElement(\"div\"),a.innerHTML=\"\\x3cscript\\x3e\\x3c/script\\x3e\",a=a.removeChild(a.firstChild)):a=\"string\"===typeof b.is?c.createElement(a,{is:b.is}):c.createElement(a):a=c.createElementNS(d,a);return a}function bg(a,b){return(9===b.nodeType?b:b.ownerDocument).createTextNode(a)}\nfunction cg(a,b,c,d){var e=Yf(b,c);switch(b){case \"iframe\":case \"object\":W(\"topLoad\",\"load\",a);var f=c;break;case \"video\":case \"audio\":for(f in ge)ge.hasOwnProperty(f)&&W(f,ge[f],a);f=c;break;case \"source\":W(\"topError\",\"error\",a);f=c;break;case \"img\":case \"image\":case \"link\":W(\"topError\",\"error\",a);W(\"topLoad\",\"load\",a);f=c;break;case \"form\":W(\"topReset\",\"reset\",a);W(\"topSubmit\",\"submit\",a);f=c;break;case \"details\":W(\"topToggle\",\"toggle\",a);f=c;break;case \"input\":Wc(a,c);f=Vc(a,c);W(\"topInvalid\",\n\"invalid\",a);$f(d,\"onChange\");break;case \"option\":f=Gf(a,c);break;case \"select\":If(a,c);f=A({},c,{value:void 0});W(\"topInvalid\",\"invalid\",a);$f(d,\"onChange\");break;case \"textarea\":Kf(a,c);f=Jf(a,c);W(\"topInvalid\",\"invalid\",a);$f(d,\"onChange\");break;default:f=c}Xf(b,f,Zf);var h=f,g;for(g in h)if(h.hasOwnProperty(g)){var k=h[g];\"style\"===g?Vf(a,k,Zf):\"dangerouslySetInnerHTML\"===g?(k=k?k.__html:void 0,null!=k&&Rf(a,k)):\"children\"===g?\"string\"===typeof k?(\"textarea\"!==b||\"\"!==k)&&Sf(a,k):\"number\"===typeof k&&\nSf(a,\"\"+k):\"suppressContentEditableWarning\"!==g&&\"suppressHydrationWarning\"!==g&&\"autoFocus\"!==g&&(ua.hasOwnProperty(g)?null!=k&&$f(d,g):null!=k&&Uc(a,g,k,e))}switch(b){case \"input\":lc(a);ad(a,c);break;case \"textarea\":lc(a);Mf(a,c);break;case \"option\":null!=c.value&&a.setAttribute(\"value\",c.value);break;case \"select\":a.multiple=!!c.multiple;b=c.value;null!=b?Hf(a,!!c.multiple,b,!1):null!=c.defaultValue&&Hf(a,!!c.multiple,c.defaultValue,!0);break;default:\"function\"===typeof f.onClick&&(a.onclick=C)}}\nfunction dg(a,b,c,d,e){var f=null;switch(b){case \"input\":c=Vc(a,c);d=Vc(a,d);f=[];break;case \"option\":c=Gf(a,c);d=Gf(a,d);f=[];break;case \"select\":c=A({},c,{value:void 0});d=A({},d,{value:void 0});f=[];break;case \"textarea\":c=Jf(a,c);d=Jf(a,d);f=[];break;default:\"function\"!==typeof c.onClick&&\"function\"===typeof d.onClick&&(a.onclick=C)}Xf(b,d,Zf);b=a=void 0;var h=null;for(a in c)if(!d.hasOwnProperty(a)&&c.hasOwnProperty(a)&&null!=c[a])if(\"style\"===a){var g=c[a];for(b in g)g.hasOwnProperty(b)&&(h||\n(h={}),h[b]=\"\")}else\"dangerouslySetInnerHTML\"!==a&&\"children\"!==a&&\"suppressContentEditableWarning\"!==a&&\"suppressHydrationWarning\"!==a&&\"autoFocus\"!==a&&(ua.hasOwnProperty(a)?f||(f=[]):(f=f||[]).push(a,null));for(a in d){var k=d[a];g=null!=c?c[a]:void 0;if(d.hasOwnProperty(a)&&k!==g&&(null!=k||null!=g))if(\"style\"===a)if(g){for(b in g)!g.hasOwnProperty(b)||k&&k.hasOwnProperty(b)||(h||(h={}),h[b]=\"\");for(b in k)k.hasOwnProperty(b)&&g[b]!==k[b]&&(h||(h={}),h[b]=k[b])}else h||(f||(f=[]),f.push(a,h)),\nh=k;else\"dangerouslySetInnerHTML\"===a?(k=k?k.__html:void 0,g=g?g.__html:void 0,null!=k&&g!==k&&(f=f||[]).push(a,\"\"+k)):\"children\"===a?g===k||\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(a,\"\"+k):\"suppressContentEditableWarning\"!==a&&\"suppressHydrationWarning\"!==a&&(ua.hasOwnProperty(a)?(null!=k&&$f(e,a),f||g===k||(f=[])):(f=f||[]).push(a,k))}h&&(f=f||[]).push(\"style\",h);return f}\nfunction eg(a,b,c,d,e){\"input\"===c&&\"radio\"===e.type&&null!=e.name&&Yc(a,e);Yf(c,d);d=Yf(c,e);for(var f=0;f<b.length;f+=2){var h=b[f],g=b[f+1];\"style\"===h?Vf(a,g,Zf):\"dangerouslySetInnerHTML\"===h?Rf(a,g):\"children\"===h?Sf(a,g):Uc(a,h,g,d)}switch(c){case \"input\":Zc(a,e);break;case \"textarea\":Lf(a,e);break;case \"select\":a._wrapperState.initialValue=void 0,b=a._wrapperState.wasMultiple,a._wrapperState.wasMultiple=!!e.multiple,c=e.value,null!=c?Hf(a,!!e.multiple,c,!1):b!==!!e.multiple&&(null!=e.defaultValue?\nHf(a,!!e.multiple,e.defaultValue,!0):Hf(a,!!e.multiple,e.multiple?[]:\"\",!1))}}\nfunction fg(a,b,c,d,e){switch(b){case \"iframe\":case \"object\":W(\"topLoad\",\"load\",a);break;case \"video\":case \"audio\":for(var f in ge)ge.hasOwnProperty(f)&&W(f,ge[f],a);break;case \"source\":W(\"topError\",\"error\",a);break;case \"img\":case \"image\":case \"link\":W(\"topError\",\"error\",a);W(\"topLoad\",\"load\",a);break;case \"form\":W(\"topReset\",\"reset\",a);W(\"topSubmit\",\"submit\",a);break;case \"details\":W(\"topToggle\",\"toggle\",a);break;case \"input\":Wc(a,c);W(\"topInvalid\",\"invalid\",a);$f(e,\"onChange\");break;case \"select\":If(a,\nc);W(\"topInvalid\",\"invalid\",a);$f(e,\"onChange\");break;case \"textarea\":Kf(a,c),W(\"topInvalid\",\"invalid\",a),$f(e,\"onChange\")}Xf(b,c,Zf);d=null;for(var h in c)c.hasOwnProperty(h)&&(f=c[h],\"children\"===h?\"string\"===typeof f?a.textContent!==f&&(d=[\"children\",f]):\"number\"===typeof f&&a.textContent!==\"\"+f&&(d=[\"children\",\"\"+f]):ua.hasOwnProperty(h)&&null!=f&&$f(e,h));switch(b){case \"input\":lc(a);ad(a,c);break;case \"textarea\":lc(a);Mf(a,c);break;case \"select\":case \"option\":break;default:\"function\"===typeof c.onClick&&\n(a.onclick=C)}return d}function ng(a,b){return a.nodeValue!==b}\nvar og=Object.freeze({createElement:ag,createTextNode:bg,setInitialProperties:cg,diffProperties:dg,updateProperties:eg,diffHydratedProperties:fg,diffHydratedText:ng,warnForUnmatchedText:function(){},warnForDeletedHydratableElement:function(){},warnForDeletedHydratableText:function(){},warnForInsertedHydratedElement:function(){},warnForInsertedHydratedText:function(){},restoreControlledState:function(a,b,c){switch(b){case \"input\":Zc(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=\nc.parentNode;c=c.querySelectorAll(\"input[name\\x3d\"+JSON.stringify(\"\"+b)+'][type\\x3d\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Xa(d);e?void 0:D(\"90\");mc(d);Zc(d,e)}}}break;case \"textarea\":Lf(a,c);break;case \"select\":b=c.value,null!=b&&Hf(a,!!c.multiple,b,!1)}}});Tb.injectFiberControlledHostComponent(og);var pg=null,qg=null;\nfunction rg(a){this._expirationTime=X.computeUniqueAsyncExpiration();this._root=a;this._callbacks=this._next=null;this._hasChildren=this._didComplete=!1;this._children=null;this._defer=!0}rg.prototype.render=function(a){this._defer?void 0:D(\"250\");this._hasChildren=!0;this._children=a;var b=this._root._internalRoot,c=this._expirationTime,d=new sg;X.updateContainerAtExpirationTime(a,b,null,c,d._onCommit);return d};\nrg.prototype.then=function(a){if(this._didComplete)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\nrg.prototype.commit=function(){var a=this._root._internalRoot,b=a.firstBatch;this._defer&&null!==b?void 0:D(\"251\");if(this._hasChildren){var c=this._expirationTime;if(b!==this){this._hasChildren&&(c=this._expirationTime=b._expirationTime,this.render(this._children));for(var d=null,e=b;e!==this;)d=e,e=e._next;null===d?D(\"251\"):void 0;d._next=e._next;this._next=b;a.firstBatch=this}this._defer=!1;X.flushRoot(a,c);b=this._next;this._next=null;b=a.firstBatch=b;null!==b&&b._hasChildren&&b.render(b._children)}else this._next=\nnull,this._defer=!1};rg.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++)(0,a[b])()}};function sg(){this._callbacks=null;this._didCommit=!1;this._onCommit=this._onCommit.bind(this)}sg.prototype.then=function(a){if(this._didCommit)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\nsg.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++){var c=a[b];\"function\"!==typeof c?D(\"191\",c):void 0;c()}}};function tg(a,b,c){this._internalRoot=X.createContainer(a,b,c)}tg.prototype.render=function(a,b){var c=this._internalRoot,d=new sg;b=void 0===b?null:b;null!==b&&d.then(b);X.updateContainer(a,c,null,d._onCommit);return d};\ntg.prototype.unmount=function(a){var b=this._internalRoot,c=new sg;a=void 0===a?null:a;null!==a&&c.then(a);X.updateContainer(null,b,null,c._onCommit);return c};tg.prototype.legacy_renderSubtreeIntoContainer=function(a,b,c){var d=this._internalRoot,e=new sg;c=void 0===c?null:c;null!==c&&e.then(c);X.updateContainer(b,d,a,e._onCommit);return e};\ntg.prototype.createBatch=function(){var a=new rg(this),b=a._expirationTime,c=this._internalRoot,d=c.firstBatch;if(null===d)c.firstBatch=a,a._next=null;else{for(c=null;null!==d&&d._expirationTime<=b;)c=d,d=d._next;a._next=d;null!==c&&(c._next=a)}return a};function ug(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}\nfunction vg(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}\nvar X=pf({getRootHostContext:function(a){var b=a.nodeType;switch(b){case 9:case 11:a=(a=a.documentElement)?a.namespaceURI:Pf(null,\"\");break;default:b=8===b?a.parentNode:a,a=b.namespaceURI||null,b=b.tagName,a=Pf(a,b)}return a},getChildHostContext:function(a,b){return Pf(a,b)},getPublicInstance:function(a){return a},prepareForCommit:function(){pg=Vd;var a=fa();if(ne(a)){if(\"selectionStart\"in a)var b={start:a.selectionStart,end:a.selectionEnd};else a:{var c=window.getSelection&&window.getSelection();\nif(c&&0!==c.rangeCount){b=c.anchorNode;var d=c.anchorOffset,e=c.focusNode;c=c.focusOffset;try{b.nodeType,e.nodeType}catch(B){b=null;break a}var f=0,h=-1,g=-1,k=0,v=0,l=a,p=null;b:for(;;){for(var z;;){l!==b||0!==d&&3!==l.nodeType||(h=f+d);l!==e||0!==c&&3!==l.nodeType||(g=f+c);3===l.nodeType&&(f+=l.nodeValue.length);if(null===(z=l.firstChild))break;p=l;l=z}for(;;){if(l===a)break b;p===b&&++k===d&&(h=f);p===e&&++v===c&&(g=f);if(null!==(z=l.nextSibling))break;l=p;p=l.parentNode}l=z}b=-1===h||-1===g?null:\n{start:h,end:g}}else b=null}b=b||{start:0,end:0}}else b=null;qg={focusedElem:a,selectionRange:b};Wd(!1)},resetAfterCommit:function(){var a=qg,b=fa(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&ja(document.documentElement,c)){if(ne(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(window.getSelection){b=window.getSelection();var e=c[mb()].length;a=Math.min(d.start,e);d=void 0===d.end?a:Math.min(d.end,e);!b.extend&&a>\nd&&(e=d,d=a,a=e);e=me(c,a);var f=me(c,d);if(e&&f&&(1!==b.rangeCount||b.anchorNode!==e.node||b.anchorOffset!==e.offset||b.focusNode!==f.node||b.focusOffset!==f.offset)){var h=document.createRange();h.setStart(e.node,e.offset);b.removeAllRanges();a>d?(b.addRange(h),b.extend(f.node,f.offset)):(h.setEnd(f.node,f.offset),b.addRange(h))}}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,\na.element.scrollTop=a.top}qg=null;Wd(pg);pg=null},createInstance:function(a,b,c,d,e){a=ag(a,b,c,d);a[F]=e;a[Ta]=b;return a},appendInitialChild:function(a,b){a.appendChild(b)},finalizeInitialChildren:function(a,b,c,d){cg(a,b,c,d);return vg(b,c)},prepareUpdate:function(a,b,c,d,e){return dg(a,b,c,d,e)},shouldSetTextContent:function(a,b){return\"textarea\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&\"string\"===\ntypeof b.dangerouslySetInnerHTML.__html},shouldDeprioritizeSubtree:function(a,b){return!!b.hidden},createTextInstance:function(a,b,c,d){a=bg(a,b);a[F]=d;return a},now:sf,mutation:{commitMount:function(a,b,c){vg(b,c)&&a.focus()},commitUpdate:function(a,b,c,d,e){a[Ta]=e;eg(a,b,c,d,e)},resetTextContent:function(a){Sf(a,\"\")},commitTextUpdate:function(a,b,c){a.nodeValue=c},appendChild:function(a,b){a.appendChild(b)},appendChildToContainer:function(a,b){8===a.nodeType?a.parentNode.insertBefore(b,a):a.appendChild(b)},\ninsertBefore:function(a,b,c){a.insertBefore(b,c)},insertInContainerBefore:function(a,b,c){8===a.nodeType?a.parentNode.insertBefore(b,c):a.insertBefore(b,c)},removeChild:function(a,b){a.removeChild(b)},removeChildFromContainer:function(a,b){8===a.nodeType?a.parentNode.removeChild(b):a.removeChild(b)}},hydration:{canHydrateInstance:function(a,b){return 1!==a.nodeType||b.toLowerCase()!==a.nodeName.toLowerCase()?null:a},canHydrateTextInstance:function(a,b){return\"\"===b||3!==a.nodeType?null:a},getNextHydratableSibling:function(a){for(a=\na.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a},getFirstHydratableChild:function(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a},hydrateInstance:function(a,b,c,d,e,f){a[F]=f;a[Ta]=c;return fg(a,b,c,e,d)},hydrateTextInstance:function(a,b,c){a[F]=c;return ng(a,b)},didNotMatchHydratedContainerTextInstance:function(){},didNotMatchHydratedTextInstance:function(){},didNotHydrateContainerInstance:function(){},didNotHydrateInstance:function(){},\ndidNotFindHydratableContainerInstance:function(){},didNotFindHydratableContainerTextInstance:function(){},didNotFindHydratableInstance:function(){},didNotFindHydratableTextInstance:function(){}},scheduleDeferredCallback:tf,cancelDeferredCallback:uf}),Cg=X;ac=Cg.batchedUpdates;bc=Cg.interactiveUpdates;cc=Cg.flushInteractiveUpdates;\nfunction Dg(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new tg(a,!1,b)}\nfunction Eg(a,b,c,d,e){ug(c)?void 0:D(\"200\");var f=c._reactRootContainer;if(f){if(\"function\"===typeof e){var h=e;e=function(){var a=X.getPublicRootInstance(f._internalRoot);h.call(a)}}null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)}else{f=c._reactRootContainer=Dg(c,d);if(\"function\"===typeof e){var g=e;e=function(){var a=X.getPublicRootInstance(f._internalRoot);g.call(a)}}X.unbatchedUpdates(function(){null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)})}return X.getPublicRootInstance(f._internalRoot)}\nfunction Fg(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;ug(b)?void 0:D(\"200\");return qf(a,b,null,c)}\nvar Gg={createPortal:Fg,findDOMNode:function(a){return null==a?null:1===a.nodeType?a:X.findHostInstance(a)},hydrate:function(a,b,c){return Eg(null,a,b,!0,c)},render:function(a,b,c){return Eg(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){null==a||void 0===a._reactInternalFiber?D(\"38\"):void 0;return Eg(a,b,c,!1,d)},unmountComponentAtNode:function(a){ug(a)?void 0:D(\"40\");return a._reactRootContainer?(X.unbatchedUpdates(function(){Eg(null,null,a,!1,function(){a._reactRootContainer=\nnull})}),!0):!1},unstable_createPortal:function(){return Fg.apply(void 0,arguments)},unstable_batchedUpdates:X.batchedUpdates,unstable_deferredUpdates:X.deferredUpdates,flushSync:X.flushSync,unstable_flushControlled:X.flushControlled,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{EventPluginHub:Ra,EventPluginRegistry:Ca,EventPropagators:kb,ReactControlledComponent:$b,ReactDOMComponentTree:bb,ReactDOMEventListener:$d},unstable_createRoot:function(a,b){return new tg(a,!0,null!=b&&!0===b.hydrate)}};\nX.injectIntoDevTools({findFiberByHostInstance:Ua,bundleType:0,version:\"16.3.2\",rendererPackageName:\"react-dom\"});var Hg=Object.freeze({default:Gg}),Ig=Hg&&Gg||Hg;module.exports=Ig[\"default\"]?Ig[\"default\"]:Ig;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-dom/cjs/react-dom.production.min.js\n// module id = 62\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\n/**\n * Simple, lightweight module assisting with the detection and context of\n * Worker. Helps avoid circular dependencies and allows code to reason about\n * whether or not they are in a Worker, even if they never include the main\n * `ReactWorker` dependency.\n */\nvar ExecutionEnvironment = {\n\n  canUseDOM: canUseDOM,\n\n  canUseWorkers: typeof Worker !== 'undefined',\n\n  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),\n\n  canUseViewport: canUseDOM && !!window.screen,\n\n  isInWorker: !canUseDOM // For now, this is true - might change in the future.\n\n};\n\nmodule.exports = ExecutionEnvironment;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/ExecutionEnvironment.js\n// module id = 63\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n/* eslint-disable fb-www/typeof-undefined */\n\n/**\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\n * not safe to call document.activeElement if there is nothing focused.\n *\n * The activeElement will be null only if the document or document body is not\n * yet defined.\n *\n * @param {?DOMDocument} doc Defaults to current document.\n * @return {?DOMElement}\n */\nfunction getActiveElement(doc) /*?DOMElement*/{\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n  if (typeof doc === 'undefined') {\n    return null;\n  }\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\n\nmodule.exports = getActiveElement;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/getActiveElement.js\n// module id = 64\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n * \n */\n\n/*eslint-disable no-self-compare */\n\n'use strict';\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  // SameValue algorithm\n  if (x === y) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    // Added the nonzero y check to make Flow happy, but it is redundant\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y;\n  }\n}\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nfunction shallowEqual(objA, objB) {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  for (var i = 0; i < keysA.length; i++) {\n    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = shallowEqual;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/shallowEqual.js\n// module id = 65\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nvar isTextNode = require('./isTextNode');\n\n/*eslint-disable no-bitwise */\n\n/**\n * Checks if a given DOM node contains or is another DOM node.\n */\nfunction containsNode(outerNode, innerNode) {\n  if (!outerNode || !innerNode) {\n    return false;\n  } else if (outerNode === innerNode) {\n    return true;\n  } else if (isTextNode(outerNode)) {\n    return false;\n  } else if (isTextNode(innerNode)) {\n    return containsNode(outerNode, innerNode.parentNode);\n  } else if ('contains' in outerNode) {\n    return outerNode.contains(innerNode);\n  } else if (outerNode.compareDocumentPosition) {\n    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = containsNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/containsNode.js\n// module id = 66\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\nvar isNode = require('./isNode');\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM text node.\n */\nfunction isTextNode(object) {\n  return isNode(object) && object.nodeType == 3;\n}\n\nmodule.exports = isTextNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/isTextNode.js\n// module id = 67\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM node.\n */\nfunction isNode(object) {\n  var doc = object ? object.ownerDocument || object : document;\n  var defaultView = doc.defaultView || window;\n  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));\n}\n\nmodule.exports = isNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/isNode.js\n// module id = 68\n// module chunks = 0","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport warning from 'warning';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport createHistory from 'history/createBrowserHistory';\nimport Router from './Router';\n\n/**\n * The public API for a <Router> that uses HTML5 history.\n */\n\nvar BrowserRouter = function (_React$Component) {\n  _inherits(BrowserRouter, _React$Component);\n\n  function BrowserRouter() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, BrowserRouter);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.history = createHistory(_this.props), _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  BrowserRouter.prototype.componentWillMount = function componentWillMount() {\n    warning(!this.props.history, '<BrowserRouter> ignores the history prop. To use a custom history, ' + 'use `import { Router }` instead of `import { BrowserRouter as Router }`.');\n  };\n\n  BrowserRouter.prototype.render = function render() {\n    return React.createElement(Router, { history: this.history, children: this.props.children });\n  };\n\n  return BrowserRouter;\n}(React.Component);\n\nBrowserRouter.propTypes = {\n  basename: PropTypes.string,\n  forceRefresh: PropTypes.bool,\n  getUserConfirmation: PropTypes.func,\n  keyLength: PropTypes.number,\n  children: PropTypes.node\n};\n\n\nexport default BrowserRouter;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-router-dom/es/BrowserRouter.js\n// module id = 70\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    invariant(\n      false,\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/prop-types/factoryWithThrowingShims.js\n// module id = 71\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/prop-types/lib/ReactPropTypesSecret.js\n// module id = 72\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _LocationUtils = require('./LocationUtils');\n\nvar _PathUtils = require('./PathUtils');\n\nvar _createTransitionManager = require('./createTransitionManager');\n\nvar _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);\n\nvar _DOMUtils = require('./DOMUtils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar PopStateEvent = 'popstate';\nvar HashChangeEvent = 'hashchange';\n\nvar getHistoryState = function getHistoryState() {\n  try {\n    return window.history.state || {};\n  } catch (e) {\n    // IE 11 sometimes throws when accessing window.history.state\n    // See https://github.com/ReactTraining/history/pull/289\n    return {};\n  }\n};\n\n/**\n * Creates a history object that uses the HTML5 history API including\n * pushState, replaceState, and the popstate event.\n */\nvar createBrowserHistory = function createBrowserHistory() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  (0, _invariant2.default)(_DOMUtils.canUseDOM, 'Browser history needs a DOM');\n\n  var globalHistory = window.history;\n  var canUseHistory = (0, _DOMUtils.supportsHistory)();\n  var needsHashChangeListener = !(0, _DOMUtils.supportsPopStateOnHashChange)();\n\n  var _props$forceRefresh = props.forceRefresh,\n      forceRefresh = _props$forceRefresh === undefined ? false : _props$forceRefresh,\n      _props$getUserConfirm = props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === undefined ? _DOMUtils.getConfirmation : _props$getUserConfirm,\n      _props$keyLength = props.keyLength,\n      keyLength = _props$keyLength === undefined ? 6 : _props$keyLength;\n\n  var basename = props.basename ? (0, _PathUtils.stripTrailingSlash)((0, _PathUtils.addLeadingSlash)(props.basename)) : '';\n\n  var getDOMLocation = function getDOMLocation(historyState) {\n    var _ref = historyState || {},\n        key = _ref.key,\n        state = _ref.state;\n\n    var _window$location = window.location,\n        pathname = _window$location.pathname,\n        search = _window$location.search,\n        hash = _window$location.hash;\n\n\n    var path = pathname + search + hash;\n\n    (0, _warning2.default)(!basename || (0, _PathUtils.hasBasename)(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".');\n\n    if (basename) path = (0, _PathUtils.stripBasename)(path, basename);\n\n    return (0, _LocationUtils.createLocation)(path, state, key);\n  };\n\n  var createKey = function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  };\n\n  var transitionManager = (0, _createTransitionManager2.default)();\n\n  var setState = function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n\n    transitionManager.notifyListeners(history.location, history.action);\n  };\n\n  var handlePopState = function handlePopState(event) {\n    // Ignore extraneous popstate events in WebKit.\n    if ((0, _DOMUtils.isExtraneousPopstateEvent)(event)) return;\n\n    handlePop(getDOMLocation(event.state));\n  };\n\n  var handleHashChange = function handleHashChange() {\n    handlePop(getDOMLocation(getHistoryState()));\n  };\n\n  var forceNextPop = false;\n\n  var handlePop = function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({ action: action, location: location });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  };\n\n  var revertPop = function revertPop(fromLocation) {\n    var toLocation = history.location;\n\n    // TODO: We could probably make this more reliable by\n    // keeping a list of keys we've seen in sessionStorage.\n    // Instead, we just default to 0 for keys we don't know.\n\n    var toIndex = allKeys.indexOf(toLocation.key);\n\n    if (toIndex === -1) toIndex = 0;\n\n    var fromIndex = allKeys.indexOf(fromLocation.key);\n\n    if (fromIndex === -1) fromIndex = 0;\n\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  };\n\n  var initialLocation = getDOMLocation(getHistoryState());\n  var allKeys = [initialLocation.key];\n\n  // Public interface\n\n  var createHref = function createHref(location) {\n    return basename + (0, _PathUtils.createPath)(location);\n  };\n\n  var push = function push(path, state) {\n    (0, _warning2.default)(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored');\n\n    var action = 'PUSH';\n    var location = (0, _LocationUtils.createLocation)(path, state, createKey(), history.location);\n\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n\n      if (canUseHistory) {\n        globalHistory.pushState({ key: key, state: state }, null, href);\n\n        if (forceRefresh) {\n          window.location.href = href;\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n          var nextKeys = allKeys.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);\n\n          nextKeys.push(location.key);\n          allKeys = nextKeys;\n\n          setState({ action: action, location: location });\n        }\n      } else {\n        (0, _warning2.default)(state === undefined, 'Browser history cannot push state in browsers that do not support HTML5 history');\n\n        window.location.href = href;\n      }\n    });\n  };\n\n  var replace = function replace(path, state) {\n    (0, _warning2.default)(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored');\n\n    var action = 'REPLACE';\n    var location = (0, _LocationUtils.createLocation)(path, state, createKey(), history.location);\n\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n\n      if (canUseHistory) {\n        globalHistory.replaceState({ key: key, state: state }, null, href);\n\n        if (forceRefresh) {\n          window.location.replace(href);\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n\n          if (prevIndex !== -1) allKeys[prevIndex] = location.key;\n\n          setState({ action: action, location: location });\n        }\n      } else {\n        (0, _warning2.default)(state === undefined, 'Browser history cannot replace state in browsers that do not support HTML5 history');\n\n        window.location.replace(href);\n      }\n    });\n  };\n\n  var go = function go(n) {\n    globalHistory.go(n);\n  };\n\n  var goBack = function goBack() {\n    return go(-1);\n  };\n\n  var goForward = function goForward() {\n    return go(1);\n  };\n\n  var listenerCount = 0;\n\n  var checkDOMListeners = function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1) {\n      (0, _DOMUtils.addEventListener)(window, PopStateEvent, handlePopState);\n\n      if (needsHashChangeListener) (0, _DOMUtils.addEventListener)(window, HashChangeEvent, handleHashChange);\n    } else if (listenerCount === 0) {\n      (0, _DOMUtils.removeEventListener)(window, PopStateEvent, handlePopState);\n\n      if (needsHashChangeListener) (0, _DOMUtils.removeEventListener)(window, HashChangeEvent, handleHashChange);\n    }\n  };\n\n  var isBlocked = false;\n\n  var block = function block() {\n    var prompt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  };\n\n  var listen = function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  };\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n\n  return history;\n};\n\nexports.default = createBrowserHistory;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/history/createBrowserHistory.js\n// module id = 73\n// module chunks = 0","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport warning from 'warning';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport createHistory from 'history/createHashHistory';\nimport Router from './Router';\n\n/**\n * The public API for a <Router> that uses window.location.hash.\n */\n\nvar HashRouter = function (_React$Component) {\n  _inherits(HashRouter, _React$Component);\n\n  function HashRouter() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, HashRouter);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.history = createHistory(_this.props), _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  HashRouter.prototype.componentWillMount = function componentWillMount() {\n    warning(!this.props.history, '<HashRouter> ignores the history prop. To use a custom history, ' + 'use `import { Router }` instead of `import { HashRouter as Router }`.');\n  };\n\n  HashRouter.prototype.render = function render() {\n    return React.createElement(Router, { history: this.history, children: this.props.children });\n  };\n\n  return HashRouter;\n}(React.Component);\n\nHashRouter.propTypes = {\n  basename: PropTypes.string,\n  getUserConfirmation: PropTypes.func,\n  hashType: PropTypes.oneOf(['hashbang', 'noslash', 'slash']),\n  children: PropTypes.node\n};\n\n\nexport default HashRouter;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-router-dom/es/HashRouter.js\n// module id = 74\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _LocationUtils = require('./LocationUtils');\n\nvar _PathUtils = require('./PathUtils');\n\nvar _createTransitionManager = require('./createTransitionManager');\n\nvar _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);\n\nvar _DOMUtils = require('./DOMUtils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar HashChangeEvent = 'hashchange';\n\nvar HashPathCoders = {\n  hashbang: {\n    encodePath: function encodePath(path) {\n      return path.charAt(0) === '!' ? path : '!/' + (0, _PathUtils.stripLeadingSlash)(path);\n    },\n    decodePath: function decodePath(path) {\n      return path.charAt(0) === '!' ? path.substr(1) : path;\n    }\n  },\n  noslash: {\n    encodePath: _PathUtils.stripLeadingSlash,\n    decodePath: _PathUtils.addLeadingSlash\n  },\n  slash: {\n    encodePath: _PathUtils.addLeadingSlash,\n    decodePath: _PathUtils.addLeadingSlash\n  }\n};\n\nvar getHashPath = function getHashPath() {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var hashIndex = href.indexOf('#');\n  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);\n};\n\nvar pushHashPath = function pushHashPath(path) {\n  return window.location.hash = path;\n};\n\nvar replaceHashPath = function replaceHashPath(path) {\n  var hashIndex = window.location.href.indexOf('#');\n\n  window.location.replace(window.location.href.slice(0, hashIndex >= 0 ? hashIndex : 0) + '#' + path);\n};\n\nvar createHashHistory = function createHashHistory() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  (0, _invariant2.default)(_DOMUtils.canUseDOM, 'Hash history needs a DOM');\n\n  var globalHistory = window.history;\n  var canGoWithoutReload = (0, _DOMUtils.supportsGoWithoutReloadUsingHash)();\n\n  var _props$getUserConfirm = props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === undefined ? _DOMUtils.getConfirmation : _props$getUserConfirm,\n      _props$hashType = props.hashType,\n      hashType = _props$hashType === undefined ? 'slash' : _props$hashType;\n\n  var basename = props.basename ? (0, _PathUtils.stripTrailingSlash)((0, _PathUtils.addLeadingSlash)(props.basename)) : '';\n\n  var _HashPathCoders$hashT = HashPathCoders[hashType],\n      encodePath = _HashPathCoders$hashT.encodePath,\n      decodePath = _HashPathCoders$hashT.decodePath;\n\n\n  var getDOMLocation = function getDOMLocation() {\n    var path = decodePath(getHashPath());\n\n    (0, _warning2.default)(!basename || (0, _PathUtils.hasBasename)(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".');\n\n    if (basename) path = (0, _PathUtils.stripBasename)(path, basename);\n\n    return (0, _LocationUtils.createLocation)(path);\n  };\n\n  var transitionManager = (0, _createTransitionManager2.default)();\n\n  var setState = function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n\n    transitionManager.notifyListeners(history.location, history.action);\n  };\n\n  var forceNextPop = false;\n  var ignorePath = null;\n\n  var handleHashChange = function handleHashChange() {\n    var path = getHashPath();\n    var encodedPath = encodePath(path);\n\n    if (path !== encodedPath) {\n      // Ensure we always have a properly-encoded hash.\n      replaceHashPath(encodedPath);\n    } else {\n      var location = getDOMLocation();\n      var prevLocation = history.location;\n\n      if (!forceNextPop && (0, _LocationUtils.locationsAreEqual)(prevLocation, location)) return; // A hashchange doesn't always == location change.\n\n      if (ignorePath === (0, _PathUtils.createPath)(location)) return; // Ignore this change; we already setState in push/replace.\n\n      ignorePath = null;\n\n      handlePop(location);\n    }\n  };\n\n  var handlePop = function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({ action: action, location: location });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  };\n\n  var revertPop = function revertPop(fromLocation) {\n    var toLocation = history.location;\n\n    // TODO: We could probably make this more reliable by\n    // keeping a list of paths we've seen in sessionStorage.\n    // Instead, we just default to 0 for paths we don't know.\n\n    var toIndex = allPaths.lastIndexOf((0, _PathUtils.createPath)(toLocation));\n\n    if (toIndex === -1) toIndex = 0;\n\n    var fromIndex = allPaths.lastIndexOf((0, _PathUtils.createPath)(fromLocation));\n\n    if (fromIndex === -1) fromIndex = 0;\n\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  };\n\n  // Ensure the hash is encoded properly before doing anything else.\n  var path = getHashPath();\n  var encodedPath = encodePath(path);\n\n  if (path !== encodedPath) replaceHashPath(encodedPath);\n\n  var initialLocation = getDOMLocation();\n  var allPaths = [(0, _PathUtils.createPath)(initialLocation)];\n\n  // Public interface\n\n  var createHref = function createHref(location) {\n    return '#' + encodePath(basename + (0, _PathUtils.createPath)(location));\n  };\n\n  var push = function push(path, state) {\n    (0, _warning2.default)(state === undefined, 'Hash history cannot push state; it is ignored');\n\n    var action = 'PUSH';\n    var location = (0, _LocationUtils.createLocation)(path, undefined, undefined, history.location);\n\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n\n      var path = (0, _PathUtils.createPath)(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a PUSH, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        pushHashPath(encodedPath);\n\n        var prevIndex = allPaths.lastIndexOf((0, _PathUtils.createPath)(history.location));\n        var nextPaths = allPaths.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);\n\n        nextPaths.push(path);\n        allPaths = nextPaths;\n\n        setState({ action: action, location: location });\n      } else {\n        (0, _warning2.default)(false, 'Hash history cannot PUSH the same path; a new entry will not be added to the history stack');\n\n        setState();\n      }\n    });\n  };\n\n  var replace = function replace(path, state) {\n    (0, _warning2.default)(state === undefined, 'Hash history cannot replace state; it is ignored');\n\n    var action = 'REPLACE';\n    var location = (0, _LocationUtils.createLocation)(path, undefined, undefined, history.location);\n\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n\n      var path = (0, _PathUtils.createPath)(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a REPLACE, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        replaceHashPath(encodedPath);\n      }\n\n      var prevIndex = allPaths.indexOf((0, _PathUtils.createPath)(history.location));\n\n      if (prevIndex !== -1) allPaths[prevIndex] = path;\n\n      setState({ action: action, location: location });\n    });\n  };\n\n  var go = function go(n) {\n    (0, _warning2.default)(canGoWithoutReload, 'Hash history go(n) causes a full page reload in this browser');\n\n    globalHistory.go(n);\n  };\n\n  var goBack = function goBack() {\n    return go(-1);\n  };\n\n  var goForward = function goForward() {\n    return go(1);\n  };\n\n  var listenerCount = 0;\n\n  var checkDOMListeners = function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1) {\n      (0, _DOMUtils.addEventListener)(window, HashChangeEvent, handleHashChange);\n    } else if (listenerCount === 0) {\n      (0, _DOMUtils.removeEventListener)(window, HashChangeEvent, handleHashChange);\n    }\n  };\n\n  var isBlocked = false;\n\n  var block = function block() {\n    var prompt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  };\n\n  var listen = function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  };\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n\n  return history;\n};\n\nexports.default = createHashHistory;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/history/createHashHistory.js\n// module id = 75\n// module chunks = 0","// Written in this round about way for babel-transform-imports\nimport MemoryRouter from 'react-router/es/MemoryRouter';\n\nexport default MemoryRouter;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-router-dom/es/MemoryRouter.js\n// module id = 76\n// module chunks = 0","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport warning from 'warning';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport createHistory from 'history/createMemoryHistory';\nimport Router from './Router';\n\n/**\n * The public API for a <Router> that stores location in memory.\n */\n\nvar MemoryRouter = function (_React$Component) {\n  _inherits(MemoryRouter, _React$Component);\n\n  function MemoryRouter() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, MemoryRouter);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.history = createHistory(_this.props), _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  MemoryRouter.prototype.componentWillMount = function componentWillMount() {\n    warning(!this.props.history, '<MemoryRouter> ignores the history prop. To use a custom history, ' + 'use `import { Router }` instead of `import { MemoryRouter as Router }`.');\n  };\n\n  MemoryRouter.prototype.render = function render() {\n    return React.createElement(Router, { history: this.history, children: this.props.children });\n  };\n\n  return MemoryRouter;\n}(React.Component);\n\nMemoryRouter.propTypes = {\n  initialEntries: PropTypes.array,\n  initialIndex: PropTypes.number,\n  getUserConfirmation: PropTypes.func,\n  keyLength: PropTypes.number,\n  children: PropTypes.node\n};\n\n\nexport default MemoryRouter;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-router/es/MemoryRouter.js\n// module id = 77\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _PathUtils = require('./PathUtils');\n\nvar _LocationUtils = require('./LocationUtils');\n\nvar _createTransitionManager = require('./createTransitionManager');\n\nvar _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar clamp = function clamp(n, lowerBound, upperBound) {\n  return Math.min(Math.max(n, lowerBound), upperBound);\n};\n\n/**\n * Creates a history object that stores locations in memory.\n */\nvar createMemoryHistory = function createMemoryHistory() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var getUserConfirmation = props.getUserConfirmation,\n      _props$initialEntries = props.initialEntries,\n      initialEntries = _props$initialEntries === undefined ? ['/'] : _props$initialEntries,\n      _props$initialIndex = props.initialIndex,\n      initialIndex = _props$initialIndex === undefined ? 0 : _props$initialIndex,\n      _props$keyLength = props.keyLength,\n      keyLength = _props$keyLength === undefined ? 6 : _props$keyLength;\n\n\n  var transitionManager = (0, _createTransitionManager2.default)();\n\n  var setState = function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = history.entries.length;\n\n    transitionManager.notifyListeners(history.location, history.action);\n  };\n\n  var createKey = function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  };\n\n  var index = clamp(initialIndex, 0, initialEntries.length - 1);\n  var entries = initialEntries.map(function (entry) {\n    return typeof entry === 'string' ? (0, _LocationUtils.createLocation)(entry, undefined, createKey()) : (0, _LocationUtils.createLocation)(entry, undefined, entry.key || createKey());\n  });\n\n  // Public interface\n\n  var createHref = _PathUtils.createPath;\n\n  var push = function push(path, state) {\n    (0, _warning2.default)(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored');\n\n    var action = 'PUSH';\n    var location = (0, _LocationUtils.createLocation)(path, state, createKey(), history.location);\n\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n\n      var prevIndex = history.index;\n      var nextIndex = prevIndex + 1;\n\n      var nextEntries = history.entries.slice(0);\n      if (nextEntries.length > nextIndex) {\n        nextEntries.splice(nextIndex, nextEntries.length - nextIndex, location);\n      } else {\n        nextEntries.push(location);\n      }\n\n      setState({\n        action: action,\n        location: location,\n        index: nextIndex,\n        entries: nextEntries\n      });\n    });\n  };\n\n  var replace = function replace(path, state) {\n    (0, _warning2.default)(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored');\n\n    var action = 'REPLACE';\n    var location = (0, _LocationUtils.createLocation)(path, state, createKey(), history.location);\n\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n\n      history.entries[history.index] = location;\n\n      setState({ action: action, location: location });\n    });\n  };\n\n  var go = function go(n) {\n    var nextIndex = clamp(history.index + n, 0, history.entries.length - 1);\n\n    var action = 'POP';\n    var location = history.entries[nextIndex];\n\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (ok) {\n        setState({\n          action: action,\n          location: location,\n          index: nextIndex\n        });\n      } else {\n        // Mimic the behavior of DOM histories by\n        // causing a render after a cancelled POP.\n        setState();\n      }\n    });\n  };\n\n  var goBack = function goBack() {\n    return go(-1);\n  };\n\n  var goForward = function goForward() {\n    return go(1);\n  };\n\n  var canGo = function canGo(n) {\n    var nextIndex = history.index + n;\n    return nextIndex >= 0 && nextIndex < history.entries.length;\n  };\n\n  var block = function block() {\n    var prompt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    return transitionManager.setPrompt(prompt);\n  };\n\n  var listen = function listen(listener) {\n    return transitionManager.appendListener(listener);\n  };\n\n  var history = {\n    length: entries.length,\n    action: 'POP',\n    location: entries[index],\n    index: index,\n    entries: entries,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    canGo: canGo,\n    block: block,\n    listen: listen\n  };\n\n  return history;\n};\n\nexports.default = createMemoryHistory;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/history/createMemoryHistory.js\n// module id = 78\n// module chunks = 0","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Route from './Route';\nimport Link from './Link';\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nvar NavLink = function NavLink(_ref) {\n  var to = _ref.to,\n      exact = _ref.exact,\n      strict = _ref.strict,\n      location = _ref.location,\n      activeClassName = _ref.activeClassName,\n      className = _ref.className,\n      activeStyle = _ref.activeStyle,\n      style = _ref.style,\n      getIsActive = _ref.isActive,\n      ariaCurrent = _ref.ariaCurrent,\n      rest = _objectWithoutProperties(_ref, ['to', 'exact', 'strict', 'location', 'activeClassName', 'className', 'activeStyle', 'style', 'isActive', 'ariaCurrent']);\n\n  return React.createElement(Route, {\n    path: (typeof to === 'undefined' ? 'undefined' : _typeof(to)) === 'object' ? to.pathname : to,\n    exact: exact,\n    strict: strict,\n    location: location,\n    children: function children(_ref2) {\n      var location = _ref2.location,\n          match = _ref2.match;\n\n      var isActive = !!(getIsActive ? getIsActive(match, location) : match);\n\n      return React.createElement(Link, _extends({\n        to: to,\n        className: isActive ? [className, activeClassName].filter(function (i) {\n          return i;\n        }).join(' ') : className,\n        style: isActive ? _extends({}, style, activeStyle) : style,\n        'aria-current': isActive && ariaCurrent\n      }, rest));\n    }\n  });\n};\n\nNavLink.propTypes = {\n  to: Link.propTypes.to,\n  exact: PropTypes.bool,\n  strict: PropTypes.bool,\n  location: PropTypes.object,\n  activeClassName: PropTypes.string,\n  className: PropTypes.string,\n  activeStyle: PropTypes.object,\n  style: PropTypes.object,\n  isActive: PropTypes.func,\n  ariaCurrent: PropTypes.oneOf(['page', 'step', 'location', 'true'])\n};\n\nNavLink.defaultProps = {\n  activeClassName: 'active',\n  ariaCurrent: 'true'\n};\n\nexport default NavLink;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-router-dom/es/NavLink.js\n// module id = 79\n// module chunks = 0","var isarray = require('isarray')\n\n/**\n * Expose `pathToRegexp`.\n */\nmodule.exports = pathToRegexp\nmodule.exports.parse = parse\nmodule.exports.compile = compile\nmodule.exports.tokensToFunction = tokensToFunction\nmodule.exports.tokensToRegExp = tokensToRegExp\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g')\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = []\n  var key = 0\n  var index = 0\n  var path = ''\n  var defaultDelimiter = options && options.delimiter || '/'\n  var res\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0]\n    var escaped = res[1]\n    var offset = res.index\n    path += str.slice(index, offset)\n    index = offset + m.length\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1]\n      continue\n    }\n\n    var next = str[index]\n    var prefix = res[2]\n    var name = res[3]\n    var capture = res[4]\n    var group = res[5]\n    var modifier = res[6]\n    var asterisk = res[7]\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path)\n      path = ''\n    }\n\n    var partial = prefix != null && next != null && next !== prefix\n    var repeat = modifier === '+' || modifier === '*'\n    var optional = modifier === '?' || modifier === '*'\n    var delimiter = res[2] || defaultDelimiter\n    var pattern = capture || group\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    })\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index)\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path)\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length)\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$')\n    }\n  }\n\n  return function (obj, opts) {\n    var path = ''\n    var data = obj || {}\n    var options = opts || {}\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i]\n\n      if (typeof token === 'string') {\n        path += token\n\n        continue\n      }\n\n      var value = data[token.name]\n      var segment\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j])\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value)\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g)\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      })\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = []\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source)\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options))\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options)\n    keys = []\n  }\n\n  options = options || {}\n\n  var strict = options.strict\n  var end = options.end !== false\n  var route = ''\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n\n    if (typeof token === 'string') {\n      route += escapeString(token)\n    } else {\n      var prefix = escapeString(token.prefix)\n      var capture = '(?:' + token.pattern + ')'\n\n      keys.push(token)\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*'\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?'\n        } else {\n          capture = prefix + '(' + capture + ')?'\n        }\n      } else {\n        capture = prefix + '(' + capture + ')'\n      }\n\n      route += capture\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/')\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?'\n  }\n\n  if (end) {\n    route += '$'\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)'\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options)\n    keys = []\n  }\n\n  options = options || {}\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/path-to-regexp/index.js\n// module id = 80\n// module chunks = 0","module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/path-to-regexp/node_modules/isarray/index.js\n// module id = 81\n// module chunks = 0","// Written in this round about way for babel-transform-imports\nimport Prompt from 'react-router/es/Prompt';\n\nexport default Prompt;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-router-dom/es/Prompt.js\n// module id = 82\n// module chunks = 0","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport invariant from 'invariant';\n\n/**\n * The public API for prompting the user before navigating away\n * from a screen with a component.\n */\n\nvar Prompt = function (_React$Component) {\n  _inherits(Prompt, _React$Component);\n\n  function Prompt() {\n    _classCallCheck(this, Prompt);\n\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n\n  Prompt.prototype.enable = function enable(message) {\n    if (this.unblock) this.unblock();\n\n    this.unblock = this.context.router.history.block(message);\n  };\n\n  Prompt.prototype.disable = function disable() {\n    if (this.unblock) {\n      this.unblock();\n      this.unblock = null;\n    }\n  };\n\n  Prompt.prototype.componentWillMount = function componentWillMount() {\n    invariant(this.context.router, 'You should not use <Prompt> outside a <Router>');\n\n    if (this.props.when) this.enable(this.props.message);\n  };\n\n  Prompt.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    if (nextProps.when) {\n      if (!this.props.when || this.props.message !== nextProps.message) this.enable(nextProps.message);\n    } else {\n      this.disable();\n    }\n  };\n\n  Prompt.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.disable();\n  };\n\n  Prompt.prototype.render = function render() {\n    return null;\n  };\n\n  return Prompt;\n}(React.Component);\n\nPrompt.propTypes = {\n  when: PropTypes.bool,\n  message: PropTypes.oneOfType([PropTypes.func, PropTypes.string]).isRequired\n};\nPrompt.defaultProps = {\n  when: true\n};\nPrompt.contextTypes = {\n  router: PropTypes.shape({\n    history: PropTypes.shape({\n      block: PropTypes.func.isRequired\n    }).isRequired\n  }).isRequired\n};\n\n\nexport default Prompt;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-router/es/Prompt.js\n// module id = 83\n// module chunks = 0","// Written in this round about way for babel-transform-imports\nimport Redirect from 'react-router/es/Redirect';\n\nexport default Redirect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-router-dom/es/Redirect.js\n// module id = 84\n// module chunks = 0","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport warning from 'warning';\nimport invariant from 'invariant';\nimport { createLocation, locationsAreEqual } from 'history';\n\n/**\n * The public API for updating the location programmatically\n * with a component.\n */\n\nvar Redirect = function (_React$Component) {\n  _inherits(Redirect, _React$Component);\n\n  function Redirect() {\n    _classCallCheck(this, Redirect);\n\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n\n  Redirect.prototype.isStatic = function isStatic() {\n    return this.context.router && this.context.router.staticContext;\n  };\n\n  Redirect.prototype.componentWillMount = function componentWillMount() {\n    invariant(this.context.router, 'You should not use <Redirect> outside a <Router>');\n\n    if (this.isStatic()) this.perform();\n  };\n\n  Redirect.prototype.componentDidMount = function componentDidMount() {\n    if (!this.isStatic()) this.perform();\n  };\n\n  Redirect.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var prevTo = createLocation(prevProps.to);\n    var nextTo = createLocation(this.props.to);\n\n    if (locationsAreEqual(prevTo, nextTo)) {\n      warning(false, 'You tried to redirect to the same route you\\'re currently on: ' + ('\"' + nextTo.pathname + nextTo.search + '\"'));\n      return;\n    }\n\n    this.perform();\n  };\n\n  Redirect.prototype.perform = function perform() {\n    var history = this.context.router.history;\n    var _props = this.props,\n        push = _props.push,\n        to = _props.to;\n\n\n    if (push) {\n      history.push(to);\n    } else {\n      history.replace(to);\n    }\n  };\n\n  Redirect.prototype.render = function render() {\n    return null;\n  };\n\n  return Redirect;\n}(React.Component);\n\nRedirect.propTypes = {\n  push: PropTypes.bool,\n  from: PropTypes.string,\n  to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired\n};\nRedirect.defaultProps = {\n  push: false\n};\nRedirect.contextTypes = {\n  router: PropTypes.shape({\n    history: PropTypes.shape({\n      push: PropTypes.func.isRequired,\n      replace: PropTypes.func.isRequired\n    }).isRequired,\n    staticContext: PropTypes.object\n  }).isRequired\n};\n\n\nexport default Redirect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-router/es/Redirect.js\n// module id = 85\n// module chunks = 0","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nimport warning from 'warning';\nimport invariant from 'invariant';\nimport { createLocation } from './LocationUtils';\nimport { addLeadingSlash, stripTrailingSlash, hasBasename, stripBasename, createPath } from './PathUtils';\nimport createTransitionManager from './createTransitionManager';\nimport { canUseDOM, addEventListener, removeEventListener, getConfirmation, supportsHistory, supportsPopStateOnHashChange, isExtraneousPopstateEvent } from './DOMUtils';\n\nvar PopStateEvent = 'popstate';\nvar HashChangeEvent = 'hashchange';\n\nvar getHistoryState = function getHistoryState() {\n  try {\n    return window.history.state || {};\n  } catch (e) {\n    // IE 11 sometimes throws when accessing window.history.state\n    // See https://github.com/ReactTraining/history/pull/289\n    return {};\n  }\n};\n\n/**\n * Creates a history object that uses the HTML5 history API including\n * pushState, replaceState, and the popstate event.\n */\nvar createBrowserHistory = function createBrowserHistory() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  invariant(canUseDOM, 'Browser history needs a DOM');\n\n  var globalHistory = window.history;\n  var canUseHistory = supportsHistory();\n  var needsHashChangeListener = !supportsPopStateOnHashChange();\n\n  var _props$forceRefresh = props.forceRefresh,\n      forceRefresh = _props$forceRefresh === undefined ? false : _props$forceRefresh,\n      _props$getUserConfirm = props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === undefined ? getConfirmation : _props$getUserConfirm,\n      _props$keyLength = props.keyLength,\n      keyLength = _props$keyLength === undefined ? 6 : _props$keyLength;\n\n  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\n\n  var getDOMLocation = function getDOMLocation(historyState) {\n    var _ref = historyState || {},\n        key = _ref.key,\n        state = _ref.state;\n\n    var _window$location = window.location,\n        pathname = _window$location.pathname,\n        search = _window$location.search,\n        hash = _window$location.hash;\n\n\n    var path = pathname + search + hash;\n\n    warning(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".');\n\n    if (basename) path = stripBasename(path, basename);\n\n    return createLocation(path, state, key);\n  };\n\n  var createKey = function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  };\n\n  var transitionManager = createTransitionManager();\n\n  var setState = function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n\n    transitionManager.notifyListeners(history.location, history.action);\n  };\n\n  var handlePopState = function handlePopState(event) {\n    // Ignore extraneous popstate events in WebKit.\n    if (isExtraneousPopstateEvent(event)) return;\n\n    handlePop(getDOMLocation(event.state));\n  };\n\n  var handleHashChange = function handleHashChange() {\n    handlePop(getDOMLocation(getHistoryState()));\n  };\n\n  var forceNextPop = false;\n\n  var handlePop = function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({ action: action, location: location });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  };\n\n  var revertPop = function revertPop(fromLocation) {\n    var toLocation = history.location;\n\n    // TODO: We could probably make this more reliable by\n    // keeping a list of keys we've seen in sessionStorage.\n    // Instead, we just default to 0 for keys we don't know.\n\n    var toIndex = allKeys.indexOf(toLocation.key);\n\n    if (toIndex === -1) toIndex = 0;\n\n    var fromIndex = allKeys.indexOf(fromLocation.key);\n\n    if (fromIndex === -1) fromIndex = 0;\n\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  };\n\n  var initialLocation = getDOMLocation(getHistoryState());\n  var allKeys = [initialLocation.key];\n\n  // Public interface\n\n  var createHref = function createHref(location) {\n    return basename + createPath(location);\n  };\n\n  var push = function push(path, state) {\n    warning(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored');\n\n    var action = 'PUSH';\n    var location = createLocation(path, state, createKey(), history.location);\n\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n\n      if (canUseHistory) {\n        globalHistory.pushState({ key: key, state: state }, null, href);\n\n        if (forceRefresh) {\n          window.location.href = href;\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n          var nextKeys = allKeys.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);\n\n          nextKeys.push(location.key);\n          allKeys = nextKeys;\n\n          setState({ action: action, location: location });\n        }\n      } else {\n        warning(state === undefined, 'Browser history cannot push state in browsers that do not support HTML5 history');\n\n        window.location.href = href;\n      }\n    });\n  };\n\n  var replace = function replace(path, state) {\n    warning(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored');\n\n    var action = 'REPLACE';\n    var location = createLocation(path, state, createKey(), history.location);\n\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n\n      if (canUseHistory) {\n        globalHistory.replaceState({ key: key, state: state }, null, href);\n\n        if (forceRefresh) {\n          window.location.replace(href);\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n\n          if (prevIndex !== -1) allKeys[prevIndex] = location.key;\n\n          setState({ action: action, location: location });\n        }\n      } else {\n        warning(state === undefined, 'Browser history cannot replace state in browsers that do not support HTML5 history');\n\n        window.location.replace(href);\n      }\n    });\n  };\n\n  var go = function go(n) {\n    globalHistory.go(n);\n  };\n\n  var goBack = function goBack() {\n    return go(-1);\n  };\n\n  var goForward = function goForward() {\n    return go(1);\n  };\n\n  var listenerCount = 0;\n\n  var checkDOMListeners = function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1) {\n      addEventListener(window, PopStateEvent, handlePopState);\n\n      if (needsHashChangeListener) addEventListener(window, HashChangeEvent, handleHashChange);\n    } else if (listenerCount === 0) {\n      removeEventListener(window, PopStateEvent, handlePopState);\n\n      if (needsHashChangeListener) removeEventListener(window, HashChangeEvent, handleHashChange);\n    }\n  };\n\n  var isBlocked = false;\n\n  var block = function block() {\n    var prompt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  };\n\n  var listen = function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  };\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n\n  return history;\n};\n\nexport default createBrowserHistory;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/history/es/createBrowserHistory.js\n// module id = 87\n// module chunks = 0","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nimport warning from 'warning';\nimport invariant from 'invariant';\nimport { createLocation, locationsAreEqual } from './LocationUtils';\nimport { addLeadingSlash, stripLeadingSlash, stripTrailingSlash, hasBasename, stripBasename, createPath } from './PathUtils';\nimport createTransitionManager from './createTransitionManager';\nimport { canUseDOM, addEventListener, removeEventListener, getConfirmation, supportsGoWithoutReloadUsingHash } from './DOMUtils';\n\nvar HashChangeEvent = 'hashchange';\n\nvar HashPathCoders = {\n  hashbang: {\n    encodePath: function encodePath(path) {\n      return path.charAt(0) === '!' ? path : '!/' + stripLeadingSlash(path);\n    },\n    decodePath: function decodePath(path) {\n      return path.charAt(0) === '!' ? path.substr(1) : path;\n    }\n  },\n  noslash: {\n    encodePath: stripLeadingSlash,\n    decodePath: addLeadingSlash\n  },\n  slash: {\n    encodePath: addLeadingSlash,\n    decodePath: addLeadingSlash\n  }\n};\n\nvar getHashPath = function getHashPath() {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var hashIndex = href.indexOf('#');\n  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);\n};\n\nvar pushHashPath = function pushHashPath(path) {\n  return window.location.hash = path;\n};\n\nvar replaceHashPath = function replaceHashPath(path) {\n  var hashIndex = window.location.href.indexOf('#');\n\n  window.location.replace(window.location.href.slice(0, hashIndex >= 0 ? hashIndex : 0) + '#' + path);\n};\n\nvar createHashHistory = function createHashHistory() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  invariant(canUseDOM, 'Hash history needs a DOM');\n\n  var globalHistory = window.history;\n  var canGoWithoutReload = supportsGoWithoutReloadUsingHash();\n\n  var _props$getUserConfirm = props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === undefined ? getConfirmation : _props$getUserConfirm,\n      _props$hashType = props.hashType,\n      hashType = _props$hashType === undefined ? 'slash' : _props$hashType;\n\n  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\n\n  var _HashPathCoders$hashT = HashPathCoders[hashType],\n      encodePath = _HashPathCoders$hashT.encodePath,\n      decodePath = _HashPathCoders$hashT.decodePath;\n\n\n  var getDOMLocation = function getDOMLocation() {\n    var path = decodePath(getHashPath());\n\n    warning(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".');\n\n    if (basename) path = stripBasename(path, basename);\n\n    return createLocation(path);\n  };\n\n  var transitionManager = createTransitionManager();\n\n  var setState = function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n\n    transitionManager.notifyListeners(history.location, history.action);\n  };\n\n  var forceNextPop = false;\n  var ignorePath = null;\n\n  var handleHashChange = function handleHashChange() {\n    var path = getHashPath();\n    var encodedPath = encodePath(path);\n\n    if (path !== encodedPath) {\n      // Ensure we always have a properly-encoded hash.\n      replaceHashPath(encodedPath);\n    } else {\n      var location = getDOMLocation();\n      var prevLocation = history.location;\n\n      if (!forceNextPop && locationsAreEqual(prevLocation, location)) return; // A hashchange doesn't always == location change.\n\n      if (ignorePath === createPath(location)) return; // Ignore this change; we already setState in push/replace.\n\n      ignorePath = null;\n\n      handlePop(location);\n    }\n  };\n\n  var handlePop = function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({ action: action, location: location });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  };\n\n  var revertPop = function revertPop(fromLocation) {\n    var toLocation = history.location;\n\n    // TODO: We could probably make this more reliable by\n    // keeping a list of paths we've seen in sessionStorage.\n    // Instead, we just default to 0 for paths we don't know.\n\n    var toIndex = allPaths.lastIndexOf(createPath(toLocation));\n\n    if (toIndex === -1) toIndex = 0;\n\n    var fromIndex = allPaths.lastIndexOf(createPath(fromLocation));\n\n    if (fromIndex === -1) fromIndex = 0;\n\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  };\n\n  // Ensure the hash is encoded properly before doing anything else.\n  var path = getHashPath();\n  var encodedPath = encodePath(path);\n\n  if (path !== encodedPath) replaceHashPath(encodedPath);\n\n  var initialLocation = getDOMLocation();\n  var allPaths = [createPath(initialLocation)];\n\n  // Public interface\n\n  var createHref = function createHref(location) {\n    return '#' + encodePath(basename + createPath(location));\n  };\n\n  var push = function push(path, state) {\n    warning(state === undefined, 'Hash history cannot push state; it is ignored');\n\n    var action = 'PUSH';\n    var location = createLocation(path, undefined, undefined, history.location);\n\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n\n      var path = createPath(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a PUSH, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        pushHashPath(encodedPath);\n\n        var prevIndex = allPaths.lastIndexOf(createPath(history.location));\n        var nextPaths = allPaths.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);\n\n        nextPaths.push(path);\n        allPaths = nextPaths;\n\n        setState({ action: action, location: location });\n      } else {\n        warning(false, 'Hash history cannot PUSH the same path; a new entry will not be added to the history stack');\n\n        setState();\n      }\n    });\n  };\n\n  var replace = function replace(path, state) {\n    warning(state === undefined, 'Hash history cannot replace state; it is ignored');\n\n    var action = 'REPLACE';\n    var location = createLocation(path, undefined, undefined, history.location);\n\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n\n      var path = createPath(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a REPLACE, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        replaceHashPath(encodedPath);\n      }\n\n      var prevIndex = allPaths.indexOf(createPath(history.location));\n\n      if (prevIndex !== -1) allPaths[prevIndex] = path;\n\n      setState({ action: action, location: location });\n    });\n  };\n\n  var go = function go(n) {\n    warning(canGoWithoutReload, 'Hash history go(n) causes a full page reload in this browser');\n\n    globalHistory.go(n);\n  };\n\n  var goBack = function goBack() {\n    return go(-1);\n  };\n\n  var goForward = function goForward() {\n    return go(1);\n  };\n\n  var listenerCount = 0;\n\n  var checkDOMListeners = function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1) {\n      addEventListener(window, HashChangeEvent, handleHashChange);\n    } else if (listenerCount === 0) {\n      removeEventListener(window, HashChangeEvent, handleHashChange);\n    }\n  };\n\n  var isBlocked = false;\n\n  var block = function block() {\n    var prompt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  };\n\n  var listen = function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  };\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n\n  return history;\n};\n\nexport default createHashHistory;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/history/es/createHashHistory.js\n// module id = 88\n// module chunks = 0","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nimport warning from 'warning';\nimport { createPath } from './PathUtils';\nimport { createLocation } from './LocationUtils';\nimport createTransitionManager from './createTransitionManager';\n\nvar clamp = function clamp(n, lowerBound, upperBound) {\n  return Math.min(Math.max(n, lowerBound), upperBound);\n};\n\n/**\n * Creates a history object that stores locations in memory.\n */\nvar createMemoryHistory = function createMemoryHistory() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var getUserConfirmation = props.getUserConfirmation,\n      _props$initialEntries = props.initialEntries,\n      initialEntries = _props$initialEntries === undefined ? ['/'] : _props$initialEntries,\n      _props$initialIndex = props.initialIndex,\n      initialIndex = _props$initialIndex === undefined ? 0 : _props$initialIndex,\n      _props$keyLength = props.keyLength,\n      keyLength = _props$keyLength === undefined ? 6 : _props$keyLength;\n\n\n  var transitionManager = createTransitionManager();\n\n  var setState = function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = history.entries.length;\n\n    transitionManager.notifyListeners(history.location, history.action);\n  };\n\n  var createKey = function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  };\n\n  var index = clamp(initialIndex, 0, initialEntries.length - 1);\n  var entries = initialEntries.map(function (entry) {\n    return typeof entry === 'string' ? createLocation(entry, undefined, createKey()) : createLocation(entry, undefined, entry.key || createKey());\n  });\n\n  // Public interface\n\n  var createHref = createPath;\n\n  var push = function push(path, state) {\n    warning(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored');\n\n    var action = 'PUSH';\n    var location = createLocation(path, state, createKey(), history.location);\n\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n\n      var prevIndex = history.index;\n      var nextIndex = prevIndex + 1;\n\n      var nextEntries = history.entries.slice(0);\n      if (nextEntries.length > nextIndex) {\n        nextEntries.splice(nextIndex, nextEntries.length - nextIndex, location);\n      } else {\n        nextEntries.push(location);\n      }\n\n      setState({\n        action: action,\n        location: location,\n        index: nextIndex,\n        entries: nextEntries\n      });\n    });\n  };\n\n  var replace = function replace(path, state) {\n    warning(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored');\n\n    var action = 'REPLACE';\n    var location = createLocation(path, state, createKey(), history.location);\n\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n\n      history.entries[history.index] = location;\n\n      setState({ action: action, location: location });\n    });\n  };\n\n  var go = function go(n) {\n    var nextIndex = clamp(history.index + n, 0, history.entries.length - 1);\n\n    var action = 'POP';\n    var location = history.entries[nextIndex];\n\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (ok) {\n        setState({\n          action: action,\n          location: location,\n          index: nextIndex\n        });\n      } else {\n        // Mimic the behavior of DOM histories by\n        // causing a render after a cancelled POP.\n        setState();\n      }\n    });\n  };\n\n  var goBack = function goBack() {\n    return go(-1);\n  };\n\n  var goForward = function goForward() {\n    return go(1);\n  };\n\n  var canGo = function canGo(n) {\n    var nextIndex = history.index + n;\n    return nextIndex >= 0 && nextIndex < history.entries.length;\n  };\n\n  var block = function block() {\n    var prompt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    return transitionManager.setPrompt(prompt);\n  };\n\n  var listen = function listen(listener) {\n    return transitionManager.appendListener(listener);\n  };\n\n  var history = {\n    length: entries.length,\n    action: 'POP',\n    location: entries[index],\n    index: index,\n    entries: entries,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    canGo: canGo,\n    block: block,\n    listen: listen\n  };\n\n  return history;\n};\n\nexport default createMemoryHistory;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/history/es/createMemoryHistory.js\n// module id = 89\n// module chunks = 0","// Written in this round about way for babel-transform-imports\nimport StaticRouter from 'react-router/es/StaticRouter';\n\nexport default StaticRouter;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-router-dom/es/StaticRouter.js\n// module id = 90\n// module chunks = 0","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport warning from 'warning';\nimport invariant from 'invariant';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { addLeadingSlash, createPath, parsePath } from 'history/PathUtils';\nimport Router from './Router';\n\nvar normalizeLocation = function normalizeLocation(object) {\n  var _object$pathname = object.pathname,\n      pathname = _object$pathname === undefined ? '/' : _object$pathname,\n      _object$search = object.search,\n      search = _object$search === undefined ? '' : _object$search,\n      _object$hash = object.hash,\n      hash = _object$hash === undefined ? '' : _object$hash;\n\n\n  return {\n    pathname: pathname,\n    search: search === '?' ? '' : search,\n    hash: hash === '#' ? '' : hash\n  };\n};\n\nvar addBasename = function addBasename(basename, location) {\n  if (!basename) return location;\n\n  return _extends({}, location, {\n    pathname: addLeadingSlash(basename) + location.pathname\n  });\n};\n\nvar stripBasename = function stripBasename(basename, location) {\n  if (!basename) return location;\n\n  var base = addLeadingSlash(basename);\n\n  if (location.pathname.indexOf(base) !== 0) return location;\n\n  return _extends({}, location, {\n    pathname: location.pathname.substr(base.length)\n  });\n};\n\nvar createLocation = function createLocation(location) {\n  return typeof location === 'string' ? parsePath(location) : normalizeLocation(location);\n};\n\nvar createURL = function createURL(location) {\n  return typeof location === 'string' ? location : createPath(location);\n};\n\nvar staticHandler = function staticHandler(methodName) {\n  return function () {\n    invariant(false, 'You cannot %s with <StaticRouter>', methodName);\n  };\n};\n\nvar noop = function noop() {};\n\n/**\n * The public top-level API for a \"static\" <Router>, so-called because it\n * can't actually change the current location. Instead, it just records\n * location changes in a context object. Useful mainly in testing and\n * server-rendering scenarios.\n */\n\nvar StaticRouter = function (_React$Component) {\n  _inherits(StaticRouter, _React$Component);\n\n  function StaticRouter() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, StaticRouter);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.createHref = function (path) {\n      return addLeadingSlash(_this.props.basename + createURL(path));\n    }, _this.handlePush = function (location) {\n      var _this$props = _this.props,\n          basename = _this$props.basename,\n          context = _this$props.context;\n\n      context.action = 'PUSH';\n      context.location = addBasename(basename, createLocation(location));\n      context.url = createURL(context.location);\n    }, _this.handleReplace = function (location) {\n      var _this$props2 = _this.props,\n          basename = _this$props2.basename,\n          context = _this$props2.context;\n\n      context.action = 'REPLACE';\n      context.location = addBasename(basename, createLocation(location));\n      context.url = createURL(context.location);\n    }, _this.handleListen = function () {\n      return noop;\n    }, _this.handleBlock = function () {\n      return noop;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  StaticRouter.prototype.getChildContext = function getChildContext() {\n    return {\n      router: {\n        staticContext: this.props.context\n      }\n    };\n  };\n\n  StaticRouter.prototype.componentWillMount = function componentWillMount() {\n    warning(!this.props.history, '<StaticRouter> ignores the history prop. To use a custom history, ' + 'use `import { Router }` instead of `import { StaticRouter as Router }`.');\n  };\n\n  StaticRouter.prototype.render = function render() {\n    var _props = this.props,\n        basename = _props.basename,\n        context = _props.context,\n        location = _props.location,\n        props = _objectWithoutProperties(_props, ['basename', 'context', 'location']);\n\n    var history = {\n      createHref: this.createHref,\n      action: 'POP',\n      location: stripBasename(basename, createLocation(location)),\n      push: this.handlePush,\n      replace: this.handleReplace,\n      go: staticHandler('go'),\n      goBack: staticHandler('goBack'),\n      goForward: staticHandler('goForward'),\n      listen: this.handleListen,\n      block: this.handleBlock\n    };\n\n    return React.createElement(Router, _extends({}, props, { history: history }));\n  };\n\n  return StaticRouter;\n}(React.Component);\n\nStaticRouter.propTypes = {\n  basename: PropTypes.string,\n  context: PropTypes.object.isRequired,\n  location: PropTypes.oneOfType([PropTypes.string, PropTypes.object])\n};\nStaticRouter.defaultProps = {\n  basename: '',\n  location: '/'\n};\nStaticRouter.childContextTypes = {\n  router: PropTypes.object.isRequired\n};\n\n\nexport default StaticRouter;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-router/es/StaticRouter.js\n// module id = 91\n// module chunks = 0","// Written in this round about way for babel-transform-imports\nimport Switch from 'react-router/es/Switch';\n\nexport default Switch;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-router-dom/es/Switch.js\n// module id = 92\n// module chunks = 0","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport warning from 'warning';\nimport invariant from 'invariant';\nimport matchPath from './matchPath';\n\n/**\n * The public API for rendering the first <Route> that matches.\n */\n\nvar Switch = function (_React$Component) {\n  _inherits(Switch, _React$Component);\n\n  function Switch() {\n    _classCallCheck(this, Switch);\n\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n\n  Switch.prototype.componentWillMount = function componentWillMount() {\n    invariant(this.context.router, 'You should not use <Switch> outside a <Router>');\n  };\n\n  Switch.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    warning(!(nextProps.location && !this.props.location), '<Switch> elements should not change from uncontrolled to controlled (or vice versa). You initially used no \"location\" prop and then provided one on a subsequent render.');\n\n    warning(!(!nextProps.location && this.props.location), '<Switch> elements should not change from controlled to uncontrolled (or vice versa). You provided a \"location\" prop initially but omitted it on a subsequent render.');\n  };\n\n  Switch.prototype.render = function render() {\n    var route = this.context.router.route;\n    var children = this.props.children;\n\n    var location = this.props.location || route.location;\n\n    var match = void 0,\n        child = void 0;\n    React.Children.forEach(children, function (element) {\n      if (!React.isValidElement(element)) return;\n\n      var _element$props = element.props,\n          pathProp = _element$props.path,\n          exact = _element$props.exact,\n          strict = _element$props.strict,\n          sensitive = _element$props.sensitive,\n          from = _element$props.from;\n\n      var path = pathProp || from;\n\n      if (match == null) {\n        child = element;\n        match = path ? matchPath(location.pathname, { path: path, exact: exact, strict: strict, sensitive: sensitive }) : route.match;\n      }\n    });\n\n    return match ? React.cloneElement(child, { location: location, computedMatch: match }) : null;\n  };\n\n  return Switch;\n}(React.Component);\n\nSwitch.contextTypes = {\n  router: PropTypes.shape({\n    route: PropTypes.object.isRequired\n  }).isRequired\n};\nSwitch.propTypes = {\n  children: PropTypes.node,\n  location: PropTypes.object\n};\n\n\nexport default Switch;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-router/es/Switch.js\n// module id = 93\n// module chunks = 0","// Written in this round about way for babel-transform-imports\nimport matchPath from 'react-router/es/matchPath';\n\nexport default matchPath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-router-dom/es/matchPath.js\n// module id = 94\n// module chunks = 0","// Written in this round about way for babel-transform-imports\nimport withRouter from 'react-router/es/withRouter';\n\nexport default withRouter;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-router-dom/es/withRouter.js\n// module id = 95\n// module chunks = 0","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport hoistStatics from 'hoist-non-react-statics';\nimport Route from './Route';\n\n/**\n * A public higher-order component to access the imperative API\n */\nvar withRouter = function withRouter(Component) {\n  var C = function C(props) {\n    var wrappedComponentRef = props.wrappedComponentRef,\n        remainingProps = _objectWithoutProperties(props, ['wrappedComponentRef']);\n\n    return React.createElement(Route, { render: function render(routeComponentProps) {\n        return React.createElement(Component, _extends({}, remainingProps, routeComponentProps, { ref: wrappedComponentRef }));\n      } });\n  };\n\n  C.displayName = 'withRouter(' + (Component.displayName || Component.name) + ')';\n  C.WrappedComponent = Component;\n  C.propTypes = {\n    wrappedComponentRef: PropTypes.func\n  };\n\n  return hoistStatics(C, Component);\n};\n\nexport default withRouter;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-router/es/withRouter.js\n// module id = 96\n// module chunks = 0","import * as actions from \"./actionTypes\";\r\nimport * as synth from \"../../synth/synth\";\r\n\r\nconst initialState = {\r\n  song: 1,\r\n  seed: \"a seed\", //1523983162306\r\n  playButtonText: \"Play\",\r\n  generatedSettings: null,\r\n  isPlaying: true\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actions.SYNTH_PLAY: {\r\n      state = {\r\n        ...state,\r\n        generatedSettings: action.payload,\r\n        playButtonText: \"Stop\",\r\n        isPlaying: true\r\n      };\r\n      break;\r\n    }\r\n\r\n    case actions.SYNTH_STOP: {\r\n      synth.stop();\r\n      state = { ...state, playButtonText: \"Play\", isPlaying: false };\r\n      break;\r\n    }\r\n\r\n    case actions.UPDATE_SEED: {\r\n      const newSeed = action.payload;\r\n      state = { ...state, seed: newSeed };\r\n      break;\r\n    }\r\n\r\n    case actions.UPDATE_GENERATED_SETTINGS: {\r\n      const generatedSettings = action.payload;\r\n      state = { ...state, generatedSettings: generatedSettings };\r\n      break;\r\n    }\r\n\r\n    case actions.SET_SONG: {\r\n      const newSong = action.payload;\r\n      state = {\r\n        ...state,\r\n        song: newSong\r\n      };\r\n      break;\r\n    }\r\n\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return state;\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/App/reducer.js","export const APP_NAME = \"Synaesthesia\";\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/constants.js","export const MODULE_NAME = \"App\";\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/App/constants.js","var isObject = require('./isObject'),\n    now = require('./now'),\n    toNumber = require('./toNumber');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nmodule.exports = debounce;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/debounce.js\n// module id = 101\n// module chunks = 0","var root = require('./_root');\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nmodule.exports = now;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/now.js\n// module id = 102\n// module chunks = 0","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_freeGlobal.js\n// module id = 103\n// module chunks = 0","var isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/toNumber.js\n// module id = 104\n// module chunks = 0","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/isSymbol.js\n// module id = 105\n// module chunks = 0","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_baseGetTag.js\n// module id = 106\n// module chunks = 0","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_getRawTag.js\n// module id = 107\n// module chunks = 0","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_objectToString.js\n// module id = 108\n// module chunks = 0","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/isObjectLike.js\n// module id = 109\n// module chunks = 0","import * as funkyDownTempo from \"./funkyDownTempo\";\r\nimport * as drone from \"./drone\";\r\n\r\nexport default { 1: funkyDownTempo, 2: drone };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/synth/songs/index.js","import Tone from \"tone\";\r\nimport * as scales from \"../scales\";\r\nimport * as parts from \"../parts\";\r\nimport instruments from \"../instruments\";\r\nimport * as rythyms from \"../rythyms\";\r\nimport * as utils from \"../../utils\";\r\n\r\nconst reverb = new Tone.Freeverb().toMaster();\r\nreverb.receive(\"reverb\");\r\n\r\nexport const play = visCallback => {\r\n  Tone.Master.volume.value = -32;\r\n\r\n  const keyType = scales.getRandomScaleType();\r\n  const songKey = {\r\n    root: scales.getRandomRootNote(),\r\n    type: keyType.intervals,\r\n    typeName: keyType.type,\r\n    chordOctave: utils.randomIntBetween(2, 3)\r\n  };\r\n\r\n  const progressionIntervals = utils.randomFromArray(scales.chordProgressions);\r\n  const chordTypesToUseInProgression = scales.getRandomChordTypesForProgression(progressionIntervals);\r\n  const chordProgression = scales.getChordProgressionForKey(songKey, progressionIntervals, chordTypesToUseInProgression);\r\n  const possibleChordSectionLengths = [1, 2, 4, 8];\r\n  const chordProgressionBars = utils.randomFromArray(possibleChordSectionLengths);\r\n  const possibleChordPads = [instruments.pads.SimpleSine, instruments.pads.SwirlySawtoothChorusWithSubBass, instruments.pads.SoftSquareFm];\r\n  const possibleBassInstruments = [instruments.bass.FastAttackSquare, instruments.presets.Bassy];\r\n  const possibleMotifInstruments = [instruments.presets.AM_Tiny, instruments.presets.Kalimba];\r\n  const kickRythym = rythyms.randomKickRythym();\r\n  const hihatRythym = rythyms.randomHiHatRythym();\r\n  const shakerRythym = rythyms.randomShakerRythym();\r\n  const openHatRythym = rythyms.randomOpenHatRythym();\r\n  const snareRythym = rythyms.randomSnareRythym();\r\n\r\n  const bassLinePatterns = [];\r\n  for (let i = 0; i < chordProgression.length; i++) {\r\n    bassLinePatterns.push(rythyms.randomBassRythym());\r\n  }\r\n  const motifPatterns = [];\r\n  for (let i = 0; i < chordProgression.length; i++) {\r\n    motifPatterns.push(rythyms.randomMotifRythym());\r\n  }\r\n\r\n  const chordInstrument = new (utils.randomFromArray(possibleChordPads))();\r\n  const bassInstrument = new (utils.randomFromArray(possibleBassInstruments))();\r\n  const motifInstrument = new (utils.randomFromArray(possibleMotifInstruments))();\r\n  const openHatFrequency = Tone.Frequency(songKey.root + \"3\").toFrequency();\r\n\r\n  const generatedSettings = {\r\n    bpm: utils.randomIntBetween(70, 90),\r\n    swing: Math.random(),\r\n    key: `${songKey.root} (${songKey.typeName})`,\r\n    chordOctave: songKey.chordOctave,\r\n    chordProgression: progressionIntervals,\r\n    chordProgressionBars: chordProgressionBars,\r\n    chordTypesToUseInProgression: chordTypesToUseInProgression,\r\n    chordProgressionNotes: scales.rootNotesFromChordProgression(chordProgression),\r\n    chordInstrument: chordInstrument.constructor.name,\r\n    bassInstrument: bassInstrument.constructor.name,\r\n    motifInstrument: motifInstrument.constructor.name\r\n  };\r\n\r\n  const changeRythym = (sequencer, newRythym) => {\r\n    const originalLength = sequencer.length;\r\n    newRythym.forEach((item, index) => {\r\n      sequencer.at(index, item);\r\n    });\r\n    const numberToRemove = originalLength - newRythym.length;\r\n    for (let i = numberToRemove; i > 0; i--) {\r\n      sequencer.remove(newRythym.length + i - 1);\r\n    }\r\n  };\r\n\r\n  parts.addDrums(\"0:0:0\", songKey.root + \"0\", new instruments.drums.KickDrum(), kickRythym, 1, true, function(sequencer) {\r\n    changeRythym(sequencer, rythyms.randomKickRythym());\r\n  });\r\n\r\n  parts.addDrums(\"0:0:0\", undefined, new instruments.drums.Slap(), snareRythym, 0.9, true, function(sequencer) {\r\n    changeRythym(sequencer, rythyms.randomSnareRythym());\r\n  });\r\n\r\n  parts.addDrums(\"0:0:0\", undefined, new instruments.drums.HiHat(), hihatRythym, 0.9, true, function(sequencer) {\r\n    changeRythym(sequencer, rythyms.randomHiHatRythym());\r\n  });\r\n\r\n  parts.addDrums(\"0:0:0\", undefined, new instruments.drums.Shaker(), shakerRythym, 0.8, true, function(sequencer) {\r\n    changeRythym(sequencer, rythyms.randomShakerRythym());\r\n  });\r\n\r\n  parts.addDrums(\"0:0:0\", undefined, new instruments.drums.OpenHat(openHatFrequency), openHatRythym, 0.8, true, function(sequencer) {\r\n    changeRythym(sequencer, rythyms.randomOpenHatRythym());\r\n  });\r\n\r\n  parts.addChordProgression(\"0:0:0\", chordProgression, chordInstrument, `${chordProgressionBars}m`, `${chordProgressionBars}m`, true, visCallback);\r\n\r\n  const notesPerChord = [];\r\n  for (const bassLinePattern of bassLinePatterns) {\r\n    notesPerChord.push(bassLinePattern.filter(hit => hit === 1).length);\r\n  }\r\n  const bassOctave = songKey.chordOctave - 1;\r\n\r\n  parts.addRepeatingSoloPart(\r\n    \"0:0:0\",\r\n    scales.smoothBassLineForChordProgression(notesPerChord, chordProgression, songKey, bassOctave),\r\n    bassInstrument,\r\n    \"4n\",\r\n    bassLinePatterns,\r\n    chordProgressionBars,\r\n    true\r\n  );\r\n\r\n  const motifOctave = songKey.chordOctave + 1;\r\n  parts.addRepeatingSoloPart(\r\n    \"0:0:0\",\r\n    scales.motifForChordProgression(notesPerChord, chordProgression, songKey, motifOctave),\r\n    motifInstrument,\r\n    1.3,\r\n    motifPatterns,\r\n    chordProgressionBars,\r\n    true\r\n  );\r\n\r\n  // const evolutionLoop = new Tone.Loop(function() {\r\n  //   const parts = [kickPart, snarePart, hihatPart, shakerPart, openHatPart];\r\n  //   const part = utils.randomFromArray(parts);\r\n  //   part.mutate();\r\n  // }, \"4m\");\r\n  // evolutionLoop.start(0);\r\n\r\n  return generatedSettings;\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/synth/songs/funkyDownTempo.js","import Tone from \"tone\";\r\n\r\nexport const addChordProgression = (startTime, chordProgression, instrument, noteLength, interval, shouldLoop, visCallback) => {\r\n  const loop = new Tone.Loop(function(time) {\r\n    //Take first chord\r\n    const currentChord = chordProgression.shift();\r\n    //add chord to back of queue\r\n    chordProgression.push(currentChord);\r\n    //play it\r\n    instrument.triggerAttackRelease(currentChord, noteLength, time);\r\n\r\n    Tone.Draw.schedule(function() {\r\n      //the callback synced to the animation frame at the given time\r\n      if (visCallback) {\r\n        visCallback(currentChord);\r\n      }\r\n    }, time);\r\n  }, interval);\r\n\r\n  loop.loop = shouldLoop;\r\n  loop.start(startTime);\r\n};\r\n\r\nexport const addDrums = (startTime, note, instrument, pattern, probability, shouldLoop, mutationFunction) => {\r\n  const sequencer = new Tone.Sequence(\r\n    function(time, hit) {\r\n      if (hit === 1) {\r\n        instrument.triggerAttackRelease(note, \"16n\", time);\r\n      }\r\n    },\r\n    pattern,\r\n    \"16n\"\r\n  );\r\n  sequencer.probability = probability;\r\n  sequencer.loop = shouldLoop;\r\n  sequencer.start(startTime);\r\n\r\n  return new Part(sequencer, mutationFunction);\r\n};\r\n\r\nexport const addSoloPart = (startTime, notes, instrument, noteLength, pattern, probability, shouldLoop) => {\r\n  const sequencer = new Tone.Sequence(\r\n    function(time, hit) {\r\n      if (hit === 1) {\r\n        const note = notes.shift();\r\n        notes.push(note);\r\n        instrument.triggerAttackRelease(note, noteLength, time);\r\n      }\r\n    },\r\n    pattern,\r\n    \"16n\"\r\n  );\r\n\r\n  sequencer.probability = probability;\r\n  sequencer.loop = shouldLoop;\r\n  sequencer.start(startTime);\r\n};\r\n\r\nexport const addRepeatingSoloPart = (startTime, notes, instrument, noteLength, patterns, repeatTimes, shouldLoop) => {\r\n  const expandedSequence = [];\r\n  for (const section of notes) {\r\n    for (let ri = 0; ri < repeatTimes; ri++) {\r\n      for (let ni = 0; ni < section.length; ni++) {\r\n        const note = section[ni];\r\n        expandedSequence.push(note);\r\n      }\r\n    }\r\n  }\r\n\r\n  const expandedPattern = [];\r\n  for (const section of patterns) {\r\n    for (let ri = 0; ri < repeatTimes; ri++) {\r\n      for (let ni = 0; ni < section.length; ni++) {\r\n        const rythym = section[ni];\r\n        expandedPattern.push(rythym);\r\n      }\r\n    }\r\n  }\r\n\r\n  const sequencer = new Tone.Sequence(\r\n    function(time, hit) {\r\n      if (hit === 1) {\r\n        const note = expandedSequence.shift();\r\n        expandedSequence.push(note);\r\n        instrument.triggerAttackRelease(note, noteLength, time);\r\n      }\r\n    },\r\n    expandedPattern,\r\n    \"16n\"\r\n  );\r\n\r\n  sequencer.loop = shouldLoop;\r\n  sequencer.start(startTime);\r\n};\r\n\r\nexport function Part(mutationPayload, mutationFunction) {\r\n  this.mutationFunction = mutationFunction;\r\n  this.mutate = function() {\r\n    this.mutationFunction(mutationPayload);\r\n  };\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/synth/parts.js","import Tone from \"tone\";\r\nimport * as bass from \"./bass\";\r\nimport { Instrument } from \"./instrument\";\r\n\r\nexport class SimpleSine extends Instrument {\r\n  constructor(volume = 24) {\r\n    super(new Tone.PolySynth(6, Tone.Synth), volume);\r\n    this.synth.set({\r\n      oscillator: {\r\n        type: \"fatsine\"\r\n      },\r\n      envelope: {\r\n        attack: 0.2,\r\n        decay: 0.1,\r\n        sustain: 1,\r\n        release: 1\r\n      },\r\n      portamento: 0.2\r\n    });\r\n    this.synth.volume.value = 10;\r\n    this.synth.send(\"reverb\", -12);\r\n  }\r\n}\r\n\r\nexport class SoftSquareFm extends Instrument {\r\n  constructor(volume = 24) {\r\n    super(new Tone.PolySynth(6, Tone.Synth), volume);\r\n    this.synth.set({\r\n      oscillator: {\r\n        type: \"fmsquare2\"\r\n      },\r\n      envelope: {\r\n        attack: 0.2,\r\n        decay: 0.1,\r\n        sustain: 1,\r\n        release: 1\r\n      },\r\n      portamento: 0\r\n    });\r\n    this.synth.volume.value = 8;\r\n\r\n    const filter = new Tone.Filter(400, \"lowpass\").toMaster();\r\n    this.synth.send(\"reverb\", -12);\r\n    this.synth.connect(filter);\r\n  }\r\n}\r\n\r\nexport const SwirlySawtoothChorusWithSubBass = function() {\r\n  const chordSynth = new Tone.PolySynth(6, Tone.Synth);\r\n  chordSynth.set({\r\n    oscillator: {\r\n      type: \"fatsawtooth\"\r\n    },\r\n    envelope: {\r\n      attack: 0.2,\r\n      decay: 0.1,\r\n      sustain: 1,\r\n      release: 1\r\n    },\r\n    portamento: 0.2\r\n  });\r\n  const filter = new Tone.Filter(250, \"lowpass\").toMaster();\r\n\r\n  const lfo = new Tone.LFO(\"8m\", 250, 1600);\r\n  lfo.start();\r\n  lfo.connect(filter.frequency);\r\n\r\n  const chorus = new Tone.Chorus(\"1:0:0\", 2.5, 1).toMaster();\r\n  const reverb = new Tone.Freeverb().toMaster();\r\n\r\n  const lfoReverbDampening = new Tone.LFO(\"8m\", 400, 14000);\r\n  lfoReverbDampening.phase = 90;\r\n  lfoReverbDampening.start();\r\n  lfoReverbDampening.connect(reverb.dampening);\r\n\r\n  chordSynth.chain(chorus, reverb, filter);\r\n\r\n  //Add bass for the root note\r\n  const bassSynth = bass.subBass();\r\n  bassSynth.volume.value = bassSynth.volume.value - 12;\r\n\r\n  this.triggerAttackRelease = (chord, duration, time) => {\r\n    const lowRootNote = Tone.Frequency(chord[0]).transpose(-12);\r\n    chordSynth.triggerAttackRelease(chord, duration, time);\r\n    bassSynth.triggerAttackRelease(lowRootNote, duration, time);\r\n  };\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/synth/instruments/pads.js","import Tone from \"tone\";\r\nimport { Instrument } from \"./instrument\";\r\n\r\nexport class KickDrum extends Instrument {\r\n  constructor() {\r\n    super(new Tone.MembraneSynth({ pitchDecay: 0.1 }), 28);\r\n    var comp = new Tone.Compressor(-30, 12).toMaster();\r\n    this.synth.connect(comp);\r\n  }\r\n}\r\nexport class HiHat extends Instrument {\r\n  constructor(addReverb) {\r\n    super(new Tone.NoiseSynth(), 16);\r\n    if (addReverb) {\r\n      this.synth.send(\"reverb\", -12);\r\n    }\r\n    const filter = new Tone.Filter(8000, \"highpass\").toMaster();\r\n    this.synth.connect(filter);\r\n  }\r\n}\r\n\r\nexport class Slap extends Instrument {\r\n  constructor(addReverb) {\r\n    super(\r\n      new Tone.NoiseSynth({\r\n        noise: {\r\n          type: \"white\",\r\n          playbackRate: 5\r\n        },\r\n        envelope: {\r\n          attack: 0.001,\r\n          decay: 0.3,\r\n          sustain: 0,\r\n          release: 0.3\r\n        }\r\n      }),\r\n      14\r\n    );\r\n    if (addReverb) {\r\n      this.synth.send(\"reverb\", -12);\r\n    }\r\n\r\n    const filter = new Tone.Filter(500, \"lowpass\").toMaster();\r\n    this.synth.connect(filter);\r\n  }\r\n}\r\n\r\nexport class OpenHat extends Instrument {\r\n  constructor(frequency) {\r\n    super(\r\n      new Tone.MetalSynth({\r\n        frequency: frequency\r\n      }),\r\n      10\r\n    );\r\n  }\r\n}\r\n\r\nexport class Shaker extends Instrument {\r\n  constructor(frequency) {\r\n    super(\r\n      new Tone.MetalSynth({\r\n        envelope: {\r\n          attack: 0.1,\r\n          decay: 0.4,\r\n          release: 0.3\r\n        },\r\n        frequency: frequency,\r\n        //harmonicity: 5.1,\r\n        modulationIndex: 64,\r\n        resonance: 3000,\r\n        octaves: 1.5\r\n      }),\r\n      5\r\n    );\r\n  }\r\n}\r\n\r\nexport class DampenedOpenHat extends Instrument {\r\n  constructor(frequency) {\r\n    super(\r\n      new Tone.MetalSynth({\r\n        frequency: frequency,\r\n        //harmonicity: 5.1,\r\n        modulationIndex: 32,\r\n        resonance: 1000,\r\n        octaves: 1.5\r\n      }),\r\n      8\r\n    );\r\n  }\r\n}\r\n\r\nexport class Test extends Instrument {\r\n  constructor() {\r\n    super(new Tone.MetalSynth({ frequency: 200 }), 16);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/synth/instruments/drums.js","import Tone from \"tone\";\r\nimport { Instrument } from \"./instrument\";\r\n\r\nexport class SimpleSine extends Instrument {\r\n  constructor() {\r\n    super(\r\n      new Tone.Synth({\r\n        oscillator: {\r\n          type: \"sine\"\r\n        },\r\n        envelope: {\r\n          attack: 0.02,\r\n          decay: 0,\r\n          sustain: 1,\r\n          release: 1\r\n        }\r\n      }),\r\n      18\r\n    );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/synth/instruments/lead.js","// http://tonejs.github.io/Presets/\r\n\r\nimport Tone from \"tone\";\r\nimport { Instrument } from \"./instrument\";\r\n\r\nexport class Tiny extends Instrument {\r\n  constructor() {\r\n    super(new Tone.PolySynth(6, Tone.Synth), 24);\r\n    this.synth.set({\r\n      harmonicity: 2,\r\n      oscillator: {\r\n        type: \"amsine2\",\r\n        modulationType: \"sine\",\r\n        harmonicity: 1.01\r\n      },\r\n      envelope: {\r\n        attack: 0.006,\r\n        decay: 4,\r\n        sustain: 0.04,\r\n        release: 1.2\r\n      },\r\n      modulation: {\r\n        volume: 13,\r\n        type: \"amsine2\",\r\n        modulationType: \"sine\",\r\n        harmonicity: 12\r\n      },\r\n      modulationEnvelope: {\r\n        attack: 0.006,\r\n        decay: 0.2,\r\n        sustain: 0.2,\r\n        release: 0.4\r\n      }\r\n    });\r\n    this.synth.volume.value = 10;\r\n\r\n    this.synth.send(\"reverb\", -12);\r\n  }\r\n}\r\n\r\nexport class Harmonics extends Instrument {\r\n  constructor() {\r\n    super(new Tone.PolySynth(6, Tone.AMSynth), 24);\r\n    this.synth.set({\r\n      volume: 16,\r\n      harmonicity: 3.999,\r\n      oscillator: {\r\n        type: \"square\"\r\n      },\r\n      envelope: {\r\n        attack: 0.03,\r\n        decay: 0.3,\r\n        sustain: 0.7,\r\n        release: 0.8\r\n      },\r\n      modulation: {\r\n        volume: 12,\r\n        type: \"square6\"\r\n      },\r\n      modulationEnvelope: {\r\n        attack: 2,\r\n        decay: 3,\r\n        sustain: 0.8,\r\n        release: 0.1\r\n      }\r\n    });\r\n    this.synth.volume.value = 10;\r\n\r\n    this.synth.send(\"reverb\", -12);\r\n  }\r\n}\r\n\r\nexport class AM_Tiny extends Instrument {\r\n  constructor() {\r\n    super(new Tone.PolySynth(6, Tone.AMSynth), 24);\r\n    this.synth.set({\r\n      volume: 14,\r\n      harmonicity: 2,\r\n      oscillator: {\r\n        type: \"amsine2\",\r\n        modulationType: \"sine\",\r\n        harmonicity: 1.01\r\n      },\r\n      envelope: {\r\n        attack: 0.006,\r\n        decay: 4,\r\n        sustain: 0.04,\r\n        release: 1.2\r\n      },\r\n      modulation: {\r\n        volume: 13,\r\n        type: \"amsine2\",\r\n        modulationType: \"sine\",\r\n        harmonicity: 12\r\n      },\r\n      modulationEnvelope: {\r\n        attack: 0.006,\r\n        decay: 0.2,\r\n        sustain: 0.2,\r\n        release: 0.4\r\n      }\r\n    });\r\n    this.synth.volume.value = 14;\r\n\r\n    this.synth.send(\"reverb\", -12);\r\n  }\r\n}\r\n\r\nexport class FM_ElectricCello extends Instrument {\r\n  constructor() {\r\n    super(new Tone.PolySynth(6, Tone.FMSynth), 24);\r\n    this.synth.set({\r\n      volume: 20,\r\n      harmonicity: 3.01,\r\n      modulationIndex: 14,\r\n      oscillator: {\r\n        type: \"triangle\"\r\n      },\r\n      envelope: {\r\n        attack: 0.2,\r\n        decay: 0.3,\r\n        sustain: 0.9,\r\n        release: 1.2\r\n      },\r\n      modulation: {\r\n        type: \"square\"\r\n      },\r\n      modulationEnvelope: {\r\n        attack: 0.01,\r\n        decay: 0.5,\r\n        sustain: 0.2,\r\n        release: 0.1\r\n      }\r\n    });\r\n    this.synth.volume.value = 10;\r\n\r\n    this.synth.send(\"reverb\", -12);\r\n  }\r\n}\r\n\r\nexport class Kalimba extends Instrument {\r\n  constructor() {\r\n    super(\r\n      new Tone.FMSynth({\r\n        harmonicity: 8,\r\n        modulationIndex: 2,\r\n        oscillator: {\r\n          type: \"sine\"\r\n        },\r\n        envelope: {\r\n          attack: 0.001,\r\n          decay: 2,\r\n          sustain: 0.1,\r\n          release: 2\r\n        },\r\n        modulation: {\r\n          type: \"square\"\r\n        },\r\n        modulationEnvelope: {\r\n          attack: 0.002,\r\n          decay: 0.2,\r\n          sustain: 0,\r\n          release: 0.2\r\n        }\r\n      }),\r\n      18\r\n    );\r\n  }\r\n}\r\n\r\nexport class BassGuitar extends Instrument {\r\n  constructor() {\r\n    super(\r\n      new Tone.MonoSynth({\r\n        oscillator: {\r\n          type: \"fmsquare5\",\r\n          modulationType: \"triangle\",\r\n          modulationIndex: 2,\r\n          harmonicity: 0.501\r\n        },\r\n        filter: {\r\n          Q: 1,\r\n          type: \"lowpass\",\r\n          rolloff: -24\r\n        },\r\n        envelope: {\r\n          attack: 0.01,\r\n          decay: 0.1,\r\n          sustain: 0.4,\r\n          release: 2\r\n        },\r\n        filterEnvelope: {\r\n          attack: 0.01,\r\n          decay: 0.1,\r\n          sustain: 0.8,\r\n          release: 1.5,\r\n          baseFrequency: 50,\r\n          octaves: 4.4\r\n        }\r\n      }),\r\n      18\r\n    );\r\n  }\r\n}\r\n\r\nexport class Bassy extends Instrument {\r\n  constructor() {\r\n    super(\r\n      new Tone.MonoSynth({\r\n        portamento: 0.08,\r\n        oscillator: {\r\n          partials: [2, 1, 3, 2, 0.4]\r\n        },\r\n        filter: {\r\n          Q: 4,\r\n          type: \"lowpass\",\r\n          rolloff: -48\r\n        },\r\n        envelope: {\r\n          attack: 0.04,\r\n          decay: 0.06,\r\n          sustain: 0.4,\r\n          release: 1\r\n        },\r\n        filterEnvelope: {\r\n          attack: 0.01,\r\n          decay: 0.1,\r\n          sustain: 0.6,\r\n          release: 1.5,\r\n          baseFrequency: 50,\r\n          octaves: 3.4\r\n        }\r\n      }),\r\n      18\r\n    );\r\n  }\r\n}\r\nexport class Coolguy extends Instrument {\r\n  constructor() {\r\n    super(new Tone.PolySynth(6, Tone.MonoSynth), 24);\r\n    this.synth.set({\r\n      oscillator: {\r\n        type: \"pwm\",\r\n        modulationFrequency: 1\r\n      },\r\n      filter: {\r\n        Q: 6,\r\n        rolloff: -24\r\n      },\r\n      envelope: {\r\n        attack: 0.025,\r\n        decay: 0.3,\r\n        sustain: 0.9,\r\n        release: 2\r\n      },\r\n      filterEnvelope: {\r\n        attack: 0.245,\r\n        decay: 0.131,\r\n        sustain: 0.5,\r\n        release: 2,\r\n        baseFrequency: 20,\r\n        octaves: 7.2,\r\n        exponent: 2\r\n      }\r\n    });\r\n    this.synth.volume.value = 10;\r\n\r\n    this.synth.send(\"reverb\", -12);\r\n  }\r\n}\r\n\r\nexport class Bah extends Instrument {\r\n  constructor() {\r\n    super(new Tone.PolySynth(6, Tone.MonoSynth), 24);\r\n    this.synth.set({\r\n      volume: 24,\r\n      oscillator: {\r\n        type: \"sawtooth\"\r\n      },\r\n      filter: {\r\n        Q: 2,\r\n        type: \"bandpass\",\r\n        rolloff: -24\r\n      },\r\n      envelope: {\r\n        attack: 0.01,\r\n        decay: 0.1,\r\n        sustain: 0.2,\r\n        release: 0.6\r\n      },\r\n      filterEnvelope: {\r\n        attack: 0.02,\r\n        decay: 0.4,\r\n        sustain: 1,\r\n        release: 0.7,\r\n        releaseCurve: \"linear\",\r\n        baseFrequency: 20,\r\n        octaves: 5\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport class AlienChorus extends Instrument {\r\n  constructor() {\r\n    super(new Tone.PolySynth(6, Tone.Synth), 24);\r\n    this.synth.set({\r\n      oscillator: {\r\n        type: \"fatsine4\",\r\n        spread: 60,\r\n        count: 10\r\n      },\r\n      envelope: {\r\n        attack: 0.4,\r\n        decay: 0.01,\r\n        sustain: 1,\r\n        attackCurve: \"sine\",\r\n        releaseCurve: \"sine\",\r\n        release: 0.4\r\n      }\r\n    });\r\n    this.synth.volume.value = 10;\r\n\r\n    this.synth.send(\"reverb\", -12);\r\n  }\r\n}\r\n\r\nexport class Gravel extends Instrument {\r\n  constructor() {\r\n    super(new Tone.PolySynth(6, Tone.NoiseSynth), 24);\r\n    this.synth.set({\r\n      noise: {\r\n        type: \"pink\",\r\n        playbackRate: 0.1\r\n      },\r\n      envelope: {\r\n        attack: 0.5,\r\n        decay: 2,\r\n        sustain: 0.5,\r\n        release: 3\r\n      }\r\n    });\r\n    this.synth.volume.value = 10;\r\n\r\n    this.synth.send(\"reverb\", -12);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/synth/instruments/presets.js","import * as utils from \"../utils\";\r\n\r\nconst kicks = [\r\n  [1, 0, 0, 0],\r\n  [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0],\r\n  [1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0],\r\n  [1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0],\r\n  [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0]\r\n];\r\nconst snares = [\r\n  [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0]\r\n];\r\n\r\nconst hiHats = [\r\n  [0, 1, 0, 0],\r\n  [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1],\r\n  [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0],\r\n  [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1],\r\n  [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0]\r\n];\r\nconst bass = [\r\n  [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0],\r\n  [1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0],\r\n  [1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0],\r\n  [1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0],\r\n  [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0],\r\n  [1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0],\r\n  [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0],\r\n  [1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0],\r\n  [1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0]\r\n];\r\nconst shakers = [\r\n  [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0],\r\n  [1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0],\r\n  [1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0],\r\n  [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0]\r\n];\r\n\r\nconst openHats = [\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0],\r\n  [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0]\r\n];\r\n\r\nconst motifs = [[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0]];\r\n\r\nexport const randomMotifRythym = () => {\r\n  return utils.randomFromArray(motifs);\r\n};\r\n\r\nexport const randomHiHatRythym = () => {\r\n  return utils.randomFromArray(hiHats);\r\n};\r\n\r\nexport const randomSnareRythym = () => {\r\n  return utils.randomFromArray(snares);\r\n};\r\n\r\nexport const randomKickRythym = () => {\r\n  return utils.randomFromArray(kicks);\r\n};\r\n\r\nexport const randomBassRythym = () => {\r\n  return utils.randomFromArray(bass);\r\n};\r\n\r\nexport const randomShakerRythym = () => {\r\n  return utils.randomFromArray(shakers);\r\n};\r\n\r\nexport const randomOpenHatRythym = () => {\r\n  return utils.randomFromArray(openHats);\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/synth/rythyms.js","import Tone from \"tone\";\r\nimport * as utils from \"../../utils\";\r\nimport * as scales from \"../scales\";\r\nimport instruments from \"../instruments\";\r\n\r\nconst fmOscillator = (note, volume = 0) => {\r\n  const oscType = utils.randomFromArray([\"sine\", \"square4\"]);\r\n  const osc = new Tone.FMOscillator(note, oscType, \"square\").toMaster().start(0.5);\r\n  osc.volume.value = volume;\r\n  return osc;\r\n};\r\nconst transpose = (freq, semitones) => {\r\n  return Tone.Frequency(freq).transpose(semitones);\r\n};\r\nexport const play = visCallback => {\r\n  Tone.Master.volume.value = -32;\r\n\r\n  const config = {\r\n    lowestOscVolume: -50,\r\n    changeFrequencyInterval: \"4m\",\r\n    changeVolumeInterval: \"3m\",\r\n    bassInterval: \"4m\",\r\n    harmonyInterval: \"7m\",\r\n    harmonyFadeOutTime: \"+2:0:0\",\r\n    harmonyOscVolume: -4,\r\n    extraOscillatorInterval: \"6m\",\r\n    extraOscillatorFadeOutTime: \"+2:2:0\",\r\n    changeRootInterval: \"64m\"\r\n  };\r\n\r\n  const masterScale = scales.getRandomScaleType();\r\n  const root = scales.getRandomRootNote();\r\n  const rootFreq = Tone.Frequency(root + \"0\");\r\n  const oscScale = scales.actualNotesFromScale(rootFreq.toNote(), masterScale.intervals, 2, 3);\r\n  const harmonyNotes = utils.shuffleArray(scales.actualNotesFromScale(rootFreq.toNote(), masterScale.intervals, 3, 3));\r\n  const harmonyOscillator = fmOscillator(rootFreq, config.lowestOscVolume);\r\n\r\n  let oscillatorsWithEffects = [];\r\n  let oscillatorsWithFrequencyChange = [];\r\n  let oscillatorsWithVolumeChange = [];\r\n  let extraOscillators = [];\r\n\r\n  let changeRootAndTransposeAllToMatch = null;\r\n  const changeRootRampTime = \"+4:0:0\";\r\n\r\n  //Create the bass pattern\r\n  const bassInstrument = new instruments.bass.FastAttackSquare();\r\n  const bassPattern = new Tone.Pattern(\r\n    function(time, note) {\r\n      bassInstrument.triggerAttackRelease(note, config.bassInterval, time);\r\n      Tone.Draw.schedule(function() {\r\n        if (visCallback) {\r\n          visCallback();\r\n        }\r\n      }, time);\r\n    },\r\n    scales.actualNotesFromScale(rootFreq.toNote(), masterScale.intervals, 1, 2),\r\n    \"randomWalk\"\r\n  );\r\n  bassPattern.interval = config.bassInterval;\r\n  bassPattern.start();\r\n\r\n  const oscRoot = fmOscillator(rootFreq);\r\n  const oscRootO2 = fmOscillator(transpose(rootFreq, 12));\r\n  const oscRootO3 = fmOscillator(transpose(rootFreq, 24));\r\n  const osc3 = fmOscillator(oscScale[2], config.lowestOscVolume);\r\n  const osc5 = fmOscillator(oscScale[4], config.lowestOscVolume);\r\n  const osc7 = fmOscillator(oscScale[6], config.lowestOscVolume);\r\n  const osc9 = fmOscillator(oscScale[8], config.lowestOscVolume);\r\n  const osc11 = fmOscillator(oscScale[10], config.lowestOscVolume);\r\n  const osc13 = fmOscillator(oscScale[12], config.lowestOscVolume);\r\n\r\n  oscillatorsWithEffects = [harmonyOscillator, oscRoot, oscRootO2, oscRootO3, osc3, osc5, osc7, osc9, osc11, osc13];\r\n  oscillatorsWithFrequencyChange = oscillatorsWithEffects;\r\n  oscillatorsWithVolumeChange = [oscRoot, oscRootO2, oscRootO3, osc3];\r\n  extraOscillators = [osc5, osc7, osc9, osc11, osc13];\r\n\r\n  changeRootAndTransposeAllToMatch = newRoot => {\r\n    newRoot = Tone.Frequency(newRoot);\r\n    const newScale = scales.actualNotesFromScale(newRoot.toNote(), masterScale.intervals, 2, 3);\r\n    //Change the oscillators to the new notes\r\n    oscRoot.frequency.linearRampToValueAtTime(newRoot, changeRootRampTime);\r\n    oscRootO2.frequency.linearRampToValueAtTime(transpose(newRoot, 24), changeRootRampTime);\r\n    osc3.frequency.linearRampToValueAtTime(newScale[2], changeRootRampTime);\r\n    osc5.frequency.linearRampToValueAtTime(newScale[4], changeRootRampTime);\r\n    osc7.frequency.linearRampToValueAtTime(newScale[6], changeRootRampTime);\r\n    osc9.frequency.linearRampToValueAtTime(newScale[8], changeRootRampTime);\r\n    osc11.frequency.linearRampToValueAtTime(newScale[10], changeRootRampTime);\r\n    bassPattern.values = scales.actualNotesFromScale(newRoot.toNote(), masterScale.intervals, 1, 2);\r\n  };\r\n\r\n  const chorus = new Tone.Chorus(2, 2.5, 0.5).toMaster();\r\n  const reverb = new Tone.Freeverb().toMaster();\r\n  const phaser = new Tone.Phaser(0.2).toMaster();\r\n  const autoWah = new Tone.AutoWah().toMaster();\r\n\r\n  oscillatorsWithEffects.forEach(osc => {\r\n    osc.connect(chorus);\r\n    osc.connect(phaser);\r\n    osc.connect(autoWah);\r\n    osc.connect(reverb);\r\n\r\n    osc.frequencyChangeActive = true;\r\n    osc.volumeChangeActive = true;\r\n  });\r\n\r\n  const frequencyChangeLoop = new Tone.Loop(() => {\r\n    const frequencyChangeOscillator = utils.randomFromArray(oscillatorsWithFrequencyChange);\r\n\r\n    //frequency change\r\n    if (frequencyChangeOscillator.frequencyChangeActive) {\r\n      const transposeAmount = 0.125;\r\n      frequencyChangeOscillator.frequency.exponentialRampToValueAtTime(\r\n        Tone.Frequency(frequencyChangeOscillator.frequency.value).transpose(transposeAmount),\r\n        \"+0:2:0\"\r\n      );\r\n      frequencyChangeOscillator.transposeAmount = transposeAmount;\r\n    } else {\r\n      frequencyChangeOscillator.frequency.exponentialRampToValueAtTime(\r\n        Tone.Frequency(frequencyChangeOscillator.frequency.value).transpose(frequencyChangeOscillator.transposeAmount * -1),\r\n        \"+0:2:0\"\r\n      );\r\n    }\r\n    frequencyChangeOscillator.frequencyChangeActive = !frequencyChangeOscillator.frequencyChangeActive;\r\n  }, config.changeFrequencyInterval);\r\n  frequencyChangeLoop.start(config.changeFrequencyInterval);\r\n\r\n  const volumeChangeLoop = new Tone.Loop(() => {\r\n    oscillatorsWithVolumeChange.forEach(osc => {\r\n      osc.volume.exponentialRampToValueAtTime(0, \"+1:0:0\");\r\n    });\r\n    const volumeChangeOscillator = utils.randomFromArray(oscillatorsWithVolumeChange);\r\n    volumeChangeOscillator.volume.exponentialRampToValueAtTime(-6, \"+1:0:0\");\r\n  }, config.changeVolumeInterval);\r\n  volumeChangeLoop.start(config.changeVolumeInterval);\r\n\r\n  //initialize the noise and start\r\n  const noise = new Tone.Noise(\"pink\").start();\r\n  noise.volume.value = 9;\r\n  const noiseAutoFilter = new Tone.AutoFilter({\r\n    frequency: \"8m\",\r\n    min: 800,\r\n    max: 15000\r\n  }).toMaster();\r\n  noise.connect(noiseAutoFilter);\r\n  noiseAutoFilter.start();\r\n\r\n  //Subtly modulate the noise volume\r\n  const noiseVolumeLfo = new Tone.LFO(\"9m\", 8, 10);\r\n  noiseVolumeLfo.start();\r\n  noiseVolumeLfo.connect(noise.volume);\r\n\r\n  //Subtly modulate the reverb\r\n  const reverbRoomSizeLfo = new Tone.LFO(\"7m\", 0.7, 0.9);\r\n  reverbRoomSizeLfo.start();\r\n  reverbRoomSizeLfo.connect(reverb.roomSize);\r\n\r\n  //Subtly modulate the reverb\r\n  const reverbDampeningLfo = new Tone.LFO(\"6m\", 1000, 4000);\r\n  reverbDampeningLfo.start();\r\n  reverbDampeningLfo.connect(reverb.dampening);\r\n\r\n  //Fade in and out one other random oscillator\r\n  const extraOscillatorLoop = new Tone.Loop(() => {\r\n    const oscs = [...extraOscillators];\r\n    const extraOscillator = utils.randomFromArray(oscs);\r\n    extraOscillators.forEach(osc => {\r\n      if (osc !== extraOscillator) {\r\n        osc.volume.exponentialRampToValueAtTime(config.lowestOscVolume, \"+1:0:0\");\r\n      }\r\n    });\r\n    Tone.Transport.scheduleOnce(function(time) {\r\n      extraOscillator.volume.rampTo(0, \"1m\", time);\r\n    }, config.extraOscillatorFadeOutTime);\r\n  }, config.extraOscillatorInterval);\r\n  // extraOscillatorLoop.probability = 0.7;\r\n  extraOscillatorLoop.start(config.extraOscillatorInterval);\r\n\r\n  const harmonyOscillatorLoop = new Tone.Loop(time => {\r\n    const note = harmonyNotes.shift();\r\n    harmonyOscillator.frequency.value = note;\r\n    harmonyOscillator.volume.rampTo(config.harmonyOscVolume, \"1m\", time);\r\n\r\n    Tone.Transport.scheduleOnce(function(time) {\r\n      harmonyOscillator.volume.rampTo(config.lowestOscVolume, \"1m\", time);\r\n    }, config.harmonyFadeOutTime);\r\n    harmonyNotes.push(note);\r\n  }, config.harmonyInterval);\r\n  // harmonyOscillatorLoop.probability = 0.8;\r\n  harmonyOscillatorLoop.start(config.harmonyInterval);\r\n\r\n  //Transpose th whole lot by changing the root\r\n  const changeRootPattern = new Tone.Pattern(\r\n    function(time, note) {\r\n      changeRootAndTransposeAllToMatch(note);\r\n    },\r\n    scales.actualNotesFromScale(rootFreq.toNote(), masterScale.intervals, 0, 0),\r\n    \"randomWalk\"\r\n  );\r\n  changeRootPattern.interval = config.changeRootInterval;\r\n  changeRootPattern.start(config.changeRootInterval);\r\n\r\n  return {\r\n    bpm: 70,\r\n    swing: 0,\r\n    key: `${root} (${masterScale.type})`,\r\n    chordProgressionNotes: \"n/a\"\r\n  };\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/synth/songs/drone.js","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./App.css\";\r\nimport { version } from \"../../../../package.json\";\r\nimport Songs from \"./Songs\";\r\nimport Info from \"./Info\";\r\nimport Song from \"./Song\";\r\n\r\nclass App extends Component {\r\n  componentWillMount() {\r\n    if (this.props.match.params.seed) {\r\n      this.props.actions.SetInitialSeed(this.props.match.params.seed);\r\n    }\r\n    if (this.props.song > 0) {\r\n      this.props.actions.SetSong(this.props.song);\r\n    }\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location !== prevProps.location) {\r\n      this.props.actions.SetSeed(this.props.match.params.seed || \"\");\r\n    }\r\n  }\r\n  handleSeedChange = event => {\r\n    const newSeed = event.target.value.toString();\r\n    this.props.history.push(\"/\" + newSeed);\r\n  };\r\n  handleSongSelection = event => {\r\n    const song = parseInt(event.target.getAttribute(\"data-song\"), 10);\r\n    this.props.actions.SetSong(song);\r\n  };\r\n  randomiseSeed = () => {\r\n    const randomSeed = new Date().getTime().toString();\r\n    this.props.history.push(\"/\" + randomSeed);\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"container text-center\">\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-12\">\r\n            <h1 className=\"main-title\">Synaesthesia</h1>\r\n            <p className=\"lead\">\r\n              Web Audio experiments by <a href=\"https://soundcloud.com/wheelibin\">wheelibin</a>\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8 offset-md-2\">\r\n            <Songs onSongSelection={this.handleSongSelection} song={this.props.song} />\r\n          </div>\r\n        </div>\r\n\r\n        {this.props.isPlaying && (\r\n          <Song\r\n            isPlaying={this.props.isPlaying}\r\n            generatedSettings={this.props.generatedSettings}\r\n            seed={this.props.seed}\r\n            onRandomise={this.randomiseSeed}\r\n            onSeedChange={this.handleSeedChange}\r\n          />\r\n        )}\r\n\r\n        <div className=\"col-md-6 offset-md-3\" style={{ marginTop: 0 }}>\r\n          <Info isPlaying={this.props.isPlaying} />\r\n        </div>\r\n        <small className=\"version\">v{version}</small>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nApp.propTypes = {\r\n  actions: PropTypes.object.isRequired,\r\n  isPlaying: PropTypes.bool.isRequired,\r\n  generatedSettings: PropTypes.object,\r\n  seed: PropTypes.string.isRequired,\r\n  playButtonText: PropTypes.string.isRequired,\r\n  match: PropTypes.object,\r\n  location: PropTypes.object.isRequired,\r\n  history: PropTypes.object.isRequired,\r\n  song: PropTypes.number.isRequired\r\n};\r\nexport default App;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/App/components/App.js","module.exports = {\"name\":\"synaesthesia\",\"version\":\"0.1.19\",\"private\":true,\"homepage\":\"https://wheelibin.github.io/synaesthesia\",\"dependencies\":{\"axios\":\"^0.18.0\",\"lodash\":\"^4.17.10\",\"react\":\"^16.3.2\",\"react-dom\":\"^16.3.2\",\"react-redux\":\"^5.0.7\",\"react-router\":\"^4.2.0\",\"react-router-dom\":\"^4.2.2\",\"react-scripts\":\"^1.1.4\",\"redux\":\"^3.7.2\",\"redux-thunk\":\"^2.2.0\",\"tone\":\"^0.11.12\"},\"scripts\":{\"start\":\"react-scripts start\",\"build\":\"react-scripts build\",\"test\":\"react-scripts test --env=jsdom\",\"eject\":\"react-scripts eject\",\"predeploy\":\"npm version patch && npm run build\",\"deploy\":\"gh-pages -d build\"},\"devDependencies\":{\"eslint-config-prettier\":\"^2.9.0\",\"eslint-plugin-prettier\":\"^2.6.0\",\"eslint-plugin-react\":\"^7.7.0\",\"gh-pages\":\"^1.2.0\",\"prettier\":\"1.11.1\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./package.json\n// module id = 121\n// module chunks = 0","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Songs = ({ onSongSelection, song }) => {\r\n  return (\r\n    <div className=\"btn-group\" role=\"group\" aria-label=\"...\">\r\n      <button data-song={1} type=\"button\" className={`btn btn-outline-light active-song-${song === 1}`} onClick={onSongSelection}>\r\n        Funky Down-Tempo\r\n      </button>\r\n      <button data-song={2} type=\"button\" className={`btn btn-outline-light active-song-${song === 2}`} onClick={onSongSelection}>\r\n        Ambient Drone\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nSongs.propTypes = {\r\n  onSongSelection: PropTypes.func.isRequired,\r\n  song: PropTypes.number\r\n};\r\n\r\nexport default Songs;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/App/components/Songs.js","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Info = ({ isPlaying }) => {\r\n  if (isPlaying) {\r\n    return (\r\n      <div className=\"info-section\">\r\n        <p className=\"lead text-center\">What&#39;s all this then?</p>\r\n        <p className=\"text-center\">\r\n          All the music is randomly generated, within certain musical constraints, using the excellent{\" \"}\r\n          <a href=\"https://tonejs.github.io/\" target=\"new\">\r\n            Tone.js\r\n          </a>. The random generation algorithm is seeded with the seed shown above, this can be changed to anything you like, and entering the same\r\n          seed with always produce the same randomly generated song. Images are loaded from Flickr and will change in time with the music.\r\n        </p>\r\n        <p className=\"text-center\">\r\n          All the code, and a bit more info, can be found on GitHub here:{\" \"}\r\n          <a href=\"https://github.com/wheelibin/synaesthesia\">https://github.com/wheelibin/synaesthesia</a>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nInfo.propTypes = {\r\n  isPlaying: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default Info;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/App/components/Info.js","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport SongInfo from \"./SongInfo\";\r\nimport GenerationOptions from \"./GenerationOptions\";\r\n\r\nconst Song = ({ isPlaying, generatedSettings, seed, onRandomise, onSeedChange }) => {\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-8 offset-md-2 col-sm-12 song border rounded\">\r\n        <SongInfo isPlaying={isPlaying} generatedSettings={generatedSettings} />\r\n        <GenerationOptions isPlaying={isPlaying} seed={seed} onRandomise={onRandomise} onSeedChange={onSeedChange} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSong.propTypes = {\r\n  isPlaying: PropTypes.bool,\r\n  generatedSettings: PropTypes.object,\r\n  seed: PropTypes.string.isRequired,\r\n  onRandomise: PropTypes.func.isRequired,\r\n  onSeedChange: PropTypes.func.isRequired,\r\n  currentImage: PropTypes.string\r\n};\r\n\r\nexport default Song;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/App/components/Song.js","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SongInfo = ({ isPlaying, generatedSettings }) => {\r\n  if (generatedSettings && isPlaying) {\r\n    return (\r\n      <div\r\n        className=\"row\"\r\n        style={{\r\n          // backgroundColor: \"rgba(0,0,0, 0.5)\",\r\n          marginLeft: 0,\r\n          marginRight: 0,\r\n          marginTop: \"2em\",\r\n          borderTopLeftRadius: \"0.5em\",\r\n          borderTopRightRadius: \"0.5em\"\r\n        }}\r\n      >\r\n        <div className=\"col-md-5 offset-md-1\">\r\n          <p style={{ marginBottom: 0 }}>Key</p>\r\n          <h4>{generatedSettings.key}</h4>\r\n        </div>\r\n\r\n        <div className=\"col-md-5\">\r\n          <p style={{ marginBottom: 0 }}>Chord Progression</p>\r\n          <h4>{generatedSettings.chordProgressionNotes}</h4>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nSongInfo.propTypes = {\r\n  isPlaying: PropTypes.bool,\r\n  generatedSettings: PropTypes.object\r\n};\r\n\r\nexport default SongInfo;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/App/components/SongInfo.js","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst GenerationOptions = ({ isPlaying, seed, onRandomise, onSeedChange }) => {\r\n  if (isPlaying) {\r\n    return (\r\n      <form className=\"form\">\r\n        <div\r\n          className=\"generation-options row\"\r\n          style={{\r\n            // backgroundColor: \"rgba(0,0,0, 0.5)\",\r\n            marginLeft: 0,\r\n            marginRight: 0,\r\n            borderBottomLeftRadius: \"0.5em\",\r\n            borderBottomRightRadius: \"0.5em\",\r\n            paddingTop: 8\r\n          }}\r\n        >\r\n          <div className=\"form-group col-md-5 offset-md-1\">\r\n            <label htmlFor=\"seed\">Seed (try entering your own)</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg text-center seed-input\"\r\n              id=\"seed\"\r\n              onChange={onSeedChange}\r\n              placeholder=\"A word or phrase to generate music from\"\r\n              value={seed}\r\n              disabled={!isPlaying}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group col-md-5\">\r\n            <label htmlFor=\"seed\">Or generate a random seed</label>\r\n            <button type=\"button\" disabled={!isPlaying} className=\"btn btn-outline-light btn-lg btn-block\" onClick={onRandomise}>\r\n              Randomise!\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nGenerationOptions.propTypes = {\r\n  isPlaying: PropTypes.bool.isRequired,\r\n  seed: PropTypes.string.isRequired,\r\n  onRandomise: PropTypes.func.isRequired,\r\n  onSeedChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default GenerationOptions;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/App/components/GenerationOptions.js","import { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as actions from \"../actions\";\r\nimport components from \"../components\";\r\n\r\nconst mapStateToProps = state => {\r\n  const { seed, playButtonText, generatedSettings, isPlaying, song } = state.app;\r\n  return {\r\n    seed: seed,\r\n    playButtonText: playButtonText,\r\n    generatedSettings: generatedSettings,\r\n    isPlaying: isPlaying,\r\n    song: song\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    actions: bindActionCreators(actions, dispatch)\r\n  };\r\n};\r\n\r\nconst AppContainer = connect(mapStateToProps, mapDispatchToProps)(components.App);\r\n\r\nexport default AppContainer;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/App/containers/AppContainer.js","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport { Component, Children } from 'react';\nimport PropTypes from 'prop-types';\nimport { storeShape, subscriptionShape } from '../utils/PropTypes';\nimport warning from '../utils/warning';\n\nvar didWarnAboutReceivingStore = false;\nfunction warnAboutReceivingStore() {\n  if (didWarnAboutReceivingStore) {\n    return;\n  }\n  didWarnAboutReceivingStore = true;\n\n  warning('<Provider> does not support changing `store` on the fly. ' + 'It is most likely that you see this error because you updated to ' + 'Redux 2.x and React Redux 2.x which no longer hot reload reducers ' + 'automatically. See https://github.com/reactjs/react-redux/releases/' + 'tag/v2.0.0 for the migration instructions.');\n}\n\nexport function createProvider() {\n  var _Provider$childContex;\n\n  var storeKey = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'store';\n  var subKey = arguments[1];\n\n  var subscriptionKey = subKey || storeKey + 'Subscription';\n\n  var Provider = function (_Component) {\n    _inherits(Provider, _Component);\n\n    Provider.prototype.getChildContext = function getChildContext() {\n      var _ref;\n\n      return _ref = {}, _ref[storeKey] = this[storeKey], _ref[subscriptionKey] = null, _ref;\n    };\n\n    function Provider(props, context) {\n      _classCallCheck(this, Provider);\n\n      var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));\n\n      _this[storeKey] = props.store;\n      return _this;\n    }\n\n    Provider.prototype.render = function render() {\n      return Children.only(this.props.children);\n    };\n\n    return Provider;\n  }(Component);\n\n  if (process.env.NODE_ENV !== 'production') {\n    Provider.prototype.componentWillReceiveProps = function (nextProps) {\n      if (this[storeKey] !== nextProps.store) {\n        warnAboutReceivingStore();\n      }\n    };\n  }\n\n  Provider.propTypes = {\n    store: storeShape.isRequired,\n    children: PropTypes.element.isRequired\n  };\n  Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[storeKey] = storeShape.isRequired, _Provider$childContex[subscriptionKey] = subscriptionShape, _Provider$childContex);\n\n  return Provider;\n}\n\nexport default createProvider();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-redux/es/components/Provider.js\n// module id = 129\n// module chunks = 0","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// encapsulates the subscription logic for connecting a component to the redux store, as\n// well as nesting subscriptions of descendant components, so that we can ensure the\n// ancestor components re-render before descendants\n\nvar CLEARED = null;\nvar nullListeners = {\n  notify: function notify() {}\n};\n\nfunction createListenerCollection() {\n  // the current/next pattern is copied from redux's createStore code.\n  // TODO: refactor+expose that code to be reusable here?\n  var current = [];\n  var next = [];\n\n  return {\n    clear: function clear() {\n      next = CLEARED;\n      current = CLEARED;\n    },\n    notify: function notify() {\n      var listeners = current = next;\n      for (var i = 0; i < listeners.length; i++) {\n        listeners[i]();\n      }\n    },\n    get: function get() {\n      return next;\n    },\n    subscribe: function subscribe(listener) {\n      var isSubscribed = true;\n      if (next === current) next = current.slice();\n      next.push(listener);\n\n      return function unsubscribe() {\n        if (!isSubscribed || current === CLEARED) return;\n        isSubscribed = false;\n\n        if (next === current) next = current.slice();\n        next.splice(next.indexOf(listener), 1);\n      };\n    }\n  };\n}\n\nvar Subscription = function () {\n  function Subscription(store, parentSub, onStateChange) {\n    _classCallCheck(this, Subscription);\n\n    this.store = store;\n    this.parentSub = parentSub;\n    this.onStateChange = onStateChange;\n    this.unsubscribe = null;\n    this.listeners = nullListeners;\n  }\n\n  Subscription.prototype.addNestedSub = function addNestedSub(listener) {\n    this.trySubscribe();\n    return this.listeners.subscribe(listener);\n  };\n\n  Subscription.prototype.notifyNestedSubs = function notifyNestedSubs() {\n    this.listeners.notify();\n  };\n\n  Subscription.prototype.isSubscribed = function isSubscribed() {\n    return Boolean(this.unsubscribe);\n  };\n\n  Subscription.prototype.trySubscribe = function trySubscribe() {\n    if (!this.unsubscribe) {\n      this.unsubscribe = this.parentSub ? this.parentSub.addNestedSub(this.onStateChange) : this.store.subscribe(this.onStateChange);\n\n      this.listeners = createListenerCollection();\n    }\n  };\n\n  Subscription.prototype.tryUnsubscribe = function tryUnsubscribe() {\n    if (this.unsubscribe) {\n      this.unsubscribe();\n      this.unsubscribe = null;\n      this.listeners.clear();\n      this.listeners = nullListeners;\n    }\n  };\n\n  return Subscription;\n}();\n\nexport { Subscription as default };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-redux/es/utils/Subscription.js\n// module id = 130\n// module chunks = 0","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nimport connectAdvanced from '../components/connectAdvanced';\nimport shallowEqual from '../utils/shallowEqual';\nimport defaultMapDispatchToPropsFactories from './mapDispatchToProps';\nimport defaultMapStateToPropsFactories from './mapStateToProps';\nimport defaultMergePropsFactories from './mergeProps';\nimport defaultSelectorFactory from './selectorFactory';\n\n/*\n  connect is a facade over connectAdvanced. It turns its args into a compatible\n  selectorFactory, which has the signature:\n\n    (dispatch, options) => (nextState, nextOwnProps) => nextFinalProps\n  \n  connect passes its args to connectAdvanced as options, which will in turn pass them to\n  selectorFactory each time a Connect component instance is instantiated or hot reloaded.\n\n  selectorFactory returns a final props selector from its mapStateToProps,\n  mapStateToPropsFactories, mapDispatchToProps, mapDispatchToPropsFactories, mergeProps,\n  mergePropsFactories, and pure args.\n\n  The resulting final props selector is called by the Connect component instance whenever\n  it receives new props or store state.\n */\n\nfunction match(arg, factories, name) {\n  for (var i = factories.length - 1; i >= 0; i--) {\n    var result = factories[i](arg);\n    if (result) return result;\n  }\n\n  return function (dispatch, options) {\n    throw new Error('Invalid value of type ' + typeof arg + ' for ' + name + ' argument when connecting component ' + options.wrappedComponentName + '.');\n  };\n}\n\nfunction strictEqual(a, b) {\n  return a === b;\n}\n\n// createConnect with default args builds the 'official' connect behavior. Calling it with\n// different options opens up some testing and extensibility scenarios\nexport function createConnect() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$connectHOC = _ref.connectHOC,\n      connectHOC = _ref$connectHOC === undefined ? connectAdvanced : _ref$connectHOC,\n      _ref$mapStateToPropsF = _ref.mapStateToPropsFactories,\n      mapStateToPropsFactories = _ref$mapStateToPropsF === undefined ? defaultMapStateToPropsFactories : _ref$mapStateToPropsF,\n      _ref$mapDispatchToPro = _ref.mapDispatchToPropsFactories,\n      mapDispatchToPropsFactories = _ref$mapDispatchToPro === undefined ? defaultMapDispatchToPropsFactories : _ref$mapDispatchToPro,\n      _ref$mergePropsFactor = _ref.mergePropsFactories,\n      mergePropsFactories = _ref$mergePropsFactor === undefined ? defaultMergePropsFactories : _ref$mergePropsFactor,\n      _ref$selectorFactory = _ref.selectorFactory,\n      selectorFactory = _ref$selectorFactory === undefined ? defaultSelectorFactory : _ref$selectorFactory;\n\n  return function connect(mapStateToProps, mapDispatchToProps, mergeProps) {\n    var _ref2 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},\n        _ref2$pure = _ref2.pure,\n        pure = _ref2$pure === undefined ? true : _ref2$pure,\n        _ref2$areStatesEqual = _ref2.areStatesEqual,\n        areStatesEqual = _ref2$areStatesEqual === undefined ? strictEqual : _ref2$areStatesEqual,\n        _ref2$areOwnPropsEqua = _ref2.areOwnPropsEqual,\n        areOwnPropsEqual = _ref2$areOwnPropsEqua === undefined ? shallowEqual : _ref2$areOwnPropsEqua,\n        _ref2$areStatePropsEq = _ref2.areStatePropsEqual,\n        areStatePropsEqual = _ref2$areStatePropsEq === undefined ? shallowEqual : _ref2$areStatePropsEq,\n        _ref2$areMergedPropsE = _ref2.areMergedPropsEqual,\n        areMergedPropsEqual = _ref2$areMergedPropsE === undefined ? shallowEqual : _ref2$areMergedPropsE,\n        extraOptions = _objectWithoutProperties(_ref2, ['pure', 'areStatesEqual', 'areOwnPropsEqual', 'areStatePropsEqual', 'areMergedPropsEqual']);\n\n    var initMapStateToProps = match(mapStateToProps, mapStateToPropsFactories, 'mapStateToProps');\n    var initMapDispatchToProps = match(mapDispatchToProps, mapDispatchToPropsFactories, 'mapDispatchToProps');\n    var initMergeProps = match(mergeProps, mergePropsFactories, 'mergeProps');\n\n    return connectHOC(selectorFactory, _extends({\n      // used in error messages\n      methodName: 'connect',\n\n      // used to compute Connect's displayName from the wrapped component's displayName.\n      getDisplayName: function getDisplayName(name) {\n        return 'Connect(' + name + ')';\n      },\n\n      // if mapStateToProps is falsy, the Connect component doesn't subscribe to store state changes\n      shouldHandleStateChanges: Boolean(mapStateToProps),\n\n      // passed through to selectorFactory\n      initMapStateToProps: initMapStateToProps,\n      initMapDispatchToProps: initMapDispatchToProps,\n      initMergeProps: initMergeProps,\n      pure: pure,\n      areStatesEqual: areStatesEqual,\n      areOwnPropsEqual: areOwnPropsEqual,\n      areStatePropsEqual: areStatePropsEqual,\n      areMergedPropsEqual: areMergedPropsEqual\n\n    }, extraOptions));\n  };\n}\n\nexport default createConnect();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-redux/es/connect/connect.js\n// module id = 131\n// module chunks = 0","var hasOwn = Object.prototype.hasOwnProperty;\n\nfunction is(x, y) {\n  if (x === y) {\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    return x !== x && y !== y;\n  }\n}\n\nexport default function shallowEqual(objA, objB) {\n  if (is(objA, objB)) return true;\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) return false;\n\n  for (var i = 0; i < keysA.length; i++) {\n    if (!hasOwn.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-redux/es/utils/shallowEqual.js\n// module id = 132\n// module chunks = 0","import { bindActionCreators } from 'redux';\nimport { wrapMapToPropsConstant, wrapMapToPropsFunc } from './wrapMapToProps';\n\nexport function whenMapDispatchToPropsIsFunction(mapDispatchToProps) {\n  return typeof mapDispatchToProps === 'function' ? wrapMapToPropsFunc(mapDispatchToProps, 'mapDispatchToProps') : undefined;\n}\n\nexport function whenMapDispatchToPropsIsMissing(mapDispatchToProps) {\n  return !mapDispatchToProps ? wrapMapToPropsConstant(function (dispatch) {\n    return { dispatch: dispatch };\n  }) : undefined;\n}\n\nexport function whenMapDispatchToPropsIsObject(mapDispatchToProps) {\n  return mapDispatchToProps && typeof mapDispatchToProps === 'object' ? wrapMapToPropsConstant(function (dispatch) {\n    return bindActionCreators(mapDispatchToProps, dispatch);\n  }) : undefined;\n}\n\nexport default [whenMapDispatchToPropsIsFunction, whenMapDispatchToPropsIsMissing, whenMapDispatchToPropsIsObject];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-redux/es/connect/mapDispatchToProps.js\n// module id = 133\n// module chunks = 0","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash-es/_baseGetTag.js\n// module id = 134\n// module chunks = 0","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash-es/_root.js\n// module id = 135\n// module chunks = 0","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash-es/_freeGlobal.js\n// module id = 136\n// module chunks = 0","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash-es/_getRawTag.js\n// module id = 137\n// module chunks = 0","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash-es/_objectToString.js\n// module id = 138\n// module chunks = 0","import overArg from './_overArg.js';\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nexport default getPrototype;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash-es/_getPrototype.js\n// module id = 139\n// module chunks = 0","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nexport default overArg;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash-es/_overArg.js\n// module id = 140\n// module chunks = 0","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash-es/isObjectLike.js\n// module id = 141\n// module chunks = 0","/* global window */\nimport ponyfill from './ponyfill.js';\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = ponyfill(root);\nexport default result;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/symbol-observable/es/index.js\n// module id = 142\n// module chunks = 0","module.exports = function(originalModule) {\n\tif(!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif(!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true,\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/harmony-module.js\n// module id = 143\n// module chunks = 0","export default function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/symbol-observable/es/ponyfill.js\n// module id = 144\n// module chunks = 0","import { ActionTypes } from './createStore';\nimport isPlainObject from 'lodash-es/isPlainObject';\nimport warning from './utils/warning';\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  var actionType = action && action.type;\n  var actionName = actionType && '\"' + actionType.toString() + '\"' || 'an action';\n\n  return 'Given action ' + actionName + ', reducer \"' + key + '\" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state. ' + 'If you want this reducer to hold no value, you can return null instead of undefined.';\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return 'The ' + argumentName + ' has unexpected type of \"' + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + '\". Expected argument to be an object with the following ' + ('keys: \"' + reducerKeys.join('\", \"') + '\"');\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n\n  if (unexpectedKeys.length > 0) {\n    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('\"' + unexpectedKeys.join('\", \"') + '\" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('\"' + reducerKeys.join('\", \"') + '\". Unexpected keys will be ignored.');\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, { type: ActionTypes.INIT });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error('Reducer \"' + key + '\" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined. If you don\\'t want to set a value for this reducer, ' + 'you can use null instead of undefined.');\n    }\n\n    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');\n    if (typeof reducer(undefined, { type: type }) === 'undefined') {\n      throw new Error('Reducer \"' + key + '\" returned undefined when probed with a random type. ' + ('Don\\'t try to handle ' + ActionTypes.INIT + ' or other actions in \"redux/*\" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined, but can be null.');\n    }\n  });\n}\n\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\nexport default function combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning('No reducer provided for key \"' + key + '\"');\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n  var finalReducerKeys = Object.keys(finalReducers);\n\n  var unexpectedKeyCache = void 0;\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError = void 0;\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var action = arguments[1];\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n      if (typeof nextStateForKey === 'undefined') {\n        var errorMessage = getUndefinedStateErrorMessage(_key, action);\n        throw new Error(errorMessage);\n      }\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n    return hasChanged ? nextState : state;\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/redux/es/combineReducers.js\n// module id = 145\n// module chunks = 0","function bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(undefined, arguments));\n  };\n}\n\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass a single function as the first argument,\n * and get a function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\nexport default function bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators) + '. ' + 'Did you write \"import ActionCreators from\" instead of \"import * as ActionCreators from\"?');\n  }\n\n  var keys = Object.keys(actionCreators);\n  var boundActionCreators = {};\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var actionCreator = actionCreators[key];\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n  return boundActionCreators;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/redux/es/bindActionCreators.js\n// module id = 146\n// module chunks = 0","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nimport compose from './compose';\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\nexport default function applyMiddleware() {\n  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function (reducer, preloadedState, enhancer) {\n      var store = createStore(reducer, preloadedState, enhancer);\n      var _dispatch = store.dispatch;\n      var chain = [];\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch(action) {\n          return _dispatch(action);\n        }\n      };\n      chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(undefined, chain)(store.dispatch);\n\n      return _extends({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/redux/es/applyMiddleware.js\n// module id = 147\n// module chunks = 0","import { wrapMapToPropsConstant, wrapMapToPropsFunc } from './wrapMapToProps';\n\nexport function whenMapStateToPropsIsFunction(mapStateToProps) {\n  return typeof mapStateToProps === 'function' ? wrapMapToPropsFunc(mapStateToProps, 'mapStateToProps') : undefined;\n}\n\nexport function whenMapStateToPropsIsMissing(mapStateToProps) {\n  return !mapStateToProps ? wrapMapToPropsConstant(function () {\n    return {};\n  }) : undefined;\n}\n\nexport default [whenMapStateToPropsIsFunction, whenMapStateToPropsIsMissing];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-redux/es/connect/mapStateToProps.js\n// module id = 148\n// module chunks = 0","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nimport verifyPlainObject from '../utils/verifyPlainObject';\n\nexport function defaultMergeProps(stateProps, dispatchProps, ownProps) {\n  return _extends({}, ownProps, stateProps, dispatchProps);\n}\n\nexport function wrapMergePropsFunc(mergeProps) {\n  return function initMergePropsProxy(dispatch, _ref) {\n    var displayName = _ref.displayName,\n        pure = _ref.pure,\n        areMergedPropsEqual = _ref.areMergedPropsEqual;\n\n    var hasRunOnce = false;\n    var mergedProps = void 0;\n\n    return function mergePropsProxy(stateProps, dispatchProps, ownProps) {\n      var nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n\n      if (hasRunOnce) {\n        if (!pure || !areMergedPropsEqual(nextMergedProps, mergedProps)) mergedProps = nextMergedProps;\n      } else {\n        hasRunOnce = true;\n        mergedProps = nextMergedProps;\n\n        if (process.env.NODE_ENV !== 'production') verifyPlainObject(mergedProps, displayName, 'mergeProps');\n      }\n\n      return mergedProps;\n    };\n  };\n}\n\nexport function whenMergePropsIsFunction(mergeProps) {\n  return typeof mergeProps === 'function' ? wrapMergePropsFunc(mergeProps) : undefined;\n}\n\nexport function whenMergePropsIsOmitted(mergeProps) {\n  return !mergeProps ? function () {\n    return defaultMergeProps;\n  } : undefined;\n}\n\nexport default [whenMergePropsIsFunction, whenMergePropsIsOmitted];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-redux/es/connect/mergeProps.js\n// module id = 149\n// module chunks = 0","function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nimport verifySubselectors from './verifySubselectors';\n\nexport function impureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch) {\n  return function impureFinalPropsSelector(state, ownProps) {\n    return mergeProps(mapStateToProps(state, ownProps), mapDispatchToProps(dispatch, ownProps), ownProps);\n  };\n}\n\nexport function pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, _ref) {\n  var areStatesEqual = _ref.areStatesEqual,\n      areOwnPropsEqual = _ref.areOwnPropsEqual,\n      areStatePropsEqual = _ref.areStatePropsEqual;\n\n  var hasRunAtLeastOnce = false;\n  var state = void 0;\n  var ownProps = void 0;\n  var stateProps = void 0;\n  var dispatchProps = void 0;\n  var mergedProps = void 0;\n\n  function handleFirstCall(firstState, firstOwnProps) {\n    state = firstState;\n    ownProps = firstOwnProps;\n    stateProps = mapStateToProps(state, ownProps);\n    dispatchProps = mapDispatchToProps(dispatch, ownProps);\n    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n    hasRunAtLeastOnce = true;\n    return mergedProps;\n  }\n\n  function handleNewPropsAndNewState() {\n    stateProps = mapStateToProps(state, ownProps);\n\n    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);\n\n    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n    return mergedProps;\n  }\n\n  function handleNewProps() {\n    if (mapStateToProps.dependsOnOwnProps) stateProps = mapStateToProps(state, ownProps);\n\n    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);\n\n    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n    return mergedProps;\n  }\n\n  function handleNewState() {\n    var nextStateProps = mapStateToProps(state, ownProps);\n    var statePropsChanged = !areStatePropsEqual(nextStateProps, stateProps);\n    stateProps = nextStateProps;\n\n    if (statePropsChanged) mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n\n    return mergedProps;\n  }\n\n  function handleSubsequentCalls(nextState, nextOwnProps) {\n    var propsChanged = !areOwnPropsEqual(nextOwnProps, ownProps);\n    var stateChanged = !areStatesEqual(nextState, state);\n    state = nextState;\n    ownProps = nextOwnProps;\n\n    if (propsChanged && stateChanged) return handleNewPropsAndNewState();\n    if (propsChanged) return handleNewProps();\n    if (stateChanged) return handleNewState();\n    return mergedProps;\n  }\n\n  return function pureFinalPropsSelector(nextState, nextOwnProps) {\n    return hasRunAtLeastOnce ? handleSubsequentCalls(nextState, nextOwnProps) : handleFirstCall(nextState, nextOwnProps);\n  };\n}\n\n// TODO: Add more comments\n\n// If pure is true, the selector returned by selectorFactory will memoize its results,\n// allowing connectAdvanced's shouldComponentUpdate to return false if final\n// props have not changed. If false, the selector will always return a new\n// object and shouldComponentUpdate will always return true.\n\nexport default function finalPropsSelectorFactory(dispatch, _ref2) {\n  var initMapStateToProps = _ref2.initMapStateToProps,\n      initMapDispatchToProps = _ref2.initMapDispatchToProps,\n      initMergeProps = _ref2.initMergeProps,\n      options = _objectWithoutProperties(_ref2, ['initMapStateToProps', 'initMapDispatchToProps', 'initMergeProps']);\n\n  var mapStateToProps = initMapStateToProps(dispatch, options);\n  var mapDispatchToProps = initMapDispatchToProps(dispatch, options);\n  var mergeProps = initMergeProps(dispatch, options);\n\n  if (process.env.NODE_ENV !== 'production') {\n    verifySubselectors(mapStateToProps, mapDispatchToProps, mergeProps, options.displayName);\n  }\n\n  var selectorFactory = options.pure ? pureFinalPropsSelectorFactory : impureFinalPropsSelectorFactory;\n\n  return selectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, options);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-redux/es/connect/selectorFactory.js\n// module id = 150\n// module chunks = 0","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/registerServiceWorker.js","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"./modules/root\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/store.js","'use strict';\n\nexports.__esModule = true;\nfunction createThunkMiddleware(extraArgument) {\n  return function (_ref) {\n    var dispatch = _ref.dispatch,\n        getState = _ref.getState;\n    return function (next) {\n      return function (action) {\n        if (typeof action === 'function') {\n          return action(dispatch, getState, extraArgument);\n        }\n\n        return next(action);\n      };\n    };\n  };\n}\n\nvar thunk = createThunkMiddleware();\nthunk.withExtraArgument = createThunkMiddleware;\n\nexports['default'] = thunk;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/redux-thunk/lib/index.js\n// module id = 154\n// module chunks = 0","import { combineReducers } from \"redux\";\r\n\r\nimport appReducer from \"./App\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  app: appReducer\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/root.js","import React from \"react\";\r\nimport * as synth from \"../../../synth/synth\";\r\n\r\nclass Drone extends React.Component {\r\n  componentDidMount() {\r\n    const randomSeed = new Date().getTime().toString();\r\n    synth.play(2, randomSeed);\r\n  }\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Drone;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/App/components/Drone.js"],"sourceRoot":""}